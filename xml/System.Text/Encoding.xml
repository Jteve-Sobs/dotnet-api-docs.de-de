<Type Name="Encoding" FullName="System.Text.Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f83aba724adf774847240af6da560b26e2de0d67" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52372003" /></Metadata><TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Encoding = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="66229-101">Stellt eine Zeichencodierung dar.</span><span class="sxs-lookup"><span data-stu-id="66229-101">Represents a character encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-102">Beim Kodieren werden Unicode-Zeichen in eine Bytefolge transformiert.</span><span class="sxs-lookup"><span data-stu-id="66229-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="66229-103">Im Gegensatz dazu ist die Decodierung transformiert eine codierte Bytefolge in eine Reihe von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="66229-104">Informationen zu Unicode Transformation Format (UTFs) und andere Codierungen, die von unterstützt <xref:System.Text.Encoding>, finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="66229-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="66229-105">Beachten Sie, dass <xref:System.Text.Encoding> für Unicode-Zeichen anstelle von beliebigen Binärdaten, z. B. Byte-Arrays verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="66229-106">Wenn Sie beliebige binäre Daten in Text codiert werden müssen, verwenden Sie ein Protokoll wie Uuencode, die von Methoden, wie z. B. implementiert wird <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-107">Bietet die folgenden Implementierungen von .NET die <xref:System.Text.Encoding> Klasse, um die aktuellen Unicode-Codierungen und andere Codierungen zu unterstützen:</span><span class="sxs-lookup"><span data-stu-id="66229-107">.NET provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="66229-108"><xref:System.Text.ASCIIEncoding> Unicode-Zeichen werden als einzelne 7-Bit-ASCII-Zeichen codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="66229-109">Diese Codierung unterstützt nur Zeichenwerte zwischen U + 0000 und U + 007F.</span><span class="sxs-lookup"><span data-stu-id="66229-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="66229-110">-Codepage 20127.</span><span class="sxs-lookup"><span data-stu-id="66229-110">Code page 20127.</span></span> <span data-ttu-id="66229-111">Auch verfügbar durch die <xref:System.Text.Encoding.ASCII%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="66229-112"><xref:System.Text.UTF7Encoding> Unicode-Zeichen, die unter Verwendung der UTF-7-Codierung codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="66229-113">Diese Codierung unterstützt alle Unicode-Zeichenwerte.</span><span class="sxs-lookup"><span data-stu-id="66229-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="66229-114">-Codepage 65000.</span><span class="sxs-lookup"><span data-stu-id="66229-114">Code page 65000.</span></span> <span data-ttu-id="66229-115">Auch verfügbar durch die <xref:System.Text.Encoding.UTF7%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="66229-116"><xref:System.Text.UTF8Encoding> Unicode-Zeichen, die unter Verwendung der UTF-8-Codierung codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="66229-117">Diese Codierung unterstützt alle Unicode-Zeichenwerte.</span><span class="sxs-lookup"><span data-stu-id="66229-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="66229-118">-Codepage 65001.</span><span class="sxs-lookup"><span data-stu-id="66229-118">Code page 65001.</span></span> <span data-ttu-id="66229-119">Auch verfügbar durch die <xref:System.Text.Encoding.UTF8%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="66229-120"><xref:System.Text.UnicodeEncoding> Unicode-Zeichen, die unter Verwendung der UTF-16-Codierung codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="66229-121">Sowohl little endian und big-endian-Byte-Aufträge werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="66229-122">Auch verfügbar durch die <xref:System.Text.Encoding.Unicode%2A> Eigenschaft und die <xref:System.Text.Encoding.BigEndianUnicode%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="66229-123"><xref:System.Text.UTF32Encoding> Unicode-Zeichen, die unter Verwendung der UTF-32-Codierung codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="66229-124">Sowohl little Endian (Codepage 12000) und big-Endian (Codepage 12001) Aufträge werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="66229-125">Auch verfügbar durch die <xref:System.Text.Encoding.UTF32%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="66229-126">Die <xref:System.Text.Encoding> Klasse dient in erster Linie zum Konvertieren zwischen verschiedenen Codierungen und Unicode.</span><span class="sxs-lookup"><span data-stu-id="66229-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="66229-127">Häufig ist eine der abgeleiteten Klassen Unicode die richtige Wahl für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="66229-128">Verwenden der <xref:System.Text.Encoding.GetEncoding%2A> Methode, um andere Codierungen, abzurufen, und rufen Sie die <xref:System.Text.Encoding.GetEncodings%2A> Methode, um eine Liste mit allen Codierungen zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="66229-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="66229-129">Die folgende Tabelle enthält die Codierungen, die von .NET Framework und .NET Core unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-129">The following table lists the encodings supported by .NET Framework and .NET Core.</span></span> <span data-ttu-id="66229-130">Jede Codierung Codepagenummer und die Werte der Codierung des aufgeführt <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> und <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="66229-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="66229-131">Ein Häkchen in der **.NET Framework-Unterstützung** und **Unterstützung für .NET Core** Spalten gibt an, dass die Codepage von dieser Implementierung von .NET ist unabhängig von der zugrunde liegenden Plattform nativ unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-131">A check mark in the **.NET Framework support** and **.NET Core support** columns indicates that the code page is natively supported by that .NET implementation, regardless of the underlying platform.</span></span> <span data-ttu-id="66229-132">Für .NET Framework hängt das Betriebssystem die Verfügbarkeit der anderen Codierungen, die in der Tabelle aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="66229-132">For .NET Framework, the availability of other encodings listed in the table depends on the operating system.</span></span> <span data-ttu-id="66229-133">Für .NET Core, sind andere Codierungen sind verfügbar unter Verwendung der <xref:System.Text.CodePagesEncodingProvider?displayProperty=nameWithType> Klasse oder durch Ableiten von der <xref:System.Text.EncodingProvider?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-133">For .NET Core, other encodings are available by using the <xref:System.Text.CodePagesEncodingProvider?displayProperty=nameWithType> class or by deriving from the <xref:System.Text.EncodingProvider?displayProperty=nameWithType> class.</span></span>  

> [!NOTE]
> <span data-ttu-id="66229-134">Codepages, deren <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> -Eigenschaft entspricht einem internationalen Standard nicht notwendigerweise vollständig mit diesem Standard entsprechen.</span><span class="sxs-lookup"><span data-stu-id="66229-134">Code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span> 

|<span data-ttu-id="66229-135">Codepage</span><span class="sxs-lookup"><span data-stu-id="66229-135">Code page</span></span>|<span data-ttu-id="66229-136">name</span><span class="sxs-lookup"><span data-stu-id="66229-136">Name</span></span>|<span data-ttu-id="66229-137">Angezeigter Name</span><span class="sxs-lookup"><span data-stu-id="66229-137">Display name</span></span>|<span data-ttu-id="66229-138">.NET Framework-Unterstützung</span><span class="sxs-lookup"><span data-stu-id="66229-138">.NET Framework support</span></span>| <span data-ttu-id="66229-139">.NET Core-Unterstützung</span><span class="sxs-lookup"><span data-stu-id="66229-139">.NET Core support</span></span> | 
|---------|----|------------|----------------------|-------------------|    
|<span data-ttu-id="66229-140">37</span><span class="sxs-lookup"><span data-stu-id="66229-140">37</span></span>|<span data-ttu-id="66229-141">IBM037</span><span class="sxs-lookup"><span data-stu-id="66229-141">IBM037</span></span>|<span data-ttu-id="66229-142">IBM EBCDIC (USA-Kanada)</span><span class="sxs-lookup"><span data-stu-id="66229-142">IBM EBCDIC (US-Canada)</span></span>|||  
|<span data-ttu-id="66229-143">437</span><span class="sxs-lookup"><span data-stu-id="66229-143">437</span></span>|<span data-ttu-id="66229-144">IBM437</span><span class="sxs-lookup"><span data-stu-id="66229-144">IBM437</span></span>|<span data-ttu-id="66229-145">OEM-USA</span><span class="sxs-lookup"><span data-stu-id="66229-145">OEM United States</span></span>|||  
|<span data-ttu-id="66229-146">500</span><span class="sxs-lookup"><span data-stu-id="66229-146">500</span></span>|<span data-ttu-id="66229-147">IBM500</span><span class="sxs-lookup"><span data-stu-id="66229-147">IBM500</span></span>|<span data-ttu-id="66229-148">IBM EBCDIC (International)</span><span class="sxs-lookup"><span data-stu-id="66229-148">IBM EBCDIC (International)</span></span>|||  
|<span data-ttu-id="66229-149">708</span><span class="sxs-lookup"><span data-stu-id="66229-149">708</span></span>|<span data-ttu-id="66229-150">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="66229-150">ASMO-708</span></span>|<span data-ttu-id="66229-151">Arabisch (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="66229-151">Arabic (ASMO 708)</span></span>|||  
|<span data-ttu-id="66229-152">720</span><span class="sxs-lookup"><span data-stu-id="66229-152">720</span></span>|<span data-ttu-id="66229-153">DOS-720</span><span class="sxs-lookup"><span data-stu-id="66229-153">DOS-720</span></span>|<span data-ttu-id="66229-154">Arabisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-154">Arabic (DOS)</span></span>|||  
|<span data-ttu-id="66229-155">737</span><span class="sxs-lookup"><span data-stu-id="66229-155">737</span></span>|<span data-ttu-id="66229-156">ibm737</span><span class="sxs-lookup"><span data-stu-id="66229-156">ibm737</span></span>|<span data-ttu-id="66229-157">Griechisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-157">Greek (DOS)</span></span>|||  
|<span data-ttu-id="66229-158">775</span><span class="sxs-lookup"><span data-stu-id="66229-158">775</span></span>|<span data-ttu-id="66229-159">ibm775</span><span class="sxs-lookup"><span data-stu-id="66229-159">ibm775</span></span>|<span data-ttu-id="66229-160">Baltisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-160">Baltic (DOS)</span></span>|||  
|<span data-ttu-id="66229-161">850</span><span class="sxs-lookup"><span data-stu-id="66229-161">850</span></span>|<span data-ttu-id="66229-162">ibm850</span><span class="sxs-lookup"><span data-stu-id="66229-162">ibm850</span></span>|<span data-ttu-id="66229-163">Westeuropäisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-163">Western European (DOS)</span></span>|||  
|<span data-ttu-id="66229-164">852</span><span class="sxs-lookup"><span data-stu-id="66229-164">852</span></span>|<span data-ttu-id="66229-165">ibm852</span><span class="sxs-lookup"><span data-stu-id="66229-165">ibm852</span></span>|<span data-ttu-id="66229-166">Mitteleuropäisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-166">Central European (DOS)</span></span>|||  
|<span data-ttu-id="66229-167">855</span><span class="sxs-lookup"><span data-stu-id="66229-167">855</span></span>|<span data-ttu-id="66229-168">IBM855</span><span class="sxs-lookup"><span data-stu-id="66229-168">IBM855</span></span>|<span data-ttu-id="66229-169">OEM-Kyrillisch</span><span class="sxs-lookup"><span data-stu-id="66229-169">OEM Cyrillic</span></span>|||  
|<span data-ttu-id="66229-170">857</span><span class="sxs-lookup"><span data-stu-id="66229-170">857</span></span>|<span data-ttu-id="66229-171">ibm857</span><span class="sxs-lookup"><span data-stu-id="66229-171">ibm857</span></span>|<span data-ttu-id="66229-172">Türkisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-172">Turkish (DOS)</span></span>|||  
|<span data-ttu-id="66229-173">858</span><span class="sxs-lookup"><span data-stu-id="66229-173">858</span></span>|<span data-ttu-id="66229-174">IBM00858</span><span class="sxs-lookup"><span data-stu-id="66229-174">IBM00858</span></span>|<span data-ttu-id="66229-175">OEM Multilingual Lateinisch I</span><span class="sxs-lookup"><span data-stu-id="66229-175">OEM Multilingual Latin I</span></span>|||  
|<span data-ttu-id="66229-176">860</span><span class="sxs-lookup"><span data-stu-id="66229-176">860</span></span>|<span data-ttu-id="66229-177">IBM860</span><span class="sxs-lookup"><span data-stu-id="66229-177">IBM860</span></span>|<span data-ttu-id="66229-178">Portugiesisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-178">Portuguese (DOS)</span></span>|||  
|<span data-ttu-id="66229-179">861</span><span class="sxs-lookup"><span data-stu-id="66229-179">861</span></span>|<span data-ttu-id="66229-180">ibm861</span><span class="sxs-lookup"><span data-stu-id="66229-180">ibm861</span></span>|<span data-ttu-id="66229-181">Isländisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-181">Icelandic (DOS)</span></span>|||  
|<span data-ttu-id="66229-182">862</span><span class="sxs-lookup"><span data-stu-id="66229-182">862</span></span>|<span data-ttu-id="66229-183">DOS-862</span><span class="sxs-lookup"><span data-stu-id="66229-183">DOS-862</span></span>|<span data-ttu-id="66229-184">Hebräisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-184">Hebrew (DOS)</span></span>|||  
|<span data-ttu-id="66229-185">863</span><span class="sxs-lookup"><span data-stu-id="66229-185">863</span></span>|<span data-ttu-id="66229-186">IBM863</span><span class="sxs-lookup"><span data-stu-id="66229-186">IBM863</span></span>|<span data-ttu-id="66229-187">Französisch-Kanada (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-187">French Canadian (DOS)</span></span>|||  
|<span data-ttu-id="66229-188">864</span><span class="sxs-lookup"><span data-stu-id="66229-188">864</span></span>|<span data-ttu-id="66229-189">IBM864</span><span class="sxs-lookup"><span data-stu-id="66229-189">IBM864</span></span>|<span data-ttu-id="66229-190">Arabisch (864)</span><span class="sxs-lookup"><span data-stu-id="66229-190">Arabic (864)</span></span>|||  
|<span data-ttu-id="66229-191">865</span><span class="sxs-lookup"><span data-stu-id="66229-191">865</span></span>|<span data-ttu-id="66229-192">IBM865</span><span class="sxs-lookup"><span data-stu-id="66229-192">IBM865</span></span>|<span data-ttu-id="66229-193">Nordisch (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-193">Nordic (DOS)</span></span>|||  
|<span data-ttu-id="66229-194">866</span><span class="sxs-lookup"><span data-stu-id="66229-194">866</span></span>|<span data-ttu-id="66229-195">cp866</span><span class="sxs-lookup"><span data-stu-id="66229-195">cp866</span></span>|<span data-ttu-id="66229-196">Cyrilice (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-196">Cyrillic (DOS)</span></span>|||  
|<span data-ttu-id="66229-197">869</span><span class="sxs-lookup"><span data-stu-id="66229-197">869</span></span>|<span data-ttu-id="66229-198">ibm869</span><span class="sxs-lookup"><span data-stu-id="66229-198">ibm869</span></span>|<span data-ttu-id="66229-199">Griechisch, Modern (DOS)</span><span class="sxs-lookup"><span data-stu-id="66229-199">Greek, Modern (DOS)</span></span>|||  
|<span data-ttu-id="66229-200">870</span><span class="sxs-lookup"><span data-stu-id="66229-200">870</span></span>|<span data-ttu-id="66229-201">IBM870</span><span class="sxs-lookup"><span data-stu-id="66229-201">IBM870</span></span>|<span data-ttu-id="66229-202">IBM EBCDIC (Multilingual Lateinisch-2)</span><span class="sxs-lookup"><span data-stu-id="66229-202">IBM EBCDIC (Multilingual Latin-2)</span></span>|||  
|<span data-ttu-id="66229-203">874</span><span class="sxs-lookup"><span data-stu-id="66229-203">874</span></span>|<span data-ttu-id="66229-204">windows-874</span><span class="sxs-lookup"><span data-stu-id="66229-204">windows-874</span></span>|<span data-ttu-id="66229-205">Thailändisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-205">Thai (Windows)</span></span>|||  
|<span data-ttu-id="66229-206">875</span><span class="sxs-lookup"><span data-stu-id="66229-206">875</span></span>|<span data-ttu-id="66229-207">cp875</span><span class="sxs-lookup"><span data-stu-id="66229-207">cp875</span></span>|<span data-ttu-id="66229-208">IBM EBCDIC (Griechisch, Modern)</span><span class="sxs-lookup"><span data-stu-id="66229-208">IBM EBCDIC (Greek Modern)</span></span>|||  
|<span data-ttu-id="66229-209">932</span><span class="sxs-lookup"><span data-stu-id="66229-209">932</span></span>|<span data-ttu-id="66229-210">Shift_jis</span><span class="sxs-lookup"><span data-stu-id="66229-210">shift_jis</span></span>|<span data-ttu-id="66229-211">Japanisch (Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="66229-211">Japanese (Shift-JIS)</span></span>|||  
|<span data-ttu-id="66229-212">936</span><span class="sxs-lookup"><span data-stu-id="66229-212">936</span></span>|<span data-ttu-id="66229-213">gb2312</span><span class="sxs-lookup"><span data-stu-id="66229-213">gb2312</span></span>|<span data-ttu-id="66229-214">Chinesisch vereinfacht (GB2312)</span><span class="sxs-lookup"><span data-stu-id="66229-214">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="66229-215">✓</span><span class="sxs-lookup"><span data-stu-id="66229-215">✓</span></span>||  
|<span data-ttu-id="66229-216">949</span><span class="sxs-lookup"><span data-stu-id="66229-216">949</span></span>|<span data-ttu-id="66229-217">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="66229-217">ks_c_5601-1987</span></span>|<span data-ttu-id="66229-218">Koreanisch</span><span class="sxs-lookup"><span data-stu-id="66229-218">Korean</span></span>|||  
|<span data-ttu-id="66229-219">950</span><span class="sxs-lookup"><span data-stu-id="66229-219">950</span></span>|<span data-ttu-id="66229-220">Big5</span><span class="sxs-lookup"><span data-stu-id="66229-220">big5</span></span>|<span data-ttu-id="66229-221">Chinesisch traditionell (Big5)</span><span class="sxs-lookup"><span data-stu-id="66229-221">Chinese Traditional (Big5)</span></span>|||  
|<span data-ttu-id="66229-222">1026</span><span class="sxs-lookup"><span data-stu-id="66229-222">1026</span></span>|<span data-ttu-id="66229-223">IBM1026</span><span class="sxs-lookup"><span data-stu-id="66229-223">IBM1026</span></span>|<span data-ttu-id="66229-224">IBM EBCDIC (Türkisch, Lateinisch-5)</span><span class="sxs-lookup"><span data-stu-id="66229-224">IBM EBCDIC (Turkish Latin-5)</span></span>|||  
|<span data-ttu-id="66229-225">1047</span><span class="sxs-lookup"><span data-stu-id="66229-225">1047</span></span>|<span data-ttu-id="66229-226">IBM01047</span><span class="sxs-lookup"><span data-stu-id="66229-226">IBM01047</span></span>|<span data-ttu-id="66229-227">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="66229-227">IBM Latin-1</span></span>|||  
|<span data-ttu-id="66229-228">1140</span><span class="sxs-lookup"><span data-stu-id="66229-228">1140</span></span>|<span data-ttu-id="66229-229">IBM01140</span><span class="sxs-lookup"><span data-stu-id="66229-229">IBM01140</span></span>|<span data-ttu-id="66229-230">IBM EBCDIC (USA-Kanada-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-230">IBM EBCDIC (US-Canada-Euro)</span></span>|||  
|<span data-ttu-id="66229-231">1141</span><span class="sxs-lookup"><span data-stu-id="66229-231">1141</span></span>|<span data-ttu-id="66229-232">IBM01141</span><span class="sxs-lookup"><span data-stu-id="66229-232">IBM01141</span></span>|<span data-ttu-id="66229-233">IBM EBCDIC (Deutschland-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-233">IBM EBCDIC (Germany-Euro)</span></span>|||  
|<span data-ttu-id="66229-234">1142</span><span class="sxs-lookup"><span data-stu-id="66229-234">1142</span></span>|<span data-ttu-id="66229-235">IBM01142</span><span class="sxs-lookup"><span data-stu-id="66229-235">IBM01142</span></span>|<span data-ttu-id="66229-236">IBM EBCDIC (Dänemark-Norwegen-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-236">IBM EBCDIC (Denmark-Norway-Euro)</span></span>|||  
|<span data-ttu-id="66229-237">1143</span><span class="sxs-lookup"><span data-stu-id="66229-237">1143</span></span>|<span data-ttu-id="66229-238">IBM01143</span><span class="sxs-lookup"><span data-stu-id="66229-238">IBM01143</span></span>|<span data-ttu-id="66229-239">IBM EBCDIC (Finnland-Schweden-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-239">IBM EBCDIC (Finland-Sweden-Euro)</span></span>|||  
|<span data-ttu-id="66229-240">1144</span><span class="sxs-lookup"><span data-stu-id="66229-240">1144</span></span>|<span data-ttu-id="66229-241">IBM01144</span><span class="sxs-lookup"><span data-stu-id="66229-241">IBM01144</span></span>|<span data-ttu-id="66229-242">IBM EBCDIC (Italien-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-242">IBM EBCDIC (Italy-Euro)</span></span>|||  
|<span data-ttu-id="66229-243">1145</span><span class="sxs-lookup"><span data-stu-id="66229-243">1145</span></span>|<span data-ttu-id="66229-244">IBM01145</span><span class="sxs-lookup"><span data-stu-id="66229-244">IBM01145</span></span>|<span data-ttu-id="66229-245">IBM EBCDIC (Spanien-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-245">IBM EBCDIC (Spain-Euro)</span></span>|||  
|<span data-ttu-id="66229-246">1146</span><span class="sxs-lookup"><span data-stu-id="66229-246">1146</span></span>|<span data-ttu-id="66229-247">IBM01146</span><span class="sxs-lookup"><span data-stu-id="66229-247">IBM01146</span></span>|<span data-ttu-id="66229-248">IBM EBCDIC (Vereinigtes Königreich-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-248">IBM EBCDIC (UK-Euro)</span></span>|||  
|<span data-ttu-id="66229-249">1147</span><span class="sxs-lookup"><span data-stu-id="66229-249">1147</span></span>|<span data-ttu-id="66229-250">IBM01147</span><span class="sxs-lookup"><span data-stu-id="66229-250">IBM01147</span></span>|<span data-ttu-id="66229-251">IBM EBCDIC (Francie-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-251">IBM EBCDIC (France-Euro)</span></span>|||  
|<span data-ttu-id="66229-252">1148</span><span class="sxs-lookup"><span data-stu-id="66229-252">1148</span></span>|<span data-ttu-id="66229-253">IBM01148</span><span class="sxs-lookup"><span data-stu-id="66229-253">IBM01148</span></span>|<span data-ttu-id="66229-254">IBM EBCDIC (International-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-254">IBM EBCDIC (International-Euro)</span></span>|||  
|<span data-ttu-id="66229-255">1149</span><span class="sxs-lookup"><span data-stu-id="66229-255">1149</span></span>|<span data-ttu-id="66229-256">IBM01149</span><span class="sxs-lookup"><span data-stu-id="66229-256">IBM01149</span></span>|<span data-ttu-id="66229-257">IBM EBCDIC (Island-Euro)</span><span class="sxs-lookup"><span data-stu-id="66229-257">IBM EBCDIC (Icelandic-Euro)</span></span>|||  
|<span data-ttu-id="66229-258">1200</span><span class="sxs-lookup"><span data-stu-id="66229-258">1200</span></span>|<span data-ttu-id="66229-259">UTF-16</span><span class="sxs-lookup"><span data-stu-id="66229-259">utf-16</span></span>|<span data-ttu-id="66229-260">Unicode</span><span class="sxs-lookup"><span data-stu-id="66229-260">Unicode</span></span>|<span data-ttu-id="66229-261">✓</span><span class="sxs-lookup"><span data-stu-id="66229-261">✓</span></span>|<span data-ttu-id="66229-262">✓</span><span class="sxs-lookup"><span data-stu-id="66229-262">✓</span></span>|  
|<span data-ttu-id="66229-263">1201</span><span class="sxs-lookup"><span data-stu-id="66229-263">1201</span></span>|<span data-ttu-id="66229-264">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="66229-264">unicodeFFFE</span></span>|<span data-ttu-id="66229-265">Unicode (Big Endian)</span><span class="sxs-lookup"><span data-stu-id="66229-265">Unicode (Big endian)</span></span>|<span data-ttu-id="66229-266">✓</span><span class="sxs-lookup"><span data-stu-id="66229-266">✓</span></span>|<span data-ttu-id="66229-267">✓</span><span class="sxs-lookup"><span data-stu-id="66229-267">✓</span></span>|  
|<span data-ttu-id="66229-268">1250</span><span class="sxs-lookup"><span data-stu-id="66229-268">1250</span></span>|<span data-ttu-id="66229-269">windows-1250</span><span class="sxs-lookup"><span data-stu-id="66229-269">windows-1250</span></span>|<span data-ttu-id="66229-270">Mitteleuropäisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-270">Central European (Windows)</span></span>|||  
|<span data-ttu-id="66229-271">1251</span><span class="sxs-lookup"><span data-stu-id="66229-271">1251</span></span>|<span data-ttu-id="66229-272">windows-1251</span><span class="sxs-lookup"><span data-stu-id="66229-272">windows-1251</span></span>|<span data-ttu-id="66229-273">Kyrillisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-273">Cyrillic (Windows)</span></span>|||  
|<span data-ttu-id="66229-274">1252</span><span class="sxs-lookup"><span data-stu-id="66229-274">1252</span></span>|<span data-ttu-id="66229-275">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="66229-275">Windows-1252</span></span>|<span data-ttu-id="66229-276">Westeuropäisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-276">Western European (Windows)</span></span>|<span data-ttu-id="66229-277">✓</span><span class="sxs-lookup"><span data-stu-id="66229-277">✓</span></span>||  
|<span data-ttu-id="66229-278">1253</span><span class="sxs-lookup"><span data-stu-id="66229-278">1253</span></span>|<span data-ttu-id="66229-279">windows-1253</span><span class="sxs-lookup"><span data-stu-id="66229-279">windows-1253</span></span>|<span data-ttu-id="66229-280">Griechisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-280">Greek (Windows)</span></span>|||  
|<span data-ttu-id="66229-281">1254</span><span class="sxs-lookup"><span data-stu-id="66229-281">1254</span></span>|<span data-ttu-id="66229-282">windows-1254</span><span class="sxs-lookup"><span data-stu-id="66229-282">windows-1254</span></span>|<span data-ttu-id="66229-283">Türkisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-283">Turkish (Windows)</span></span>|||  
|<span data-ttu-id="66229-284">1255</span><span class="sxs-lookup"><span data-stu-id="66229-284">1255</span></span>|<span data-ttu-id="66229-285">windows-1255</span><span class="sxs-lookup"><span data-stu-id="66229-285">windows-1255</span></span>|<span data-ttu-id="66229-286">Hebräisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-286">Hebrew (Windows)</span></span>|||  
|<span data-ttu-id="66229-287">1256</span><span class="sxs-lookup"><span data-stu-id="66229-287">1256</span></span>|<span data-ttu-id="66229-288">windows-1256</span><span class="sxs-lookup"><span data-stu-id="66229-288">windows-1256</span></span>|<span data-ttu-id="66229-289">Arabisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-289">Arabic (Windows)</span></span>|||  
|<span data-ttu-id="66229-290">1257</span><span class="sxs-lookup"><span data-stu-id="66229-290">1257</span></span>|<span data-ttu-id="66229-291">windows-1257</span><span class="sxs-lookup"><span data-stu-id="66229-291">windows-1257</span></span>|<span data-ttu-id="66229-292">Baltisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-292">Baltic (Windows)</span></span>|||  
|<span data-ttu-id="66229-293">1258</span><span class="sxs-lookup"><span data-stu-id="66229-293">1258</span></span>|<span data-ttu-id="66229-294">windows-1258</span><span class="sxs-lookup"><span data-stu-id="66229-294">windows-1258</span></span>|<span data-ttu-id="66229-295">Vietnamesisch (Windows)</span><span class="sxs-lookup"><span data-stu-id="66229-295">Vietnamese (Windows)</span></span>|||  
|<span data-ttu-id="66229-296">1361</span><span class="sxs-lookup"><span data-stu-id="66229-296">1361</span></span>|<span data-ttu-id="66229-297">Johab</span><span class="sxs-lookup"><span data-stu-id="66229-297">Johab</span></span>|<span data-ttu-id="66229-298">Koreanisch (Johab)</span><span class="sxs-lookup"><span data-stu-id="66229-298">Korean (Johab)</span></span>|||  
|<span data-ttu-id="66229-299">10000</span><span class="sxs-lookup"><span data-stu-id="66229-299">10000</span></span>|<span data-ttu-id="66229-300">Macintosh</span><span class="sxs-lookup"><span data-stu-id="66229-300">macintosh</span></span>|<span data-ttu-id="66229-301">Westeuropäisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-301">Western European (Mac)</span></span>|||  
|<span data-ttu-id="66229-302">10001</span><span class="sxs-lookup"><span data-stu-id="66229-302">10001</span></span>|<span data-ttu-id="66229-303">X – Mac – Japanisch</span><span class="sxs-lookup"><span data-stu-id="66229-303">x-mac-japanese</span></span>|<span data-ttu-id="66229-304">Japanisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-304">Japanese (Mac)</span></span>|||  
|<span data-ttu-id="66229-305">10002</span><span class="sxs-lookup"><span data-stu-id="66229-305">10002</span></span>|<span data-ttu-id="66229-306">X-Mac-Chinesisch (traditionell)</span><span class="sxs-lookup"><span data-stu-id="66229-306">x-mac-chinesetrad</span></span>|<span data-ttu-id="66229-307">Chinesisch traditionell (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-307">Chinese Traditional (Mac)</span></span>|||  
|<span data-ttu-id="66229-308">10003</span><span class="sxs-lookup"><span data-stu-id="66229-308">10003</span></span>|<span data-ttu-id="66229-309">X – Mac – Koreanisch</span><span class="sxs-lookup"><span data-stu-id="66229-309">x-mac-korean</span></span>|<span data-ttu-id="66229-310">Koreanisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-310">Korean (Mac)</span></span>|<span data-ttu-id="66229-311">✓</span><span class="sxs-lookup"><span data-stu-id="66229-311">✓</span></span>||  
|<span data-ttu-id="66229-312">10004</span><span class="sxs-lookup"><span data-stu-id="66229-312">10004</span></span>|<span data-ttu-id="66229-313">X-Mac-Arabisch</span><span class="sxs-lookup"><span data-stu-id="66229-313">x-mac-arabic</span></span>|<span data-ttu-id="66229-314">Arabisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-314">Arabic (Mac)</span></span>|||  
|<span data-ttu-id="66229-315">10005</span><span class="sxs-lookup"><span data-stu-id="66229-315">10005</span></span>|<span data-ttu-id="66229-316">X-Mac-Hebräisch</span><span class="sxs-lookup"><span data-stu-id="66229-316">x-mac-hebrew</span></span>|<span data-ttu-id="66229-317">Hebräisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-317">Hebrew (Mac)</span></span>|||  
|<span data-ttu-id="66229-318">10006</span><span class="sxs-lookup"><span data-stu-id="66229-318">10006</span></span>|<span data-ttu-id="66229-319">X-Mac-Griechisch</span><span class="sxs-lookup"><span data-stu-id="66229-319">x-mac-greek</span></span>|<span data-ttu-id="66229-320">Griechisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-320">Greek (Mac)</span></span>|||  
|<span data-ttu-id="66229-321">10007</span><span class="sxs-lookup"><span data-stu-id="66229-321">10007</span></span>|<span data-ttu-id="66229-322">X-Mac-Kyrillisch</span><span class="sxs-lookup"><span data-stu-id="66229-322">x-mac-cyrillic</span></span>|<span data-ttu-id="66229-323">Cyrilice (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-323">Cyrillic (Mac)</span></span>|||  
|<span data-ttu-id="66229-324">10008</span><span class="sxs-lookup"><span data-stu-id="66229-324">10008</span></span>|<span data-ttu-id="66229-325">X-Mac-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="66229-325">x-mac-chinesesimp</span></span>|<span data-ttu-id="66229-326">Chinesisch vereinfacht (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-326">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="66229-327">✓</span><span class="sxs-lookup"><span data-stu-id="66229-327">✓</span></span>||  
|<span data-ttu-id="66229-328">10010</span><span class="sxs-lookup"><span data-stu-id="66229-328">10010</span></span>|<span data-ttu-id="66229-329">X-Mac-Rumänisch</span><span class="sxs-lookup"><span data-stu-id="66229-329">x-mac-romanian</span></span>|<span data-ttu-id="66229-330">Rumänisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-330">Romanian (Mac)</span></span>|||  
|<span data-ttu-id="66229-331">10017</span><span class="sxs-lookup"><span data-stu-id="66229-331">10017</span></span>|<span data-ttu-id="66229-332">X / Mac-Ukrainisch</span><span class="sxs-lookup"><span data-stu-id="66229-332">x-mac-ukrainian</span></span>|<span data-ttu-id="66229-333">Ukrainisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-333">Ukrainian (Mac)</span></span>|||  
|<span data-ttu-id="66229-334">10021</span><span class="sxs-lookup"><span data-stu-id="66229-334">10021</span></span>|<span data-ttu-id="66229-335">X-Mac-thai</span><span class="sxs-lookup"><span data-stu-id="66229-335">x-mac-thai</span></span>|<span data-ttu-id="66229-336">Thailändisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-336">Thai (Mac)</span></span>|||  
|<span data-ttu-id="66229-337">10029</span><span class="sxs-lookup"><span data-stu-id="66229-337">10029</span></span>|<span data-ttu-id="66229-338">X-Mac-ce</span><span class="sxs-lookup"><span data-stu-id="66229-338">x-mac-ce</span></span>|<span data-ttu-id="66229-339">Mitteleuropäisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-339">Central European (Mac)</span></span>|||  
|<span data-ttu-id="66229-340">10079</span><span class="sxs-lookup"><span data-stu-id="66229-340">10079</span></span>|<span data-ttu-id="66229-341">X-Mac-Isländisch</span><span class="sxs-lookup"><span data-stu-id="66229-341">x-mac-icelandic</span></span>|<span data-ttu-id="66229-342">Isländisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-342">Icelandic (Mac)</span></span>|||  
|<span data-ttu-id="66229-343">10081</span><span class="sxs-lookup"><span data-stu-id="66229-343">10081</span></span>|<span data-ttu-id="66229-344">X-Mac-Türkisch</span><span class="sxs-lookup"><span data-stu-id="66229-344">x-mac-turkish</span></span>|<span data-ttu-id="66229-345">Türkisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-345">Turkish (Mac)</span></span>|||  
|<span data-ttu-id="66229-346">10082</span><span class="sxs-lookup"><span data-stu-id="66229-346">10082</span></span>|<span data-ttu-id="66229-347">X-Mac-Kroatisch</span><span class="sxs-lookup"><span data-stu-id="66229-347">x-mac-croatian</span></span>|<span data-ttu-id="66229-348">Kroatisch (Mac)</span><span class="sxs-lookup"><span data-stu-id="66229-348">Croatian (Mac)</span></span>|||  
|<span data-ttu-id="66229-349">12000</span><span class="sxs-lookup"><span data-stu-id="66229-349">12000</span></span>|<span data-ttu-id="66229-350">UTF-32</span><span class="sxs-lookup"><span data-stu-id="66229-350">utf-32</span></span>|<span data-ttu-id="66229-351">Unicode (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="66229-351">Unicode (UTF-32)</span></span>|<span data-ttu-id="66229-352">✓</span><span class="sxs-lookup"><span data-stu-id="66229-352">✓</span></span>|<span data-ttu-id="66229-353">✓</span><span class="sxs-lookup"><span data-stu-id="66229-353">✓</span></span>|  
|<span data-ttu-id="66229-354">12001</span><span class="sxs-lookup"><span data-stu-id="66229-354">12001</span></span>|<span data-ttu-id="66229-355">UTF-32BE</span><span class="sxs-lookup"><span data-stu-id="66229-355">utf-32BE</span></span>|<span data-ttu-id="66229-356">Unicode (UTF-32 Big Endian)</span><span class="sxs-lookup"><span data-stu-id="66229-356">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="66229-357">✓</span><span class="sxs-lookup"><span data-stu-id="66229-357">✓</span></span>|<span data-ttu-id="66229-358">✓</span><span class="sxs-lookup"><span data-stu-id="66229-358">✓</span></span>|  
|<span data-ttu-id="66229-359">20000</span><span class="sxs-lookup"><span data-stu-id="66229-359">20000</span></span>|<span data-ttu-id="66229-360">X-Chinesisch-CNS</span><span class="sxs-lookup"><span data-stu-id="66229-360">x-Chinese-CNS</span></span>|<span data-ttu-id="66229-361">Chinesisch traditionell (CNS)</span><span class="sxs-lookup"><span data-stu-id="66229-361">Chinese Traditional (CNS)</span></span>|||  
|<span data-ttu-id="66229-362">20001</span><span class="sxs-lookup"><span data-stu-id="66229-362">20001</span></span>|<span data-ttu-id="66229-363">x-cp20001</span><span class="sxs-lookup"><span data-stu-id="66229-363">x-cp20001</span></span>|<span data-ttu-id="66229-364">-WAN TCA</span><span class="sxs-lookup"><span data-stu-id="66229-364">TCA Taiwan</span></span>|||  
|<span data-ttu-id="66229-365">20002</span><span class="sxs-lookup"><span data-stu-id="66229-365">20002</span></span>|<span data-ttu-id="66229-366">X-Chinesisch-Eten</span><span class="sxs-lookup"><span data-stu-id="66229-366">x-Chinese-Eten</span></span>|<span data-ttu-id="66229-367">Chinesisch traditionell (Eten)</span><span class="sxs-lookup"><span data-stu-id="66229-367">Chinese Traditional (Eten)</span></span>|||  
|<span data-ttu-id="66229-368">20003</span><span class="sxs-lookup"><span data-stu-id="66229-368">20003</span></span>|<span data-ttu-id="66229-369">x-cp20003</span><span class="sxs-lookup"><span data-stu-id="66229-369">x-cp20003</span></span>|<span data-ttu-id="66229-370">IBM5550 Taiwan</span><span class="sxs-lookup"><span data-stu-id="66229-370">IBM5550 Taiwan</span></span>|||  
|<span data-ttu-id="66229-371">20004</span><span class="sxs-lookup"><span data-stu-id="66229-371">20004</span></span>|<span data-ttu-id="66229-372">x-cp20004</span><span class="sxs-lookup"><span data-stu-id="66229-372">x-cp20004</span></span>|<span data-ttu-id="66229-373">-WAN Teletext</span><span class="sxs-lookup"><span data-stu-id="66229-373">TeleText Taiwan</span></span>|||  
|<span data-ttu-id="66229-374">20005</span><span class="sxs-lookup"><span data-stu-id="66229-374">20005</span></span>|<span data-ttu-id="66229-375">x-cp20005</span><span class="sxs-lookup"><span data-stu-id="66229-375">x-cp20005</span></span>|<span data-ttu-id="66229-376">Tchaj-WAN</span><span class="sxs-lookup"><span data-stu-id="66229-376">Wang Taiwan</span></span>|||  
|<span data-ttu-id="66229-377">20105</span><span class="sxs-lookup"><span data-stu-id="66229-377">20105</span></span>|<span data-ttu-id="66229-378">x-IA5</span><span class="sxs-lookup"><span data-stu-id="66229-378">x-IA5</span></span>|<span data-ttu-id="66229-379">Westeuropäisch (IA5)</span><span class="sxs-lookup"><span data-stu-id="66229-379">Western European (IA5)</span></span>|||  
|<span data-ttu-id="66229-380">20106</span><span class="sxs-lookup"><span data-stu-id="66229-380">20106</span></span>|<span data-ttu-id="66229-381">x-IA5-German</span><span class="sxs-lookup"><span data-stu-id="66229-381">x-IA5-German</span></span>|<span data-ttu-id="66229-382">Deutsch (IA5)</span><span class="sxs-lookup"><span data-stu-id="66229-382">German (IA5)</span></span>|||  
|<span data-ttu-id="66229-383">20107</span><span class="sxs-lookup"><span data-stu-id="66229-383">20107</span></span>|<span data-ttu-id="66229-384">X-IA5-Schwedisch</span><span class="sxs-lookup"><span data-stu-id="66229-384">x-IA5-Swedish</span></span>|<span data-ttu-id="66229-385">Schwedisch (IA5)</span><span class="sxs-lookup"><span data-stu-id="66229-385">Swedish (IA5)</span></span>|||  
|<span data-ttu-id="66229-386">20108</span><span class="sxs-lookup"><span data-stu-id="66229-386">20108</span></span>|<span data-ttu-id="66229-387">X-IA5-Norwegisch</span><span class="sxs-lookup"><span data-stu-id="66229-387">x-IA5-Norwegian</span></span>|<span data-ttu-id="66229-388">Norwegisch (IA5)</span><span class="sxs-lookup"><span data-stu-id="66229-388">Norwegian (IA5)</span></span>|||  
|<span data-ttu-id="66229-389">20127</span><span class="sxs-lookup"><span data-stu-id="66229-389">20127</span></span>|<span data-ttu-id="66229-390">us-ascii</span><span class="sxs-lookup"><span data-stu-id="66229-390">us-ascii</span></span>|<span data-ttu-id="66229-391">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="66229-391">US-ASCII</span></span>|<span data-ttu-id="66229-392">✓</span><span class="sxs-lookup"><span data-stu-id="66229-392">✓</span></span>|<span data-ttu-id="66229-393">✓</span><span class="sxs-lookup"><span data-stu-id="66229-393">✓</span></span>|  
|<span data-ttu-id="66229-394">20261</span><span class="sxs-lookup"><span data-stu-id="66229-394">20261</span></span>|<span data-ttu-id="66229-395">x-cp20261</span><span class="sxs-lookup"><span data-stu-id="66229-395">x-cp20261</span></span>|<span data-ttu-id="66229-396">T.61</span><span class="sxs-lookup"><span data-stu-id="66229-396">T.61</span></span>|||  
|<span data-ttu-id="66229-397">20269</span><span class="sxs-lookup"><span data-stu-id="66229-397">20269</span></span>|<span data-ttu-id="66229-398">x-cp20269</span><span class="sxs-lookup"><span data-stu-id="66229-398">x-cp20269</span></span>|<span data-ttu-id="66229-399">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="66229-399">ISO-6937</span></span>|||  
|<span data-ttu-id="66229-400">20273</span><span class="sxs-lookup"><span data-stu-id="66229-400">20273</span></span>|<span data-ttu-id="66229-401">IBM273</span><span class="sxs-lookup"><span data-stu-id="66229-401">IBM273</span></span>|<span data-ttu-id="66229-402">IBM EBCDIC (Deutschland)</span><span class="sxs-lookup"><span data-stu-id="66229-402">IBM EBCDIC (Germany)</span></span>|||  
|<span data-ttu-id="66229-403">20277</span><span class="sxs-lookup"><span data-stu-id="66229-403">20277</span></span>|<span data-ttu-id="66229-404">IBM277</span><span class="sxs-lookup"><span data-stu-id="66229-404">IBM277</span></span>|<span data-ttu-id="66229-405">IBM EBCDIC (Dänemark-Norwegen)</span><span class="sxs-lookup"><span data-stu-id="66229-405">IBM EBCDIC (Denmark-Norway)</span></span>|||  
|<span data-ttu-id="66229-406">20278</span><span class="sxs-lookup"><span data-stu-id="66229-406">20278</span></span>|<span data-ttu-id="66229-407">IBM278</span><span class="sxs-lookup"><span data-stu-id="66229-407">IBM278</span></span>|<span data-ttu-id="66229-408">IBM EBCDIC (Finnland-Schweden)</span><span class="sxs-lookup"><span data-stu-id="66229-408">IBM EBCDIC (Finland-Sweden)</span></span>|||  
|<span data-ttu-id="66229-409">20280</span><span class="sxs-lookup"><span data-stu-id="66229-409">20280</span></span>|<span data-ttu-id="66229-410">IBM280</span><span class="sxs-lookup"><span data-stu-id="66229-410">IBM280</span></span>|<span data-ttu-id="66229-411">IBM EBCDIC (Italien)</span><span class="sxs-lookup"><span data-stu-id="66229-411">IBM EBCDIC (Italy)</span></span>|||  
|<span data-ttu-id="66229-412">20284</span><span class="sxs-lookup"><span data-stu-id="66229-412">20284</span></span>|<span data-ttu-id="66229-413">IBM284</span><span class="sxs-lookup"><span data-stu-id="66229-413">IBM284</span></span>|<span data-ttu-id="66229-414">IBM EBCDIC (Spanien)</span><span class="sxs-lookup"><span data-stu-id="66229-414">IBM EBCDIC (Spain)</span></span>|||  
|<span data-ttu-id="66229-415">20285</span><span class="sxs-lookup"><span data-stu-id="66229-415">20285</span></span>|<span data-ttu-id="66229-416">IBM285</span><span class="sxs-lookup"><span data-stu-id="66229-416">IBM285</span></span>|<span data-ttu-id="66229-417">IBM EBCDIC (UK)</span><span class="sxs-lookup"><span data-stu-id="66229-417">IBM EBCDIC (UK)</span></span>|||  
|<span data-ttu-id="66229-418">20290</span><span class="sxs-lookup"><span data-stu-id="66229-418">20290</span></span>|<span data-ttu-id="66229-419">IBM290</span><span class="sxs-lookup"><span data-stu-id="66229-419">IBM290</span></span>|<span data-ttu-id="66229-420">IBM EBCDIC (Japonsko-Katakana)</span><span class="sxs-lookup"><span data-stu-id="66229-420">IBM EBCDIC (Japanese katakana)</span></span>|||  
|<span data-ttu-id="66229-421">20297</span><span class="sxs-lookup"><span data-stu-id="66229-421">20297</span></span>|<span data-ttu-id="66229-422">IBM297</span><span class="sxs-lookup"><span data-stu-id="66229-422">IBM297</span></span>|<span data-ttu-id="66229-423">IBM EBCDIC (Francie)</span><span class="sxs-lookup"><span data-stu-id="66229-423">IBM EBCDIC (France)</span></span>|||  
|<span data-ttu-id="66229-424">20420</span><span class="sxs-lookup"><span data-stu-id="66229-424">20420</span></span>|<span data-ttu-id="66229-425">IBM420</span><span class="sxs-lookup"><span data-stu-id="66229-425">IBM420</span></span>|<span data-ttu-id="66229-426">IBM EBCDIC (Arabisch)</span><span class="sxs-lookup"><span data-stu-id="66229-426">IBM EBCDIC (Arabic)</span></span>|||  
|<span data-ttu-id="66229-427">20423</span><span class="sxs-lookup"><span data-stu-id="66229-427">20423</span></span>|<span data-ttu-id="66229-428">IBM423</span><span class="sxs-lookup"><span data-stu-id="66229-428">IBM423</span></span>|<span data-ttu-id="66229-429">IBM EBCDIC (Griechisch)</span><span class="sxs-lookup"><span data-stu-id="66229-429">IBM EBCDIC (Greek)</span></span>|||  
|<span data-ttu-id="66229-430">20424</span><span class="sxs-lookup"><span data-stu-id="66229-430">20424</span></span>|<span data-ttu-id="66229-431">IBM424</span><span class="sxs-lookup"><span data-stu-id="66229-431">IBM424</span></span>|<span data-ttu-id="66229-432">IBM EBCDIC (Hebräisch)</span><span class="sxs-lookup"><span data-stu-id="66229-432">IBM EBCDIC (Hebrew)</span></span>|||  
|<span data-ttu-id="66229-433">20833</span><span class="sxs-lookup"><span data-stu-id="66229-433">20833</span></span>|<span data-ttu-id="66229-434">X-EBCDIC-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="66229-434">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="66229-435">IBM EBCDIC (Koreanisch, erweitert)</span><span class="sxs-lookup"><span data-stu-id="66229-435">IBM EBCDIC (Korean Extended)</span></span>|||  
|<span data-ttu-id="66229-436">20838</span><span class="sxs-lookup"><span data-stu-id="66229-436">20838</span></span>|<span data-ttu-id="66229-437">IBM-Thai</span><span class="sxs-lookup"><span data-stu-id="66229-437">IBM-Thai</span></span>|<span data-ttu-id="66229-438">IBM EBCDIC (Thailändisch)</span><span class="sxs-lookup"><span data-stu-id="66229-438">IBM EBCDIC (Thai)</span></span>|||  
|<span data-ttu-id="66229-439">20866</span><span class="sxs-lookup"><span data-stu-id="66229-439">20866</span></span>|<span data-ttu-id="66229-440">KOI8-r</span><span class="sxs-lookup"><span data-stu-id="66229-440">koi8-r</span></span>|<span data-ttu-id="66229-441">Kyrillisch (KOI8-R)</span><span class="sxs-lookup"><span data-stu-id="66229-441">Cyrillic (KOI8-R)</span></span>|||  
|<span data-ttu-id="66229-442">20871</span><span class="sxs-lookup"><span data-stu-id="66229-442">20871</span></span>|<span data-ttu-id="66229-443">IBM871</span><span class="sxs-lookup"><span data-stu-id="66229-443">IBM871</span></span>|<span data-ttu-id="66229-444">IBM EBCDIC (Isländisch)</span><span class="sxs-lookup"><span data-stu-id="66229-444">IBM EBCDIC (Icelandic)</span></span>|||  
|<span data-ttu-id="66229-445">20880</span><span class="sxs-lookup"><span data-stu-id="66229-445">20880</span></span>|<span data-ttu-id="66229-446">IBM880</span><span class="sxs-lookup"><span data-stu-id="66229-446">IBM880</span></span>|<span data-ttu-id="66229-447">IBM EBCDIC (Kyrillisch, Russisch)</span><span class="sxs-lookup"><span data-stu-id="66229-447">IBM EBCDIC (Cyrillic Russian)</span></span>|||  
|<span data-ttu-id="66229-448">20905</span><span class="sxs-lookup"><span data-stu-id="66229-448">20905</span></span>|<span data-ttu-id="66229-449">IBM905</span><span class="sxs-lookup"><span data-stu-id="66229-449">IBM905</span></span>|<span data-ttu-id="66229-450">IBM EBCDIC (Türkisch)</span><span class="sxs-lookup"><span data-stu-id="66229-450">IBM EBCDIC (Turkish)</span></span>|||  
|<span data-ttu-id="66229-451">20924</span><span class="sxs-lookup"><span data-stu-id="66229-451">20924</span></span>|<span data-ttu-id="66229-452">IBM00924</span><span class="sxs-lookup"><span data-stu-id="66229-452">IBM00924</span></span>|<span data-ttu-id="66229-453">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="66229-453">IBM Latin-1</span></span>|||  
|<span data-ttu-id="66229-454">20932</span><span class="sxs-lookup"><span data-stu-id="66229-454">20932</span></span>|<span data-ttu-id="66229-455">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="66229-455">EUC-JP</span></span>|<span data-ttu-id="66229-456">Japanisch (JIS 0208-1990 und 0212-1990)</span><span class="sxs-lookup"><span data-stu-id="66229-456">Japanese (JIS 0208-1990 and 0212-1990)</span></span>|||  
|<span data-ttu-id="66229-457">20936</span><span class="sxs-lookup"><span data-stu-id="66229-457">20936</span></span>|<span data-ttu-id="66229-458">x-cp20936</span><span class="sxs-lookup"><span data-stu-id="66229-458">x-cp20936</span></span>|<span data-ttu-id="66229-459">Chinesisch vereinfacht (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="66229-459">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="66229-460">✓</span><span class="sxs-lookup"><span data-stu-id="66229-460">✓</span></span>||  
|<span data-ttu-id="66229-461">20949</span><span class="sxs-lookup"><span data-stu-id="66229-461">20949</span></span>|<span data-ttu-id="66229-462">x-cp20949</span><span class="sxs-lookup"><span data-stu-id="66229-462">x-cp20949</span></span>|<span data-ttu-id="66229-463">Koreanisch Wansung</span><span class="sxs-lookup"><span data-stu-id="66229-463">Korean Wansung</span></span>|<span data-ttu-id="66229-464">✓</span><span class="sxs-lookup"><span data-stu-id="66229-464">✓</span></span>||  
|<span data-ttu-id="66229-465">21025</span><span class="sxs-lookup"><span data-stu-id="66229-465">21025</span></span>|<span data-ttu-id="66229-466">cp1025</span><span class="sxs-lookup"><span data-stu-id="66229-466">cp1025</span></span>|<span data-ttu-id="66229-467">IBM EBCDIC (Kyrillisch, Serbisch-Bulgarisch)</span><span class="sxs-lookup"><span data-stu-id="66229-467">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>|||  
|<span data-ttu-id="66229-468">21866</span><span class="sxs-lookup"><span data-stu-id="66229-468">21866</span></span>|<span data-ttu-id="66229-469">KOI8-u</span><span class="sxs-lookup"><span data-stu-id="66229-469">koi8-u</span></span>|<span data-ttu-id="66229-470">Kyrillisch (KOI8-U)</span><span class="sxs-lookup"><span data-stu-id="66229-470">Cyrillic (KOI8-U)</span></span>|||  
|<span data-ttu-id="66229-471">28591</span><span class="sxs-lookup"><span data-stu-id="66229-471">28591</span></span>|<span data-ttu-id="66229-472">iso-8859-1</span><span class="sxs-lookup"><span data-stu-id="66229-472">iso-8859-1</span></span>|<span data-ttu-id="66229-473">Westeuropäisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-473">Western European (ISO)</span></span>|<span data-ttu-id="66229-474">✓</span><span class="sxs-lookup"><span data-stu-id="66229-474">✓</span></span>|<span data-ttu-id="66229-475">✓</span><span class="sxs-lookup"><span data-stu-id="66229-475">✓</span></span>|  
|<span data-ttu-id="66229-476">28592</span><span class="sxs-lookup"><span data-stu-id="66229-476">28592</span></span>|<span data-ttu-id="66229-477">iso-8859-2</span><span class="sxs-lookup"><span data-stu-id="66229-477">iso-8859-2</span></span>|<span data-ttu-id="66229-478">Mitteleuropäisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-478">Central European (ISO)</span></span>|||  
|<span data-ttu-id="66229-479">28593</span><span class="sxs-lookup"><span data-stu-id="66229-479">28593</span></span>|<span data-ttu-id="66229-480">iso-8859-3</span><span class="sxs-lookup"><span data-stu-id="66229-480">iso-8859-3</span></span>|<span data-ttu-id="66229-481">Lateinisch-3 (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-481">Latin 3 (ISO)</span></span>|||  
|<span data-ttu-id="66229-482">28594</span><span class="sxs-lookup"><span data-stu-id="66229-482">28594</span></span>|<span data-ttu-id="66229-483">iso-8859-4</span><span class="sxs-lookup"><span data-stu-id="66229-483">iso-8859-4</span></span>|<span data-ttu-id="66229-484">Baltisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-484">Baltic (ISO)</span></span>|||  
|<span data-ttu-id="66229-485">28595</span><span class="sxs-lookup"><span data-stu-id="66229-485">28595</span></span>|<span data-ttu-id="66229-486">iso-8859-5</span><span class="sxs-lookup"><span data-stu-id="66229-486">iso-8859-5</span></span>|<span data-ttu-id="66229-487">Cyrilice (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-487">Cyrillic (ISO)</span></span>|||  
|<span data-ttu-id="66229-488">28596</span><span class="sxs-lookup"><span data-stu-id="66229-488">28596</span></span>|<span data-ttu-id="66229-489">iso-8859-6</span><span class="sxs-lookup"><span data-stu-id="66229-489">iso-8859-6</span></span>|<span data-ttu-id="66229-490">Arabisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-490">Arabic (ISO)</span></span>|||  
|<span data-ttu-id="66229-491">28597</span><span class="sxs-lookup"><span data-stu-id="66229-491">28597</span></span>|<span data-ttu-id="66229-492">iso-8859-7</span><span class="sxs-lookup"><span data-stu-id="66229-492">iso-8859-7</span></span>|<span data-ttu-id="66229-493">Griechisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-493">Greek (ISO)</span></span>|||  
|<span data-ttu-id="66229-494">28598</span><span class="sxs-lookup"><span data-stu-id="66229-494">28598</span></span>|<span data-ttu-id="66229-495">iso-8859-8</span><span class="sxs-lookup"><span data-stu-id="66229-495">iso-8859-8</span></span>|<span data-ttu-id="66229-496">Hebräisch (ISO visuell)</span><span class="sxs-lookup"><span data-stu-id="66229-496">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="66229-497">✓</span><span class="sxs-lookup"><span data-stu-id="66229-497">✓</span></span>||  
|<span data-ttu-id="66229-498">28599</span><span class="sxs-lookup"><span data-stu-id="66229-498">28599</span></span>|<span data-ttu-id="66229-499">iso-8859-9</span><span class="sxs-lookup"><span data-stu-id="66229-499">iso-8859-9</span></span>|<span data-ttu-id="66229-500">Türkisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-500">Turkish (ISO)</span></span>|||  
|<span data-ttu-id="66229-501">28603</span><span class="sxs-lookup"><span data-stu-id="66229-501">28603</span></span>|<span data-ttu-id="66229-502">iso-8859-13</span><span class="sxs-lookup"><span data-stu-id="66229-502">iso-8859-13</span></span>|<span data-ttu-id="66229-503">Estnisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-503">Estonian (ISO)</span></span>|||  
|<span data-ttu-id="66229-504">28605</span><span class="sxs-lookup"><span data-stu-id="66229-504">28605</span></span>|<span data-ttu-id="66229-505">iso-8859-15</span><span class="sxs-lookup"><span data-stu-id="66229-505">iso-8859-15</span></span>|<span data-ttu-id="66229-506">Lateinisch 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-506">Latin 9 (ISO)</span></span>|||  
|<span data-ttu-id="66229-507">29001</span><span class="sxs-lookup"><span data-stu-id="66229-507">29001</span></span>|<span data-ttu-id="66229-508">X-Europa</span><span class="sxs-lookup"><span data-stu-id="66229-508">x-Europa</span></span>|<span data-ttu-id="66229-509">Europa</span><span class="sxs-lookup"><span data-stu-id="66229-509">Europa</span></span>|||  
|<span data-ttu-id="66229-510">38598</span><span class="sxs-lookup"><span data-stu-id="66229-510">38598</span></span>|<span data-ttu-id="66229-511">iso-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="66229-511">iso-8859-8-i</span></span>|<span data-ttu-id="66229-512">Hebräisch (ISO logisch)</span><span class="sxs-lookup"><span data-stu-id="66229-512">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="66229-513">✓</span><span class="sxs-lookup"><span data-stu-id="66229-513">✓</span></span>||  
|<span data-ttu-id="66229-514">50220</span><span class="sxs-lookup"><span data-stu-id="66229-514">50220</span></span>|<span data-ttu-id="66229-515">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="66229-515">iso-2022-jp</span></span>|<span data-ttu-id="66229-516">Japanisch (JIS)</span><span class="sxs-lookup"><span data-stu-id="66229-516">Japanese (JIS)</span></span>|<span data-ttu-id="66229-517">✓</span><span class="sxs-lookup"><span data-stu-id="66229-517">✓</span></span>||  
|<span data-ttu-id="66229-518">50221</span><span class="sxs-lookup"><span data-stu-id="66229-518">50221</span></span>|<span data-ttu-id="66229-519">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="66229-519">csISO2022JP</span></span>|<span data-ttu-id="66229-520">Japanisch (JIS-1 Byte Kana erlaubt)</span><span class="sxs-lookup"><span data-stu-id="66229-520">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="66229-521">✓</span><span class="sxs-lookup"><span data-stu-id="66229-521">✓</span></span>||  
|<span data-ttu-id="66229-522">50222</span><span class="sxs-lookup"><span data-stu-id="66229-522">50222</span></span>|<span data-ttu-id="66229-523">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="66229-523">iso-2022-jp</span></span>|<span data-ttu-id="66229-524">Japanisch (JIS, 1 Byte erlaubt Kana - SO / SI)</span><span class="sxs-lookup"><span data-stu-id="66229-524">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="66229-525">✓</span><span class="sxs-lookup"><span data-stu-id="66229-525">✓</span></span>||  
|<span data-ttu-id="66229-526">50225</span><span class="sxs-lookup"><span data-stu-id="66229-526">50225</span></span>|<span data-ttu-id="66229-527">ISO-2022-kr</span><span class="sxs-lookup"><span data-stu-id="66229-527">iso-2022-kr</span></span>|<span data-ttu-id="66229-528">Koreanisch (ISO)</span><span class="sxs-lookup"><span data-stu-id="66229-528">Korean (ISO)</span></span>|<span data-ttu-id="66229-529">✓</span><span class="sxs-lookup"><span data-stu-id="66229-529">✓</span></span>||  
|<span data-ttu-id="66229-530">50227</span><span class="sxs-lookup"><span data-stu-id="66229-530">50227</span></span>|<span data-ttu-id="66229-531">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="66229-531">x-cp50227</span></span>|<span data-ttu-id="66229-532">Chinesisch vereinfacht (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="66229-532">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="66229-533">✓</span><span class="sxs-lookup"><span data-stu-id="66229-533">✓</span></span>||  
|<span data-ttu-id="66229-534">51932</span><span class="sxs-lookup"><span data-stu-id="66229-534">51932</span></span>|<span data-ttu-id="66229-535">EUC-jp</span><span class="sxs-lookup"><span data-stu-id="66229-535">euc-jp</span></span>|<span data-ttu-id="66229-536">Japanisch (EUC)</span><span class="sxs-lookup"><span data-stu-id="66229-536">Japanese (EUC)</span></span>|<span data-ttu-id="66229-537">✓</span><span class="sxs-lookup"><span data-stu-id="66229-537">✓</span></span>||  
|<span data-ttu-id="66229-538">51936</span><span class="sxs-lookup"><span data-stu-id="66229-538">51936</span></span>|<span data-ttu-id="66229-539">EUC-CN</span><span class="sxs-lookup"><span data-stu-id="66229-539">EUC-CN</span></span>|<span data-ttu-id="66229-540">Chinesisch vereinfacht (EUC)</span><span class="sxs-lookup"><span data-stu-id="66229-540">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="66229-541">✓</span><span class="sxs-lookup"><span data-stu-id="66229-541">✓</span></span>||  
|<span data-ttu-id="66229-542">51949</span><span class="sxs-lookup"><span data-stu-id="66229-542">51949</span></span>|<span data-ttu-id="66229-543">EUC-kr</span><span class="sxs-lookup"><span data-stu-id="66229-543">euc-kr</span></span>|<span data-ttu-id="66229-544">Koreanisch (EUC)</span><span class="sxs-lookup"><span data-stu-id="66229-544">Korean (EUC)</span></span>|<span data-ttu-id="66229-545">✓</span><span class="sxs-lookup"><span data-stu-id="66229-545">✓</span></span>||  
|<span data-ttu-id="66229-546">52936</span><span class="sxs-lookup"><span data-stu-id="66229-546">52936</span></span>|<span data-ttu-id="66229-547">Hz-gb-2312</span><span class="sxs-lookup"><span data-stu-id="66229-547">hz-gb-2312</span></span>|<span data-ttu-id="66229-548">Chinesisch vereinfacht (HZ)</span><span class="sxs-lookup"><span data-stu-id="66229-548">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="66229-549">✓</span><span class="sxs-lookup"><span data-stu-id="66229-549">✓</span></span>||  
|<span data-ttu-id="66229-550">54936</span><span class="sxs-lookup"><span data-stu-id="66229-550">54936</span></span>|<span data-ttu-id="66229-551">GB18030</span><span class="sxs-lookup"><span data-stu-id="66229-551">GB18030</span></span>|<span data-ttu-id="66229-552">Chinesisch vereinfacht (GB18030)</span><span class="sxs-lookup"><span data-stu-id="66229-552">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="66229-553">✓</span><span class="sxs-lookup"><span data-stu-id="66229-553">✓</span></span>||  
|<span data-ttu-id="66229-554">57002</span><span class="sxs-lookup"><span data-stu-id="66229-554">57002</span></span>|<span data-ttu-id="66229-555">X-Iscii – de</span><span class="sxs-lookup"><span data-stu-id="66229-555">x-iscii-de</span></span>|<span data-ttu-id="66229-556">ISCII Devanagari</span><span class="sxs-lookup"><span data-stu-id="66229-556">ISCII Devanagari</span></span>|<span data-ttu-id="66229-557">✓</span><span class="sxs-lookup"><span data-stu-id="66229-557">✓</span></span>||  
|<span data-ttu-id="66229-558">57003</span><span class="sxs-lookup"><span data-stu-id="66229-558">57003</span></span>|<span data-ttu-id="66229-559">X-Iscii-be</span><span class="sxs-lookup"><span data-stu-id="66229-559">x-iscii-be</span></span>|<span data-ttu-id="66229-560">ISCII Bangla</span><span class="sxs-lookup"><span data-stu-id="66229-560">ISCII Bengali</span></span>|<span data-ttu-id="66229-561">✓</span><span class="sxs-lookup"><span data-stu-id="66229-561">✓</span></span>||  
|<span data-ttu-id="66229-562">57004</span><span class="sxs-lookup"><span data-stu-id="66229-562">57004</span></span>|<span data-ttu-id="66229-563">x-iscii-ta</span><span class="sxs-lookup"><span data-stu-id="66229-563">x-iscii-ta</span></span>|<span data-ttu-id="66229-564">ISCII Tamil</span><span class="sxs-lookup"><span data-stu-id="66229-564">ISCII Tamil</span></span>|<span data-ttu-id="66229-565">✓</span><span class="sxs-lookup"><span data-stu-id="66229-565">✓</span></span>||  
|<span data-ttu-id="66229-566">57005</span><span class="sxs-lookup"><span data-stu-id="66229-566">57005</span></span>|<span data-ttu-id="66229-567">X-Iscii-te</span><span class="sxs-lookup"><span data-stu-id="66229-567">x-iscii-te</span></span>|<span data-ttu-id="66229-568">ISCII Telugu</span><span class="sxs-lookup"><span data-stu-id="66229-568">ISCII Telugu</span></span>|<span data-ttu-id="66229-569">✓</span><span class="sxs-lookup"><span data-stu-id="66229-569">✓</span></span>||  
|<span data-ttu-id="66229-570">57006</span><span class="sxs-lookup"><span data-stu-id="66229-570">57006</span></span>|<span data-ttu-id="66229-571">X-Iscii als</span><span class="sxs-lookup"><span data-stu-id="66229-571">x-iscii-as</span></span>|<span data-ttu-id="66229-572">ISCII Assamesisch</span><span class="sxs-lookup"><span data-stu-id="66229-572">ISCII Assamese</span></span>|<span data-ttu-id="66229-573">✓</span><span class="sxs-lookup"><span data-stu-id="66229-573">✓</span></span>||  
|<span data-ttu-id="66229-574">57007</span><span class="sxs-lookup"><span data-stu-id="66229-574">57007</span></span>|<span data-ttu-id="66229-575">X-Iscii-oder</span><span class="sxs-lookup"><span data-stu-id="66229-575">x-iscii-or</span></span>|<span data-ttu-id="66229-576">ISCII Oriya</span><span class="sxs-lookup"><span data-stu-id="66229-576">ISCII Oriya</span></span>|<span data-ttu-id="66229-577">✓</span><span class="sxs-lookup"><span data-stu-id="66229-577">✓</span></span>||  
|<span data-ttu-id="66229-578">57008</span><span class="sxs-lookup"><span data-stu-id="66229-578">57008</span></span>|<span data-ttu-id="66229-579">X-Iscii-ka</span><span class="sxs-lookup"><span data-stu-id="66229-579">x-iscii-ka</span></span>|<span data-ttu-id="66229-580">ISCII Kannada</span><span class="sxs-lookup"><span data-stu-id="66229-580">ISCII Kannada</span></span>|<span data-ttu-id="66229-581">✓</span><span class="sxs-lookup"><span data-stu-id="66229-581">✓</span></span>||  
|<span data-ttu-id="66229-582">57009</span><span class="sxs-lookup"><span data-stu-id="66229-582">57009</span></span>|<span data-ttu-id="66229-583">X-Iscii-ma</span><span class="sxs-lookup"><span data-stu-id="66229-583">x-iscii-ma</span></span>|<span data-ttu-id="66229-584">ISCII Malayalam</span><span class="sxs-lookup"><span data-stu-id="66229-584">ISCII Malayalam</span></span>|<span data-ttu-id="66229-585">✓</span><span class="sxs-lookup"><span data-stu-id="66229-585">✓</span></span>||  
|<span data-ttu-id="66229-586">57010</span><span class="sxs-lookup"><span data-stu-id="66229-586">57010</span></span>|<span data-ttu-id="66229-587">X-Iscii-gu</span><span class="sxs-lookup"><span data-stu-id="66229-587">x-iscii-gu</span></span>|<span data-ttu-id="66229-588">ISCII Gujarati</span><span class="sxs-lookup"><span data-stu-id="66229-588">ISCII Gujarati</span></span>|<span data-ttu-id="66229-589">✓</span><span class="sxs-lookup"><span data-stu-id="66229-589">✓</span></span>||  
|<span data-ttu-id="66229-590">57011</span><span class="sxs-lookup"><span data-stu-id="66229-590">57011</span></span>|<span data-ttu-id="66229-591">X-Iscii-pa</span><span class="sxs-lookup"><span data-stu-id="66229-591">x-iscii-pa</span></span>|<span data-ttu-id="66229-592">ISCII Punjabi</span><span class="sxs-lookup"><span data-stu-id="66229-592">ISCII Punjabi</span></span>|<span data-ttu-id="66229-593">✓</span><span class="sxs-lookup"><span data-stu-id="66229-593">✓</span></span>||  
|<span data-ttu-id="66229-594">65000</span><span class="sxs-lookup"><span data-stu-id="66229-594">65000</span></span>|<span data-ttu-id="66229-595">UTF-7</span><span class="sxs-lookup"><span data-stu-id="66229-595">utf-7</span></span>|<span data-ttu-id="66229-596">Unicode (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="66229-596">Unicode (UTF-7)</span></span>|<span data-ttu-id="66229-597">✓</span><span class="sxs-lookup"><span data-stu-id="66229-597">✓</span></span>|<span data-ttu-id="66229-598">✓</span><span class="sxs-lookup"><span data-stu-id="66229-598">✓</span></span>|  
|<span data-ttu-id="66229-599">65001</span><span class="sxs-lookup"><span data-stu-id="66229-599">65001</span></span>|<span data-ttu-id="66229-600">UTF-8</span><span class="sxs-lookup"><span data-stu-id="66229-600">utf-8</span></span>|<span data-ttu-id="66229-601">Unicode (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="66229-601">Unicode (UTF-8)</span></span>|<span data-ttu-id="66229-602">✓</span><span class="sxs-lookup"><span data-stu-id="66229-602">✓</span></span>|<span data-ttu-id="66229-603">✓</span><span class="sxs-lookup"><span data-stu-id="66229-603">✓</span></span>|  
  
 <span data-ttu-id="66229-604">Im folgenden Beispiel wird die <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> und <xref:System.Text.Encoding.GetEncoding%28System.String%29> Methoden zum Abrufen der Griechisch (Windows) code Systemcodeseiten-Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-604">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="66229-605">Es vergleicht die <xref:System.Text.Encoding> die Methodenaufrufe an, dass sie gleich sind, und klicken Sie dann Zuordnungen zeigt den Unicode-Codepunkt und die entsprechende Codepage-Wert für jedes Zeichen im griechischen Alphabet zurückgegebener Objekte.</span><span class="sxs-lookup"><span data-stu-id="66229-605">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="66229-606">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-606">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-607">Die UTF-16 und UTF-32-Encoder verwenden, können die big-endian-Bytereihenfolge (höchstwertigen Byte zuerst) oder little-endian-Bytereihenfolge (am wenigsten signifikanten Byte zuerst).</span><span class="sxs-lookup"><span data-stu-id="66229-607">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="66229-608">Zum Beispiel folgt die Latin Capital Letter (U + 0041) als serialisiert wird (hexadezimal):</span><span class="sxs-lookup"><span data-stu-id="66229-608">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="66229-609">UTF-16 big-endian-Bytereihenfolge: 00 41</span><span class="sxs-lookup"><span data-stu-id="66229-609">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="66229-610">UTF-16 little-endian-Bytereihenfolge: 41 00</span><span class="sxs-lookup"><span data-stu-id="66229-610">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="66229-611">UTF-32 big-endian-Bytereihenfolge: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="66229-611">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="66229-612">UTF-32 little-endian-Bytereihenfolge: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="66229-612">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="66229-613">Es ist in der Regel effizienter, Unicode-Zeichen mit der systemeigenen Bytereihenfolge speichern.</span><span class="sxs-lookup"><span data-stu-id="66229-613">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="66229-614">Beispielsweise ist es besser, die die little-endian-Bytereihenfolge in little-endian-Plattformen wie Intel Computer verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-614">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="66229-615">Die <xref:System.Text.Encoding.GetPreamble%2A> Methode ruft ein Array von Bytes, die der Bytereihenfolge-Marke (BOM) enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-615">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="66229-616">Wenn dieses Bytearray in einen codierten Datenstrom vorangestellt ist, unterstützt sie der Decoder das Codierungsformat zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="66229-616">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="66229-617">Weitere Informationen zu Byte-Reihenfolge und die Bytereihenfolge-Marke, finden Sie im Unicode-Standard auf die [Unicode-Homepage](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="66229-617">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="66229-618">Beachten Sie, dass die Codierungsklassen Fehler an:</span><span class="sxs-lookup"><span data-stu-id="66229-618">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="66229-619">Ändern Sie im Hintergrund in ein "?" Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-619">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="66229-620">Verwenden Sie ein Zeichen "best fit".</span><span class="sxs-lookup"><span data-stu-id="66229-620">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="66229-621">Ändern Sie auf ein anwendungsspezifisches Verhalten durch die Verwendung von der <xref:System.Text.EncoderFallback> und <xref:System.Text.DecoderFallback> Klassen mit dem U + FFFD Unicode-Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-621">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="66229-622">Sie sollten eine Ausnahme bei jedem Data Stream-Fehler auslösen.</span><span class="sxs-lookup"><span data-stu-id="66229-622">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="66229-623">Eine app wird mit einem "Throwonerror"-Flag bei Bedarf oder verwendet den <xref:System.Text.EncoderExceptionFallback> und <xref:System.Text.DecoderExceptionFallback> Klassen.</span><span class="sxs-lookup"><span data-stu-id="66229-623">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="66229-624">Beste mit ähnlichen Zeichen Fallback wird häufig nicht empfohlen, da sie dazu führen, Daten verloren gehen oder zu Verwirrung dass können und langsamer als einfaches Zeichen der Ersetzungen ist.</span><span class="sxs-lookup"><span data-stu-id="66229-624">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="66229-625">Für ANSI-Codierungen ist die am besten geeignete Verhalten die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="66229-625">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-626">Im folgende Beispiel konvertiert eine Zeichenfolge aus einer Codierung in einen anderen.</span><span class="sxs-lookup"><span data-stu-id="66229-626">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-627">Das Byte []-Array ist der einzige Typ in diesem Beispiel, das die codierten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-627">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="66229-628">Die .NET Char und String-Typen werden selbst Unicode, sodass die <xref:System.Text.Encoding.GetChars%2A> Aufruf decodiert die Daten wieder in Unicode.</span><span class="sxs-lookup"><span data-stu-id="66229-628">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-629">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-629">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-630">Initialisiert eine neue Instanz der <see cref="T:System.Text.Encoding" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-630">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-631">Initialisiert eine neue Instanz der <see cref="T:System.Text.Encoding" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-631">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-632">Abgeleitete Klassen überschreiben dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="66229-632">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int -&gt; System.Text.Encoding" Usage="new System.Text.Encoding codePage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="66229-633">Der Codepagebezeichner der bevorzugten Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-633">The code page identifier of the preferred encoding.</span></span>  
  
<span data-ttu-id="66229-634">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-634">-or-</span></span> 
<span data-ttu-id="66229-635">0, um die Standardcodierung zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-635">0, to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="66229-636">Initialisiert eine neue Instanz der <see cref="T:System.Text.Encoding" />-Klasse, die der angegebenen Codepage entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-636">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-637">Abgeleitete Klassen überschreiben dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="66229-637">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="66229-638">Aufrufe dieses Konstruktors durch eine abgeleitete Klasse erstellen eine <xref:System.Text.Encoding> Objekt, das Fallback mit ähnlichen Zeichen für sowohl Codierungs- und Decodierungsvorgänge verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-638">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="66229-639">Sowohl die <xref:System.Text.Encoding.DecoderFallback%2A> und <xref:System.Text.Encoding.EncoderFallback%2A> Eigenschaften sind schreibgeschützt und kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="66229-639">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="66229-640">Die alternative Strategie festlegen, für eine Klasse von abgeleitet <xref:System.Text.Encoding>, rufen Sie die <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="66229-640">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-641"><paramref name="codePage" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-641"><paramref name="codePage" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="new System.Text.Encoding (codePage, encoderFallback, decoderFallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="66229-642">Der Bezeichner der Codierungs-Codepage.</span><span class="sxs-lookup"><span data-stu-id="66229-642">The encoding code page identifier.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="66229-643">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn ein Zeichen nicht mit der aktuellen Codierung codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-643">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="66229-644">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn eine Bytefolge nicht mit der aktuellen Codierung decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-644">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="66229-645">Initialisiert eine neue Instanz der <see cref="T:System.Text.Encoding" />-Klasse, die der angegebenen Codepage entspricht, mit den angegebenen Fallbackstrategien für Codierer und Decodierer.</span><span class="sxs-lookup"><span data-stu-id="66229-645">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-646">Dieser Konstruktor ist `protected`; abgeleitete Klassen überschreiben.</span><span class="sxs-lookup"><span data-stu-id="66229-646">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="66229-647">Rufen Sie diesen Konstruktor, von einer abgeleiteten Klasse zum Steuern des Fallbacks codieren und Decodieren von Strategien.</span><span class="sxs-lookup"><span data-stu-id="66229-647">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="66229-648">Die <xref:System.Text.Encoding> Klassenkonstruktoren erstellen nur-Lese encoding-Objekte, die nicht zulassen, Encoder oder Decoder fallback festgelegt werden, nachdem das Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-648">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="66229-649">Wenn entweder `encoderFallback` oder `decoderFallback` null ist, als die entsprechenden Fallbackstrategie Fallback mit ähnlichen Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-649">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-650"><paramref name="codePage" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-650"><paramref name="codePage" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ASCII : System.Text.Encoding" Usage="System.Text.Encoding.ASCII" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-651">Ruft eine Codierung für den ASCII-Zeichensatz (7-Bit) ab.</span><span class="sxs-lookup"><span data-stu-id="66229-651">Gets an encoding for the ASCII (7-bit) character set.</span></span></summary>
        <value><span data-ttu-id="66229-652">Eine Codierung für den ASCII-Zeichensatz (7 Bits).</span><span class="sxs-lookup"><span data-stu-id="66229-652">An  encoding for the ASCII (7-bit) character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-653">ASCII-Zeichen sind auf die ersten 128 Unicode-Zeichen von U + 0000 bis U + 007F beschränkt.</span><span class="sxs-lookup"><span data-stu-id="66229-653">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="66229-654">Wenn Sie auswählen, die ASCII-Codierung für Ihre app, beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="66229-654">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="66229-655">Die ASCII-Codierung eignet sich in der Regel für Protokolle, die ASCII erfordern.</span><span class="sxs-lookup"><span data-stu-id="66229-655">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="66229-656">Wenn Sie die 8-Bit-Codierung (die manchmal fälschlicherweise als "ASCII" bezeichnet wird) erforderlich ist, die UTF-8-Codierung empfiehlt sich gegenüber der ASCII-Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-656">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="66229-657">Für die Zeichen 0-7F sind die Ergebnisse sind identisch, aber mit UTF-8 vermeidet Daten verloren gehen, indem Sie ermöglicht die Darstellung alle Unicode-Zeichen dargestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-657">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="66229-658">Beachten Sie, dass die ASCII-Codierung ein 8-bit-Mehrdeutigkeit, die böswilligen Verwendung ermöglichen, aber die UTF-8-Codierung Mehrdeutigkeit in Bezug auf das 8. Bit entfernt.</span><span class="sxs-lookup"><span data-stu-id="66229-658">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="66229-659">Zulässig, die .NET Framework vor .NET Framework, Version 2.0 spoofing durch ignorieren des 8. Bits.</span><span class="sxs-lookup"><span data-stu-id="66229-659">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="66229-660">Ab .NET Framework 2.0 ist möglich, nicht-ASCII-Codepunkte während der Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-660">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="66229-661">Die <xref:System.Text.ASCIIEncoding> -Objekt, das von dieser Eigenschaft zurückgegeben wird möglicherweise nicht das richtige Verhalten für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-661">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="66229-662">Er verwendet einen Ersatzfallback, ersetzen Sie jede Zeichenfolge, die nicht codiert werden können und jedes Byte, die nicht decodiert durch ein Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-662">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="66229-663">Stattdessen rufen Sie die <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> Methode zum Instanziieren einer <xref:System.Text.ASCIIEncoding> -Objekt, dessen Fallback entweder ist, ein <xref:System.Text.EncoderFallbackException> oder ein <xref:System.Text.DecoderFallbackException>, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="66229-663">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="66229-664">Das folgende Beispiel zeigt die Auswirkungen der ASCII-Codierung für Zeichen, die sich außerhalb des ASCII-Bereichs befinden.</span><span class="sxs-lookup"><span data-stu-id="66229-664">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-665">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-665">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BigEndianUnicode : System.Text.Encoding" Usage="System.Text.Encoding.BigEndianUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-666">Ruft eine Codierung für das UTF-16-Format mit Big-Endian-Bytereihenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-666">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span></span></summary>
        <value><span data-ttu-id="66229-667">Ein Codierungsobjekt für das UTF-16-Format, das die Big-Endian-Bytereihenfolge verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-667">An encoding object for the UTF-16 format that uses the big endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-668">Die <xref:System.Text.UnicodeEncoding> -Objekt, das von dieser Eigenschaft zurückgegeben wird möglicherweise nicht das richtige Verhalten für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-668">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="66229-669">Er verwendet einen Ersatzfallback, ersetzen Sie jede Zeichenfolge, die nicht codiert werden können und jedes Byte, die nicht decodiert durch ein Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-669">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="66229-670">Stattdessen rufen Sie die <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor zum Instanziieren ein big-Endian <xref:System.Text.UnicodeEncoding> -Objekt, dessen Fallback entweder ist, ein <xref:System.Text.EncoderFallbackException> oder <xref:System.Text.DecoderFallbackException>, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="66229-670">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="66229-671">Das zurückgegebene <xref:System.Text.UnicodeEncoding> Objekt verfügt über <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, und <xref:System.Text.Encoding.WebName%2A> Eigenschaften, die den Namen "UnicodeFFFE" ergeben.</span><span class="sxs-lookup"><span data-stu-id="66229-671">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="66229-672">Obwohl die UTF-16 big-endian-Bytereihenfolge-Marke hexadezimale FEFF ist, wurde der Namen "UnicodeFFFE" gewählt, weil es sich bei der Bytereihenfolge-Marke als hexadezimale FFFE in little-endian-Windows-Computer angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-672">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-673">Das folgende Beispiel liest eine Textdatei mit einer UTF-16-Codierung mit der big-endian-Bytereihenfolge.</span><span class="sxs-lookup"><span data-stu-id="66229-673">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="66229-674">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-674">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-675">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-675">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BodyName : string" Usage="System.Text.Encoding.BodyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-676">Beim Überschreiben in einer abgeleiteten Klasse wird ein Name für die aktuelle Codierung abgerufen, die mit den Body-Tags des E-Mail-Agenten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-676">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span></span></summary>
        <value><span data-ttu-id="66229-677">Ein Name der aktuellen <see cref="T:System.Text.Encoding" />-Klasse, die mit den Body-Tags des E-Mail-Agenten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-677">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span></span>  
  
<span data-ttu-id="66229-678">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-678">-or-</span></span> 
<span data-ttu-id="66229-679">Eine leere Zeichenfolge (""), wenn das aktuelle <see cref="T:System.Text.Encoding" /> nicht verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-679">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-680">Wenn Sie eine Codierung für einen Textnamen benötigen, Sie sollten Aufrufen <xref:System.Text.Encoding.GetEncoding%2A> mit der <xref:System.Text.Encoding.BodyName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-680">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="66229-681">Häufig die Methode ruft eine andere Codierung aus der Test-Codierung zur Verfügung gestellt, in dem Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="66229-681">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="66229-682">Nur e-Mail-Anwendungen müssen in der Regel abrufen, diese Codierung; Die meisten anderen Anwendungen, die Beschreibung einer Codierung verwenden, sollten die <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-682">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="66229-683">In einigen Fällen den Wert des der <xref:System.Text.Encoding.BodyName%2A> Eigenschaft entspricht der internationalen Norm, die diese Codierung definiert.</span><span class="sxs-lookup"><span data-stu-id="66229-683">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="66229-684">Dies bedeutet nicht, dass die Implementierung vollständig mit diesem Standard entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-684">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-685">Im folgenden Beispiel werden die anderen Namen für jede Codierung abgerufen, und zeigt die Codierungen mit ein oder mehrere Namen, die von unterscheiden <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-685">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-686">Es zeigt <xref:System.Text.Encoding.EncodingName%2A> jedoch nicht dafür verglichen.</span><span class="sxs-lookup"><span data-stu-id="66229-686">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="encoding.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-687">Erstellt beim Überschreiben in einer abgeleiteten Klasse eine flache Kopie des aktuellen <see cref="T:System.Text.Encoding" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="66229-687">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="66229-688">Eine Kopie des aktuellen <see cref="T:System.Text.Encoding" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="66229-688">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-689">Der Klon überschreibbar. selbst wenn die ursprüngliche <xref:System.Text.Encoding> Objekt ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="66229-689">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="66229-690">Aus diesem Grund können die Eigenschaften des Klons geändert werden.</span><span class="sxs-lookup"><span data-stu-id="66229-690">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="66229-691">Eine flache Kopie eines Objekts ist eine Kopie des Objekts nur.</span><span class="sxs-lookup"><span data-stu-id="66229-691">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="66229-692">Wenn das Objekt Verweise auf andere Objekte enthält, erstellt der flache Kopie keine Kopien der Objekte verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="66229-692">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="66229-693">Es verweist stattdessen auf die ursprünglichen Objekte.</span><span class="sxs-lookup"><span data-stu-id="66229-693">It refers to the original objects instead.</span></span> <span data-ttu-id="66229-694">Im Gegensatz dazu erstellt eine tiefe Kopie eines Objekts auf, eine Kopie des Objekts und eine Kopie aller Elemente auf die dieses Objekt direkt oder indirekt verweist.</span><span class="sxs-lookup"><span data-stu-id="66229-694">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int" Usage="System.Text.Encoding.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-695">Ruft den Codepagebezeichner der aktuellen <see cref="T:System.Text.Encoding" />-Klasse beim Überschreiben in einer abgeleiteten Klasse ab.</span><span class="sxs-lookup"><span data-stu-id="66229-695">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></summary>
        <value><span data-ttu-id="66229-696">Der Codepagebezeichner der aktuellen <see cref="T:System.Text.Encoding" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-696">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-697">Im folgenden Beispiel werden die anderen Namen für jede Codierung abgerufen, und zeigt die Codierungen mit ein oder mehrere Namen, die von unterscheiden <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-697">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-698">Es zeigt <xref:System.Text.Encoding.EncodingName%2A> jedoch nicht dafür verglichen.</span><span class="sxs-lookup"><span data-stu-id="66229-698">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-699">Konvertiert ein Bytearray aus einer Codierung in eine andere.</span><span class="sxs-lookup"><span data-stu-id="66229-699">Converts a byte array from one encoding to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="66229-700">Das Codierungsformat von <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="66229-700">The encoding format of <paramref name="bytes" />.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="66229-701">Das Zielcodierungsformat.</span><span class="sxs-lookup"><span data-stu-id="66229-701">The target encoding format.</span></span></param>
        <param name="bytes"><span data-ttu-id="66229-702">Die zu konvertierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-702">The bytes to convert.</span></span></param>
        <summary><span data-ttu-id="66229-703">Konvertiert ein vollständiges Bytearray aus einer Codierung in eine andere.</span><span class="sxs-lookup"><span data-stu-id="66229-703">Converts an entire byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="66229-704">Ein Array vom Typ <see cref="T:System.Byte" />, das die Ergebnisse der Konvertierung in <paramref name="bytes" /> von <paramref name="srcEncoding" /> in <paramref name="dstEncoding" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-704">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-705">Im folgende Beispiel konvertiert eine Unicode-codierte Zeichenfolge in eine ASCII-codierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="66229-705">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="66229-706">Da das ASCII-Codierung von Objekt zurückgegebene der <xref:System.Text.Encoding.ASCII%2A> Eigenschaft verwendet einen Ersatzfallback und das Pi-Zeichen ist nicht Teil der ASCII-Zeichensatz, das Pi-Zeichen wird durch ein Fragezeichen ersetzt, wie die Ausgabe des Beispiels zeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-706">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-707"><paramref name="srcEncoding" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-707"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-708">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-708">-or-</span></span> 
 <span data-ttu-id="66229-709"><paramref name="dstEncoding" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-709"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-710">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-710">-or-</span></span> 
 <span data-ttu-id="66229-711"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-711"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-712">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-712">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-713">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-713">-and-</span></span> 
 <span data-ttu-id="66229-714">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="66229-714">**srcEncoding.**</span></span> <span data-ttu-id="66229-715">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-715"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-716">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-716">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-717">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-717">-and-</span></span> 
 <span data-ttu-id="66229-718">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="66229-718">**dstEncoding.**</span></span> <span data-ttu-id="66229-719">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-719"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] * int * int -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="66229-720">Die Codierung des Quellarrays, <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="66229-720">The encoding of the source array, <paramref name="bytes" />.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="66229-721">Die Codierung des Ausgabearrays.</span><span class="sxs-lookup"><span data-stu-id="66229-721">The encoding of the output array.</span></span></param>
        <param name="bytes"><span data-ttu-id="66229-722">Das zu konvertierende Bytearray.</span><span class="sxs-lookup"><span data-stu-id="66229-722">The array of bytes to convert.</span></span></param>
        <param name="index"><span data-ttu-id="66229-723">Der Index des ersten zu konvertierenden Elements von <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="66229-723">The index of the first element of <paramref name="bytes" /> to convert.</span></span></param>
        <param name="count"><span data-ttu-id="66229-724">Die Anzahl der zu konvertierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-724">The number of bytes to convert.</span></span></param>
        <summary><span data-ttu-id="66229-725">Konvertiert einen Bereich von Bytes in einem Bytearray aus einer Codierung in eine andere.</span><span class="sxs-lookup"><span data-stu-id="66229-725">Converts a range of bytes in a byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="66229-726">Ein Array vom Typ <see cref="T:System.Byte" />, das das Ergebnis der Konvertierung eines Bereichs von Bytes in <paramref name="bytes" /> von <paramref name="srcEncoding" /> in <paramref name="dstEncoding" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-726">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-727"><paramref name="srcEncoding" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-727"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-728">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-728">-or-</span></span> 
 <span data-ttu-id="66229-729"><paramref name="dstEncoding" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-729"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-730">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-730">-or-</span></span> 
 <span data-ttu-id="66229-731"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-731"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-732"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich im Bytearray an.</span><span class="sxs-lookup"><span data-stu-id="66229-732"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-733">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-733">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-734">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-734">-and-</span></span> 
 <span data-ttu-id="66229-735">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="66229-735">**srcEncoding.**</span></span> <span data-ttu-id="66229-736">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-736"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-737">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-737">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-738">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-738">-and-</span></span> 
 <span data-ttu-id="66229-739">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="66229-739">**dstEncoding.**</span></span> <span data-ttu-id="66229-740">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-740"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DecoderFallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Encoding.DecoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-741">Ruft das <see cref="T:System.Text.DecoderFallback" />-Objekt für das aktuelle <see cref="T:System.Text.Encoding" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="66229-741">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="66229-742">Das Decoderfallbackobjekt für das aktuelle <see cref="T:System.Text.Encoding" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-742">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-743">Die <xref:System.Text.DecoderFallback> Objekt darstellt, einen Fehlerhandler, der aufgerufen wird, wenn eine codierte Bytefolge in ein Zeichen nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-743">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="66229-744">Eine der folgenden Handlertypen wird unterstützt:</span><span class="sxs-lookup"><span data-stu-id="66229-744">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="66229-745">Einen Fallback mit ähnlichen fallback-Handler, der Bytes, die nicht decodiert werden können, durch ein geeigneter Ersatz-Zeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="66229-745">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="66229-746">Einen Replacement fallback-Handler, der Bytes, die nicht decodiert werden können mit einem beliebigen Ersatzzeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="66229-746">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="66229-747">.NET umfasst eine Replacement fallback-Handler <xref:System.Text.DecoderFallback>, die in der Standardeinstellung ersetzt Bytes, die nicht decodiert werden können, mit einem Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-747">.NET includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="66229-748">Eine Ausnahme fallback-Handler, der eine Ausnahme auslöst, wenn die Bytes nicht decodiert werden können.</span><span class="sxs-lookup"><span data-stu-id="66229-748">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="66229-749">.NET enthält einen fallback Ausnahmehandler <xref:System.Text.DecoderExceptionFallback>, welche löst eine <xref:System.Text.DecoderFallbackException> Wenn Bytes nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-749">.NET includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-750">Der Wert in einem set-Vorgang ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-750">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66229-751">Ein Wert kann in einem set-Vorgang nicht zugewiesen werden, da das aktuelle <see cref="T:System.Text.Encoding" />-Objekt schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="66229-751">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-752">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-752">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Text.Encoding" Usage="System.Text.Encoding.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-753">Ruft die Standardcodierung für diese .NET-Implementierung ab.</span><span class="sxs-lookup"><span data-stu-id="66229-753">Gets the default encoding for this .NET implementation.</span></span></summary>
        <value><span data-ttu-id="66229-754">Die standardcodierung für diese .NET-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="66229-754">The default encoding for this .NET implementation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="66229-755">Unterschiedliche Computer können unterschiedliche Codierungen verwenden, als Standard ein, und die standardcodierung auf einem einzelnen Computer ändern kann.</span><span class="sxs-lookup"><span data-stu-id="66229-755">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="66229-756">Bei Verwendung der <xref:System.Text.Encoding.Default%2A> Codierung zum Codieren und Decodieren von Daten zwischen Computern übertragen oder zu unterschiedlichen Zeiten auf dem gleichen Computer abgerufen, es kann übersetzt werden diese Daten nicht ordnungsgemäß.</span><span class="sxs-lookup"><span data-stu-id="66229-756">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="66229-757">Darüber hinaus zurückgegebenes die Codierung der <xref:System.Text.Encoding.Default%2A> Eigenschaft Fallback mit ähnlichen Zeichen verwendet, um nicht unterstützte Zeichen Zeichen unterstützt, die von der Codepage zuzuordnen.</span><span class="sxs-lookup"><span data-stu-id="66229-757">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="66229-758">Aus diesen Gründen wird die Verwendung der standardcodierung nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-758">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="66229-759">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, verwenden Sie eine Unicode-Codierung, z. B. <xref:System.Text.UTF8Encoding> oder <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="66229-759">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="66229-760">Sie können ein übergeordneten Protokolls auch verwenden, um sicherzustellen, dass das gleiche Format verwendet wird, zum Codieren und decodieren.</span><span class="sxs-lookup"><span data-stu-id="66229-760">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="66229-761">Die Standardeigenschaft in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="66229-761">The Default property in the .NET Framework</span></span>

<span data-ttu-id="66229-762">In .NET Framework auf dem Windows-Desktop den <xref:System.Text.Encoding.Default%2A> Eigenschaft immer ruft active-Codepage des Systems ab und erstellt eine <xref:System.Text.Encoding> Objekt, das es entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-762">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="66229-763">Die aktiven Codepage möglicherweise eine ANSI-Codepage enthält, die das ASCII-Zeichen zusammen mit zusätzlichen Zeichen, die unterschiedlich sind von der Codepage festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-763">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="66229-764">Da alle <xref:System.Text.Encoding.Default%2A> Codierungen, die basierend auf ANSI-Codepages Daten verloren gehen, sollten Sie verwenden die <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> stattdessen codieren.</span><span class="sxs-lookup"><span data-stu-id="66229-764">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="66229-765">UTF-8 ist häufig in U + 00 U + 7F. Bereich identisch, aber Sie können Zeichen außerhalb des ASCII-Bereichs ohne Verlust codieren.</span><span class="sxs-lookup"><span data-stu-id="66229-765">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="66229-766">Die Standardeigenschaft in .NET Core</span><span class="sxs-lookup"><span data-stu-id="66229-766">The Default property on .NET Core</span></span>

<span data-ttu-id="66229-767">.NET Core die <xref:System.Text.Encoding.Default%2A> -Eigenschaft gibt immer die <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="66229-767">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="66229-768">UTF-8 werden alle Betriebssysteme (Windows, Linux und Max OS X) auf die .NET Core-Anwendungen ausführen.</span><span class="sxs-lookup"><span data-stu-id="66229-768">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderFallback : System.Text.EncoderFallback with get, set" Usage="System.Text.Encoding.EncoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-769">Ruft das <see cref="T:System.Text.EncoderFallback" />-Objekt für das aktuelle <see cref="T:System.Text.Encoding" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="66229-769">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="66229-770">Das Encoderfallbackobjekt für das aktuelle <see cref="T:System.Text.Encoding" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-770">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-771">Die <xref:System.Text.EncoderFallback> Objekt darstellt, einen Fehlerhandler, der aufgerufen wird, wenn ein Zeichen in eine codierte Bytefolge konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-771">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="66229-772">Eine der folgenden Handlertypen wird unterstützt:</span><span class="sxs-lookup"><span data-stu-id="66229-772">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="66229-773">Einen Fallback mit ähnlichen fallback-Handler, der Zeichen, die nicht codiert werden können, durch ein geeigneter Ersatz-Zeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="66229-773">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="66229-774">Einen Replacement fallback-Handler, der Zeichen, die nicht codiert werden können, durch die einem beliebigen Ersatzzeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="66229-774">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="66229-775">.NET umfasst eine Replacement fallback-Handler <xref:System.Text.EncoderFallback>, die in der Standardeinstellung ersetzt Zeichen, die nicht codiert werden können, mit einem Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-775">.NET includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="66229-776">Eine Ausnahme fallback-Handler, der eine Ausnahme auslöst, wenn Zeichen nicht codiert werden können.</span><span class="sxs-lookup"><span data-stu-id="66229-776">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="66229-777">.NET enthält einen fallback Ausnahmehandler <xref:System.Text.EncoderExceptionFallback>, welche löst eine <xref:System.Text.EncoderFallbackException> Wenn Zeichen nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-777">.NET includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-778">Der Wert in einem set-Vorgang ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-778">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66229-779">Ein Wert kann in einem set-Vorgang nicht zugewiesen werden, da das aktuelle <see cref="T:System.Text.Encoding" />-Objekt schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="66229-779">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-780">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-780">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodingName : string" Usage="System.Text.Encoding.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-781">Beim Überschreiben in einer abgeleiteten Klasse wird die Klartextbeschreibung der aktuellen Codierung abgerufen.</span><span class="sxs-lookup"><span data-stu-id="66229-781">When overridden in a derived class, gets the human-readable description of the current encoding.</span></span></summary>
        <value><span data-ttu-id="66229-782">Die Klartextbeschreibung der aktuellen <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="66229-782">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-783">Die <xref:System.Text.Encoding.EncodingName%2A> Eigenschaft ist für die Anzeige vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="66229-783">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="66229-784">Um einen Namen zu finden, die übergeben werden kann die <xref:System.Text.Encoding.GetEncoding%2A> -Methode, mit der <xref:System.Text.Encoding.WebName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-784">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-785">Im folgenden Beispiel werden die anderen Namen für jede Codierung abgerufen, und zeigt die Codierungen mit ein oder mehrere Namen, die von unterscheiden <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-785">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-786">Es zeigt <xref:System.Text.Encoding.EncodingName%2A> jedoch nicht dafür verglichen.</span><span class="sxs-lookup"><span data-stu-id="66229-786">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66229-787">Das <see cref="T:System.Object" />, das mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-787">The <see cref="T:System.Object" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="66229-788">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle Instanz gleich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-788">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="66229-789"><see langword="true" />, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.Text.Encoding" /> und gleich der aktuellen Instanz ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-789"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-790">Zwei Instanzen von <xref:System.Text.Encoding> werden als gleich betrachtet, wenn sie dieselbe Codepage entsprechen und deren `EncoderFallback` und `DecoderFallback` Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-790">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="66229-791">Insbesondere abgeleiteten Codepages, die alle eine Codepage 0 und die Fallbacks sind normalerweise `null` (`Nothing` in Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="66229-791">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="66229-792">Daher werden sie alle anderen gleich betrachtet.</span><span class="sxs-lookup"><span data-stu-id="66229-792">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="66229-793">Ein Vorteil ist, die bei der <xref:System.Text.Encoding.Equals%2A> , alle Codierungen Vergleichen gleich abgeleitet und fallen in der gleichen Tabelle hashslot zum Auffüllen einer Hashtabelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-793">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-794">Im folgenden Beispiel ruft zwei Instanzen der gleichen Codierung (eine von der Codepage) und einen anderen anhand des Namens ab und überprüft die Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="66229-794">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-795">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl an Bytes, die beim Codieren der Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-795">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] -&gt; int&#xA;override this.GetByteCount : char[] -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-796">Das Zeichenarray mit den zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-796">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-797">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl an Bytes, die beim Codieren aller Zeichen im angegebenen Zeichenarray erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-797">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span></span></summary>
        <returns><span data-ttu-id="66229-798">Die Anzahl der Bytes, die durch Codieren aller Zeichen im angegebenen Zeichenarray erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-798">The number of bytes produced by encoding all the characters in the specified character array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-799">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> aufrufen, um die resultierenden Bytes zu speichern, die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-799">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-800">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-800">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-801">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-801">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-802">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-802">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-803">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-803">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-804">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-804">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-805">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-805">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-806">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-806">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-807">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-807">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="66229-808">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, befolgen Sie die zeichenfolgenversionen von der <xref:System.Text.Encoding.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-808">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="66229-809">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-809">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-810">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-810">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-811">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten Sie den Ausgabepuffer wiederverwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-811">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="66229-812">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-812">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-813">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-813">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-814">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-814">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-815">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-815">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-816">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-816">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-817"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-817"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-818">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-818">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-819">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-819">-and-</span></span> 
 <span data-ttu-id="66229-820">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-820"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int&#xA;override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : string -&gt; int&#xA;override this.GetByteCount : string -&gt; int" Usage="encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="66229-821">Die Zeichenfolge mit den zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-821">The string containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-822">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Bytes, die beim Codieren der Zeichen in der angegebenen Zeichenfolge erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-822">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="66229-823">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-823">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-824">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> aufrufen, um die resultierenden Bytes zu speichern, die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-824">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-825">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-825">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-826">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-826">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-827">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-827">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-828">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-828">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-829">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-829">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-830">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-830">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-831">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-831">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-832">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-832">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="66229-833">Wenn Ihre app Zeichenfolgeneingaben, die Version der Zeichenfolge behandelt <xref:System.Text.Encoding.GetBytes%2A> wird empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-833">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="66229-834">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-834">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-835">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-835">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-836">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-836">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-837">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-837">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-838">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-838">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-839">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-839">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-840">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-840">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-841">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um eine Zeichenfolge oder einen Bereich in der Zeichenfolge zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-841">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-842"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-842"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-843">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-843">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-844">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-844">-and-</span></span> 
 <span data-ttu-id="66229-845">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-845"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-846">Ein Zeiger auf das erste zu codierende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-846">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-847">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-847">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-848">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Bytes, die beim Codieren der Zeichen ab dem Zeichenzeiger erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-848">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="66229-849">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-849">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-850">Zum Berechnen der genauen Arraygröße <xref:System.Text.Encoding.GetBytes%2A> erfordert die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-850">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-851">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-851">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-852">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-852">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-853">Die <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-853">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="66229-854">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-854">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-855">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-855">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-856">Es folgen einige Überlegungen zur Verwendung dieser Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-856">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="66229-857">Ihre app muss möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-857">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-858">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-858">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="66229-859">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge die <xref:System.Text.Encoding.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-859">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="66229-860">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%2A> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-860">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-861">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-861">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-862">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-862">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-863">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-863">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-864">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-864">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-865">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-865">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-866">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-866">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-867"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-867"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-868"><paramref name="count" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-868"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-869">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-869">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-870">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-870">-and-</span></span> 
 <span data-ttu-id="66229-871">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-871"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="66229-872">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="66229-872">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="66229-873">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-873">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] * int * int -&gt; int" Usage="encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-874">Das Zeichenarray, das die zu codierenden Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-874">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="66229-875">Der Index des ersten zu codierenden Zeichens.</span><span class="sxs-lookup"><span data-stu-id="66229-875">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-876">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-876">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-877">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl an Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-877">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="66229-878">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-878">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-879">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> aufrufen, um die resultierenden Bytes zu speichern, die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-879">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-880">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-880">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-881">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-881">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-882">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-882">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-883">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-883">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-884">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-884">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-885">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-885">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-886">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-886">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-887">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-887">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="66229-888">Wenn Ihre app Zeichenfolgeneingaben, die Version der Zeichenfolge behandelt <xref:System.Text.Encoding.GetBytes%2A> wird empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-888">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="66229-889">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-889">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-890">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-890">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-891">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-891">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-892">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-892">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-893">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-893">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-894">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-894">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-895">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-895">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-896">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um drei Zeichen aus einem Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-896">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-897"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-897"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-898"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-898"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-899">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-899">-or-</span></span> 
 <span data-ttu-id="66229-900"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-900"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-901">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-901">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-902">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-902">-and-</span></span> 
 <span data-ttu-id="66229-903">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-903"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : string * int * int -&gt; int" Usage="encoding.GetByteCount (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-904">Beim Überschreiben in einer abgeleiteten Klasse werden die Zeichen in eine Bytefolge codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-904">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] -&gt; byte[]&#xA;override this.GetBytes : char[] -&gt; byte[]" Usage="encoding.GetBytes chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-905">Das Zeichenarray mit den zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-905">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-906">Beim Überschreiben in einer abgeleiteten Klasse werden alle Zeichen im angegebenen Zeichenarray in eine Bytefolge codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-906">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="66229-907">Ein Bytearray mit den Ergebnissen der Codierung der angegebenen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-907">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-908">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-908">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-909">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-909">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-910">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-910">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-911">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-911">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-912">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-912">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-913">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-913">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-914">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-914">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-915">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-915">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-916">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-916">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-917"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-917"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-918">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, sollten Sie die Version der Zeichenfolge Aufrufen der <xref:System.Text.Encoding.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-918">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="66229-919">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-919">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-920">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-920">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-921">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-921">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-922">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-922">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-923">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-923">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-924">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-924">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-925">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-925">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-926">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-926">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-927"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-927"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-928">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-928">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-929">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-929">-and-</span></span> 
 <span data-ttu-id="66229-930">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-930"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string -&gt; byte[]&#xA;override this.GetBytes : string -&gt; byte[]" Usage="encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="66229-931">Die Zeichenfolge mit den zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-931">The string containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-932">Beim Überschreiben in einer abgeleiteten Klasse werden alle Zeichen in der angegebenen Zeichenfolge in eine Bytefolge codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-932">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="66229-933">Ein Bytearray mit den Ergebnissen der Codierung der angegebenen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-933">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-934">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-934">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-935">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-935">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-936">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-936">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-937">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-937">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-938">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-938">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-939">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-939">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-940">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-940">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-941">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-941">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-942">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-942">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-943"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-943"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-944">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-944">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="66229-945">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-945">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-946">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-946">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-947">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-947">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-948">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-948">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-949">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-949">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-950">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-950">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-951">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-951">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-952">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um eine Zeichenfolge oder einen Bereich in der Zeichenfolge zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-952">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-953"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-953"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-954">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-954">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-955">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-955">-and-</span></span> 
 <span data-ttu-id="66229-956">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-956"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int&#xA;override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="encoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int -&gt; byte[]&#xA;override this.GetBytes : char[] * int * int -&gt; byte[]" Usage="encoding.GetBytes (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-957">Das Zeichenarray, das die zu codierenden Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-957">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="66229-958">Der Index des ersten zu codierenden Zeichens.</span><span class="sxs-lookup"><span data-stu-id="66229-958">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-959">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-959">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-960">Beim Überschreiben in einer abgeleiteten Klasse werden die Zeichen im angegebenen Zeichenarray in eine Bytefolge codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-960">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="66229-961">Ein Bytearray mit den Ergebnissen der Codierung der angegebenen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-961">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-962">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-962">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-963">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-963">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-964">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-964">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-965">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-965">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-966">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-966">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-967">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-967">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-968">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-968">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-969">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-969">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-970">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-970">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-971"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-971"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-972">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-972">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="66229-973">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-973">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-974">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-974">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-975">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-975">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-976">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-976">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-977">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-977">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-978">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-978">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-979">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-979">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-980">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um drei Zeichen aus einem Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-980">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-981"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-981"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-982"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-982"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-983">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-983">-or-</span></span> 
 <span data-ttu-id="66229-984"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-984"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-985">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-985">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-986">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-986">-and-</span></span> 
 <span data-ttu-id="66229-987">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-987"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetBytes : string * int * int -&gt; byte[]" Usage="encoding.GetBytes (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-988">Ein Zeiger auf das erste zu codierende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-988">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="66229-989">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-989">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="66229-990">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-990">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="66229-991">Die maximale Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-991">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="66229-992">Beim Überschreiben in einer abgeleiteten Klasse werden die Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge codiert, die ab Beginn des angegebenen Bytezeigers gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="66229-992">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="66229-993">Die tatsächliche Anzahl an Bytes, die an der durch den <paramref name="bytes" />-Parameter angegebenen Position geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="66229-993">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-994">Zum Berechnen der genauen Arraygröße <xref:System.Text.Encoding.GetBytes%2A> erfordert die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-994">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-995">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-995">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-996">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-996">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-997">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass sie in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> Objekt von der bereitgestellten <xref:System.Text.Encoding.GetDecoder%2A> oder <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-997">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-998">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-998">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-999">Die <xref:System.Text.Encoding.GetBytes%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-999">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1000">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1000">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-1001">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1001">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1002">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1002">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-1003">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1003">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-1004">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-1004">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-1005">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1005">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-1006"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-1006"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-1007">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1007">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="66229-1008">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1008">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-1009">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1009">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1010">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1010">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1011">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1011">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1012">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1012">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-1013">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1013">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1014">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1014">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1015"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1015"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-1016">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1016">-or-</span></span> 
 <span data-ttu-id="66229-1017"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1017"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1018"><paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1018"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1019"><paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1019"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-1020">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1020">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1021">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1021">-and-</span></span> 
 <span data-ttu-id="66229-1022">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1022"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="66229-1023">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="66229-1023">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="66229-1024">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1024">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="66229-1025">Das Zeichenarray, das die zu codierenden Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1025">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="66229-1026">Der Index des ersten zu codierenden Zeichens.</span><span class="sxs-lookup"><span data-stu-id="66229-1026">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="66229-1027">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1027">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="66229-1028">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1028">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="66229-1029">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1029">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="66229-1030">Beim Überschreiben in einer abgeleiteten Klasse werden die Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1030">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66229-1031">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1031">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1032">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1032">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-1033">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1033">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-1034">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1034">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1035">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1035">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1036">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1036">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-1037">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1037">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1038">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1038">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-1039">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1039">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1040">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1040">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-1041">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1041">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-1042">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-1042">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-1043">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1043">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-1044"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-1044"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-1045">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1045">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="66229-1046">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1046">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-1047">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1047">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1048">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1048">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1049">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1049">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1050">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1050">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-1051">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1051">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1052">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1052">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1053">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um drei Zeichen aus einem Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1053">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1054"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1054"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-1055">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1055">-or-</span></span> 
 <span data-ttu-id="66229-1056"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1056"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1057"><paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="66229-1057"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1058">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1058">-or-</span></span> 
 <span data-ttu-id="66229-1059"><paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1059"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="66229-1060">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1060">-or-</span></span> 
 <span data-ttu-id="66229-1061"><paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1061"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1062"><paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="66229-1062"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-1063">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1063">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1064">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1064">-and-</span></span> 
 <span data-ttu-id="66229-1065">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1065"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string * int * int * byte[] * int -&gt; int&#xA;override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="66229-1066">Die Zeichenfolge mit den zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1066">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="66229-1067">Der Index des ersten zu codierenden Zeichens.</span><span class="sxs-lookup"><span data-stu-id="66229-1067">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="66229-1068">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1068">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="66229-1069">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1069">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="66229-1070">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1070">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="66229-1071">Beim Überschreiben in einer abgeleiteten Klasse werden die Zeichen aus der angegebenen Zeichenfolge in das angegebene Bytearray codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1071">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66229-1072">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1072">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1073">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1073">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-1074">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1074">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-1075">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1075">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1076">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1076">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1077">Die <xref:System.Text.Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1077">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="66229-1078">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> -Methode, die mehrere Konvertierungen für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1078">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1079">Mehrere Versionen von <xref:System.Text.Encoding.GetByteCount%2A> und <xref:System.Text.Encoding.GetBytes%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1079">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="66229-1080">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1080">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1081">Ihre app müssen möglicherweise viele Eingabe Zeichen in eine Codepage codiert werden und die Zeichen, die durch mehrere Aufrufe zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1081">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="66229-1082">In diesem Fall wahrscheinlich müssen Zustand zwischen aufrufen, die Berücksichtigung des Zustands, der vom beibehalten wird die <xref:System.Text.Encoder> Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1082">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="66229-1083">(Z. B. möglicherweise eine Folge von Zeichen, die Surrogate-Paare enthält ein hohes Ersatzzeichen enden.</span><span class="sxs-lookup"><span data-stu-id="66229-1083">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="66229-1084">Die <xref:System.Text.Encoder> speichert, hohe Ersatzzeichen, damit er mit einem niedrigen Ersatzzeichen am Anfang eines folgenden Aufrufs kombiniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1084">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="66229-1085"><xref:System.Text.Encoding> wird nicht in der Lage, den Status zu verwalten, damit das Zeichen an gesendet werden, wird die <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="66229-1085"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="66229-1086">Wenn Ihre app Zeichenfolgen als Eingabe behandelt wird, verwenden Sie die Version der Zeichenfolge <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1086">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="66229-1087">Die Unicode-Puffer Version der <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere durch mehrere Aufrufe, die mit der <xref:System.Text.Encoder> Objekt oder Einfügen in vorhandene Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1087">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="66229-1088">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1088">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1089">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1089">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1090">In diesem Fall die <xref:System.Text.Encoding.GetBytes%2A> Version, die Byte-Arrays unterstützt, ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1090">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1091">Erwägen Sie die Verwendung der <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1091">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="66229-1092">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1092">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1093">Für die fortlaufende Codierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1093">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1094">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um eine Zeichenfolge oder einen Bereich in der Zeichenfolge zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1094">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1095"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1095"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-1096">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1096">-or-</span></span> 
 <span data-ttu-id="66229-1097"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1097"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1098"><paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="66229-1098"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1099">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1099">-or-</span></span> 
 <span data-ttu-id="66229-1100"><paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1100"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="66229-1101">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1101">-or-</span></span> 
 <span data-ttu-id="66229-1102"><paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1102"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1103"><paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="66229-1103"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-1104">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1104">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1105">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1105">-and-</span></span> 
 <span data-ttu-id="66229-1106">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1106"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-1107">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen, die beim Decodieren einer Bytefolge erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1107">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] -&gt; int&#xA;override this.GetCharCount : byte[] -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1108">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1108">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1109">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen, die beim Decodieren aller Bytes in dem angegebenen Bytearray erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1109">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66229-1110">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1110">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1111">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> um die sich ergebenden Zeichen speichern zu können, verwenden Sie die <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1111">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="66229-1112">Um die maximale Größe zu berechnen, verwenden Sie die <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1112">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="66229-1113">Die <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1113">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1114">Die <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1114">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1115">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1115">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1116">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1116">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1117">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1117">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1118">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1118">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1119">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1119">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="66229-1120">Wenn Ihre app Zeichenfolgenausgaben behandelt wird, verwenden Sie die <xref:System.Text.Encoding.GetString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1120">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="66229-1121">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1121">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1122">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1122">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1123">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1123">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1124">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1124">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1125">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1125">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1126">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1126">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1127">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1127">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1128">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1128">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1129">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1129">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1130"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1130"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1131">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1131">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1132">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1132">-and-</span></span> 
 <span data-ttu-id="66229-1133">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1133"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1134">Ein Zeiger auf das erste zu decodierende Byte.</span><span class="sxs-lookup"><span data-stu-id="66229-1134">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-1135">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1135">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1136">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1136">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="66229-1137">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1137">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1138">Zum Berechnen der genauen Arraygröße <xref:System.Text.Encoding.GetChars%2A> ist erforderlich, die sich ergebenden Zeichen speichern zu können, sollten Sie verwenden die <xref:System.Text.Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1138">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="66229-1139">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1139">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="66229-1140">Die <xref:System.Text.Encoding.GetCharCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1140">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1141">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1141">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1142">Die <xref:System.Text.Encoding.GetChars%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1142">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1143">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1143">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1144">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1144">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1145">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1145">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1146">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1146">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="66229-1147">Wenn Ihre app Zeichenfolgenausgaben behandelt, es wird empfohlen, verwenden Sie die <xref:System.Text.Encoding.GetString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1147">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="66229-1148">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1148">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1149">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1149">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1150">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1150">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1151">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1151">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1152">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1152">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1153">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1153">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1154">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1154">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1155">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1155">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1156"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1156"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1157"><paramref name="count" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-1157"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1158">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1158">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1159">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1159">-and-</span></span> 
 <span data-ttu-id="66229-1160">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1160"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="66229-1161">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="66229-1161">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="66229-1162">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1162">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1163">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1163">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="66229-1164">Der Index des ersten zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1164">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-1165">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1165">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1166">Berechnet beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1166">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66229-1167">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1167">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1168">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetChars%2A> um die sich ergebenden Zeichen speichern zu können, verwenden Sie die <xref:System.Text.Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1168">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="66229-1169">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1169">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="66229-1170">Die <xref:System.Text.Encoding.GetCharCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1170">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1171">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1171">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1172">Die <xref:System.Text.Encoding.GetChars%2A> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1172">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1173">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1173">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1174">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1174">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1175">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1175">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1176">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1176">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="66229-1177">Wenn Ihre app Zeichenfolgenausgaben behandelt, es wird empfohlen, verwenden Sie die <xref:System.Text.Encoding.GetString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1177">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="66229-1178">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1178">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1179">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1179">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1180">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1180">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1181">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1181">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1182">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1182">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1183">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1183">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1184">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1184">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1185">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1185">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1186">Im folgende Beispiel konvertiert eine Zeichenfolge aus einer Codierung in einen anderen.</span><span class="sxs-lookup"><span data-stu-id="66229-1186">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="66229-1187">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert und anschließend einen Bereich von Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1187">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1188"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1188"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1189"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1189"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1190">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1190">-or-</span></span> 
 <span data-ttu-id="66229-1191"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1191"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1192">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1192">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1193">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1193">-and-</span></span> 
 <span data-ttu-id="66229-1194">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1194"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-1195">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge in Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1195">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] -&gt; char[]&#xA;override this.GetChars : byte[] -&gt; char[]" Usage="encoding.GetChars bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1196">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1196">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1197">Beim Überschreiben in einer abgeleiteten Klasse werden alle Bytes im angegebenen Bytearray in Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1197">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="66229-1198">Ein Zeichenarray, das die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1198">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1199"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Zeichen aus einer Eingabebytefolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1199"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="66229-1200"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> unterscheidet sich von <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> da <xref:System.Text.Encoding> erwartet, dass Konvertierungen, die diskrete während <xref:System.Text.Decoder> für mehrere Durchläufe für genau einen Eingabedatenstrom dient.</span><span class="sxs-lookup"><span data-stu-id="66229-1200"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1201">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1201">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1202">**Beachten Sie** richtet sich an diese Methode zum Verarbeiten von Unicode-Zeichen, nicht für den beliebigen Binärdaten, z. B. Byte-Arrays.</span><span class="sxs-lookup"><span data-stu-id="66229-1202">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="66229-1203">Wenn Sie beliebige binäre Daten in Text codiert werden müssen, verwenden Sie ein Protokoll wie Uuencode, die von Methoden, wie z. B. implementiert wird <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1203">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1204">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1204">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1205">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1205">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1206">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1206">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1207">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1207">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1208">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1208">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1209">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen, da Bytefolgen unterbrochen werden können, wenn in Batches verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="66229-1209">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="66229-1210">(Z. B. Teil einer ISO-2022-UMSCHALT-Sequenz kann am Ende einer <xref:System.Text.Encoding.GetChars%2A> aufrufen, und fahren Sie mit den Anfang des nächsten <xref:System.Text.Encoding.GetChars%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1210">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="66229-1211"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Fallback für diese unvollständigen Sequenzen, aber <xref:System.Text.Decoder> speichert diese Sequenzen, für den nächsten Anruf.)</span><span class="sxs-lookup"><span data-stu-id="66229-1211"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="66229-1212">Wenn Ihre app Zeichenfolgenausgaben behandelt, es wird empfohlen, verwenden Sie die <xref:System.Text.Encoding.GetString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1212">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="66229-1213">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1213">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1214">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1214">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1215">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1215">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1216">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1216">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1217">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1217">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1218">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1218">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1219">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1219">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1220">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1220">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1221">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1221">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1222"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1222"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1223">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1223">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1224">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1224">-and-</span></span> 
 <span data-ttu-id="66229-1225">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1225"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="encoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int -&gt; char[]&#xA;override this.GetChars : byte[] * int * int -&gt; char[]" Usage="encoding.GetChars (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1226">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1226">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="66229-1227">Der Index des ersten zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1227">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-1228">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1228">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1229">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge aus dem angegebenen Bytearray in Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1229">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="66229-1230">Ein Zeichenarray, das die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1230">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1231"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Zeichen aus einer Eingabebytefolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1231"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="66229-1232"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> unterscheidet sich von <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> da <xref:System.Text.Encoding> erwartet, dass Konvertierungen, die diskrete während <xref:System.Text.Decoder> für mehrere Durchläufe für genau einen Eingabedatenstrom dient.</span><span class="sxs-lookup"><span data-stu-id="66229-1232"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1233">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1233">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1234">**Beachten Sie** richtet sich an diese Methode zum Verarbeiten von Unicode-Zeichen, nicht für den beliebigen Binärdaten, z. B. Byte-Arrays.</span><span class="sxs-lookup"><span data-stu-id="66229-1234">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="66229-1235">Wenn Sie beliebige binäre Daten in Text codiert werden müssen, verwenden Sie ein Protokoll wie Uuencode, die von Methoden, wie z. B. implementiert wird <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1235">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1236">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1236">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1237">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1237">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1238">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1238">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1239">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1239">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1240">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1240">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1241">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen, da Bytefolgen unterbrochen werden können, wenn in Batches verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="66229-1241">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="66229-1242">(Z. B. Teil einer ISO-2022-UMSCHALT-Sequenz kann am Ende einer <xref:System.Text.Encoding.GetChars%2A> aufrufen, und fahren Sie mit den Anfang des nächsten <xref:System.Text.Encoding.GetChars%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1242">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="66229-1243"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Fallback für diese unvollständigen Sequenzen, aber <xref:System.Text.Decoder> speichert diese Sequenzen, für den nächsten Anruf.)</span><span class="sxs-lookup"><span data-stu-id="66229-1243"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="66229-1244">Wenn Ihre app Zeichenfolgenausgaben behandelt, es wird empfohlen, verwenden Sie die <xref:System.Text.Encoding.GetString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1244">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="66229-1245">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1245">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1246">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1246">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1247">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1247">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1248">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1248">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1249">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1249">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1250">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1250">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1251">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1251">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1252">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1252">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1253">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert und anschließend einen Bereich von Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1253">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1254"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1254"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1255"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1255"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1256">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1256">-or-</span></span> 
 <span data-ttu-id="66229-1257"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1257"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1258">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1258">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1259">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1259">-and-</span></span> 
 <span data-ttu-id="66229-1260">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1260"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1261">Ein Zeiger auf das erste zu decodierende Byte.</span><span class="sxs-lookup"><span data-stu-id="66229-1261">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="66229-1262">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1262">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="66229-1263">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1263">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="66229-1264">Die maximale Anzahl der zu schreibenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1264">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="66229-1265">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen decodiert, die ab Beginn des angegebenen Zeichenzeigers gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1265">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="66229-1266">Die tatsächliche Anzahl der Zeichen, die an der durch den <paramref name="chars" />-Parameter angegebenen Position geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="66229-1266">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1267">Zum Berechnen der genauen Arraygröße <xref:System.Text.Encoding.GetChars%2A> ist erforderlich, die sich ergebenden Zeichen speichern zu können, sollten Sie verwenden die <xref:System.Text.Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1267">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="66229-1268">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1268">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="66229-1269">Die <xref:System.Text.Encoding.GetCharCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1269">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1270"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Zeichen aus einer Eingabebytefolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1270"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="66229-1271"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> unterscheidet sich von <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> da <xref:System.Text.Encoding> erwartet, dass Konvertierungen, die diskrete während <xref:System.Text.Decoder> für mehrere Durchläufe für genau einen Eingabedatenstrom dient.</span><span class="sxs-lookup"><span data-stu-id="66229-1271"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1272">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass sie in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> Objekt von der bereitgestellten <xref:System.Text.Encoding.GetDecoder%2A> oder <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1272">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1273">**Beachten Sie** richtet sich an diese Methode zum Verarbeiten von Unicode-Zeichen, nicht für den beliebigen Binärdaten, z. B. Byte-Arrays.</span><span class="sxs-lookup"><span data-stu-id="66229-1273">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="66229-1274">Wenn Sie beliebige binäre Daten in Text codiert werden müssen, verwenden Sie ein Protokoll wie Uuencode, die von Methoden, wie z. B. implementiert wird <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1274">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1275">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1275">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1276">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1276">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1277">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1277">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1278">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1278">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1279">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1279">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1280">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen, da Bytefolgen unterbrochen werden können, wenn in Batches verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="66229-1280">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="66229-1281">(Z. B. Teil einer ISO-2022-UMSCHALT-Sequenz kann am Ende einer <xref:System.Text.Encoding.GetChars%2A> aufrufen, und fahren Sie mit den Anfang des nächsten <xref:System.Text.Encoding.GetChars%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1281">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="66229-1282"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ruft das Fallback für diese unvollständigen Sequenzen, aber <xref:System.Text.Decoder> speichert diese Sequenzen, für den nächsten Anruf.)</span><span class="sxs-lookup"><span data-stu-id="66229-1282"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="66229-1283">Wenn Ihre app Zeichenfolgenausgaben, behandelt der <xref:System.Text.Encoding.GetString%2A> Methode wird empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1283">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="66229-1284">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1284">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1285">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1285">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1286">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1286">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1287">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1287">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1288">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1288">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1289">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1289">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1290">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1290">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1291">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1291">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1292"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1292"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-1293">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1293">-or-</span></span> 
 <span data-ttu-id="66229-1294"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1294"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1295"><paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1295"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1296"><paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1296"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1297">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1297">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1298">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1298">-and-</span></span> 
 <span data-ttu-id="66229-1299">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1299"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="66229-1300">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="66229-1300">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="66229-1301">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1301">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1302">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1302">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="66229-1303">Der Index des ersten zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1303">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="66229-1304">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1304">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="66229-1305">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1305">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="66229-1306">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1306">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="66229-1307">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1307">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="66229-1308">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1308">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1309">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetChars%2A> um die sich ergebenden Zeichen speichern zu können, verwenden Sie die <xref:System.Text.Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1309">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="66229-1310">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1310">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="66229-1311">Die <xref:System.Text.Encoding.GetCharCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1311">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1312">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > ruft Zeichen aus einer Eingabebytefolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1312">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="66229-1313">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > unterscheidet sich von <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> da <xref:System.Text.Encoding> erwartet, dass Konvertierungen, die diskrete während <xref:System.Text.Decoder> dient zur mehrere Durchläufe für genau einen Eingabedatenstrom.</span><span class="sxs-lookup"><span data-stu-id="66229-1313">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1314">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1314">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1315">**Beachten Sie** richtet sich an diese Methode zum Verarbeiten von Unicode-Zeichen, nicht für den beliebigen Binärdaten, z. B. Byte-Arrays.</span><span class="sxs-lookup"><span data-stu-id="66229-1315">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="66229-1316">Wenn Sie beliebige binäre Daten in Text codiert werden müssen, verwenden Sie ein Protokoll wie Uuencode, die von Methoden, wie z. B. implementiert wird <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1316">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1317">Die <xref:System.Text.Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.Encoding.GetChars%2A> Methode führt die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1317">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="66229-1318">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Methode erwartet diskrete Konvertierungen, die im Gegensatz zu den <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> -Methode, die mehrere Durchläufe für genau einen Eingabedatenstrom behandelt.</span><span class="sxs-lookup"><span data-stu-id="66229-1318">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="66229-1319">Mehrere Versionen von <xref:System.Text.Encoding.GetCharCount%2A> und <xref:System.Text.Encoding.GetChars%2A> werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1319">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="66229-1320">Es folgen einige Programmiersprachen Überlegungen für die Verwendung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="66229-1320">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="66229-1321">Ihre app müssen möglicherweise mehrere Eingabebytes aus einer Codepage decodieren und die Bytes, die durch mehrere Aufrufe verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="66229-1321">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="66229-1322">In diesem Fall müssen Sie wahrscheinlich zur Beibehaltung des Zustands zwischen den aufrufen, da Bytefolgen unterbrochen werden können, wenn in Batches verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="66229-1322">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="66229-1323">(Z. B. Teil einer ISO-2022-UMSCHALT-Sequenz kann am Ende einer [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > aufrufen, und fahren Sie mit den Anfang des nächsten [\], Int32, Int32, Char\<Xref : System.Text.Encoding.GetChars%2A > aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1323">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="66229-1324">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > Ruft das Fallback für diese unvollständigen Sequenzen, aber <xref:System.Text.Decoder> speichert diese Sequenzen, für den nächsten Anruf.)</span><span class="sxs-lookup"><span data-stu-id="66229-1324">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="66229-1325">Wenn Ihre app Zeichenfolgenausgaben, behandelt der <xref:System.Text.Encoding.GetString%2A> Methode wird empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1325">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="66229-1326">Da diese Methode muss überprüfen Sie die Länge der Zeichenfolge und einen Puffer zuzuordnen, ist es etwas langsamer, jedoch ist der resultierende <xref:System.String> Typ ist zu bevorzugen.</span><span class="sxs-lookup"><span data-stu-id="66229-1326">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="66229-1327">Die Byteversion des <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> lässt einige schnelle Verfahren, insbesondere bei mehreren Aufrufen an große Puffer.</span><span class="sxs-lookup"><span data-stu-id="66229-1327">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="66229-1328">Beachten Sie jedoch, dass diese Methodenversion manchmal unsicher, da Zeiger erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1328">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="66229-1329">Wenn Ihre app eine große Datenmenge konvertieren muss, sollten den Ausgabepuffer wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1329">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="66229-1330">In diesem Fall die [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > Version, die Zeichen unterstützt werden soll Puffer ist die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1330">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="66229-1331">Erwägen Sie die Verwendung der <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode anstelle von <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1331">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="66229-1332">Die Konvertierungsmethode konvertiert so viele Daten wie möglich und löst eine Ausnahme aus, wenn der Ausgabepuffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1332">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="66229-1333">Für die fortlaufende Decodierung eines Datenstroms, ist diese Methode häufig die beste Wahl.</span><span class="sxs-lookup"><span data-stu-id="66229-1333">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1334">Im folgende Beispiel konvertiert eine Zeichenfolge aus einer Codierung in einen anderen.</span><span class="sxs-lookup"><span data-stu-id="66229-1334">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="66229-1335">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert und anschließend einen Bereich von Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1335">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1336"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1336"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="66229-1337">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1337">-or-</span></span> 
 <span data-ttu-id="66229-1338"><paramref name="chars" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1338"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1339"><paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="66229-1339"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1340">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1340">-or-</span></span> 
 <span data-ttu-id="66229-1341"><paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1341"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="66229-1342">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1342">-or-</span></span> 
 <span data-ttu-id="66229-1343"><paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1343"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1344"><paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="66229-1344"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1345">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1345">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1346">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1346">-and-</span></span> 
 <span data-ttu-id="66229-1347">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1347"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="abstract member GetDecoder : unit -&gt; System.Text.Decoder&#xA;override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1348">Beim Überschreiben in einer abgeleiteten Klasse wird ein Decoder abgerufen, der eine codierte Bytefolge in Zeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1348">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span></span></summary>
        <returns><span data-ttu-id="66229-1349">Eine <see cref="T:System.Text.Decoder" />-Klasse, die eine codierte Bytefolge in eine Folge von Zeichen codiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1349">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1350">Die <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Methode konvertiert die Blöcke von Bytes in sequenzielle Blöcke von Zeichen, ähnlich wie die <xref:System.Text.Encoding.GetChars%2A> Methode dieser Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1350">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="66229-1351">Allerdings eine <xref:System.Text.Decoder> verwaltet Zustandsinformationen zwischen den aufrufen, damit es Bytefolgen ordnungsgemäß decodiert, die Blöcke umfassen.</span><span class="sxs-lookup"><span data-stu-id="66229-1351">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="66229-1352">Die <xref:System.Text.Decoder> behält nachfolgende Bytes am Ende der Datenblöcke und verwendet Sie im nächsten Decodierungsvorgang.</span><span class="sxs-lookup"><span data-stu-id="66229-1352">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="66229-1353">Aus diesem Grund <xref:System.Text.Encoding.GetDecoder%2A> und <xref:System.Text.Encoding.GetEncoder%2A> eignen sich für die Übertragung im Netzwerk und Dateivorgänge, da diese Vorgänge Datenblöcke anstelle einer vollständigen Datenstrom oft verarbeiten müssen.</span><span class="sxs-lookup"><span data-stu-id="66229-1353">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="66229-1354">Die Standardimplementierung gibt eine <see cref="T:System.Text.Decoder" /> aufruft, die <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> und <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> Methoden des aktuellen <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1354">The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="66229-1355">Müssen Sie festlegen, überschreiben diese Methode zum Zurückgeben einer <see cref="T:System.Text.Decoder" /> , verwaltet den Zustand zwischen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1355">You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</span></span></para></block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1356">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1356">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="abstract member GetEncoder : unit -&gt; System.Text.Encoder&#xA;override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1357">Beim Überschreiben in einer abgeleiteten Klasse wird ein Encoder abgerufen, der eine Folge von Unicode-Zeichen in eine codierte Bytefolge konvertiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1357">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="66229-1358">Ein <see cref="T:System.Text.Encoder" />, der eine Folge von Unicode-Zeichen in eine codierte Bytefolge konvertiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1358">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1359">Die <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> konvertiert sequenzielle Blöcke von Zeichen in sequenzielle Blöcke von Bytes, ähnlich wie die <xref:System.Text.Encoding.GetBytes%2A> Methode dieser Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1359">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="66229-1360">Allerdings eine <xref:System.Text.Encoder> verwaltet Zustandsinformationen zwischen den aufrufen, sodass korrekt Zeichenfolgen codiert, die Blöcke umfassen.</span><span class="sxs-lookup"><span data-stu-id="66229-1360">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="66229-1361">Die <xref:System.Text.Encoder> auch behält nachfolgende Zeichen am Ende der Datenblöcke und die nachgestellten Zeichen in den nächsten Vorgang für die Codierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1361">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="66229-1362">Z. B. ein Datenblock kann eine hohe Ersatzzeichen ohne Entsprechung enden, und das entsprechende niedrige Ersatzzeichen möglicherweise der nächste Datenblock.</span><span class="sxs-lookup"><span data-stu-id="66229-1362">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="66229-1363">Aus diesem Grund <xref:System.Text.Encoding.GetDecoder%2A> und <xref:System.Text.Encoding.GetEncoder%2A> eignen sich für die Übertragung im Netzwerk und Dateivorgänge, da diese Vorgänge Datenblöcke anstelle einer vollständigen Datenstrom oft verarbeiten müssen.</span><span class="sxs-lookup"><span data-stu-id="66229-1363">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="66229-1364">Die Standardimplementierung gibt eine <see cref="T:System.Text.Encoder" /> aufruft, die <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> und <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> Methoden des aktuellen <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1364">The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="66229-1365">Müssen Sie festlegen, überschreiben diese Methode zum Zurückgeben einer <see cref="T:System.Text.Encoder" /> , verwaltet den Zustand zwischen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1365">You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</span></span></para></block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1366">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1366">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-1367">Gibt eine Codierung für die angegebene Codepage zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1367">Returns an encoding for the specified code page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="66229-1368">Der Codepagebezeichner der bevorzugten Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1368">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="66229-1369">Mögliche Werte sind in der Codepage-Spalte der Tabelle aufgeführt, die im Thema zur <see cref="T:System.Text.Encoding" />-Klasse angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1369">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
<span data-ttu-id="66229-1370">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1370">-or-</span></span> 
<span data-ttu-id="66229-1371">0 (null), um die Standardcodierung zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-1371">0 (zero), to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="66229-1372">Gibt die dem angegebenen Codepagebezeichner zugeordnete Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1372">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="66229-1373">Die Codierung, die der angegebenen Codepage zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1373">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1374">Der fallback-Handler hängt von den Codierungstyp des `codepage`.</span><span class="sxs-lookup"><span data-stu-id="66229-1374">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="66229-1375">Wenn `codepage` ist ein Code Seiten- oder Doppelbyte-Zeichensatz (DBCS) zu codieren, ein Fallback mit ähnlichen fallback-Handler wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1375">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="66229-1376">Andernfalls wird ein Ersatz-fallback-Handler verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1376">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="66229-1377">Diese fallback-Handler können nicht für Ihre app geeignet.</span><span class="sxs-lookup"><span data-stu-id="66229-1377">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="66229-1378">An den fallback-Handler die Codierung gemäß `codepage`, rufen Sie die <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="66229-1378">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="66229-1379">In .NET Framework die <xref:System.Text.Encoding.GetEncoding%2A> Methode beruht auf der zugrunde liegenden Plattform zur Unterstützung von den meisten Codepages.</span><span class="sxs-lookup"><span data-stu-id="66229-1379">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="66229-1380">.NET Framework unterstützt systemintern jedoch einige Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1380">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="66229-1381">Eine Liste der Codepages, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1381">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="66229-1382">In .NET Core die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt zurück, die nativ von .NET Core unterstützten Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1382">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="66229-1383">Sie können für beide Implementierungen von .NET, Aufrufen der <xref:System.Text.Encoding.GetEncodings%2A> -Methode zum Abrufen der ein Array von <xref:System.Text.EncodingInfo> Objekte, die Informationen über alle verfügbaren Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1383">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="66229-1384">Zusätzlich zu den Codierungen, die nativ auf .NET Core verfügbar sind oder systemintern unter einer bestimmten Plattform-Version von .NET Framework unterstützt werden, die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt alle zusätzlichen Codierungen, die zur Verfügung gestellt werden, durch die Registrierung einer zurück.<xref:System.Text.EncodingProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1384">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="66229-1385">Wenn die gleiche Codierung, von mehreren registriert wurde <xref:System.Text.EncodingProvider> Objekten, die diese Methode gibt zurück, der letzte Suchvorgang registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1385">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="66229-1386">Sie können auch angeben, der Wert 0 für die `codepage` Argument.</span><span class="sxs-lookup"><span data-stu-id="66229-1386">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="66229-1387">Das genaue Verhalten hängt von, ob alle Codierungen verfügbar durch die Registrierung vorgenommen wurden ein <xref:System.Text.EncodingProvider> Objekt:</span><span class="sxs-lookup"><span data-stu-id="66229-1387">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="66229-1388">Wenn eine oder mehrere Codierung Anbieter registriert wurden, gibt die Codierung des zuletzt registrierten Anbieters, die zurückgegeben wird, wenn eine Codierung gewählt hat die <xref:System.Text.Encoding.GetEncoding%2A> -Methode übergeben eine `codepage` Argument von 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1388">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="66229-1389">In .NET Framework, wenn keine Codierung Anbieter registriert ist, wenn die <xref:System.Text.CodePagesEncodingProvider> ist der registrierte codierungsanbieter, oder wenn keine registrierten codierungsanbieter behandelt eine `codepage` Wert von 0 (null) gibt es aktive Codepage des Betriebssystems.</span><span class="sxs-lookup"><span data-stu-id="66229-1389">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="66229-1390">Um die aktiven Codepage in Windows-Systeme zu ermitteln, rufen Sie die Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) Funktion von .NET Framework auf dem Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="66229-1390">To determine the active code page on Windows systems, call the Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="66229-1391">In .NET Core, wenn keine codierungsanbieter registriert wurde oder wenn keine registrierten codierungsanbieter behandelt eine `codepage` Wert von 0 (null) gibt die <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="66229-1391">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="66229-1392">Einige nicht unterstützte Codepages Ursache ein <xref:System.ArgumentException> ausgelöst wird, während andere auslösen, einen <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="66229-1392">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="66229-1393">Daher im Code muss abgefangen, alle Ausnahmen, die im Abschnitt mit Ausnahmen angegeben.</span><span class="sxs-lookup"><span data-stu-id="66229-1393">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-1394">Die ANSI-Codepages können auf verschiedenen Computern unterschiedlich sein und können auf einem einzelnen Computer, führt zur Beschädigung von Daten ändern.</span><span class="sxs-lookup"><span data-stu-id="66229-1394">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="66229-1395">Aus diesem Grund ist die aktiven Codepage eine ANSI-Codepage, codieren und Decodieren von Daten, die über die Standardcodepage zurückgegebenes `Encoding.GetEncoding(0)` wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1395">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="66229-1396">Die meisten konsistente Ergebnisse erzielen Sie sollten Sie verwenden, eine Unicode-Codierung, z. B. UTF-8 (Codepage 65001) oder UTF-16, anstelle einer bestimmten Codepage.</span><span class="sxs-lookup"><span data-stu-id="66229-1396">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="66229-1397"><xref:System.Text.Encoding.GetEncoding%2A> Gibt eine zwischengespeicherte Instanz mit den Standardeinstellungen zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1397"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="66229-1398">Sie sollten die Konstruktoren von abgeleiteten Klassen verwenden, um eine Instanz mit unterschiedlichen Einstellungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1398">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="66229-1399">Z. B. die <xref:System.Text.UTF32Encoding> Klasse bietet einen Konstruktor, der Sie die fehlererkennung aktivieren kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1399">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="66229-1400">Im folgenden Beispiel ruft zwei Instanzen der gleichen Codierung (eine von der Codepage) und einen anderen anhand des Namens ab und überprüft die Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="66229-1400">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1401"><paramref name="codepage" /> ist kleiner als 0 (null) oder größer als 65535.</span><span class="sxs-lookup"><span data-stu-id="66229-1401"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1402"><paramref name="codepage" /> wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1402"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66229-1403"><paramref name="codepage" /> wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1403"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1404">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1404">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="66229-1405">Der Codepagename der bevorzugten Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1405">The code page name of the preferred encoding.</span></span> <span data-ttu-id="66229-1406">Jeder von der <see cref="P:System.Text.Encoding.WebName" />-Eigenschaft zurückgegebene Wert ist gültig.</span><span class="sxs-lookup"><span data-stu-id="66229-1406">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="66229-1407">Mögliche Werte sind in der Name-Spalte der Tabelle aufgeführt, die im Thema zur <see cref="T:System.Text.Encoding" />-Klasse angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1407">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <summary><span data-ttu-id="66229-1408">Gibt die dem angegebenen Codepagenamen zugeordnete Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1408">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="66229-1409">Die der angegebenen Codepage zugeordnete Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1409">The encoding  associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1410">Der fallback-Handler hängt von den Codierungstyp des `name`.</span><span class="sxs-lookup"><span data-stu-id="66229-1410">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="66229-1411">Wenn `name` ist ein Code Seiten- oder Doppelbyte-Zeichensatz (DBCS) zu codieren, ein Fallback mit ähnlichen fallback-Handler wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1411">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="66229-1412">Andernfalls wird ein Ersatz-fallback-Handler verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1412">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="66229-1413">Diese fallback-Handler können nicht für Ihre app geeignet.</span><span class="sxs-lookup"><span data-stu-id="66229-1413">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="66229-1414">An den fallback-Handler die Codierung gemäß `name`, rufen Sie die <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="66229-1414">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  

<span data-ttu-id="66229-1415">In .NET Framework die <xref:System.Text.Encoding.GetEncoding%2A> Methode beruht auf der zugrunde liegenden Plattform zur Unterstützung von den meisten Codepages.</span><span class="sxs-lookup"><span data-stu-id="66229-1415">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="66229-1416">.NET Framework unterstützt systemintern jedoch einige Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1416">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="66229-1417">Eine Liste der Codepages, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1417">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="66229-1418">In .NET Core die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt zurück, die nativ von .NET Core unterstützten Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1418">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="66229-1419">Sie können für beide Implementierungen von .NET, Aufrufen der <xref:System.Text.Encoding.GetEncodings%2A> -Methode zum Abrufen der ein Array von <xref:System.Text.EncodingInfo> Objekte, die Informationen über alle verfügbaren Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1419">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="66229-1420">Zusätzlich zu den Codierungen, die nativ auf .NET Core verfügbar sind oder systemintern unter einer bestimmten Plattform-Version von .NET Framework unterstützt werden, die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt alle zusätzlichen Codierungen, die zur Verfügung gestellt werden, durch die Registrierung einer zurück.<xref:System.Text.EncodingProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1420">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="66229-1421">Wenn die gleiche Codierung, von mehreren registriert wurde <xref:System.Text.EncodingProvider> Objekten, die diese Methode gibt zurück, der letzte Suchvorgang registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1421">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="66229-1422">Die ANSI-Codepages können auf verschiedenen Computern unterschiedlich sein, oder Sie können für einen einzelnen Computer, führt zur Beschädigung von Daten geändert werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1422">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="66229-1423">Für die meisten konsistente Ergebnisse sollten Sie Unicode verwenden, z. B. UTF-8 (Codepage 65001) oder UTF-16, anstelle einer bestimmten Codepage verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-1423">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="66229-1424"><xref:System.Text.Encoding.GetEncoding%2A> Gibt eine zwischengespeicherte Instanz mit den Standardeinstellungen zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1424"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="66229-1425">Sie sollten die Konstruktoren von abgeleiteten Klassen verwenden, um eine Instanz mit unterschiedlichen Einstellungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1425">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="66229-1426">Z. B. die <xref:System.Text.UTF32Encoding> Klasse bietet einen Konstruktor, der Sie die fehlererkennung aktivieren kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1426">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="66229-1427">Im folgenden Beispiel ruft zwei Instanzen der gleichen Codierung (eine von der Codepage) und einen anderen anhand des Namens ab und überprüft die Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="66229-1427">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1428"><paramref name="name" /> ist kein gültiger Codepagename.</span><span class="sxs-lookup"><span data-stu-id="66229-1428"><paramref name="name" /> is not a valid code page name.</span></span>  
  
<span data-ttu-id="66229-1429">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1429">-or-</span></span> 
<span data-ttu-id="66229-1430">Die durch <paramref name="name" /> angegebene Codepage wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1430">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1431">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1431">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="66229-1432">Der Codepagebezeichner der bevorzugten Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1432">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="66229-1433">Mögliche Werte sind in der Codepage-Spalte der Tabelle aufgeführt, die im Thema zur <see cref="T:System.Text.Encoding" />-Klasse angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1433">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
<span data-ttu-id="66229-1434">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1434">-or-</span></span> 
<span data-ttu-id="66229-1435">0 (null), um die Standardcodierung zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-1435">0 (zero), to use the default encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="66229-1436">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn ein Zeichen nicht mit der aktuellen Codierung codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1436">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="66229-1437">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn eine Bytefolge nicht mit der aktuellen Codierung decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1437">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="66229-1438">Gibt die dem angegebenen Codepagebezeichner zugeordnete Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1438">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="66229-1439">Parameter geben einen Fehlerhandler für Zeichen an, die nicht codiert werden können, und für Bytefolgen, die nicht decodiert werden können.</span><span class="sxs-lookup"><span data-stu-id="66229-1439">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="66229-1440">Die Codierung, die der angegebenen Codepage zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1440">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66229-1441">Einige nicht unterstützte Codepages dazu führen, dass die Ausnahme <xref:System.ArgumentException> ausgelöst wird, während andere auslösen, <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="66229-1441">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="66229-1442">Daher im Code muss abgefangen, alle Ausnahmen, die im Abschnitt mit Ausnahmen angegeben.</span><span class="sxs-lookup"><span data-stu-id="66229-1442">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  

<span data-ttu-id="66229-1443">In .NET Framework die <xref:System.Text.Encoding.GetEncoding%2A> Methode beruht auf der zugrunde liegenden Plattform zur Unterstützung von den meisten Codepages.</span><span class="sxs-lookup"><span data-stu-id="66229-1443">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="66229-1444">.NET Framework unterstützt systemintern jedoch einige Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1444">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="66229-1445">Eine Liste der Codepages, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1445">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="66229-1446">In .NET Core die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt zurück, die nativ von .NET Core unterstützten Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1446">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="66229-1447">Sie können für beide Implementierungen von .NET, Aufrufen der <xref:System.Text.Encoding.GetEncodings%2A> -Methode zum Abrufen der ein Array von <xref:System.Text.EncodingInfo> Objekte, die Informationen über alle verfügbaren Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1447">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="66229-1448">Zusätzlich zu den Codierungen, die nativ auf .NET Core verfügbar sind oder systemintern unter einer bestimmten Plattform-Version von .NET Framework unterstützt werden, die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt alle zusätzlichen Codierungen, die zur Verfügung gestellt werden, durch die Registrierung einer zurück.<xref:System.Text.EncodingProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1448">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="66229-1449">Wenn die gleiche Codierung, von mehreren registriert wurde <xref:System.Text.EncodingProvider> Objekten, die diese Methode gibt zurück, der letzte Suchvorgang registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1449">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="66229-1450">Sie können auch angeben, der Wert 0 für die `codepage` Argument.</span><span class="sxs-lookup"><span data-stu-id="66229-1450">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="66229-1451">Das genaue Verhalten hängt von, ob alle Codierungen verfügbar durch die Registrierung vorgenommen wurden ein <xref:System.Text.EncodingProvider> Objekt:</span><span class="sxs-lookup"><span data-stu-id="66229-1451">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="66229-1452">Wenn eine oder mehrere Codierung Anbieter registriert wurden, gibt die Codierung des zuletzt registrierten Anbieters, die zurückgegeben wird, wenn eine Codierung gewählt hat die <xref:System.Text.Encoding.GetEncoding%2A> -Methode übergeben eine `codepage` Argument von 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1452">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="66229-1453">In .NET Framework, wenn keine Codierung Anbieter registriert ist, wenn die <xref:System.Text.CodePagesEncodingProvider> ist der registrierte codierungsanbieter, oder wenn keine registrierten codierungsanbieter behandelt eine `codepage` Wert von 0 (null) gibt es die Codepage für die active.</span><span class="sxs-lookup"><span data-stu-id="66229-1453">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="66229-1454">In .NET Core, wenn keine codierungsanbieter registriert wurde oder wenn keine registrierten codierungsanbieter behandelt eine `codepage` Wert von 0 (null) gibt die <xref:System.Text.UTF8Encoding> Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1454">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="66229-1455">Die ANSI-Codepages können auf verschiedenen Computern unterschiedlich sein und können auf einem einzelnen Computer, führt zur Beschädigung von Daten ändern.</span><span class="sxs-lookup"><span data-stu-id="66229-1455">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="66229-1456">Aus diesem Grund ist die aktiven Codepage eine ANSI-Codepage, codieren und Decodieren von Daten, die über die Standardcodepage zurückgegebenes `Encoding.GetEncoding(0)` wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1456">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="66229-1457">Für die meisten konsistente Ergebnisse sollten Sie Unicode verwenden, z. B. UTF-8 (Codepage 65001) oder UTF-16, anstelle einer bestimmten Codepage verwenden.</span><span class="sxs-lookup"><span data-stu-id="66229-1457">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="66229-1458">Rufen Sie die aktive Codepage zugeordnete Codierung können Sie entweder den Wert 0 für die `codepage` Argument oder, wenn Ihr Code auf .NET Framework auf dem Windows-Desktop ausgeführt wird, Abrufen des Werts der <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-1458">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="66229-1459">Um die aktuelle aktive Codepage zu bestimmen, rufen Sie die Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) Funktion von .NET Framework auf dem Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="66229-1459">To determine the current active code page, call the Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="66229-1460"><xref:System.Text.Encoding.GetEncoding%2A> Gibt eine zwischengespeicherte Instanz mit den Standardeinstellungen zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1460"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="66229-1461">Sie sollten die Konstruktoren von abgeleiteten Klassen verwenden, um eine Instanz mit unterschiedlichen Einstellungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1461">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="66229-1462">Z. B. die <xref:System.Text.UTF32Encoding> Klasse bietet einen Konstruktor, der Sie die fehlererkennung aktivieren kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1462">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1463">Das folgende Beispiel veranschaulicht die <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1463">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1464"><paramref name="codepage" /> ist kleiner als 0 (null) oder größer als 65535.</span><span class="sxs-lookup"><span data-stu-id="66229-1464"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1465"><paramref name="codepage" /> wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1465"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66229-1466"><paramref name="codepage" /> wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1466"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1467">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1467">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="66229-1468">Der Codepagename der bevorzugten Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1468">The code page name of the preferred encoding.</span></span> <span data-ttu-id="66229-1469">Jeder von der <see cref="P:System.Text.Encoding.WebName" />-Eigenschaft zurückgegebene Wert ist gültig.</span><span class="sxs-lookup"><span data-stu-id="66229-1469">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="66229-1470">Mögliche Werte sind in der Name-Spalte der Tabelle aufgeführt, die im Thema zur <see cref="T:System.Text.Encoding" />-Klasse angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1470">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="66229-1471">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn ein Zeichen nicht mit der aktuellen Codierung codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1471">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="66229-1472">Ein Objekt, das ein Fehlerbehandlungsverfahren bereitstellt, wenn eine Bytefolge nicht mit der aktuellen Codierung decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1472">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="66229-1473">Gibt die dem angegebenen Codepagenamen zugeordnete Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1473">Returns the encoding associated with the specified code page name.</span></span> <span data-ttu-id="66229-1474">Parameter geben einen Fehlerhandler für Zeichen an, die nicht codiert werden können, und für Bytefolgen, die nicht decodiert werden können.</span><span class="sxs-lookup"><span data-stu-id="66229-1474">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="66229-1475">Die Codierung, die der angegebenen Codepage zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1475">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="66229-1476">In .NET Framework die <xref:System.Text.Encoding.GetEncoding%2A> Methode beruht auf der zugrunde liegenden Plattform zur Unterstützung von den meisten Codepages.</span><span class="sxs-lookup"><span data-stu-id="66229-1476">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="66229-1477">.NET Framework unterstützt systemintern jedoch einige Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1477">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="66229-1478">Eine Liste der Codepages, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1478">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="66229-1479">In .NET Core die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt zurück, die nativ von .NET Core unterstützten Codierungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1479">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="66229-1480">Sie können für beide Implementierungen von .NET, Aufrufen der <xref:System.Text.Encoding.GetEncodings%2A> -Methode zum Abrufen der ein Array von <xref:System.Text.EncodingInfo> Objekte, die Informationen über alle verfügbaren Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1480">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="66229-1481">Zusätzlich zu den Codierungen, die nativ auf .NET Core verfügbar sind oder systemintern unter einer bestimmten Plattform-Version von .NET Framework unterstützt werden, die <xref:System.Text.Encoding.GetEncoding%2A> Methode gibt alle zusätzlichen Codierungen, die zur Verfügung gestellt werden, durch die Registrierung einer zurück.<xref:System.Text.EncodingProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1481">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="66229-1482">Wenn die gleiche Codierung, von mehreren registriert wurde <xref:System.Text.EncodingProvider> Objekten, die diese Methode gibt zurück, der letzte Suchvorgang registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1482">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-1483">Die ANSI-Codepages können auf verschiedenen Computern unterschiedlich sein und können auf einem einzelnen Computer, führt zur Beschädigung von Daten ändern.</span><span class="sxs-lookup"><span data-stu-id="66229-1483">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="66229-1484">Die meisten konsistente Ergebnisse erzielen Sie sollten Sie verwenden, eine Unicode-Codierung, z. B. UTF-8 (Codepage 65001) oder UTF-16, anstelle einer bestimmten Codepage.</span><span class="sxs-lookup"><span data-stu-id="66229-1484">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="66229-1485"><xref:System.Text.Encoding.GetEncoding%2A> Gibt eine zwischengespeicherte Instanz mit den Standardeinstellungen zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1485"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="66229-1486">Sie sollten die Konstruktoren von abgeleiteten Klassen verwenden, um eine Instanz mit unterschiedlichen Einstellungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1486">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="66229-1487">Z. B. die <xref:System.Text.UTF32Encoding> Klasse bietet einen Konstruktor, der Sie die fehlererkennung aktivieren kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1487">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1488">Das folgende Beispiel veranschaulicht die <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1488">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1489"><paramref name="name" /> ist kein gültiger Codepagename.</span><span class="sxs-lookup"><span data-stu-id="66229-1489"><paramref name="name" /> is not a valid code page name.</span></span>  
  
<span data-ttu-id="66229-1490">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1490">-or-</span></span> 
<span data-ttu-id="66229-1491">Die durch <paramref name="name" /> angegebene Codepage wird von der zugrunde liegenden Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1491">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1492">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1492">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="static member GetEncodings : unit -&gt; System.Text.EncodingInfo[]" Usage="System.Text.Encoding.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1493">Gibt ein Array zurück, das alle Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1493">Returns an array that contains all encodings.</span></span></summary>
        <returns><span data-ttu-id="66229-1494">Ein Array, das alle Codierungen enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1494">An array that contains all encodings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1495">Diese Methode gibt eine Liste der unterstützten Codierungen, die eindeutig nach Codepage unterschieden.</span><span class="sxs-lookup"><span data-stu-id="66229-1495">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="66229-1496">Eine Tabelle mit unterstützten Codierungen, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1496">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-1497">Die Liste der unterstützten Codierungen, die zurückgegeben werden, indem die <xref:System.Text.Encoding.GetEncodings%2A> Methode umfasst keine zusätzlichen Codierungen, die von jedem zur Verfügung gestellt <xref:System.Text.EncodingProvider> Implementierungen, die durch Aufrufe von registriert wurden die <xref:System.Text.Encoding.RegisterProvider%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1497">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="66229-1498">In .NET Framework sind die Codierungen 50220 und 50222 sowohl mit dem Namen "Iso-2022-jp" verknüpft ist, aber sie sind nicht identisch.</span><span class="sxs-lookup"><span data-stu-id="66229-1498">On the .NET Framework, encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="66229-1499">Codierung 50220 Katakana-Zeichen halber Breite in voller Breite Katakana-Zeichen konvertiert, während der Codierung 50222 verwendet eine UMSCHALT-in-Out/UMSCHALT-Sequenz die Katakana-Zeichen halber Breite zu codieren.</span><span class="sxs-lookup"><span data-stu-id="66229-1499">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="66229-1500">Der Anzeigename für die Codierung 50222 ist "Japanisch (JIS-1 Byte Kana erlaubt - SO / SI)" zur Unterscheidung von Codierung 50220, mit dem Anzeigenamen "Japanisch (JIS)" nennen.</span><span class="sxs-lookup"><span data-stu-id="66229-1500">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="66229-1501">Wenn Sie die Codierung Name "Iso-2022-jp", die .NET Framework gibt zurück, die Codierung 50220 anfordern.</span><span class="sxs-lookup"><span data-stu-id="66229-1501">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="66229-1502">Allerdings hängt die Codierung, die für Ihre app geeignet ist die bevorzugte Behandlung von die Katakana-Zeichen halber Breite.</span><span class="sxs-lookup"><span data-stu-id="66229-1502">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="66229-1503">Um einer bestimmten Codierung zu erhalten, verwenden Sie die <xref:System.Text.Encoding.GetEncoding%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1503">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="66229-1504"><xref:System.Text.Encoding.GetEncodings%2A> wird manchmal verwendet, um dem Benutzer eine Liste von Codierungen in eine Datei anzuzeigen **speichern als** Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="66229-1504"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="66229-1505">Viele nicht-Unicode-Codierungen sind jedoch entweder unvollständig und übersetzen: zu viele Zeichen "?", oder weisen ein etwas anderes Verhalten auf verschiedenen Plattformen.</span><span class="sxs-lookup"><span data-stu-id="66229-1505">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="66229-1506">Erwägen Sie die Verwendung von UTF-8 oder UTF-16 als Standard.</span><span class="sxs-lookup"><span data-stu-id="66229-1506">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1507">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1507">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1508">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1508">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1509">Gibt den Hashcode für die aktuelle Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1509">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="66229-1510">Der Hashcode für die aktuelle Instanz.</span><span class="sxs-lookup"><span data-stu-id="66229-1510">The hash code for the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxByteCount : int -&gt; int" Usage="encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="66229-1511">Die Anzahl der zu codierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1511">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="66229-1512">Berechnet beim Überschreiben in einer abgeleiteten Klasse die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1512">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="66229-1513">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1513">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1514">Die `charCount` Parameter legt die Anzahl der <xref:System.Char> darstellende – Objekte die Unicode-Zeichen zu codieren, da .NET wird intern mit UTF-16 verwendet, um Unicode-Zeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="66229-1514">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because .NET internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="66229-1515">Daher können die meisten Unicode-Zeichen dargestellt werden, von einem <xref:System.Char> Objekt handelt, sondern ein Unicode-Zeichen, die durch ein Ersatzzeichenpaar, z. B. dargestellt wird, erfordert zwei <xref:System.Char> Objekte.</span><span class="sxs-lookup"><span data-stu-id="66229-1515">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="66229-1516">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, verwenden Sie die <xref:System.Text.Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1516">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="66229-1517">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1517">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="66229-1518">Die <xref:System.Text.Encoding.GetByteCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1518">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1519"><xref:System.Text.Encoding.GetMaxByteCount%2A> Ruft die maximal zu erwartende, einschließlich den schlimmsten Fall für das derzeit ausgewählte <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="66229-1519"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="66229-1520">Wenn ein Fallback, eine potenziell große Zeichenfolge ausgewählt wird <xref:System.Text.Encoding.GetMaxByteCount%2A> ruft große Werte, insbesondere in Fällen, in dem der schlimmste Fall für die Codierung umfasst das Wechseln der Modi für jedes Zeichen, ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1520">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="66229-1521">Dies kann z. B. ISO-2022-JP haben.</span><span class="sxs-lookup"><span data-stu-id="66229-1521">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="66229-1522">Weitere Informationen finden Sie im Blogeintrag "[neuerungen mit Encoding.GetMaxByteCount() und Encoding.GetMaxCharCount()?](https://go.microsoft.com/fwlink/?LinkId=153702)"</span><span class="sxs-lookup"><span data-stu-id="66229-1522">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](https://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="66229-1523">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="66229-1523">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="66229-1524">In den meisten Fällen ruft diese Methode die angemessenen Werte für kurze Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="66229-1524">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="66229-1525">Für lange Zeichenfolgen müssen Sie möglicherweise entscheiden Sie sehr große Puffer und Abfangen von Fehlern in dem seltenen Fall, wenn Sie ein geeigneteren Puffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1525">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="66229-1526">Sie sollten auch einen anderen Ansatz erwägen <xref:System.Text.Encoding.GetByteCount%2A> oder <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1526">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1527">Bei Verwendung <xref:System.Text.Encoding.GetMaxByteCount%2A>, reservieren Sie den Ausgabepuffer, der basierend auf der maximalen Größe des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="66229-1527">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="66229-1528">Wenn der Ausgabepuffer Größe beschränkt ist, können Sie die <xref:System.Text.Encoding.Convert%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1528">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="66229-1529">Beachten Sie, dass <xref:System.Text.Encoding.GetMaxByteCount%2A> potenzielle übrig gebliebene Surrogate aus einer vorherigen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1529">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="66229-1530">Der Decoder ruft 2 für eine Single-Byte-Codierung, z. B. ASCII ab, wenn Sie den Wert 1 an die Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="66229-1530">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="66229-1531">Verwenden Sie die <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> Eigenschaft, wenn diese Informationen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="66229-1531">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-1532">`GetMaxByteCount(N)` ist nicht unbedingt der gleiche Wert wie `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="66229-1532">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1533">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1533">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1534"><paramref name="charCount" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-1534"><paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="66229-1535">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1535">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1536">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1536">-and-</span></span> 
 <span data-ttu-id="66229-1537">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1537"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="66229-1538">Alle <see cref="T:System.Text.Encoding" /> Implementierungen müssen sicherstellen, dass keine Ausnahmen durch Pufferüberlauf auftreten, wenn die Größe von Puffern entsprechend den Ergebnissen von dieser Methode die Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1538">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxCharCount : int -&gt; int" Usage="encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="66229-1539">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1539">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1540">Berechnet beim Überschreiben in einer abgeleiteten Klasse die maximale Anzahl an Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1540">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="66229-1541">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1541">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1542">Berechnen Sie die genaue Arraygröße <xref:System.Text.Encoding.GetChars%2A> um die sich ergebenden Zeichen speichern zu können, verwenden Sie die <xref:System.Text.Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1542">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="66229-1543">Verwenden Sie um die maximale Größe zu berechnen, die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1543">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="66229-1544">Die <xref:System.Text.Encoding.GetCharCount%2A> Methode ermöglicht im Allgemeinen weniger Speicher, während die <xref:System.Text.Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1544">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="66229-1545"><xref:System.Text.Encoding.GetMaxCharCount%2A> Ruft die maximal zu erwartende, einschließlich den schlimmsten Fall für das derzeit ausgewählte <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="66229-1545"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="66229-1546">Wenn ein Fallback, eine potenziell große Zeichenfolge ausgewählt wird <xref:System.Text.Encoding.GetMaxCharCount%2A> ruft große Werte ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1546">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="66229-1547">In den meisten Fällen ruft diese Methode geeignete Zahlen für kurze Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="66229-1547">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="66229-1548">Für lange Zeichenfolgen müssen Sie möglicherweise entscheiden Sie sehr große Puffer und Abfangen von Fehlern in dem seltenen Fall, dass ein geeigneteren Puffer zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1548">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="66229-1549">Sie sollten auch einen anderen Ansatz erwägen <xref:System.Text.Encoding.GetCharCount%2A> oder <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1549">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66229-1550"><xref:System.Text.Encoding.GetMaxCharCount%2A> hat keinen Bezug zu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1550"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="66229-1551">Wenn Sie dazu eine ähnliche Funktion für die Verwendung mit <xref:System.Text.Encoding.GetBytes%2A>, verwenden Sie <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1551">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="66229-1552">Bei Verwendung <xref:System.Text.Encoding.GetMaxCharCount%2A>, reservieren Sie den Ausgabepuffer, der basierend auf der maximalen Größe des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="66229-1552">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="66229-1553">Wenn der Ausgabepuffer Größe beschränkt ist, können Sie die <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="66229-1553">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="66229-1554">Beachten Sie, dass <xref:System.Text.Encoding.GetMaxCharCount%2A> berücksichtigt den ungünstigsten Fall für übrig gebliebene Bytes aus einem vorherigen Encoder-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="66229-1554">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="66229-1555">Für die meisten Codepages Ruft Werte größer als oder gleich 1 ab, wenn Sie einen Wert von 0 an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="66229-1555">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66229-1556">`GetMaxCharCount(N)` ist nicht unbedingt der gleiche Wert wie `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="66229-1556">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1557">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1557">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1558"><paramref name="byteCount" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-1558"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1559">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1559">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1560">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1560">-and-</span></span> 
 <span data-ttu-id="66229-1561">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1561"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="66229-1562">Alle <see cref="T:System.Text.Encoding" /> Implementierungen müssen sicherstellen, dass keine Ausnahmen durch Pufferüberlauf auftreten, wenn die Größe von Puffern entsprechend den Ergebnissen von dieser Methode die Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="66229-1562">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="abstract member GetPreamble : unit -&gt; byte[]&#xA;override this.GetPreamble : unit -&gt; byte[]" Usage="encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1563">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge zurückgegeben, die die verwendete Codierung angibt.</span><span class="sxs-lookup"><span data-stu-id="66229-1563">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span></span></summary>
        <returns><span data-ttu-id="66229-1564">Ein Bytearray, das eine Bytefolge enthält, in der die verwendete Codierung angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1564">A byte array containing a sequence of bytes that specifies the encoding used.</span></span>  
  
<span data-ttu-id="66229-1565">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1565">-or-</span></span> 
<span data-ttu-id="66229-1566">Ein Bytearray der Länge 0 (null), wenn keine Präambel erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1566">A byte array of length zero, if a preamble is not required.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1567">Optional können die <xref:System.Text.Encoding> Objekt stellt eine Präambel, die ein Array von Bytes, die die Abfolge von Bytes, die infolge des Codierungsvorgangs vorangestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1567">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="66229-1568">Die Präambel einer Bytereihenfolge-Marke (in Unicode-Codepunkt U + FEFF) enthält, wird den Decoder bestimmt die Bytereihenfolge und die Transformationsformat oder UTF leichter.</span><span class="sxs-lookup"><span data-stu-id="66229-1568">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="66229-1569">Die Unicode-bytereihenfolgemarkierung (BOM) ist (im Hexadezimalformat) wie folgt serialisiert:</span><span class="sxs-lookup"><span data-stu-id="66229-1569">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="66229-1570">UTF-8: EF BB BF</span><span class="sxs-lookup"><span data-stu-id="66229-1570">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="66229-1571">UTF-16 big-endian-Bytereihenfolge: FE FF</span><span class="sxs-lookup"><span data-stu-id="66229-1571">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="66229-1572">UTF-16 little-endian-Bytereihenfolge: FF FE</span><span class="sxs-lookup"><span data-stu-id="66229-1572">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="66229-1573">UTF-32 big-endian-Bytereihenfolge: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="66229-1573">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="66229-1574">UTF-32 little-endian-Bytereihenfolge: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="66229-1574">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="66229-1575">Sollten Sie die BOM, verwenden, da es bietet nahezu bestimmte Identifikation einer Codierung für Dateien, die ansonsten auf verloren haben die <xref:System.Text.Encoding> -Objekt, z. B. nicht gekennzeichnet oder nicht ordnungsgemäß gekennzeichnet Webdaten oder zufälligen Text-Dateien gespeichert, wenn ein Unternehmen nicht haben Sie internationale Aspekte oder andere Daten.</span><span class="sxs-lookup"><span data-stu-id="66229-1575">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="66229-1576">Häufig Probleme der Benutzer können vermieden werden, wenn Daten einheitlich und ordnungsgemäß, vorzugsweise in UTF-8 oder UTF-16 gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1576">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="66229-1577">Für Standards, die einen Typ der codieren bereitstellen, ist eine Bytereihenfolge-Marke gewisse Weise redundant.</span><span class="sxs-lookup"><span data-stu-id="66229-1577">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="66229-1578">Es kann jedoch verwendet werden, können Sie einen Server, den richtigen encoding-Header senden.</span><span class="sxs-lookup"><span data-stu-id="66229-1578">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="66229-1579">Alternativ können sie als ausweichlösung verwendet werden, für den Fall, dass die Codierung verloren gegangen ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1579">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="66229-1580">Es gibt einige Nachteile mit einer Bytereihenfolge-Marke.</span><span class="sxs-lookup"><span data-stu-id="66229-1580">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="66229-1581">Wissen, wie die Datenbankfelder zu begrenzen, die eine Bytereihenfolge-Marke verwenden kann z. B. schwierig sein.</span><span class="sxs-lookup"><span data-stu-id="66229-1581">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="66229-1582">Verkettung von Dateien, problematisch sein kann auch, z. B. beim Zusammenführen von Dateien so eine Möglichkeit, die ein unnötiges Zeichen in der Mitte Daten ergeben kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1582">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="66229-1583">Trotz der einige Nachteile wird jedoch dringend die Verwendung einer Stückliste empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1583">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="66229-1584">Weitere Informationen zu Byte-Reihenfolge und die Bytereihenfolge-Marke, finden Sie im Unicode-Standard auf die [Unicode-Homepage](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="66229-1584">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="66229-1585">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, sollten Sie den codierten Bytes mit einer Präambel Präfix voranstellen.</span><span class="sxs-lookup"><span data-stu-id="66229-1585">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="66229-1586">Die meisten Codierungen bieten jedoch keine Präambel.</span><span class="sxs-lookup"><span data-stu-id="66229-1586">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="66229-1587">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, sollten Sie mit einer Unicode-Codierung, d. h. <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, oder <xref:System.Text.UTF32Encoding>, mit einer Präambel.</span><span class="sxs-lookup"><span data-stu-id="66229-1587">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1588">Im folgende Beispiel bestimmt die Bytereihenfolge der Codierung auf Grundlage der Präambel.</span><span class="sxs-lookup"><span data-stu-id="66229-1588">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-1589">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge in eine Zeichenfolge decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1589">When overridden in a derived class, decodes a sequence of bytes into a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] -&gt; string&#xA;override this.GetString : byte[] -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1590">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1590">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1591">Beim Überschreiben in einer abgeleiteten Klasse werden alle Bytes im angegebenen Bytearray in eine Zeichenfolge decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1591">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="66229-1592">Eine Zeichenfolge, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1592">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1593">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> zurückgegebenes Objekt der <xref:System.Text.Encoding.GetDecoder%2A> eine abgeleitete Methode geleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1593">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1594">Finden Sie im Abschnitt "Hinweise" der <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Verweis Themas beschriebenen Verfahren und Überlegungen zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="66229-1594">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="66229-1595">Beachten Sie, dass das genaue Verhalten der <xref:System.Text.Encoding.GetString%2A> Methode für einen bestimmten <xref:System.Text.Encoding> Implementierung hängt von der dafür definierten Fallbackstrategie <xref:System.Text.Encoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1595">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="66229-1596">Weitere Informationen finden Sie im Abschnitt "Auswählen einer Fallbackstrategie" die [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="66229-1596">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1597">Das folgende Beispiel liest eine UTF-8 codierte Zeichenfolge aus einer Binärdatei, dargestellt durch eine <xref:System.IO.FileStream> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1597">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="66229-1598">Für Dateien, die weniger als 2.048 Bytes sind, liest er den Inhalt der gesamten Datei in ein Byte-Array und ruft die <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> Methode, um die Decodierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="66229-1598">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="66229-1599">Er liest für größere Dateien 2.048 Bytes zu einem Zeitpunkt in ein Bytearray, Aufrufe der <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um zu bestimmen, wie viele Zeichen im Array enthalten sind, und ruft dann die <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um die Decodierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="66229-1599">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="66229-1600">Das Beispiel verwendet den folgenden Text, der in eine UTF-8 codierte Datei, die mit dem Namen Utf8Example.txt gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1600">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1601">Das Bytearray enthält ungültige Unicode-Codepunkte.</span><span class="sxs-lookup"><span data-stu-id="66229-1601">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1602"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1602"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1603">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1603">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1604">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1604">-and-</span></span> 
 <span data-ttu-id="66229-1605">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1605"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.GetString : ReadOnlySpan&lt;byte&gt; -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="member this.GetString : nativeptr&lt;byte&gt; * int -&gt; string" Usage="encoding.GetString (bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1606">Ein Zeiger auf ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="66229-1606">A pointer to a byte array.</span></span></param>
        <param name="byteCount"><span data-ttu-id="66229-1607">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1607">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1608">Beim Überschreiben in einer abgeleiteten Klasse wird eine angegebene Anzahl von Bytes ab einer angegebenen Adresse in eine Zeichenfolge decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1608">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span></span></summary>
        <returns><span data-ttu-id="66229-1609">Eine Zeichenfolge, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1609">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1610">Die <xref:System.Text.Encoding.GetString%2A> -Methode entwickelt, um die Leistung zu optimieren, wenn Sie über einen systemeigenen Zeiger auf ein Bytearray verfügen.</span><span class="sxs-lookup"><span data-stu-id="66229-1610">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="66229-1611">Anstatt ein verwaltetes Bytearray erstellen, und klicken Sie dann Decodierung können Sie stattdessen diese Methode aufrufen, ohne jede Zwischenobjekten erstellen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="66229-1611">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="66229-1612">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> zurückgegebenes Objekt der <xref:System.Text.Encoding.GetDecoder%2A> eine abgeleitete Methode geleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1612">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1613">Finden Sie im Abschnitt "Hinweise" der <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Verweis Themas beschriebenen Verfahren und Überlegungen zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="66229-1613">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="66229-1614">Beachten Sie, dass das genaue Verhalten der <xref:System.Text.Encoding.GetString%2A> Methode für einen bestimmten <xref:System.Text.Encoding> Implementierung hängt von der dafür definierten Fallbackstrategie <xref:System.Text.Encoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1614">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="66229-1615">Weitere Informationen finden Sie im Abschnitt "Auswählen einer Fallbackstrategie" die [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="66229-1615">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1616"><paramref name="bytes" /> ist ein NULL-Zeiger</span><span class="sxs-lookup"><span data-stu-id="66229-1616"><paramref name="bytes" /> is a null pointer.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1617"><paramref name="byteCount" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="66229-1617"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1618">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1618">A   fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="66229-1619">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1619">-and-</span></span> 
 <span data-ttu-id="66229-1620">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1620"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] * int * int -&gt; string&#xA;override this.GetString : byte[] * int * int -&gt; string" Usage="encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="66229-1621">Das Bytearray, das die zu decodierende Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1621">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="66229-1622">Der Index des ersten zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1622">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="66229-1623">Die Anzahl der zu decodierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1623">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="66229-1624">Beim Überschreiben in einer abgeleiteten Klasse wird eine Bytefolge aus dem angegebenen Bytearray in eine Zeichenfolge decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1624">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="66229-1625">Eine Zeichenfolge, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span><span class="sxs-lookup"><span data-stu-id="66229-1625">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1626">Wenn die zu konvertierenden Daten nur in sequenzielle Blöcke (z. B. aus einem Stream gelesene Daten) verfügbar ist oder wenn die Menge der Daten so groß, dass er in kleinere Blöcke aufgeteilt werden muss, sollten Sie mit ist der <xref:System.Text.Decoder> oder <xref:System.Text.Encoder> gebotenen die <xref:System.Text.Encoding.GetDecoder%2A> Methode oder der <xref:System.Text.Encoding.GetEncoder%2A> -Methode, von einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1626">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="66229-1627">Finden Sie im Abschnitt "Hinweise" der <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Verweis Themas beschriebenen Verfahren und Überlegungen zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="66229-1627">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1628">Das folgende Beispiel liest eine UTF-8 codierte Zeichenfolge aus einer Binärdatei, die durch dargestellt wird ein <xref:System.IO.FileStream> Objekt.</span><span class="sxs-lookup"><span data-stu-id="66229-1628">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="66229-1629">Für Dateien, die weniger als 2.048 Bytes sind, liest er den Inhalt der gesamten Datei in ein Byte-Array und ruft die <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Methode, um die Decodierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="66229-1629">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="66229-1630">Er liest für größere Dateien 2.048 Bytes zu einem Zeitpunkt in ein Bytearray, Aufrufe der <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um zu bestimmen, wie viele Zeichen im Array enthalten sind, und ruft dann die <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um die Decodierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="66229-1630">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="66229-1631">Das Beispiel verwendet den folgenden Text, der in eine UTF-8 codierte Datei, die mit dem Namen Utf8Example.txt gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="66229-1631">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66229-1632">Das Bytearray enthält ungültige Unicode-Codepunkte.</span><span class="sxs-lookup"><span data-stu-id="66229-1632">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1633"><paramref name="bytes" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1633"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66229-1634"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="66229-1634"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="66229-1635">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1635">-or-</span></span> 
 <span data-ttu-id="66229-1636"><paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span><span class="sxs-lookup"><span data-stu-id="66229-1636"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="66229-1637">Ein Fallback ist aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="66229-1637">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="66229-1638">- und -</span><span class="sxs-lookup"><span data-stu-id="66229-1638">-and-</span></span> 
 <span data-ttu-id="66229-1639">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="66229-1639"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderName : string" Usage="System.Text.Encoding.HeaderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1640">Beim Überschreiben in einer abgeleiteten Klasse wird ein Name für die aktuelle Codierung abgerufen, die mit den Header-Tags des E-Mail-Agenten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1640">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span></span></summary>
        <value><span data-ttu-id="66229-1641">Ein Name für die aktuelle <see cref="T:System.Text.Encoding" />, die für die Header-Tags des E-Mail-Agenten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1641">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span></span>  
  
<span data-ttu-id="66229-1642">- oder - </span><span class="sxs-lookup"><span data-stu-id="66229-1642">-or-</span></span> 
<span data-ttu-id="66229-1643">Eine leere Zeichenfolge (""), wenn das aktuelle <see cref="T:System.Text.Encoding" /> nicht verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1643">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1644">Wenn Sie benötigen eine Codierung für einen Headernamen an, Sie sollten aufrufen, die <xref:System.Text.Encoding.GetEncoding%2A> -Methode mit der <xref:System.Text.Encoding.HeaderName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-1644">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="66229-1645">Häufig die Methode ruft eine andere Codierung aus der Test-Codierung zur Verfügung gestellt, in dem Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1645">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="66229-1646">Im Allgemeinen müssen nur e-Mail-Anwendungen diese Codierung abgerufen.</span><span class="sxs-lookup"><span data-stu-id="66229-1646">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="66229-1647">In einigen Fällen den Wert des der <xref:System.Text.Encoding.BodyName%2A> Eigenschaft entspricht der internationalen Norm, die diese Codierung definiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1647">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="66229-1648">Dies bedeutet nicht, dass die Implementierung vollständig mit diesem Standard entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-1648">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="66229-1649">Beachten Sie, dass <xref:System.Text.Encoding.WebName%2A> gibt den Namen zu verwenden, um die Beschreibung einer Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1649">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="66229-1650">Die <xref:System.Text.Encoding.HeaderName%2A> Eigenschaft definiert eine andere Codierung, die besser für eine e-Mail-Anwendung, z. B. möglicherweise.</span><span class="sxs-lookup"><span data-stu-id="66229-1650">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="66229-1651">Verwendung der Eigenschaft, die die Codierung definiert wird jedoch nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1651">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1652">Im folgenden Beispiel werden die anderen Namen für jede Codierung abgerufen, und zeigt die Codierungen mit ein oder mehrere Namen, die von unterscheiden <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1652">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-1653">Es zeigt <xref:System.Text.Encoding.EncodingName%2A> jedoch nicht dafür verglichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1653">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66229-1654">Ruft einen Wert ab, der angibt, ob die aktuelle Codierung immer normalisiert ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1654">Gets a value indicating whether the current encoding is always normalized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberSignature Language="F#" Value="member this.IsAlwaysNormalized : unit -&gt; bool" Usage="encoding.IsAlwaysNormalized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66229-1655">Ruft einen Wert ab, der angibt, ob die aktuelle Codierung immer normalisiert ist. Es wird die Standardnormalisierungsform verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1655">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span></span></summary>
        <returns><span data-ttu-id="66229-1656"><see langword="true" />, wenn die aktuelle <see cref="T:System.Text.Encoding" />-Klasse immer normalisiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1656"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66229-1657">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1657">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1658">Das Standardformular für die Normalisierung ist <xref:System.Text.NormalizationForm.FormC>, vollständiger kanonischen Zerlegung und Sequenzen mit ihre primären kombinierenden Zeichen ersetzt wurden, sofern möglich verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1658">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberSignature Language="F#" Value="abstract member IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool&#xA;override this.IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool" Usage="encoding.IsAlwaysNormalized form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form"><span data-ttu-id="66229-1659">Einer der <see cref="T:System.Text.NormalizationForm" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="66229-1659">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span></span></param>
        <summary><span data-ttu-id="66229-1660">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob die aktuelle Codierung immer normalisiert ist. Hierzu wird die angegebene Normalisierungsform verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1660">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span></span></summary>
        <returns><span data-ttu-id="66229-1661"><see langword="true" />, wenn das aktuelle <see cref="T:System.Text.Encoding" />-Objekt immer mit dem angegebenen <see cref="T:System.Text.NormalizationForm" />-Wert normalisiert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1661"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66229-1662">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1662">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1663">Das Standardformular für die Normalisierung ist <xref:System.Text.NormalizationForm.FormC>, vollständiger kanonischen Zerlegung und Sequenzen mit ihre primären kombinierenden Zeichen ersetzt wurden, sofern möglich verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1663">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserDisplay : bool" Usage="System.Text.Encoding.IsBrowserDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1664">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob die aktuelle Codierung von Browserclients zum Anzeigen des Inhalts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1664">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span></span></summary>
        <value><span data-ttu-id="66229-1665"><see langword="true" /> wenn das aktuelle <see cref="T:System.Text.Encoding" /> von Browserclients verwendet werden kann, um Inhalt anzuzeigen; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1665"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-1666">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1666">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserSave : bool" Usage="System.Text.Encoding.IsBrowserSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1667">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob die aktuelle Codierung von Browserclients zum Speichern von Inhalt verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1667">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span></span></summary>
        <value><span data-ttu-id="66229-1668"><see langword="true" /> wenn das aktuelle <see cref="T:System.Text.Encoding" /> von Browserclients verwendet werden kann, um Inhalt zu speichern; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1668"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-1669">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1669">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsDisplay : bool" Usage="System.Text.Encoding.IsMailNewsDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1670">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob die aktuelle Codierung von Mail- und Newsclients zum Anzeigen von Inhalt verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1670">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span></span></summary>
        <value><span data-ttu-id="66229-1671"><see langword="true" /> wenn die aktuelle <see cref="T:System.Text.Encoding" />-Klasse von Mail- und Newsclients verwendet werden kann, um Inhalt anzuzeigen; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1671"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-1672">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1672">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsSave : bool" Usage="System.Text.Encoding.IsMailNewsSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1673">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob die aktuelle Codierung von Mail- und Newsclients zum Speichern von Inhalt verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="66229-1673">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span></span></summary>
        <value><span data-ttu-id="66229-1674"><see langword="true" />, wenn die aktuelle <see cref="T:System.Text.Encoding" /> von Mail- und Newsclients verwendet werden kann, um Inhalt zu speichern, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1674"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66229-1675">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1675">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.Encoding.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1676">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die aktuelle Codierung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1676">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span></span></summary>
        <value><span data-ttu-id="66229-1677"><see langword="true" />, wenn die aktuelle <see cref="T:System.Text.Encoding" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1677"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66229-1678">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1678">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.Encoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1679">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die aktuelle Codierung Einzelbyte-Codepunkte verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1679">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value><span data-ttu-id="66229-1680"><see langword="true" />, wenn das aktuelle <see cref="T:System.Text.Encoding" /> Einzelbyte-Codepunkte verwendet; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1680"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1681">Für ein Einzelbyte-Codierung, z. B. <xref:System.Text.ASCIIEncoding>, diese Eigenschaft ruft `true`.</span><span class="sxs-lookup"><span data-stu-id="66229-1681">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="66229-1682">Vorsichtig in die Funktionsweise Ihrer Anwendung mit dem Wert für <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="66229-1682">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="66229-1683">Eine Annahme des wie eine Codierung fortfährt, möglicherweise trotzdem falsch.</span><span class="sxs-lookup"><span data-stu-id="66229-1683">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="66229-1684">Windows-1252 hat beispielsweise den Wert `true` für <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, aber Encoding.GetMaxByteCount (1) gibt 2 zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1684">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="66229-1685">Dies ist, da die Methode potenzielle übrig gebliebene Surrogate aus einer vorherigen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1685">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1686">Das folgende Beispiel überprüft die Werte der booleschen Eigenschaften jeder Codierung.</span><span class="sxs-lookup"><span data-stu-id="66229-1686">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Encoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member RegisterProvider : System.Text.EncodingProvider -&gt; unit" Usage="System.Text.Encoding.RegisterProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="66229-1687">Eine Unterklasse von <see cref="T:System.Text.EncodingProvider" />, die Zugriff auf zusätzliche Zeichencodierungen bietet.</span><span class="sxs-lookup"><span data-stu-id="66229-1687">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span></span></param>
        <summary><span data-ttu-id="66229-1688">Registriert einen Codierungsanbieter.</span><span class="sxs-lookup"><span data-stu-id="66229-1688">Registers an encoding provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1689">Die <xref:System.Text.Encoding.RegisterProvider%2A> Methode können Sie zum Registrieren einer Klasse abgeleitet <xref:System.Text.EncodingProvider> , wird auf einer Plattform verfügbaren Codierungen Zeichen, die andernfalls diese nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66229-1689">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="66229-1690">Nach der Codierung Anbieter registriert ist, können die Codierungen, die es unterstützt abgerufen werden, durch das Aufrufen einer <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> überladen.</span><span class="sxs-lookup"><span data-stu-id="66229-1690">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="66229-1691">Wenn es mehrere Anbieter für Codierung sind, die <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Methode versucht, zum Abrufen einer angegebenen Codierung aus jeder Anbieter ab, durch die zuletzt registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1691">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="66229-1692">Registriert einen codierungsanbieter mithilfe der <xref:System.Text.Encoding.RegisterProvider%2A> Methode ändert auch das Verhalten der [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) und [EncodingProvider.GetEncoding (Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) Methoden, die beim Übergeben eines Arguments der `0`:</span><span class="sxs-lookup"><span data-stu-id="66229-1692">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="66229-1693">Wenn der registrierte Anbieter ist die <xref:System.Text.CodePagesEncodingProvider>, die Methode gibt zurück, die Codierung, der die Codepage des Systems active entspricht, wenn auf dem Windows-Betriebssystem ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="66229-1693">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="66229-1694">Ein benutzerdefinierter Anbieter für die Codierung kann auswählen, welche Codierung beim Zurückgeben eines dieser <xref:System.Text.Encoding.GetEncoding%2A> Überladungen der Methode wird ein Argument übergeben `0`.</span><span class="sxs-lookup"><span data-stu-id="66229-1694">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="66229-1695">Der Anbieter können auch nicht zurückgeben, eine Codierung, dass die <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> -Methodenrückgabe `null`.</span><span class="sxs-lookup"><span data-stu-id="66229-1695">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
<span data-ttu-id="66229-1696">Ab .NET Framework 4.6, .NET Framework enthält einen codierungsanbieter, <xref:System.Text.CodePagesEncodingProvider>, verfügbaren Codierungen, die im vollständigen .NET Framework vorhanden sind, jedoch sind in die universelle Windows-Plattform nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="66229-1696">Starting with the .NET Framework 4.6, the .NET Framework includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in the Universal Windows Platform.</span></span> <span data-ttu-id="66229-1697">Standardmäßig unterstützt die universelle Windows-Plattform nur die Unicode-Codierungen, ASCII und Codepage 28591 entscheiden.</span><span class="sxs-lookup"><span data-stu-id="66229-1697">By default, the Universal Windows Platform only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="66229-1698">Wenn die gleiche Anbieter für die Codierung verwendet wird, in mehreren Aufrufen an die <xref:System.Text.Encoding.RegisterProvider%2A> nur der erste Methodenaufruf-Methode registriert den Ressourcenanbieter.</span><span class="sxs-lookup"><span data-stu-id="66229-1698">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="66229-1699">Nachfolgende Aufrufe werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1699">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="66229-1700">Wenn die <xref:System.Text.Encoding.RegisterProvider%2A> Methode wird aufgerufen, um mehrere Anbieter zu registrieren, die die gleiche Codierung behandelt, der zuletzt registrierte Anbieter wird für alle Codierungs- und Decodierungsvorgänge verwendet.</span><span class="sxs-lookup"><span data-stu-id="66229-1700">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="66229-1701">Alle zuvor registrierten Anbieter werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1701">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66229-1702"><paramref name="provider" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1702"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unicode : System.Text.Encoding" Usage="System.Text.Encoding.Unicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1703">Ruft eine Codierung für das UTF-16-Format in der Little-Endian-Bytereihenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1703">Gets an encoding for the UTF-16 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="66229-1704">Eine Codierung für das UTF-16-Format mit Little-Endian-Bytereihenfolge.</span><span class="sxs-lookup"><span data-stu-id="66229-1704">An encoding for the UTF-16 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1705">Weitere Informationen über die Codierungen, die von .NET und eine Beschreibung der um zu verwendende Codierung Unicode-Zeichen unterstützt werden, finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="66229-1705">For information about the encodings supported by the .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="66229-1706">Die <xref:System.Text.UnicodeEncoding> -Objekt, das von dieser Eigenschaft zurückgegeben wird möglicherweise nicht das richtige Verhalten für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-1706">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="66229-1707">Er verwendet einen Ersatzfallback, ersetzen Sie jede Zeichenfolge, die nicht codiert werden können und jedes Byte, die nicht decodiert durch ein Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1707">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="66229-1708">Stattdessen rufen Sie die <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor zum Instanziieren einer little-Endian <xref:System.Text.UnicodeEncoding> -Objekt, dessen Fallback entweder ist, ein <xref:System.Text.EncoderFallbackException> oder <xref:System.Text.DecoderFallbackException>, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="66229-1708">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="66229-1709">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1709">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1710">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1710">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF32 : System.Text.Encoding" Usage="System.Text.Encoding.UTF32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1711">Ruft eine Codierung für das UTF-32-Format in der Little-Endian-Bytereihenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1711">Gets an encoding for the UTF-32 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="66229-1712">Ein Codierungsobjekt für das UTF-32-Format mit Little-Endian-Bytereihenfolge.</span><span class="sxs-lookup"><span data-stu-id="66229-1712">An  encoding object for the UTF-32 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1713">Die <xref:System.Text.UTF32Encoding> -Objekt, das von dieser Eigenschaft zurückgegeben wird möglicherweise nicht das richtige Verhalten für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-1713">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="66229-1714">Ersatzfallback verwendet, um jede Zeichenfolge, die nicht codiert werden können und jedes Byte, die nicht decodiert mit dem Unicode-ERSATZZEICHEN (U + FFFE) ersetzen.</span><span class="sxs-lookup"><span data-stu-id="66229-1714">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="66229-1715">Stattdessen rufen Sie die <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor zum Instanziieren einer <xref:System.Text.UTF32Encoding> -Objekt, dessen Fallback entweder ist, ein <xref:System.Text.EncoderFallbackException> oder ein <xref:System.Text.DecoderFallbackException>, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="66229-1715">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="66229-1716">Eine Erläuterung der little-endian-Bytereihenfolge, finden Sie unter den <xref:System.Text.Encoding> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66229-1716">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="66229-1717">Weitere Informationen über die Codierungen, die von .NET und eine Beschreibung der um zu verwendende Codierung Unicode-Zeichen unterstützt werden, finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="66229-1717">For information about the encodings supported by .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1718">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1718">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1719">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1719">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF7 : System.Text.Encoding" Usage="System.Text.Encoding.UTF7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1720">Ruft eine Codierung für das UTF-7-Format ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1720">Gets an encoding for the UTF-7 format.</span></span></summary>
        <value><span data-ttu-id="66229-1721">Eine Codierung für das UTF-7-Format.</span><span class="sxs-lookup"><span data-stu-id="66229-1721">An encoding for the UTF-7 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1722">UTF-7-Codierung wird in erster Linie in Umgebungen verwendet werden, die in der Vergangenheit 7 Bits, z. B. NNTP und einige e-Mail-Anwendungen eingeschränkt wurden.</span><span class="sxs-lookup"><span data-stu-id="66229-1722">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="66229-1723">Aufgrund von Problemen mit der Stabilität und Sicherheit sollten Sie nicht verwenden UTF7-Codierung in 8-Bit-Umgebungen, in denen kann UTF-8-Codierung stattdessen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="66229-1723">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1724">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um ein Array von Zeichen zu codieren, codiert die Zeichen und die resultierenden Bytes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="66229-1724">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1725">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1725">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF8 : System.Text.Encoding" Usage="System.Text.Encoding.UTF8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1726">Ruft eine Codierung für das UTF-8-Format ab.</span><span class="sxs-lookup"><span data-stu-id="66229-1726">Gets an encoding for the UTF-8 format.</span></span></summary>
        <value><span data-ttu-id="66229-1727">Eine Codierung für das UTF-8-Format.</span><span class="sxs-lookup"><span data-stu-id="66229-1727">An encoding for the UTF-8 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1728">Diese Eigenschaft gibt eine <xref:System.Text.UTF8Encoding> Objekt, das Unicode (UTF-16-codierte)-Zeichen in eine Folge von ein bis vier Bytes pro Zeichen codiert und, die ein UTF-8-codierte Bytearray in Unicode (UTF-16-codierte) Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="66229-1728">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="66229-1729">Weitere Informationen dazu, die zeichencodierungen, die von .NET und eine Beschreibung der um zu verwendende Codierung Unicode-Zeichen unterstützt werden, finden Sie unter [Zeichencodierung in .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="66229-1729">For information about the character encodings supported by .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="66229-1730">Die <xref:System.Text.UTF8Encoding> -Objekt, das von dieser Eigenschaft zurückgegeben wird möglicherweise nicht das richtige Verhalten für Ihre app.</span><span class="sxs-lookup"><span data-stu-id="66229-1730">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="66229-1731">Gibt eine <xref:System.Text.UTF8Encoding> Objekt, das eine Unicode-bytereihenfolgemarkierung (BOM) bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="66229-1731">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="66229-1732">Rufen Sie Überladung der zum Instanziieren einer UTF8-Codierung, die eine Bytereihenfolge-Marke bereitstellen, nicht die <xref:System.Text.UTF8Encoding.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="66229-1732">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="66229-1733">Gibt eine <xref:System.Text.UTF8Encoding> -Objekt, das verwendet einen Ersatzfallback, ersetzen Sie jede Zeichenfolge, die nicht codiert werden können und jedes Byte, die nicht decodiert durch ein Fragezeichen ("?") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1733">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="66229-1734">Stattdessen rufen Sie die <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor zum Instanziieren einer <xref:System.Text.UTF8Encoding> -Objekt, dessen Fallback entweder ist, ein <xref:System.Text.EncoderFallbackException> oder ein <xref:System.Text.DecoderFallbackException>, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="66229-1734">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="66229-1735">Das folgende Beispiel definiert ein Array, das aus der folgenden Zeichen:</span><span class="sxs-lookup"><span data-stu-id="66229-1735">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="66229-1736">KLEINES LATEINISCHES Z (U + 007A)</span><span class="sxs-lookup"><span data-stu-id="66229-1736">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="66229-1737">LATEINISCHE KLEINE BUCHSTABEN EINER (U + 0061 IST)</span><span class="sxs-lookup"><span data-stu-id="66229-1737">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="66229-1738">KOMBINIEREN VON BREVIS (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="66229-1738">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="66229-1739">KLEINES LATEINISCHES AE MIT AKUTE (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="66229-1739">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="66229-1740">GRIECHISCHE BUCHSTABE BETA (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="66229-1740">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="66229-1741">Ein Ersatzzeichenpaar (U + D800 U + DD54), die griechischen ACROPHONIC ATTIC eine TAUSEND STATERS (U + 10154) bildet.</span><span class="sxs-lookup"><span data-stu-id="66229-1741">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="66229-1742">Es zeigt die UTF-16-Codeeinheiten der einzelnen Zeichen und bestimmt die Anzahl der Bytes, die durch einen UTF-8-Encoder zum Codieren der Zeichen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="66229-1742">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="66229-1743">Anschließend werden die Zeichen codiert und zeigt die resultierende UTF-8-codierten Bytes.</span><span class="sxs-lookup"><span data-stu-id="66229-1743">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="66229-1744">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="66229-1744">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebName : string" Usage="System.Text.Encoding.WebName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1745">Beim Überschreiben in einer abgeleiteten Klasse wird der Name für die aktuelle Codierung bei der Internet Assigned Numbers Authority (IANA) registriert.</span><span class="sxs-lookup"><span data-stu-id="66229-1745">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span></span></summary>
        <value><span data-ttu-id="66229-1746">Der IANA-Name für die aktuelle <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="66229-1746">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1747">Die <xref:System.Text.Encoding.WebName%2A> Eigenschaft ist identisch mit der <xref:System.Text.EncodingInfo.Name%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="66229-1747">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="66229-1748">Beachten Sie, dass <xref:System.Text.Encoding.WebName%2A> gibt einen IANA registrierten Namen für die Codierung zurück.</span><span class="sxs-lookup"><span data-stu-id="66229-1748">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="66229-1749">Wenn der Wert der Name der Standard ist, entspricht die Implementierung der Codierung möglicherweise nicht vollständig dieses Standards.</span><span class="sxs-lookup"><span data-stu-id="66229-1749">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="66229-1750">Die <xref:System.Text.Encoding.HeaderName%2A> Eigenschaft definiert eine andere Codierung, die für die e-Mail-Header besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="66229-1750">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="66229-1751">Allerdings sollten die meisten apps verwenden <xref:System.Text.Encoding.WebName%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="66229-1751">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="66229-1752">Weitere Informationen zur IANA finden Sie unter [www.iana.org](https://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="66229-1752">For more information on the IANA, go to [www.iana.org](https://www.iana.org/).</span></span>  
  
 <span data-ttu-id="66229-1753">Die <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> ist identisch mit der <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> zurückgegebenes <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1753">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-1754">Einige der Webnamen sind Duplikate. finden Sie unter den Hinweisen zu <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="66229-1754">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1755">Das folgende Beispiel schließt den <xref:System.Text.Encoding.WebName%2A> in einem HTML-Header.</span><span class="sxs-lookup"><span data-stu-id="66229-1755">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="66229-1756">Im folgenden Beispiel werden die anderen Namen für jede Codierung abgerufen, und zeigt die Codierungen mit ein oder mehrere Namen, die von unterscheiden <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66229-1756">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66229-1757">Es zeigt <xref:System.Text.Encoding.EncodingName%2A> jedoch nicht dafür verglichen.</span><span class="sxs-lookup"><span data-stu-id="66229-1757">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsCodePage : int" Usage="System.Text.Encoding.WindowsCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66229-1758">Beim Überschreiben in einer abgeleiteten Klasse wird die Codepage des Betriebssystems Windows abgerufen, die der aktuellen Codierung am ehesten entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-1758">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span></span></summary>
        <value><span data-ttu-id="66229-1759">Die Codepage des Betriebssystems Windows, die der aktuellen <see cref="T:System.Text.Encoding" /> am ehesten entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-1759">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66229-1760">Diese Eigenschaft wird für die Kompatibilität mit der Windows-MultiLanguage (MLang)-APIs, z. B. zur Ermittlung der Schriftfamilien.</span><span class="sxs-lookup"><span data-stu-id="66229-1760">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="66229-1761">Für die Globalisierung wird die Verwendung eines Unicode-Codierungen stattdessen empfohlen.</span><span class="sxs-lookup"><span data-stu-id="66229-1761">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="66229-1762">Es empfiehlt sich auch mit <xref:System.Text.Encoding.WebName%2A> anstelle von <xref:System.Text.Encoding.WindowsCodePage%2A> um die Codepage zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="66229-1762">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66229-1763">Im folgenden Beispiel wird bestimmt, die Windows-Codepage, die jeder Codierung am ehesten entspricht.</span><span class="sxs-lookup"><span data-stu-id="66229-1763">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>