<Type Name="Rune" FullName="System.Text.Rune">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d92e56663452229591e4d96e0ea15ca44493ab5c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70463046" /></Metadata><TypeSignature Language="C#" Value="public struct Rune : IComparable&lt;System.Text.Rune&gt;, IEquatable&lt;System.Text.Rune&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Rune extends System.ValueType implements class System.IComparable`1&lt;valuetype System.Text.Rune&gt;, class System.IEquatable`1&lt;valuetype System.Text.Rune&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Rune" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rune&#xA;Implements IComparable(Of Rune), IEquatable(Of Rune)" />
  <TypeSignature Language="C++ CLI" Value="public value class Rune : IComparable&lt;System::Text::Rune&gt;, IEquatable&lt;System::Text::Rune&gt;" />
  <TypeSignature Language="F#" Value="type Rune = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a6774-101">Stellt einen Unicode-Skalarwert dar ( [ U+0000..U+D7FF ], einschließlich; oder [ U+E000..U+10FFFF ], einschließlich).</span><span class="sxs-lookup"><span data-stu-id="a6774-101">Represents a Unicode scalar value ([ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-102">Die Konstruktoren und Konvertierungs Operatoren dieses Typs überprüfen die Eingabe, sodass Consumer die APIs abrufen können, <xref:System.Text.Rune> vorausgesetzt, dass die zugrunde liegende Instanz wohl geformt ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-102">This type's constructors and conversion operators validate the input, so consumers can call the APIs assuming that the underlying <xref:System.Text.Rune> instance is well-formed.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char ch);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char -&gt; System.Text.Rune" Usage="new System.Text.Rune ch" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="a6774-103">Eine UTF-16-Codeeinheit.</span><span class="sxs-lookup"><span data-stu-id="a6774-103">A UTF-16 code unit.</span></span></param>
        <summary><span data-ttu-id="a6774-104">Erstellt eine <see cref="T:System.Text.Rune" />-Struktur aus der bereitgestellten UTF-16-Codeeinheit.</span><span class="sxs-lookup"><span data-stu-id="a6774-104">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 code unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-105"><paramref name="ch" /> stellt ein Ersatzzeichen für einen UTF-16-Codepunkt dar (U+D800..U+DFFF, einschließlich).</span><span class="sxs-lookup"><span data-stu-id="a6774-105"><paramref name="ch" /> represents a UTF-16 surrogate code point (U+D800..U+DFFF, inclusive).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(int value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : int -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-106">Ein Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-106">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="a6774-107">Erstellt eine <see cref="T:System.Text.Rune" />-Struktur aus der angegebenen 32-Bit-Ganzzahl, die einen Unicode-Skalarwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-107">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-108"><paramref name="value" /> stellt keinen Unicode-Skalarwert dar.</span><span class="sxs-lookup"><span data-stu-id="a6774-108"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : uint32 -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-109">Ein Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-109">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="a6774-110">Erstellt eine <see cref="T:System.Text.Rune" />-Struktur aus der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen, die einen Unicode-Skalarwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-110">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-111"><paramref name="value" /> stellt keinen Unicode-Skalarwert dar.</span><span class="sxs-lookup"><span data-stu-id="a6774-111"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (highSurrogate As Char, lowSurrogate As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char * char -&gt; System.Text.Rune" Usage="new System.Text.Rune (highSurrogate, lowSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="a6774-112">Das hohe Ersatzzeichen des Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="a6774-112">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="a6774-113">Das niedrige Ersatzzeichen des Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="a6774-113">The low surrogate of the surrogate pair.</span></span></param>
        <summary><span data-ttu-id="a6774-114">Erstellt eine <see cref="T:System.Text.Rune" />-Struktur aus dem bereitgestellten UTF-16-Ersatzzeichenpaar.</span><span class="sxs-lookup"><span data-stu-id="a6774-114">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 surrogate pair.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-115"><paramref name="highSurrogate" /> stellt kein hohes Ersatzzeichen für einen UTF-16-Codepunkt dar.</span><span class="sxs-lookup"><span data-stu-id="a6774-115"><paramref name="highSurrogate" /> does not represent a UTF-16 high surrogate code point.</span></span>
          
<span data-ttu-id="a6774-116">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6774-116">-or-</span></span>

<span data-ttu-id="a6774-117"><paramref name="lowSurrogate" /> stellt kein niedriges Ersatzzeichen für einen UTF-16-Codepunkt dar.</span><span class="sxs-lookup"><span data-stu-id="a6774-117"><paramref name="lowSurrogate" /> does not represent a UTF-16 low surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.CompareTo(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Rune) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Text.Rune -&gt; int&#xA;override this.CompareTo : System.Text.Rune -&gt; int" Usage="rune.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a6774-118">Die Instanz, die mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-118">The instance to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="a6774-119">Vergleicht die aktuelle Instanz mit dem angegebenen <see cref="T:System.Text.Rune" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a6774-119">Compares the current instance to the specified <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a6774-120">Eine ganze Zahl mit Vorzeichen, die die Position dieser Instanz in der Sortierreihenfolge in Bezug auf <paramref name="other" /> angibt:</span><span class="sxs-lookup"><span data-stu-id="a6774-120">A signed integer indicating the position of this instance in the sort order in relation to <paramref name="other" />:</span></span> <br /><span data-ttu-id="a6774-121">- Kleiner als 0: Diese Instanz geht <paramref name="other" /> voran.</span><span class="sxs-lookup"><span data-stu-id="a6774-121">- Less than zero: This instance precedes <paramref name="other" />.</span></span> 
<br /><span data-ttu-id="a6774-122">- 0: Die Instanz hat in der Sortierreihenfolge dieselbe Position wie <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-122">- Zero: The instance has the same position in the sort order as <paramref name="other" />.</span></span>
<br /><span data-ttu-id="a6774-123">- Größer als 0: Diese Instanz folgt <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-123">- Greater than zero: This instance follows <paramref name="other" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf16 : ReadOnlySpan&lt;char&gt; *  *  -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a6774-124">Eine schreibgeschützte UTF-16-Zeichenspanne.</span><span class="sxs-lookup"><span data-stu-id="a6774-124">A read-only UTF-16 character span.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-125">Die decodierte Rune bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-125">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="a6774-126">Die Anzahl der zur Erstellung der Rune gelesenen Zeichen bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-126">When this method returns, the number of characters read to create the rune.</span></span></param>
        <summary><span data-ttu-id="a6774-127">Decodiert das <see cref="T:System.Text.Rune" />-Element am Anfang des bereitgestellten UTF-16-Quellpuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-127">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-128"><see cref="F:System.Buffers.OperationStatus.Done" />, wenn der Quellpuffer mit einem gültigen, UTF-16-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-128"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="a6774-129"><paramref name="result" /> enthält dann die decodierte <see cref="T:System.Text.Rune" />-Eigenschaft und <paramref name="charsConsumed" /> die Anzahl an <see cref="T:System.Char" />-Werten, die in dem Eingabepuffer zur Codierung der <see cref="T:System.Text.Rune" />-Struktur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-129"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="a6774-130"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, wenn der Quellpuffer leer ist oder nur ein eigenständiges hohe UTF-16-Ersatzzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-130"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="a6774-131"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="charsConsumed" /> enthält die Länge des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-131"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="a6774-132"><see cref="F:System.Buffers.OperationStatus.InvalidData" />, wenn der Quellpuffer mit einem falsch formatierten, UTF-16-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-132"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="a6774-133"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="charsConsumed" /> enthält die Anzahl von <see cref="T:System.Char" />-Werten, die zum Codieren der falsch formatierten Sequenz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-133"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-134">Die allgemeine Konvention besteht darin, diese Methode in einer-Schleife aufzurufen und `source` den Puffer `charsConsumed` in jeder Iterations Schleife durch Elemente aufzuteilen.</span><span class="sxs-lookup"><span data-stu-id="a6774-134">The general convention is to call this method in a loop, slicing the `source` buffer by `charsConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="a6774-135">`result` Enthält bei jeder Iterationen der Schleife den echten Skalarwert, wenn die Daten erfolgreich decodiert wurden, oder enthält <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> , wenn die Daten nicht erfolgreich decodiert wurden.</span><span class="sxs-lookup"><span data-stu-id="a6774-135">On each iteration of the loop, `result` contains the real scalar value if the data was successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data was not successfully decoded.</span></span> <span data-ttu-id="a6774-136">Dieses Muster bietet bequeme automatische U + FFFD-Ersetzung ungültiger Sequenzen beim Durchlaufen der Schleife.</span><span class="sxs-lookup"><span data-stu-id="a6774-136">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune result, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef result As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; *  *  -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf8 (source, result, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a6774-137">Eine schreibgeschützte UTF-8-codierte Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="a6774-137">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-138">Die decodierte Rune bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-138">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="a6774-139">Die Anzahl von Bytes, die bei der Erstellung der Rune gelesen werden, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-139">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="a6774-140">Decodiert das <see cref="T:System.Text.Rune" />-Element am Anfang des bereitgestellten UTF-8-Quellpuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-140">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-141"><see cref="F:System.Buffers.OperationStatus.Done" />, wenn der Quellpuffer mit einem gültigen, UTF-8-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-141"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="a6774-142"><paramref name="result" /> enthält dann die decodierte <see cref="T:System.Text.Rune" />-Eigenschaft und <paramref name="bytesConsumed" /> die Anzahl an <see cref="T:System.Byte" />-Werten, die in dem Eingabepuffer zur Codierung der <see cref="T:System.Text.Rune" />-Struktur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-142"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="a6774-143"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, wenn der Quellpuffer leer ist oder nur ein eigenständiges hohe UTF-8-Ersatzzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-143"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="a6774-144"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="bytesConsumed" /> enthält die Länge des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-144"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="a6774-145"><see cref="F:System.Buffers.OperationStatus.InvalidData" />, wenn der Quellpuffer mit einem falsch formatierten, UTF-8-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-145"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="a6774-146"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="bytesConsumed" /> enthält die Anzahl von <see cref="T:System.Byte" />-Werten, die im Eingabepuffer zum Codieren der falsch formatierten Sequenz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-146"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-147">Die allgemeine Konvention besteht darin, diese Methode in einer-Schleife aufzurufen und `source` den Puffer `bytesConsumed` in jeder Iterations Schleife durch Elemente aufzuteilen.</span><span class="sxs-lookup"><span data-stu-id="a6774-147">The general convention is to call this method in a loop, slicing the `source` buffer by `bytesConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="a6774-148">`result` Enthält bei jeder Iterationen der Schleife den echten Skalarwert, wenn er erfolgreich decodiert wurde, oder enthält <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> , wenn die Daten nicht erfolgreich decodiert werden konnten.</span><span class="sxs-lookup"><span data-stu-id="a6774-148">On each iteration of the loop, `result` contains the real scalar value if successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data could not be successfully decoded.</span></span> <span data-ttu-id="a6774-149">Dieses Muster bietet bequeme automatische U + FFFD-Ersetzung ungültiger Sequenzen beim Durchlaufen der Schleife.</span><span class="sxs-lookup"><span data-stu-id="a6774-149">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf16 : ReadOnlySpan&lt;char&gt; *  *  -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a6774-150">Eine schreibgeschützte UTF-16-codierte Zeichenspanne.</span><span class="sxs-lookup"><span data-stu-id="a6774-150">A read-only UTF-16 encoded character span.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-151">Die decodierte Rune bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-151">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="a6774-152">Die Anzahl von Bytes, die bei der Erstellung der Rune gelesen werden, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-152">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="a6774-153">Decodiert das <see cref="T:System.Text.Rune" />-Element am Ende des bereitgestellten UTF-16-Quellpuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-153">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-154"><see cref="F:System.Buffers.OperationStatus.Done" />, wenn der Quellpuffer mit einem gültigen, UTF-16-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-154"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="a6774-155"><paramref name="result" /> enthält dann die decodierte <see cref="T:System.Text.Rune" />-Eigenschaft und <paramref name="charsConsumed" /> die Anzahl an <see cref="T:System.Char" />-Werten, die in dem Eingabepuffer zur Codierung der <see cref="T:System.Text.Rune" />-Struktur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-155"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="a6774-156"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, wenn der Quellpuffer leer ist oder nur ein eigenständiges hohe UTF-16-Ersatzzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-156"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="a6774-157"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="charsConsumed" /> enthält die Länge des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-157"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="a6774-158"><see cref="F:System.Buffers.OperationStatus.InvalidData" />, wenn der Quellpuffer mit einem falsch formatierten, UTF-16-codierten Skalarwert beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-158"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="a6774-159"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="charsConsumed" /> enthält die Anzahl von <see cref="T:System.Char" />-Werten, die zum Codieren der falsch formatierten Sequenz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-159"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-160">Diese Methode ist sehr ähnlich <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, mit der Ausnahme, dass der Aufrufer anstelle von vorwärts eine Schleife rückwärts durchlaufen kann.</span><span class="sxs-lookup"><span data-stu-id="a6774-160">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="a6774-161">Die typische Aufruf Konvention besteht darin, dass der Aufrufer bei jeder Iteration der Schleife die abschließenden `charsConsumed` Elemente `source` des Puffers segmentieren soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-161">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `charsConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune value, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; value, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef value As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % value, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf8 : ReadOnlySpan&lt;byte&gt; *  *  -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf8 (source, value, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a6774-162">Eine schreibgeschützte UTF-8-codierte Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="a6774-162">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="value"><span data-ttu-id="a6774-163">Die decodierte Rune bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-163">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="a6774-164">Die Anzahl von Bytes, die bei der Erstellung der Rune gelesen werden, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-164">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="a6774-165">Decodiert das <see cref="T:System.Text.Rune" />-Element am Ende des bereitgestellten UTF-8-Quellpuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-165">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-166"><see cref="F:System.Buffers.OperationStatus.Done" />, wenn der Quellpuffer mit einem gültigen, UTF-8-codierten Skalarwert endet.</span><span class="sxs-lookup"><span data-stu-id="a6774-166"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer ends with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="a6774-167"><paramref name="result" /> enthält dann die decodierte <see cref="T:System.Text.Rune" />-Eigenschaft und <paramref name="bytesConsumed" /> die Anzahl an <see cref="T:System.Byte" />-Werten, die in dem Eingabepuffer zur Codierung der <see cref="T:System.Text.Rune" />-Struktur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-167"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="a6774-168"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, wenn der Quellpuffer leer ist oder nur ein eigenständiges hohe UTF-8-Ersatzzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-168"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="a6774-169"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="bytesConsumed" /> enthält die Länge des Eingabepuffers.</span><span class="sxs-lookup"><span data-stu-id="a6774-169"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="a6774-170"><see cref="F:System.Buffers.OperationStatus.InvalidData" />, wenn der Quellpuffer mit einem falsch formatierten, UTF-8-codierten Skalarwert endet.</span><span class="sxs-lookup"><span data-stu-id="a6774-170"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer ends with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="a6774-171"><paramref name="result" /> enthält dann <see cref="P:System.Text.Rune.ReplacementChar" /> und <paramref name="bytesConsumed" /> enthält die Anzahl von <see cref="T:System.Byte" />-Werten, die im Eingabepuffer zum Codieren der falsch formatierten Sequenz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-171"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-172">Diese Methode ist sehr ähnlich <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, mit der Ausnahme, dass der Aufrufer anstelle von vorwärts eine Schleife rückwärts durchlaufen kann.</span><span class="sxs-lookup"><span data-stu-id="a6774-172">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="a6774-173">Die typische Aufruf Konvention besteht darin, dass der Aufrufer bei jeder Iteration der Schleife die abschließenden `bytesConsumed` Elemente `source` des Puffers segmentieren soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-173">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `bytesConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf16">
      <MemberSignature Language="C#" Value="public int EncodeToUtf16 (Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf16(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf16 (destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf16(Span&lt;char&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf16 : Span&lt;char&gt; -&gt; int" Usage="rune.EncodeToUtf16 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a6774-174">Der Puffer, in den dieser Wert im UTF-16-Format geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-174">The buffer to which to write this value as UTF-16.</span></span></param>
        <summary><span data-ttu-id="a6774-175">Codiert diese <see cref="T:System.Text.Rune" />-Struktur in einen Zielpuffer im UTF-16-Format.</span><span class="sxs-lookup"><span data-stu-id="a6774-175">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-176">Die Anzahl der <see cref="T:System.Char" />-Werte, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="a6774-176">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6774-177"><paramref name="destination" /> ist nicht groß genug, um die Ausgabe aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="a6774-177"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public int EncodeToUtf8 (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf8(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf8 (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf8(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf8 : Span&lt;byte&gt; -&gt; int" Usage="rune.EncodeToUtf8 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a6774-178">Der Puffer, in den dieser Wert im UTF-8-Format geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-178">The buffer to which to write this value as UTF-8.</span></span></param>
        <summary><span data-ttu-id="a6774-179">Codiert diese <see cref="T:System.Text.Rune" />-Struktur in einen Zielpuffer im UTF-8-Format.</span><span class="sxs-lookup"><span data-stu-id="a6774-179">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-180">Die Anzahl der <see cref="T:System.Byte" />-Werte, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="a6774-180">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6774-181"><paramref name="destination" /> ist nicht groß genug, um die Ausgabe aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="a6774-181"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rune.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a6774-182">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-182">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="a6774-183">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="a6774-183">Returns a value that indicates whether the current instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="a6774-184"><see langword="true" />, wenn <paramref name="obj" /> gleich dem Typ <see cref="T:System.Text.Rune" /> und der aktuellen Instanz ist; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-184"><see langword="true" /> if <paramref name="obj" /> is of type <see cref="T:System.Text.Rune" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Rune -&gt; bool" Usage="rune.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a6774-185">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-185">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="a6774-186">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine angegebene Rune gleich sind.</span><span class="sxs-lookup"><span data-stu-id="a6774-186">Returns a value that indicates whether the current instance and a specified rune are equal.</span></span></summary>
        <returns><span data-ttu-id="a6774-187"><see langword="true" />, wenn die angegebene Instanz und <paramref name="other" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-187"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rune.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6774-188">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="a6774-188">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="a6774-189">Der Hashcode für diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="a6774-189">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetNumericValue(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (value As Rune) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : System.Text.Rune -&gt; double" Usage="System.Text.Rune.GetNumericValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-190">Die Rune, für die der numerische Wert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-190">The rune for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="a6774-191">Ruft den numerischen Wert ab, der der angegebenen Rune zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-191">Gets the numeric value associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="a6774-192">Der numerische Wert, der <paramref name="value" /> zugeordnet ist, oder „-1“, wenn <paramref name="value" /> kein numerisches Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-192">The numeric value associated with <paramref name="value" />, or -1 if <paramref name="value" /> doesn't represent a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-193">Diese Methode hat ein Verhalten, <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>das entspricht.</span><span class="sxs-lookup"><span data-stu-id="a6774-193">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a6774-194">Weitere Informationen finden Sie in dieser Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="a6774-194">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuneAt">
      <MemberSignature Language="C#" Value="public static System.Text.Rune GetRuneAt (string input, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune GetRuneAt(string input, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetRuneAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRuneAt (input As String, index As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune GetRuneAt(System::String ^ input, int index);" />
      <MemberSignature Language="F#" Value="static member GetRuneAt : string * int -&gt; System.Text.Rune" Usage="System.Text.Rune.GetRuneAt (input, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="a6774-195">Die Zeichenfolge, aus der die Rune erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-195">The string from which to create the rune.</span></span></param>
        <param name="index"><span data-ttu-id="a6774-196">Die Anfangsposition in <paramref name="input" />, an der die Rune erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-196">The starting position in <paramref name="input" /> at which to create the rune.</span></span></param>
        <summary><span data-ttu-id="a6774-197">Ruft die <see cref="T:System.Text.Rune" />-Struktur ab, die an der angegebenen Position in einer Zeichenfolge beginnt.</span><span class="sxs-lookup"><span data-stu-id="a6774-197">Gets the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="a6774-198">Die aus <paramref name="input" /> abgerufene Rune unter dem angegebenen <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-198">The rune obtained from <paramref name="input" /> at the specified <paramref name="index" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6774-199"><paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-199"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6774-200"><paramref name="index" /> verweist nicht auf den Anfang eines gültigen Skalarwerts in <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-200"><paramref name="index" /> does not reference the start of a valid scalar value in <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-201"><paramref name="index" /> liegt außerhalb des Bereichs von <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-201"><paramref name="index" /> is outside the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (value As Rune) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : System.Text.Rune -&gt; System.Globalization.UnicodeCategory" Usage="System.Text.Rune.GetUnicodeCategory value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-202">Die Rune, für die die Unicode-Kategorie abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-202">The rune for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="a6774-203">Ruft die Unicode-Kategorie ab, die der angegebenen Rune zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-203">Gets the Unicode category associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="a6774-204">Die Unicode-Kategorie, die <paramref name="value" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-204">The Unicode category associated with <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-205">Diese Methode hat ein Verhalten, <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>das entspricht.</span><span class="sxs-lookup"><span data-stu-id="a6774-205">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a6774-206">Weitere Informationen finden Sie in dieser Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="a6774-206">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAscii">
      <MemberSignature Language="C#" Value="public bool IsAscii { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAscii" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsAscii" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAscii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAscii { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAscii : bool" Usage="System.Text.Rune.IsAscii" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-207">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Text.Rune" /> zugeordnete Skalarwert innerhalb des ASCII-Codierungsbereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="a6774-207">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the ASCII encoding range.</span></span></summary>
        <value><span data-ttu-id="a6774-208"><see langword="true" />, wenn der zugeordnete Skalarwert innerhalb des ASCII-Codierungs Bereichs ([U + 0000.. U + 007F]) liegt und daher durch eine einzelne UTF-8-Code Einheit darstellbar ist. <see langword="false" />andernfalls.</span><span class="sxs-lookup"><span data-stu-id="a6774-208"><see langword="true" /> if the scalar value associated is within the ASCII encoding range ([ U+0000..U+007F ]) and therefore representable by a single UTF-8 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmp">
      <MemberSignature Language="C#" Value="public bool IsBmp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBmp" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsBmp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBmp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBmp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBmp : bool" Usage="System.Text.Rune.IsBmp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-209">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Text.Rune" /> zugeordnete Skalarwert innerhalb des BMP-Codierungsbereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="a6774-209">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the BMP encoding range.</span></span></summary>
        <value><span data-ttu-id="a6774-210"><see langword="true" />, wenn der zugeordnete Skalarwert innerhalb des BMP-Codierungs Bereichs ([U + 0000.. U + FFFF]) liegt und daher durch eine einzelne UTF-16-Code Einheit darstellbar ist. <see langword="false" />andernfalls.</span><span class="sxs-lookup"><span data-stu-id="a6774-210"><see langword="true" /> if the scalar value associated is within the BMP encoding range ([ U+0000..U+FFFF ]) and therefore representable by a single UTF-16 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsControl(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsControl : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsControl value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-211">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-211">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-212">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Steuerzeichen kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-212">Returns a value that indicates whether the specified rune is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="a6774-213"><see langword="true" />, wenn <paramref name="value" /> ein Steuerzeichen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-213"><see langword="true" /> if <paramref name="value" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-214">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des <xref:System.Globalization.UnicodeCategory.Control>Ergebnisses mit.</span><span class="sxs-lookup"><span data-stu-id="a6774-214">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.Control>.</span></span>

<span data-ttu-id="a6774-215">Gemäß [Unicode-Stabilitätsrichtlinien](https://www.unicode.org/policies/stability_policy.html)wird der Satz von Steuerzeichen permanent als die Vereinigung von `[ U+0000..U+001F ]` und `[ U+007F..U+009F ]`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a6774-215">Per [Unicode stability policies](https://www.unicode.org/policies/stability_policy.html), the set of control characters is permanently fixed to be the union of `[ U+0000..U+001F ]` and `[ U+007F..U+009F ]`.</span></span>

<span data-ttu-id="a6774-216">Weitere Informationen finden Sie unter <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-216">For more information, see <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-217">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-217">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-218">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Dezimalzahl kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-218">Returns a value that indicates whether the specified rune is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="a6774-219"><see langword="true" />, wenn <paramref name="value" /> eine Dezimalzahl ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-219"><see langword="true" /> if <paramref name="value" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-220">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>Ergebnisses mit.</span><span class="sxs-lookup"><span data-stu-id="a6774-220">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="a6774-221">Weitere Informationen finden Sie unter <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-221">For more information, see <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetter(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetter : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-222">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-222">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-223">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Buchstabe kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-223">Returns a value that indicates whether the specified rune is categorized as a letter.</span></span></summary>
        <returns><span data-ttu-id="a6774-224"><see langword="true" />, wenn <paramref name="value" /> ein Buchstabe ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-224"><see langword="true" /> if <paramref name="value" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-225">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.LowercaseLetter> <xref:System.Globalization.UnicodeCategory.TitlecaseLetter> <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>,, und <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span><span class="sxs-lookup"><span data-stu-id="a6774-225">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, and <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span></span>

<span data-ttu-id="a6774-226">Weitere Informationen finden Sie unter <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-226">For more information, see <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetterOrDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetterOrDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-227">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-227">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-228">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Buchstabe oder Dezimalzahl kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-228">Returns a value that indicates whether the specified rune is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="a6774-229"><see langword="true" />, wenn <paramref name="value" /> ein Buchstabe oder eine Dezimalzahl ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-229"><see langword="true" /> if <paramref name="value" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-230">Diese Methode entspricht <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> dem Abfragen und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.OtherLetter> <xref:System.Globalization.UnicodeCategory.ModifierLetter> <xref:System.Globalization.UnicodeCategory.LowercaseLetter> <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>,,, und <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span><span class="sxs-lookup"><span data-stu-id="a6774-230">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, <xref:System.Globalization.UnicodeCategory.OtherLetter>, and <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="a6774-231">Weitere Informationen finden Sie unter <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-231">For more information, see <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLower(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLower : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLower value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-232">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-232">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-233">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Kleinbuchstabe kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-233">Returns a value that indicates whether the specified rune is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="a6774-234"><see langword="true" />, wenn <paramref name="value" /> ein Kleinbuchstabe ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-234"><see langword="true" /> if <paramref name="value" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-235">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des <xref:System.Globalization.UnicodeCategory.LowercaseLetter>Ergebnisses mit.</span><span class="sxs-lookup"><span data-stu-id="a6774-235">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.LowercaseLetter>.</span></span>

<span data-ttu-id="a6774-236">Weitere Informationen finden Sie unter <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-236">For more information, see <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsNumber(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsNumber : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsNumber value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-237">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-237">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-238">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Zahl kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-238">Returns a value that indicates whether the specified rune is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="a6774-239"><see langword="true" />, wenn <paramref name="value" /> eine Zahl ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-239"><see langword="true" /> if <paramref name="value" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-240">Diese Methode entspricht dem <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Abfragen und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>und <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span><span class="sxs-lookup"><span data-stu-id="a6774-240">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>, and <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span></span>

<span data-ttu-id="a6774-241">Weitere Informationen finden Sie unter <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-241">For more information, see <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsPunctuation(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsPunctuation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-242">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-242">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-243">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Satzzeichen kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-243">Returns a value that indicates whether the specified rune is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="a6774-244"><see langword="true" />, wenn <paramref name="value" /> ein Satzzeichen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-244"><see langword="true" /> if <paramref name="value" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-245">Diese <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Methode entspricht dem Abfragen und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.OtherPunctuation> <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation> <xref:System.Globalization.UnicodeCategory.DashPunctuation> <xref:System.Globalization.UnicodeCategory.OpenPunctuation> <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation> <xref:System.Globalization.UnicodeCategory.ClosePunctuation>,,,,, und. <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation></span><span class="sxs-lookup"><span data-stu-id="a6774-245">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation>, <xref:System.Globalization.UnicodeCategory.DashPunctuation>, <xref:System.Globalization.UnicodeCategory.OpenPunctuation>, <xref:System.Globalization.UnicodeCategory.ClosePunctuation>, <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>, <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>, and <xref:System.Globalization.UnicodeCategory.OtherPunctuation>.</span></span>

<span data-ttu-id="a6774-246">Weitere Informationen finden Sie unter <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-246">For more information, see <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSeparator(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSeparator value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-247">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-247">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-248">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Trennzeichen kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-248">Returns a value that indicates whether the specified rune is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="a6774-249"><see langword="true" />, wenn <paramref name="value" /> ein Trennzeichen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-249"><see langword="true" /> if <paramref name="value" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-250">Diese Methode entspricht dem <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Abfragen und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>und <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span><span class="sxs-lookup"><span data-stu-id="a6774-250">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span>

<span data-ttu-id="a6774-251">Weitere Informationen finden Sie unter <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-251">For more information, see <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSymbol(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSymbol value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-252">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-252">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-253">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Symbolzeichen kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-253">Returns a value that indicates whether the specified rune is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="a6774-254"><see langword="true" />, wenn <paramref name="value" /> ein Symbolzeichen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-254"><see langword="true" /> if <paramref name="value" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-255">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol> <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, und <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span><span class="sxs-lookup"><span data-stu-id="a6774-255">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol>, <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, and <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span></span>

<span data-ttu-id="a6774-256">Weitere Informationen finden Sie unter <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-256">For more information, see <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsUpper(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsUpper : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsUpper value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-257">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-257">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-258">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Großbuchstabe kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-258">Returns a value that indicates whether the specified rune is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="a6774-259"><see langword="true" />, wenn <paramref name="value" /> ein Großbuchstabe ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-259"><see langword="true" /> if <paramref name="value" /> is an uppercase letter; otherwise,<see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-260">Diese Methode entspricht dem Abfragen <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> und Vergleichen des <xref:System.Globalization.UnicodeCategory.UppercaseLetter>Ergebnisses mit.</span><span class="sxs-lookup"><span data-stu-id="a6774-260">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.UppercaseLetter>.</span></span>

<span data-ttu-id="a6774-261">Weitere Informationen finden Sie unter <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-261">For more information, see <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(int value);" />
      <MemberSignature Language="F#" Value="static member IsValid : int -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-262">Der Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-262">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="a6774-263">Gibt einen Wert zurück, der angibt, ob eine 32-Bit-Ganzzahl mit Vorzeichen einen gültigen Unicode-Skalarwert darstellt. Dieser liegt im Bereich [ U+0000..U+D7FF ], einschließlich; oder [ U+E000..U+10FFFF ], einschließlich.</span><span class="sxs-lookup"><span data-stu-id="a6774-263">Returns a value that indicates whether a 32-bit signed integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="a6774-264"><see langword="true" />, wenn <paramref name="value" /> ein gültiger Unicode-Skalarwert ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-264"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member IsValid : uint32 -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-265">Der Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-265">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="a6774-266">Gibt einen Wert zurück, der angibt, ob eine 32-Bit-Ganzzahl ohne Vorzeichen einen gültigen Unicode-Skalarwert darstellt. Dieser liegt im Bereich [ U+0000..U+D7FF ], einschließlich; oder [ U+E000..U+10FFFF ], einschließlich.</span><span class="sxs-lookup"><span data-stu-id="a6774-266">Returns a value that indicates whether a 32-bit unsigned integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive, or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="a6774-267"><see langword="true" />, wenn <paramref name="value" /> ein gültiger Unicode-Skalarwert ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-267"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsWhiteSpace(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-268">Die auszuwertende Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-268">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="a6774-269">Gibt einen Wert zurück, der angibt, ob die angegebene Rune als Leerzeichen kategorisiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-269">Returns a value that indicates whether the specified rune is categorized as a white space character.</span></span></summary>
        <returns><span data-ttu-id="a6774-270"><see langword="true" />, wenn <paramref name="value" /> ein Leerzeichen ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-270"><see langword="true" /> if <paramref name="value" /> is a white space character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-271">Diese Methode entspricht im Allgemeinen dem <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Abfragen und Vergleichen des Ergebnisses mit den Werten <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>und <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span><span class="sxs-lookup"><span data-stu-id="a6774-271">This method is generally equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span> <span data-ttu-id="a6774-272">Es gibt jedoch einige <xref:System.Text.Rune>in der <xref:System.Globalization.UnicodeCategory.Control> Kategorie, die auch als leer Raum Zeichen klassifiziert werden, und diese Methode berücksichtigt diese Werte.</span><span class="sxs-lookup"><span data-stu-id="a6774-272">However, there are some <xref:System.Text.Rune>s in the <xref:System.Globalization.UnicodeCategory.Control> category which are also classified as white space characters, and this method accounts for those values.</span></span>

<span data-ttu-id="a6774-273">Weitere Informationen finden Sie unter <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a6774-273">For more information, see <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Equality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-274">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-274">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-275">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-275">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-276">Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Text.Rune" />-Instanzen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="a6774-276">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="a6774-277"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-277"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Char)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (ch As Char) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(char ch);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : char -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="a6774-278">Das zu konvertierende 16-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-278">The 16-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="a6774-279">Definiert eine explizite Konvertierung eines 16-Bit-Unicode-Zeichens in eine <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-279">Defines an explicit conversion of a 16-bit Unicode character to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-280"><paramref name="ch" /> als 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-280"><paramref name="ch" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-281"><paramref name="ch" /> ist ein Unicode-Skalar, der für einen Ersatzcodepunkt steht.</span><span class="sxs-lookup"><span data-stu-id="a6774-281"><paramref name="ch" /> is a Unicode scalar that represents a surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Int32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(int value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : int -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-282">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-282">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="a6774-283">Definiert eine explizite Konvertierung einer 32-Bit-Ganzzahl mit Vorzeichen in den Wert einer <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-283">Defines an explicit conversion of a 32-bit signed integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-284"><paramref name="value" /> als 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-284"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-285"><paramref name="value" /> ist ein ungültiger Unicode-Skalar.</span><span class="sxs-lookup"><span data-stu-id="a6774-285"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.UInt32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As UInteger) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : uint32 -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-286">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-286">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="a6774-287">Definiert eine explizite Konvertierung einer 32-Bit-Ganzzahl ohne Vorzeichen in den Wert einer <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-287">Defines an explicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-288"><paramref name="value" /> als 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-288"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-289"><paramref name="value" /> ist ein ungültiger Unicode-Skalar.</span><span class="sxs-lookup"><span data-stu-id="a6774-289"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-290">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-290">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-291">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-291">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-292">Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Text.Rune" /> größer als eine anderes angegebenes <see cref="T:System.Text.Rune" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-292">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-293"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-293"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-294">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-294">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-295">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-295">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-296">Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Text.Rune" /> größer oder gleich einem anderen angegebenen <see cref="T:System.Text.Rune" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-296">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-297"><see langword="true" />, wenn <paramref name="left" /> größer oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-297"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Inequality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="System.Text.Rune.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-298">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-298">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-299">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-299">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-300">Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Text.Rune" />-Instanzen über unterschiedliche Werte verfügen.</span><span class="sxs-lookup"><span data-stu-id="a6774-300">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances have different values.</span></span></summary>
        <returns><span data-ttu-id="a6774-301"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-301"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-302">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-302">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-303">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-303">the second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-304">Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Text.Rune" /> kleiner als ein anderes angegebenes <see cref="T:System.Text.Rune" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-304">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-305"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-305"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a6774-306">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-306">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a6774-307">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6774-307">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a6774-308">Gibt einen Wert zurück, der angibt, ob ein angegebenes <see cref="T:System.Text.Rune" /> kleiner oder gleich einem anderen angegebenen <see cref="T:System.Text.Rune" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-308">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="a6774-309"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-309"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plane">
      <MemberSignature Language="C#" Value="public int Plane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Plane" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Plane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Plane As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Plane { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Plane : int" Usage="System.Text.Rune.Plane" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-310">Ruft die Unicode-Ebene (0 bis einschließlich 16) ab, die diesen Skalar enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-310">Gets the Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></summary>
        <value><span data-ttu-id="a6774-311">Die Unicode-Ebene (0 bis 16, einschließlich), die diesen skalaren enthält.</span><span class="sxs-lookup"><span data-stu-id="a6774-311">The Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementChar">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ReplacementChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Text.Rune ReplacementChar" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.ReplacementChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementChar As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Rune ReplacementChar { System::Text::Rune get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementChar : System.Text.Rune" Usage="System.Text.Rune.ReplacementChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-312">Ruft eine <see cref="T:System.Text.Rune" />-Instanz ab, die das Unicode-Ersatzzeichen U+FFFD darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-312">Gets a <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></summary>
        <value><span data-ttu-id="a6774-313">Eine <see cref="T:System.Text.Rune" />-Instanz, die das Unicode-Ersatzzeichen U+FFFD darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-313">A <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLower (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLower(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLower(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLower(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLower (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-314">Das zu konvertierende 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-314">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="a6774-315">Ein Objekt, das kulturspezifische Regeln zur Groß- und Kleinschreibung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-315">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="a6774-316">Gibt eine in Kleinbuchstaben konvertierte Kopie der angegebenen <see cref="T:System.Text.Rune" /> zurück, wobei die Regeln der Groß- und Kleinschreibung der angegebenen Kultur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-316">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="a6774-317">Die Entsprechung von <paramref name="value" /> in Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="a6774-317">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLowerInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLowerInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLowerInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLowerInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLowerInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-318">Das zu konvertierende 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-318">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="a6774-319">Gibt eine in Kleinbuchstaben konvertierte Kopie der angegebenen <see cref="T:System.Text.Rune" /> zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-319">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="a6774-320">Die Entsprechung von <paramref name="value" /> in Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="a6774-320">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rune.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6774-321">Gibt die Zeichenfolgendarstellung dieser <see cref="T:System.Text.Rune" />-Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="a6774-321">Returns the string representation of this <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a6774-322">Die Zeichenfolgendarstellung für diese Rune.</span><span class="sxs-lookup"><span data-stu-id="a6774-322">The string representation of this rune.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpper (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpper(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpper(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpper(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpper (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-323">Das zu konvertierende 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-323">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="a6774-324">Ein Objekt, das kulturspezifische Regeln zur Groß- und Kleinschreibung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-324">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="a6774-325">Gibt eine in Großbuchstaben konvertierte Kopie der angegebenen <see cref="T:System.Text.Rune" /> zurück, wobei die Regeln der Groß- und Kleinschreibung der angegebenen Kultur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-325">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="a6774-326">Die Entsprechung von <paramref name="value" /> in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="a6774-326">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpperInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpperInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpperInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpperInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpperInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-327">Das zu konvertierende 32-Bit-Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a6774-327">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="a6774-328">Gibt eine in Großbuchstaben konvertierte Kopie der angegebenen <see cref="T:System.Text.Rune" /> zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a6774-328">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="a6774-329">Die Entsprechung von <paramref name="value" /> in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="a6774-329">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char ch, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char ch, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (ch As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char ch, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char *  -&gt; bool" Usage="System.Text.Rune.TryCreate (ch, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="a6774-330">Das Zeichen, aus dem die Rune erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-330">The character from which to create the rune.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-331">Die Rune, die <paramref name="ch" /> entspricht, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-331">When this method returns, the rune that corresponds to <paramref name="ch" />.</span></span></param>
        <summary><span data-ttu-id="a6774-332">Versucht, eine <see cref="T:System.Text.Rune" />-Struktur aus einem angegebenen Zeichen zu erstellen, und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="a6774-332">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified character and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="a6774-333"><see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-333"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (int value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As Integer, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(int value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : int *  -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-334">Der Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-334">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-335">Die Rune, die <paramref name="value" /> entspricht, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-335">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="a6774-336">Versucht, eine <see cref="T:System.Text.Rune" />-Struktur aus der angegebenen ganzen Zahl mit Vorzeichen zu erstellen, die einen Unicode-Skalarwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-336">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified signed integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="a6774-337"><see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-337"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (uint value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(unsigned int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.UInt32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As UInteger, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::UInt32 value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : uint32 *  -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6774-338">Der Unicode-Skalarwert.</span><span class="sxs-lookup"><span data-stu-id="a6774-338">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-339">Die Rune, die <paramref name="value" /> entspricht, wenn diese Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6774-339">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="a6774-340">Versucht, eine <see cref="T:System.Text.Rune" />-Struktur aus der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die einen Unicode-Skalarwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6774-340">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="a6774-341"><see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-341"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char highSurrogate, char lowSurrogate, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char highSurrogate, char lowSurrogate, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (highSurrogate As Char, lowSurrogate As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char highSurrogate, char lowSurrogate, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * char *  -&gt; bool" Usage="System.Text.Rune.TryCreate (highSurrogate, lowSurrogate, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="a6774-342">Das hohe Ersatzzeichen des Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="a6774-342">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="a6774-343">Das niedrige Ersatzzeichen des Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="a6774-343">The low surrogate of the surrogate pair.</span></span></param>
        <param name="result"><span data-ttu-id="a6774-344">Die Rune, die dem angegebenen Ersatzzeichenpaar entspricht.</span><span class="sxs-lookup"><span data-stu-id="a6774-344">The rune that corresponds to the specified surrogate pair.</span></span></param>
        <summary><span data-ttu-id="a6774-345">Versucht, eine <see cref="T:System.Text.Rune" />-Struktur aus einem angegebenen UTF-16-Ersatzzeichenpaar zu erstellen, und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="a6774-345">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified UTF-16 surrogate pair and returns a value that indicates whether the operation was successful.</span></span></summary>
        <returns><span data-ttu-id="a6774-346"><see langword="true" />, wenn der Vorgang erfolgreich war; <see langword="false" />, wenn die Eingabewerte kein richtig formatiertes UTF-16-Ersatzzeichenpaar darstellen.</span><span class="sxs-lookup"><span data-stu-id="a6774-346"><see langword="true" /> if the operation succeeded; <see langword="false" /> if the input values don't represent a well-formed UTF-16 surrogate pair.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf16">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf16 (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf16(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf16 (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf16(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf16 : Span&lt;char&gt; *  -&gt; bool" Usage="rune.TryEncodeToUtf16 (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a6774-347">Der Puffer, in den dieser Wert im UTF-16-Format geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-347">The buffer to which to write this value as UTF-16 encoded value.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="a6774-348">Die Anzahl von <see cref="T:System.Char" /> in <paramref name="destination" /> geschriebenen Werte, oder 0, wenn der Zielpuffer nicht groß genug ist, um die Ausgabe zu enthalten.</span><span class="sxs-lookup"><span data-stu-id="a6774-348">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="a6774-349">Codiert diese <see cref="T:System.Text.Rune" />-Struktur in einen verschlüsselten Zielpuffer im UTF-16-Format.</span><span class="sxs-lookup"><span data-stu-id="a6774-349">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-350"><see langword="true" />, wenn der Wert in den Puffer geschrieben wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-350"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="a6774-351">Die <xref:System.Text.Rune.Utf16SequenceLength> -Eigenschaft kann im Voraus abgefragt werden, um die erforderliche Größe `destination` des Puffers zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a6774-351">The <xref:System.Text.Rune.Utf16SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf8">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf8 (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf8(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf8 (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf8(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf8 : Span&lt;byte&gt; *  -&gt; bool" Usage="rune.TryEncodeToUtf8 (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a6774-352">Der Puffer, in der Wert im UTF-8-Format geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-352">The buffer to which to write the UTF-8 encoded value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="a6774-353">Die Anzahl von <see cref="T:System.Byte" /> in <paramref name="destination" /> geschriebenen Werte, oder 0, wenn der Zielpuffer nicht groß genug ist, um die Ausgabe zu enthalten.</span><span class="sxs-lookup"><span data-stu-id="a6774-353">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="a6774-354">Codiert diese <see cref="T:System.Text.Rune" />-Struktur in einen Zielpuffer im UTF-8-Format.</span><span class="sxs-lookup"><span data-stu-id="a6774-354">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="a6774-355"><see langword="true" />, wenn der Wert in den Puffer geschrieben wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-355"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="a6774-356">Die <xref:System.Text.Rune.Utf8SequenceLength> -Eigenschaft kann im Voraus abgefragt werden, um die erforderliche Größe `destination` des Puffers zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a6774-356">The <xref:System.Text.Rune.Utf8SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRuneAt">
      <MemberSignature Language="C#" Value="public static bool TryGetRuneAt (string input, int index, out System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetRuneAt(string input, int32 index, [out] valuetype System.Text.Rune&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryGetRuneAt(System.String,System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetRuneAt (input As String, index As Integer, ByRef value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetRuneAt(System::String ^ input, int index, [Runtime::InteropServices::Out] System::Text::Rune % value);" />
      <MemberSignature Language="F#" Value="static member TryGetRuneAt : string * int *  -&gt; bool" Usage="System.Text.Rune.TryGetRuneAt (input, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="a6774-357">Die Zeichenfolge, aus der die Rune extrahiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-357">The string from which to extract the rune.</span></span></param>
        <param name="index"><span data-ttu-id="a6774-358">Der nullbasierte Index, aus dem die Rune extrahiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6774-358">The zero-based index from which to extract the rune.</span></span></param>
        <param name="value"><span data-ttu-id="a6774-359">Die decodierte Rune bei Rückgabe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a6774-359">When this method returns, the decoded rune.</span></span></param>
        <summary><span data-ttu-id="a6774-360">Versucht, die <see cref="T:System.Text.Rune" />-Klasse abzurufen, die an der angegebenen Position in einer Zeichenfolge beginnt und einen Wert zurückgibt, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="a6774-360">Attempts to get the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string, and return a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="a6774-361"><see langword="true" />, wenn ein Skalarwert erfolgreich aus dem angegebenen Index extrahiert wurde; <see langword="false" />, wenn ein Wert aufgrund ungültiger Daten nicht extrahiert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="a6774-361"><see langword="true" /> if a scalar value was successfully extracted from the specified index; <see langword="false" /> if a value could not be extracted because of invalid data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6774-362"><paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-362"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6774-363"><paramref name="index" /> liegt außerhalb des Bereichs von <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="a6774-363"><paramref name="index" /> is out of the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Utf16SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf16SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf16SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf16SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf16SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf16SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf16SequenceLength : int" Usage="System.Text.Rune.Utf16SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-364">Ruft die Länge in Codeeinheiten (<see cref="T:System.Char" />) der UTF-16-Sequenz ab, die zur Darstellung dieses Skalarwerts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-364">Gets the length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="a6774-365">Gibt die Länge in Codeeinheiten (<see cref="T:System.Char" />) der UTF-16-Sequenz zurück, die zur Darstellung dieses Skalarwerts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-365">The length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-366">Der Rückgabewert ist "1" oder "2".</span><span class="sxs-lookup"><span data-stu-id="a6774-366">The return value will be 1 or 2.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utf8SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf8SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf8SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf8SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf8SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf8SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf8SequenceLength : int" Usage="System.Text.Rune.Utf8SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-367">Ruft die Länge in Codeeinheiten der UTF-8-Sequenz ab, die zur Darstellung dieses Skalarwerts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-367">Gets the length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="a6774-368">Die Länge in den Code Einheiten der UTF-8-Sequenz, die für die Darstellung dieses skalarwerts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="a6774-368">The length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6774-369">Der Rückgabewert ist 1 bis 4 (einschließlich).</span><span class="sxs-lookup"><span data-stu-id="a6774-369">The return value will be 1 through 4, inclusive.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : int" Usage="System.Text.Rune.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6774-370">Ruft den Unicode-Skalarwert als ganze Zahl ab.</span><span class="sxs-lookup"><span data-stu-id="a6774-370">Gets the Unicode scalar value as an integer.</span></span></summary>
        <value><span data-ttu-id="a6774-371">Der Unicode-Skalarwert als ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="a6774-371">The Unicode scalar value as an integer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
