<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DecoderFallbackBuffer.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5334e4a94e0c09dca04227f373df6acb3a69c9b91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">334e4a94e0c09dca04227f373df6acb3a69c9b91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence.</source>
          <target state="translated">Stellt einen Puffer bereit, der einen Fallback-Handler zulässt, der eine alternative Zeichenfolge an einen Decoder zurückzugibt, wenn eine Eingabebytefolge nicht decodiert werden kann.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</source>
          <target state="translated">Eine Codierung definiert eine Zuordnung zwischen einem Unicode-Zeichen und eine codierte Bytefolge.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoding operation, which converts an input byte sequence to an output character, fails if no mapping is defined for a particular byte sequence.</source>
          <target state="translated">Ein Decodierungsvorgang, der eine Eingabebytefolge in ein Ausgabezeichen konvertiert, schlägt fehl, wenn keine Zuordnung für eine bestimmte Bytesequenz definiert ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</source>
          <target state="translated">.NET Framework bietet einen Mechanismus, der als Fallback bezeichneten, wenn eine Konvertierung nicht durchgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>All decoder fallback handlers must implement the following:</source>
          <target state="translated">Alle Decoder fallback-Handler müssen Folgendes implementieren:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback, which is represented by a class derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> class.</source>
          <target state="translated">Ein Decoderfallback, der durch eine Klasse dargestellt wird abgeleitet aus dem <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback buffer, which is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> class that can return a string to the conversion operation.</source>
          <target state="translated">Ein Decoderfallbackpuffer, der dargestellt wird, von einem Typ abgeleitet wurde. die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> -Klasse, die eine Zeichenfolge an den Konvertierungsvorgang zurückgeben kann.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Fallbacks can use three strategies to handle conversion failures:</source>
          <target state="translated">Drei Strategien können Zugriffe Konvertierungsfehler behandelt:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Best-fit mapping.</source>
          <target state="translated">Zuordnung mit ähnlichen Zeichen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string that represents a close approximation to the input byte sequence.</source>
          <target state="translated">Der Decoderfallbackpuffer kann es sich um eine Zeichenfolge zurückgeben, die eine Annäherung an die Eingabebytefolge darstellt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework does not provide a public best-fit <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation.</source>
          <target state="translated">.NET Framework bietet einen ähnlichen öffentlichen <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Replacement.</source>
          <target state="translated">Ersatz.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a byte sequence could not be decoded.</source>
          <target state="translated">Der Decoderfallbackpuffer kann eine Zeichenfolge zurückgeben, z. B. ein Fragezeichen ("?"), das angibt, dass eine Bytefolge nicht decodiert werden kann.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> classes provide a public replacement fallback buffer implementation.</source>
          <target state="translated">In .NET Framework die <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> und <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> Klassen bieten eine öffentliche Ersatz Fallbackpuffer-Implementierung.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The constructor of the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> class enables you to define the replacement string.</source>
          <target state="translated">Der Konstruktor, der die <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> -Klasse können Sie die Ersetzungszeichenfolge definieren.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Exception.</source>
          <target state="translated">Ausnahme.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation throws an exception, which indicates that a byte sequence cannot be decoded, and terminates the decoding operation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> Implementierung löst eine Ausnahme, die angibt, dass eine Bytefolge nicht decodiert werden kann, und den Decodierungsvorgang beendet aus.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In this case, the fallback handler must provide a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation, although it does not return a string to the decoder.</source>
          <target state="translated">In diesem Fall muss die fallback-Handler Bereitstellen einer <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> Implementierung, obwohl er keine Zeichenfolge an den Decoder zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classes provide a public exception fallback implementation that throws a <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> when a byte sequence cannot be decoded.</source>
          <target state="translated">In .NET Framework die <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> und <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> Klassen bieten eine fallbackimplementierung öffentliche Ausnahme, die auslöst, eine <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> Wenn eine Bytefolge nicht decodiert werden kann.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The buffer in a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation represents the entire string to be returned to the decoder in response to a decoder fallback.</source>
          <target state="translated">Der Puffer in einem <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> Implementierung stellt die gesamte Zeichenfolge, die an den Decoder als Antwort auf einen Decoder fallback zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Generally, implementations also include state information, such as the index of the next character to return to the decoder and the number of remaining characters to be returned.</source>
          <target state="translated">Im Allgemeinen umfassen Implementierungen auch Zustandsinformationen, z. B. der Index der nächsten zurückzugebenden Zeichens an der Decoder und die Anzahl der verbleibenden Zeichen zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> is an abstract class, it requires derived classes to implement the following members at a minimum:</source>
          <target state="translated">Da <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> ist eine abstrakte Klasse dafür, dass abgeleitete Klassen, die mindestens die folgenden Member implementieren:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method, which is called by the decoder when it cannot decode a byte sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> -Methode, die vom Decoder aufgerufen wird, wenn eine Bytefolge nicht decodiert werden können.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder passes two pieces of information to the fallback buffer implementation: an array containing the bytes that could not be decoded and the index of the first byte in the input byte array.</source>
          <target state="translated">Der Decoder übergibt zwei Angaben für die Implementierung Fallbackpuffer: ein Array mit der Bytes, die nicht decodiert werden können und der Index des ersten Bytes im Eingabebytearray.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In a decoder fallback exception handler, the exception is thrown in this method.</source>
          <target state="translated">Ein Decoder fallback-Ausnahmehandler wird die Ausnahme bei dieser Methode ausgelöst.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Otherwise, the method returns <ph id="ph1">`true`</ph> if it provides a fallback, or <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">Andernfalls der Methodenrückgabe <ph id="ph1">`true`</ph> Wenn als Fallback vorhanden sind oder <ph id="ph2">`false`</ph> Wenn dies nicht der Fall.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method, which is called repeatedly by the decoder if the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> -Methode, die wiederholt vom Decoder aufgerufen wird die <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> -Methode zurückkehrt <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In successive calls, the handler should return each character in its buffer.</source>
          <target state="translated">In aufeinander folgenden Aufrufen sollte der Handler jedes Zeichen in seinem Puffer zurückgeben.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>When it has returned all characters, it should return U+0000.</source>
          <target state="translated">Wenn alle Zeichen zurückgegeben wurde, sollte es U + 0000 zurückgeben.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns U+0000.</source>
          <target state="translated">Ein Ausnahme-fallback-Handler wird immer U + 0000 zurückgegeben.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> Methode, die versucht, verschieben Sie den Zeiger der vorherigen Position im Puffer und gibt an, ob die Verschiebung erfolgreich war.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception handler always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Ein Ausnahmehandler immer gibt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> property, which indicates the number of remaining characters to be returned to the decoder.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> -Eigenschaft, womit die Anzahl der verbleibenden Zeichen, die an den Decoder zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns zero.</source>
          <target state="translated">Ein Ausnahme-fallback-Handler gibt immer 0 (null) zurück.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>An input array of bytes.</source>
          <target state="translated">Ein Eingabebytearray.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The index position of a byte in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die Indexposition eines Bytes in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</source>
          <target state="translated">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, die angegebene Eingabebytefolge zu behandeln.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Fallbackpuffer <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph> verarbeiten kann; <ph id="ph3">&lt;see langword="false" /&gt;</ph>, wenn der Fallbackpuffer <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph> ignoriert.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown input byte sequence that cannot be decoded.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, und <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> -Methode <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> , wenn sie eine unbekannte Eingabebytefolge treffen, das nicht decodiert werden kann.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the input byte sequence, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">Ein Rückgabewert von <ph id="ph1">`true`</ph> gibt an, dass der Fallbackpuffer die Eingabebytefolge die aufrufende Methode verarbeiten kann aufrufen, wodurch die <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> Methode, um jedes Zeichen dem Fallbackpuffer abzurufen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>Because it does not process individual bytes, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">Da es keine einzelnen Bytes verarbeitet die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> Methode in einem Ausnahmehandler fallback löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When overridden in a derived class, retrieves the next character in the fallback buffer.</source>
          <target state="translated">Ruft beim Überschreiben in einer abgeleiteten Klasse das nächste Zeichen im Fallbackpuffer ab.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The next character in the fallback buffer.</source>
          <target state="translated">Ruft das nächste Zeichen im Fallbackpuffer ab.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>A decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method if the operation encounters an unknown byte sequence in the input.</source>
          <target state="translated">Ein Decodierungsvorgang ruft die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> Methode, wenn der Vorgang eine unbekannte Bytefolge in der Eingabe gefunden wird.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>If the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, a substitute string exists that can be inserted in the output instead of decoding the unknown input.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>, besteht eine Ersatzzeichenfolge, die in der Ausgabe anstelle die unbekannte Eingabe Decodierung eingefügt werden kann.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method repeatedly and obtains the substitute string one character at a time.</source>
          <target state="translated">Der Decodierungsvorgang ruft die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> Methode wiederholt und ruft den Ersatz ein Zeichen zu einem Zeitpunkt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When all characters in the fallback buffer have been returned to the decoder, the method should return U+0000.</source>
          <target state="translated">Wenn alle Zeichen im Fallbackpuffer an den Decoder zurückgegeben wurden, sollte die Methode U + 0000 zurückgeben.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">Für eine Ausnahme-fallback-Handler die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> Methode sollte U + 0000 zurückgeben.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>When overridden in a derived class, causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method to access the data buffer character position that is prior to the current character position.</source>
          <target state="translated">Veranlasst beim Überschreiben in einer abgeleiteten Klasse, dass der nächste Aufruf an die <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph>-Methode auf die Datenpufferzeichenposition vor der aktuellen Zeichenposition zugreift.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph>-Operation erfolgreich war, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>An exception fallback handler should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Ein fallback Ausnahmehandler zurückgeben sollte <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>When overridden in a derived class, gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen im aktuellen <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph>-Objekt ab, die noch zu verarbeiten sind.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The number of characters in the current fallback buffer that have not yet been processed.</source>
          <target state="translated">Die Anzahl der Zeichen im aktuellen Fallbackpuffer, die noch nicht verarbeitet worden sind.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> is a nonzero value.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph> Wenn <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> ein Wert ungleich NULL ist.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> method should return zero.</source>
          <target state="translated">Für eine Ausnahme-fallback-Handler die <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> Methode sollte 0 (null) zurück.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>Initializes all data and state information pertaining to this fallback buffer.</source>
          <target state="translated">Initialisiert alle Daten und Zustandsinformationen, die diesen Fallbackpuffer betreffen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>After calling the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> method, the <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> property should return 0, the <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method should return U+0000, and the <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> method should return <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> -Methode, die <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> Eigenschaft sollte "0" zurückgegeben der <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> Methode sollte U + 0000 zurückgeben und die <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> -Methode zurückgeben sollte <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>