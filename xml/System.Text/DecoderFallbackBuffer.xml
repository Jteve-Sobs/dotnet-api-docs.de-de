<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="334e4a94e0c09dca04227f373df6acb3a69c9b91" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7add3-101">Stellt einen Puffer bereit, der einen Fallback-Handler zulässt, der eine alternative Zeichenfolge an einen Decoder zurückzugibt, wenn eine Eingabebytefolge nicht decodiert werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7add3-101">Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7add3-102">Eine Codierung definiert eine Zuordnung zwischen einem Unicode-Zeichen und eine codierte Bytefolge.</span><span class="sxs-lookup"><span data-stu-id="7add3-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="7add3-103">Ein Decodierungsvorgang, der eine Eingabebytefolge in ein Ausgabezeichen konvertiert, schlägt fehl, wenn keine Zuordnung für eine bestimmte Bytesequenz definiert ist.</span><span class="sxs-lookup"><span data-stu-id="7add3-103">A decoding operation, which converts an input byte sequence to an output character, fails if no mapping is defined for a particular byte sequence.</span></span>  
  
 <span data-ttu-id="7add3-104">.NET Framework bietet einen Mechanismus, der als Fallback bezeichneten, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="7add3-105">Alle Decoder fallback-Handler müssen Folgendes implementieren:</span><span class="sxs-lookup"><span data-stu-id="7add3-105">All decoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="7add3-106">Ein Decoderfallback, der durch eine Klasse dargestellt wird abgeleitet aus dem <xref:System.Text.DecoderFallback> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7add3-106">A decoder fallback, which is represented by a class derived from the <xref:System.Text.DecoderFallback> class.</span></span>  
  
-   <span data-ttu-id="7add3-107">Ein Decoderfallbackpuffer, der dargestellt wird, von einem Typ abgeleitet wurde. die <xref:System.Text.DecoderFallbackBuffer> -Klasse, die eine Zeichenfolge an den Konvertierungsvorgang zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-107">A decoder fallback buffer, which is represented by a type derived from the <xref:System.Text.DecoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="7add3-108">Drei Strategien können Zugriffe Konvertierungsfehler behandelt:</span><span class="sxs-lookup"><span data-stu-id="7add3-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="7add3-109">Zuordnung mit ähnlichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="7add3-109">Best-fit mapping.</span></span> <span data-ttu-id="7add3-110">Der Decoderfallbackpuffer kann es sich um eine Zeichenfolge zurückgeben, die eine Annäherung an die Eingabebytefolge darstellt.</span><span class="sxs-lookup"><span data-stu-id="7add3-110">The decoder fallback buffer can return a string that represents a close approximation to the input byte sequence.</span></span> <span data-ttu-id="7add3-111">.NET Framework bietet einen ähnlichen öffentlichen <xref:System.Text.DecoderFallbackBuffer> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="7add3-111">The .NET Framework does not provide a public best-fit <xref:System.Text.DecoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="7add3-112">Ersatz.</span><span class="sxs-lookup"><span data-stu-id="7add3-112">Replacement.</span></span> <span data-ttu-id="7add3-113">Der Decoderfallbackpuffer kann eine Zeichenfolge zurückgeben, z. B. ein Fragezeichen ("?"), das angibt, dass eine Bytefolge nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-113">The decoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a byte sequence could not be decoded.</span></span> <span data-ttu-id="7add3-114">In .NET Framework die <xref:System.Text.DecoderReplacementFallback> und <xref:System.Text.DecoderReplacementFallbackBuffer> Klassen bieten eine öffentliche Ersatz Fallbackpuffer-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="7add3-114">In the .NET Framework, the <xref:System.Text.DecoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="7add3-115">Der Konstruktor, der die <xref:System.Text.DecoderReplacementFallback> -Klasse können Sie die Ersetzungszeichenfolge definieren.</span><span class="sxs-lookup"><span data-stu-id="7add3-115">The constructor of the <xref:System.Text.DecoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="7add3-116">Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="7add3-116">Exception.</span></span> <span data-ttu-id="7add3-117">Die <xref:System.Text.DecoderFallbackBuffer> Implementierung löst eine Ausnahme, die angibt, dass eine Bytefolge nicht decodiert werden kann, und den Decodierungsvorgang beendet aus.</span><span class="sxs-lookup"><span data-stu-id="7add3-117">The <xref:System.Text.DecoderFallbackBuffer> implementation throws an exception, which indicates that a byte sequence cannot be decoded, and terminates the decoding operation.</span></span> <span data-ttu-id="7add3-118">In diesem Fall muss die fallback-Handler Bereitstellen einer <xref:System.Text.DecoderFallbackBuffer> Implementierung, obwohl er keine Zeichenfolge an den Decoder zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="7add3-118">In this case, the fallback handler must provide a <xref:System.Text.DecoderFallbackBuffer> implementation, although it does not return a string to the decoder.</span></span> <span data-ttu-id="7add3-119">In .NET Framework die <xref:System.Text.DecoderExceptionFallback> und <xref:System.Text.DecoderExceptionFallbackBuffer> Klassen bieten eine fallbackimplementierung öffentliche Ausnahme, die auslöst, eine <xref:System.Text.DecoderFallbackException> Wenn eine Bytefolge nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-119">In the .NET Framework, the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws a <xref:System.Text.DecoderFallbackException> when a byte sequence cannot be decoded.</span></span>  
  
 <span data-ttu-id="7add3-120">Der Puffer in einem <xref:System.Text.DecoderFallbackBuffer> Implementierung stellt die gesamte Zeichenfolge, die an den Decoder als Antwort auf einen Decoder fallback zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7add3-120">The buffer in a <xref:System.Text.DecoderFallbackBuffer> implementation represents the entire string to be returned to the decoder in response to a decoder fallback.</span></span> <span data-ttu-id="7add3-121">Im Allgemeinen umfassen Implementierungen auch Zustandsinformationen, z. B. der Index der nächsten zurückzugebenden Zeichens an der Decoder und die Anzahl der verbleibenden Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7add3-121">Generally, implementations also include state information, such as the index of the next character to return to the decoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="7add3-122">Da <xref:System.Text.DecoderFallbackBuffer> ist eine abstrakte Klasse dafür, dass abgeleitete Klassen, die mindestens die folgenden Member implementieren:</span><span class="sxs-lookup"><span data-stu-id="7add3-122">Because <xref:System.Text.DecoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="7add3-123">Die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> -Methode, die vom Decoder aufgerufen wird, wenn eine Bytefolge nicht decodiert werden können.</span><span class="sxs-lookup"><span data-stu-id="7add3-123">The <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method, which is called by the decoder when it cannot decode a byte sequence.</span></span> <span data-ttu-id="7add3-124">Der Decoder übergibt zwei Angaben für die Implementierung Fallbackpuffer: ein Array mit der Bytes, die nicht decodiert werden können und der Index des ersten Bytes im Eingabebytearray.</span><span class="sxs-lookup"><span data-stu-id="7add3-124">The decoder passes two pieces of information to the fallback buffer implementation: an array containing the bytes that could not be decoded and the index of the first byte in the input byte array.</span></span> <span data-ttu-id="7add3-125">Ein Decoder fallback-Ausnahmehandler wird die Ausnahme bei dieser Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7add3-125">In a decoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="7add3-126">Andernfalls der Methodenrückgabe `true` Wenn als Fallback vorhanden sind oder `false` Wenn dies nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="7add3-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="7add3-127">Die <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> -Methode, die wiederholt vom Decoder aufgerufen wird die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true`.</span><span class="sxs-lookup"><span data-stu-id="7add3-127">The <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the decoder if the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="7add3-128">In aufeinander folgenden Aufrufen sollte der Handler jedes Zeichen in seinem Puffer zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7add3-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="7add3-129">Wenn alle Zeichen zurückgegeben wurde, sollte es U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7add3-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="7add3-130">Ein Ausnahme-fallback-Handler wird immer U + 0000 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="7add3-130">An exception fallback handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="7add3-131">Die <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> Methode, die versucht, verschieben Sie den Zeiger der vorherigen Position im Puffer und gibt an, ob die Verschiebung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="7add3-131">The <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="7add3-132">Ein Ausnahmehandler immer gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="7add3-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="7add3-133">Die <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> -Eigenschaft, womit die Anzahl der verbleibenden Zeichen, die an den Decoder zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7add3-133">The <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the decoder.</span></span> <span data-ttu-id="7add3-134">Ein Ausnahme-fallback-Handler gibt immer 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="7add3-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7add3-135">Initialisiert eine neue Instanz der <see cref="T:System.Text.DecoderFallbackBuffer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-135">Initializes a new instance of the <see cref="T:System.Text.DecoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">
          <span data-ttu-id="7add3-136">Ein Eingabebytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-136">An input array of bytes.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7add3-137">Die Indexposition eines Bytes in <c>bytesUnknown</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-137">The index position of a byte in <c>bytesUnknown</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7add3-138">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, die angegebene Eingabebytefolge zu behandeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-138">When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7add3-139">
            <see langword="true" />, wenn der Fallbackpuffer <paramref name="bytesUnknown" /> verarbeiten kann; <see langword="false" />, wenn der Fallbackpuffer <paramref name="bytesUnknown" /> ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-139">
              <see langword="true" /> if the fallback buffer can process <paramref name="bytesUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="bytesUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7add3-140">Die <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, und <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> -Methode <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> , wenn sie eine unbekannte Eingabebytefolge treffen, das nicht decodiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-140">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, and <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> if they encounter an unknown input byte sequence that cannot be decoded.</span></span> <span data-ttu-id="7add3-141">Ein Rückgabewert von `true` gibt an, dass der Fallbackpuffer die Eingabebytefolge die aufrufende Methode verarbeiten kann aufrufen, wodurch die <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Methode, um jedes Zeichen dem Fallbackpuffer abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7add3-141">A return value of `true` indicates that the fallback buffer can process the input byte sequence, which causes the calling method to call the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="7add3-142">Da es keine einzelnen Bytes verarbeitet die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Methode in einem Ausnahmehandler fallback löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="7add3-142">Because it does not process individual bytes, the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7add3-143">Ruft beim Überschreiben in einer abgeleiteten Klasse das nächste Zeichen im Fallbackpuffer ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-143">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7add3-144">Ruft das nächste Zeichen im Fallbackpuffer ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-144">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7add3-145">Ein Decodierungsvorgang ruft die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Methode, wenn der Vorgang eine unbekannte Bytefolge in der Eingabe gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="7add3-145">A decoding operation calls the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown byte sequence in the input.</span></span> <span data-ttu-id="7add3-146">Wenn die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true`, besteht eine Ersatzzeichenfolge, die in der Ausgabe anstelle die unbekannte Eingabe Decodierung eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="7add3-146">If the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be inserted in the output instead of decoding the unknown input.</span></span> <span data-ttu-id="7add3-147">Der Decodierungsvorgang ruft die <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Methode wiederholt und ruft den Ersatz ein Zeichen zu einem Zeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="7add3-147">The decoding operation calls the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="7add3-148">Wenn alle Zeichen im Fallbackpuffer an den Decoder zurückgegeben wurden, sollte die Methode U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7add3-148">When all characters in the fallback buffer have been returned to the decoder, the method should return U+0000.</span></span>  
  
 <span data-ttu-id="7add3-149">Für eine Ausnahme-fallback-Handler die <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Methode sollte U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7add3-149">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7add3-150">Veranlasst beim Überschreiben in einer abgeleiteten Klasse, dass der nächste Aufruf an die <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" />-Methode auf die Datenpufferzeichenposition vor der aktuellen Zeichenposition zugreift.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-150">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7add3-151">
            <see langword="true" />, wenn die <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" />-Operation erfolgreich war, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-151">
              <see langword="true" /> if the <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7add3-152">Ein fallback Ausnahmehandler zurückgeben sollte `false`.</span><span class="sxs-lookup"><span data-stu-id="7add3-152">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7add3-153">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen im aktuellen <see cref="T:System.Text.DecoderFallbackBuffer" />-Objekt ab, die noch zu verarbeiten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-153">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7add3-154">Die Anzahl der Zeichen im aktuellen Fallbackpuffer, die noch nicht verarbeitet worden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-154">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7add3-155">Die <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true` Wenn <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> ein Wert ungleich NULL ist.</span><span class="sxs-lookup"><span data-stu-id="7add3-155">The <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="7add3-156">Für eine Ausnahme-fallback-Handler die <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> Methode sollte 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="7add3-156">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7add3-157">Initialisiert alle Daten und Zustandsinformationen, die diesen Fallbackpuffer betreffen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7add3-157">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7add3-158">Nach dem Aufruf der <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> -Methode, die <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> Eigenschaft sollte "0" zurückgegeben der <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> Methode sollte U + 0000 zurückgeben und die <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> -Methode zurückgeben sollte <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7add3-158">After calling the <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>