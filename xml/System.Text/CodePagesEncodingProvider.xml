<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7d1e7e23ee96664a7f751d59eab72001d120777" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86986023" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncodingProvider</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet Zugriff auf einen Codierungsanbieter für Codepages, die andernfalls nur im .NET-Framework für Desktop verfügbar sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 Der .NET Framework für den Windows-Desktop unterstützt einen großen Satz von Unicode-und Code Page Codierungen. .Net Core hingegen unterstützt nur die folgenden Codierungen:

-   ASCII (Codepage 20127), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> .

-   ISO-8859-1 (Codepage 28591).

-   UTF-7 (Codepage 65000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> .

-   UTF-8 (Codepage 65001), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> .

-   UTF-16 und UTF-16LE (Codepage 1200), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> .

-   UTF-16BE (Codepage 1201), die durch Aufrufen des- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> oder- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> Konstruktors mit dem Wert instanziiert wird `bigEndian` `true` .

-   UTF-32 und UTF-32le (Codepage 12000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> .

-   UTF-32be (Codepage 12001), die durch Aufrufen eines <xref:System.Text.UTF32Encoding> Konstruktors mit einem-Parameter instanziiert wird `bigEndian` und den Wert im- `true` Methodenaufruf bereitstellt.

 Mit Ausnahme der Codepage 20127 werden Code Page Codierungen nicht unterstützt.

 Die- <xref:System.Text.CodePagesEncodingProvider> Klasse erweitert <xref:System.Text.EncodingProvider> , um diese Codepages für .net Core verfügbar zu machen. Um diese zusätzlichen Codepages zu verwenden, gehen Sie folgendermaßen vor:

-   Fügen Sie dem Projekt einen Verweis auf die System.Text.Encoding.CodePages.dll-Assembly hinzu.

-   Rufen Sie ein- <xref:System.Text.CodePagesEncodingProvider> Objekt aus der statischen- <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> Eigenschaft ab.

-   Übergeben Sie das <xref:System.Text.CodePagesEncodingProvider>-Objekt an die <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>-Methode.

 Nachdem ein <xref:System.Text.EncodingProvider> Objekt registriert wurde, sind die unterstützten Codierungen verfügbar, indem die über Ladungen von aufgerufen werden <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> . Sie sollten die- <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> über Ladungen nicht aufrufen.

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Der .NET Framework unterstützt eine große Anzahl von Zeichen Codierungen und Codepages. Sie können eine komplette Liste der Codierungen abrufen, indem Sie die- <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> Methode aufrufen, die in der .NET Framework verfügbar ist. Auf der anderen Seite unterstützt .net Core standardmäßig nur die folgenden Codierungen:

-   ASCII (Codepage 20127), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> .

-   ISO-8859-1 (Codepage 28591).

-   UTF-7 (Codepage 65000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> .

-   UTF-8 (Codepage 65001), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> .

-   UTF-16 und UTF-16LE (Codepage 1200), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> .

-   UTF-16BE (Codepage 1201), die durch Aufrufen des- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> oder- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> Konstruktors mit dem Wert instanziiert wird `bigEndian` `true` .

-   UTF-32 und UTF-32le (Codepage 12000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> .

-   UTF-32be (Codepage 12001), die durch Aufrufen eines <xref:System.Text.UTF32Encoding> Konstruktors mit einem-Parameter instanziiert wird `bigEndian` und den Wert im- `true` Methodenaufruf bereitstellt.

 Zum Abrufen einer Codierung, die in .NET Framework, aber nicht in .net Core vorhanden ist, gehen Sie wie folgt vor:

-   Fügen Sie dem Projekt einen Verweis auf die *System.Text.Encoding.CodePages.dll* -Assembly hinzu.

-   Das- <xref:System.Text.EncodingProvider> Objekt aus der statischen- <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> Eigenschaft.

-   Übergeben Sie das- <xref:System.Text.EncodingProvider> Objekt an die- <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> Methode, um die vom-Objekt bereitgestellten Codierungen <xref:System.Text.EncodingProvider> für die Common Language Runtime verfügbar zu machen.

-   Rufen <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Sie eine Überladung auf, um die Codierung abzurufen. Die- <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Methode ruft die entsprechende- <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> Methode auf, um zu bestimmen, ob Sie die angeforderte Codierung bereitstellen kann.

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="codepage">Der Codepagebezeichner der bevorzugten Codierung, der vom Codierungsanbieter möglicherweise unterstützt wird.</param>
        <summary>Gibt die dem angegebenen Codepagebezeichner zugeordnete Codierung zurück.</summary>
        <returns>Die Codierung, die dem angegebenen Codepagebezeichner zugeordnet ist, oder <see langword="null" />, wenn der Anbieter die angeforderte Codepagecodierung nicht unterstützt</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberSignature Language="C#" Value="public override System.Text.Encoding? GetEncoding (string name);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Codepage der bevorzugten Codierung, die vom Codierungsanbieter unterstützt wird</param>
        <summary>Gibt die dem angegebenen Codepagenamen zugeordnete Codierung zurück.</summary>
        <returns>Die der angegebenen Codepage zugeordnete Codierung, oder <see langword="null" />, wenn der Anbieter die angeforderte Codierung nicht unterstützt</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt; GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Text.EncodingInfo&gt; GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncodings () As IEnumerable(Of EncodingInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="override this.GetEncodings : unit -&gt; seq&lt;System.Text.EncodingInfo&gt;" Usage="codePagesEncodingProvider.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Codierungsanbieter für Codepages ab, die im Desktop .NET-Framework unterstützt werden, jedoch nicht in der aktuellen .NET-Framework-Plattform.</summary>
        <value>Ein Codierungs Anbieter, der den Zugriff auf Codierungen zulässt, die auf der aktuellen .NET Framework Plattform nicht unterstützt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 Der .NET Framework unterstützt eine große Anzahl von Zeichen Codierungen und Codepages. Sie können eine komplette Liste der Codierungen abrufen, indem Sie die- <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> Methode aufrufen, die in der .NET Framework verfügbar ist. Auf der anderen Seite unterstützt .net Core standardmäßig nur die folgenden Codierungen:

-   ASCII (Codepage 20127), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> .

-   ISO-8859-1 (Codepage 28591).

-   UTF-7 (Codepage 65000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> .

-   UTF-8 (Codepage 65001), das von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> .

-   UTF-16 und UTF-16LE (Codepage 1200), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> .

-   UTF-16BE (Codepage 1201), die durch Aufrufen des- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> oder- <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> Konstruktors mit dem Wert instanziiert wird `bigEndian` `true` .

-   UTF-32 und UTF-32le (Codepage 12000), die von der-Eigenschaft zurückgegeben wird <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> .

-   UTF-32be (Codepage 12001), die durch Aufrufen eines <xref:System.Text.UTF32Encoding> Konstruktors mit einem-Parameter instanziiert wird `bigEndian` und den Wert im- `true` Methodenaufruf bereitstellt.

 Zum Abrufen einer Codierung, die in der .NET Framework auf dem Windows-Desktop, jedoch nicht in .net Core vorhanden ist, gehen Sie wie folgt vor:

-   Fügen Sie dem Projekt einen Verweis auf die System.Text.Encoding.CodePages.dll-Assembly hinzu.

-   Das- <xref:System.Text.EncodingProvider> Objekt aus der statischen- <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> Eigenschaft.

-   Übergeben Sie das- <xref:System.Text.EncodingProvider> Objekt an die- <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> Methode, um die vom-Objekt bereitgestellten Codierungen <xref:System.Text.EncodingProvider> für die Common Language Runtime verfügbar zu machen.

-   Rufen <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Sie eine Überladung auf, um die Codierung abzurufen. Die- <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Methode ruft die entsprechende- <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> Methode auf, um zu bestimmen, ob Sie die angeforderte Codierung bereitstellen kann.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
