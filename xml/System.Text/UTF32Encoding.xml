<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="706a2c3142d40fb718fd8d71fd3876b753ca6f98" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850706" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1181d-101">Stellt eine UTF-32-Codierung von Unicode-Zeichen dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1181d-101">Represents a UTF-32 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-102">Beim Kodieren werden Unicode-Zeichen in eine Bytefolge transformiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="1181d-103">Beim Decodieren wird transformiert eine codierte Bytefolge in eine Reihe von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="1181d-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="1181d-104">Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) jedes Zeichen aller unterstützten Skripts einen Codepunkt (eine Zahl) zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="1181d-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="1181d-105">Eine Transformation Format UTF (Unicode) ist eine Möglichkeit, diesen Codepunkt zu codieren.</span><span class="sxs-lookup"><span data-stu-id="1181d-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="1181d-106">Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) verwendet die folgenden UTFs:</span><span class="sxs-lookup"><span data-stu-id="1181d-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="1181d-107">UTF-8, die jeden-Codepunkt als eine Folge von ein bis vier Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="1181d-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="1181d-108">UTF-16, die jeden-Codepunkt als eine Abfolge von ein bis zwei 16-Bit-Ganzzahlen darstellt.</span><span class="sxs-lookup"><span data-stu-id="1181d-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="1181d-109">UTF-32, bei dem jede-Codepunkt als 32-Bit-Ganzzahl dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="1181d-110">Weitere Informationen zu den UTFs und andere Codierungen, die von unterstützt <xref:System.Text>, finden Sie unter.</span><span class="sxs-lookup"><span data-stu-id="1181d-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see .</span></span>  
  
 <span data-ttu-id="1181d-111">Die <xref:System.Text.UTF32Encoding> Klasse stellt eine UTF-32-Codierung.</span><span class="sxs-lookup"><span data-stu-id="1181d-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="1181d-112">Der Encoder können die big-endian-Bytereihenfolge (höchstwertigen Byte zuerst) oder little-endian-Bytereihenfolge (am wenigsten signifikanten Byte zuerst).</span><span class="sxs-lookup"><span data-stu-id="1181d-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="1181d-113">Zum Beispiel folgt die Latin Capital Letter ein (Codepunkt U + 0041) als serialisiert wird (hexadezimal):</span><span class="sxs-lookup"><span data-stu-id="1181d-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="1181d-114">Big-endian-Bytereihenfolge: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="1181d-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="1181d-115">Little-endian-Bytereihenfolge: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="1181d-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="1181d-116">Es ist in der Regel effizienter, Unicode-Zeichen mit der systemeigenen Bytereihenfolge speichern.</span><span class="sxs-lookup"><span data-stu-id="1181d-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="1181d-117">Beispielsweise ist es besser, die die little-endian-Bytereihenfolge in little-endian-Plattformen wie Intel Computer verwenden.</span><span class="sxs-lookup"><span data-stu-id="1181d-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="1181d-118"><xref:System.Text.UTF32Encoding> die Windows-Codepages 12000 (little-endian-Bytereihenfolge) und 12001 (big-endian-Bytereihenfolge) entspricht.</span><span class="sxs-lookup"><span data-stu-id="1181d-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="1181d-119">Sie können die "Bytereihenfolge" einer bestimmten Architektur bestimmen, durch den Aufruf der <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1181d-120">Optional können die <xref:System.Text.UTF32Encoding> -Objekt ermöglicht eine bytereihenfolgemarkierung (BOM), wird ein Array von Bytes, die die Abfolge von Bytes, die infolge des Codierungsvorgangs vorangestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1181d-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="1181d-121">Wenn die Präambel eine bytereihenfolgemarkierung (BOM) enthält, leichter den Decoder die Bytereihenfolge und die Transformationsformat oder UTF eines Bytearrays zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="1181d-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="1181d-122">Wenn die <xref:System.Text.UTF32Encoding> Instanz ist so konfiguriert, dass eine Bytereihenfolge-Marke bereitstellen, können Sie Sie abrufen, indem Sie Aufrufen der <xref:System.Text.UTF32Encoding.GetPreamble%2A> Methode; andernfalls gibt die Methode ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="1181d-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="1181d-123">Beachten Sie, dass selbst wenn eine <xref:System.Text.UTF32Encoding> Objekt konfiguriert ist, für die Bytereihenfolge-Marke unterstützen, müssen Sie die Bytereihenfolge-Marke am Anfang des codierten Datenstroms nach Bedarf; einschließen Codierungsmethoden von der <xref:System.Text.UTF32Encoding> Klasse nicht tun Sie dies automatisch.</span><span class="sxs-lookup"><span data-stu-id="1181d-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="1181d-124">Fehlererkennung zu aktivieren und die Instanz der Klasse sicherer zu machen, sollten Sie instanziieren ein <xref:System.Text.UTF32Encoding> -Objekt durch Aufrufen der <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor und die Einstellung der `throwOnInvalidBytes` Argument `true`.</span><span class="sxs-lookup"><span data-stu-id="1181d-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="1181d-125">Mit fehlererkennung, eine Methode, die eine ungültige Folge von Bytes oder Zeichen erkennt, löst eine <xref:System.ArgumentException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="1181d-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="1181d-126">Ohne die fehlererkennung wird keine Ausnahme ausgelöst und die ungültige Sequenz ist in der Regel ignoriert.</span><span class="sxs-lookup"><span data-stu-id="1181d-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="1181d-127">Instanziieren Sie ein <xref:System.Text.UTF32Encoding> Objekt in eine Reihe von Möglichkeiten, je nachdem, ob Sie darauf eine bytereihenfolgemarkierung (BOM) bereitstellen möchten, gibt an, ob die big-Endian oder little-Endian-Codierung sollen und gibt an, ob Sie fehlererkennung aktivieren möchten.</span><span class="sxs-lookup"><span data-stu-id="1181d-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="1181d-128">Die folgende Tabelle enthält die <xref:System.Text.UTF32Encoding> Konstruktoren und <xref:System.Text.Encoding> Eigenschaften, die Zurückgeben einer <xref:System.Text.UnicodeEncoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1181d-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="1181d-129">Member</span><span class="sxs-lookup"><span data-stu-id="1181d-129">Member</span></span>|<span data-ttu-id="1181d-130">Endianness</span><span class="sxs-lookup"><span data-stu-id="1181d-130">Endianness</span></span>|<span data-ttu-id="1181d-131">BYTEREIHENFOLGE-MARKE</span><span class="sxs-lookup"><span data-stu-id="1181d-131">BOM</span></span>|<span data-ttu-id="1181d-132">Fehlererkennung</span><span class="sxs-lookup"><span data-stu-id="1181d-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="1181d-133">Little-Endian-</span><span class="sxs-lookup"><span data-stu-id="1181d-133">Little-endian</span></span>|<span data-ttu-id="1181d-134">Ja</span><span class="sxs-lookup"><span data-stu-id="1181d-134">Yes</span></span>|<span data-ttu-id="1181d-135">Keine (Ersatzfallback)</span><span class="sxs-lookup"><span data-stu-id="1181d-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="1181d-136">Little-Endian-</span><span class="sxs-lookup"><span data-stu-id="1181d-136">Little-endian</span></span>|<span data-ttu-id="1181d-137">Ja</span><span class="sxs-lookup"><span data-stu-id="1181d-137">Yes</span></span>|<span data-ttu-id="1181d-138">Keine (Ersatzfallback)</span><span class="sxs-lookup"><span data-stu-id="1181d-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="1181d-139">Konfigurierbare</span><span class="sxs-lookup"><span data-stu-id="1181d-139">Configurable</span></span>|<span data-ttu-id="1181d-140">Konfigurierbare</span><span class="sxs-lookup"><span data-stu-id="1181d-140">Configurable</span></span>|<span data-ttu-id="1181d-141">Keine (Ersatzfallback)</span><span class="sxs-lookup"><span data-stu-id="1181d-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="1181d-142">Konfigurierbare</span><span class="sxs-lookup"><span data-stu-id="1181d-142">Configurable</span></span>|<span data-ttu-id="1181d-143">Konfigurierbare</span><span class="sxs-lookup"><span data-stu-id="1181d-143">Configurable</span></span>|<span data-ttu-id="1181d-144">Konfigurierbare</span><span class="sxs-lookup"><span data-stu-id="1181d-144">Configurable</span></span>|  
  
 <span data-ttu-id="1181d-145">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> -Methode bestimmt, wie viele Bytes in einen Satz von Unicode-Zeichen, Codierung und die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode führt die eigentliche Codierung.</span><span class="sxs-lookup"><span data-stu-id="1181d-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="1181d-146">Ebenso die <xref:System.Text.UTF32Encoding.GetCharCount%2A> -Methode bestimmt, wie viele Zeichen in eine Folge von Bytes, Decodierung und die <xref:System.Text.UTF32Encoding.GetChars%2A> und <xref:System.Text.UTF32Encoding.GetString%2A> Methoden führen die eigentliche Decodierung.</span><span class="sxs-lookup"><span data-stu-id="1181d-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="1181d-147">Für einen Encoder oder Decoder, der zum Speichern von Zustandsinformationen, die beim Codieren oder Decodieren von Daten, die umfasst mehrere Blöcke (z. B. String von 1 Mio. Zeichen, die in Segmenten von 100.000 Zeichen codiert wird) verwenden, können die <xref:System.Text.UTF32Encoding.GetEncoder%2A> und <xref:System.Text.UTF32Encoding.GetDecoder%2A> Eigenschaften bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-148">Das folgende Beispiel veranschaulicht das Verhalten der <xref:System.Text.UTF32Encoding> Objekte mit und ohne Erkennung aktiviert.</span><span class="sxs-lookup"><span data-stu-id="1181d-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="1181d-149">Es erstellt ein Byte-Array, dessen letzten vier Bytes ein ungültiges Ersatzzeichenpaar darstellen. das hohe Ersatzzeichen, U + D8FF folgt eine U + 01FF, handelt es sich außerhalb des Bereichs der niedrigen Ersatzzeichen (0xDC00 bis 0xDFFF reicht).</span><span class="sxs-lookup"><span data-stu-id="1181d-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="1181d-150">Ohne die fehlererkennung verwendet der UTF32-Decoder Ersatzfallback, um die ungültigen Ersatzzeichenpaars mit REPLACEMENT CHARACTER (U + FFFD) zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="1181d-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="1181d-151">Im folgenden Beispiel wird codiert eine Zeichenfolge von Unicode-Zeichen in ein Bytearray mit einer <xref:System.Text.UTF32Encoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1181d-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="1181d-152">Das Bytearray wird dann in eine Zeichenfolge, die veranschaulichen, dass es keinen Verlust von Daten gibt decodiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="1181d-153">Im folgenden Beispiel wird die gleiche Zeichenfolge wie das vorherige Beispiel, außer dass die codierten Bytes in eine Datei geschrieben, und den Bytestream mit einem Byte-reihenfolgemarkierung (BOM) als Präfix voran.</span><span class="sxs-lookup"><span data-stu-id="1181d-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="1181d-154">Es liest die Datei klicken Sie dann auf zwei verschiedene Arten: als Textdatei mit einer <xref:System.IO.StreamReader> -Objekt sowie eine binäre Datei.</span><span class="sxs-lookup"><span data-stu-id="1181d-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="1181d-155">Wie zu erwarten ist, ist in keinem Fall Bytereihenfolge-Marke in der neu gelesenen Zeichenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="1181d-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1181d-156">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1181d-157">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-158">Dieser Konstruktor erstellt eine Instanz, die die little-endian-Bytereihenfolge verwendet, eine Unicode-bytereihenfolgemarkierung enthält, und löst keine Ausnahme aus, wenn eine ungültige Codierung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-159">Aus Sicherheitsgründen sollten Sie Erkennung aktivieren, durch Aufrufen der <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor und die Einstellung der `throwOnInvalidCharacters` Argument `true`.</span><span class="sxs-lookup"><span data-stu-id="1181d-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-160">Die folgenden Beispiel ruft und zeigt die Byte Order mark, für andere <xref:System.Text.UTF32Encoding> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="1181d-160">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="1181d-161">
            <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) zu verwenden, oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="1181d-162">
            <see langword="true" />, um anzugeben, dass eine Unicode-Bytereihenfolgemarkierung bereitgestellt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-162">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-163">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="1181d-164">Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet werden soll und die <see cref="M:System.Text.UTF32Encoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-165">Dieser Konstruktor erstellt eine Instanz, die keine Ausnahme auslöst, wenn eine ungültige Codierung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-166">Aus Sicherheitsgründen sollten Sie Erkennung aktivieren, durch Aufrufen der <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor und die Einstellung der `throwOnInvalidCharacters` Argument `true`.</span><span class="sxs-lookup"><span data-stu-id="1181d-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-167">Die folgenden Beispiel ruft und zeigt die Byte Order mark, für andere <xref:System.Text.UTF32Encoding> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="1181d-167">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="1181d-168">
            <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) zu verwenden, oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-168">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="1181d-169">
            <see langword="true" />, um anzugeben, dass eine Unicode-Bytereihenfolgemarkierung bereitgestellt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-169">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="1181d-170">
            <see langword="true" /> um anzugeben, dass eine Ausnahme ausgelöst werden soll, wenn eine ungültige Codierung gefunden wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-170">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-171">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="1181d-172">Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet, eine Unicode-Bytereihenfolgemarkierung bereitgestellt und beim Erkennen einer ungültigen Codierung eine Ausnahme ausgelöst werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-173">Wenn `throwOnInvalidCharacters` ist `true`, löst Sie eine Methode, eine ungültige Bytesequenz erkennt <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1181d-173">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1181d-174">Andernfalls die Methode löst keine Ausnahme aus, und die ungültige Sequenz wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="1181d-174">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-175">Aus Sicherheitsgründen sollten Sie Erkennung aktivieren, durch Aufrufen der <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor und die Einstellung der `throwOnInvalidCharacters` Argument `true`.</span><span class="sxs-lookup"><span data-stu-id="1181d-175">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-176">Das folgende Beispiel veranschaulicht das Verhalten der <xref:System.Text.UTF32Encoding>, mit der Erkennung aktiviert und ohne.</span><span class="sxs-lookup"><span data-stu-id="1181d-176">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1181d-177">Das <see cref="T:System.Object" />, das mit dem aktuellen Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-178">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Text.UTF32Encoding" />-Objekt gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-179">
            <see langword="true" />, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.Text.UTF32Encoding" /> und mit dem aktuellen Objekt identisch ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-179">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-180">Zwei <xref:System.Text.UTF32Encoding> Objekte werden als gleich betrachtet, wenn alle der folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="1181d-180">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="1181d-181">Beide Objekte verwenden die gleiche Bytereihenfolge.</span><span class="sxs-lookup"><span data-stu-id="1181d-181">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="1181d-182">Beide Objekte bereitstellen, Byte Order Mark, oder beide nicht.</span><span class="sxs-lookup"><span data-stu-id="1181d-182">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="1181d-183">Beide Objekte verwenden die gleichen EncoderFallback.</span><span class="sxs-lookup"><span data-stu-id="1181d-183">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="1181d-184">Beide Objekte verwenden die gleichen DecoderFallback.</span><span class="sxs-lookup"><span data-stu-id="1181d-184">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-185">Das folgende Beispiel erstellt <xref:System.Text.UTF32Encoding> -Objekte mit unterschiedlichen Parameterwerten Werte, und klicken Sie dann auf Gleichheit überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="1181d-185">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1181d-186">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen erzeugt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1181d-187">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-188">Berechnet die Anzahl der Bytes, die durch das Codieren der Zeichen in der angegebenen <see cref="T:System.String" />-Klasse erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-189">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-189">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-190">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-190">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-191">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-191">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-192">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-192">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-193">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-193">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-194">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-194">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-195">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn sie als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-195">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-196">Die Präambel am Anfang des Byte-Stream einfügen (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) die Verantwortung des Entwicklers ist und die Anzahl der Bytes in der Präambel ist nicht in den Rückgabewert von wiedergegeben, die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-196">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-197">Im folgenden Beispiel wird die <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> und <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> Methoden zum Berechnen der maximalen und die tatsächliche Anzahl der Bytes, die zum Codieren einer Zeichenfolge erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1181d-197">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="1181d-198">Es zeigt auch die tatsächliche Anzahl von Bytes erforderlich, um ein Bytestream mit einer Bytereihenfolge-Marke zu speichern.</span><span class="sxs-lookup"><span data-stu-id="1181d-198">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-199">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-199">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-200">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-201">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-202">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-203">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-203">-and-</span>
          </span>
          <span data-ttu-id="1181d-204">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-204">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1181d-205">Ein Zeiger auf das erste zu codierende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-205">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1181d-206">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-206">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-207">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-207">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-208">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-208">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-209">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-209">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-210">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-210">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="1181d-211">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-211">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-212">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-212">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-213">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-213">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-214">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn diese als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-214">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-215">Einfügen einer Präambel am Anfang des Byte-Stream (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) die Verantwortung des Entwicklers ist und die Anzahl der Bytes in der Präambel ist nicht in den Rückgabewert von wiedergegeben, die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-215">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-216">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-216">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-217">
            <paramref name="count" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-217">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-218">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-218">-or-</span>
          </span>
          <span data-ttu-id="1181d-219">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-219">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-220">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-220">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-221">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-221">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-222">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-222">-and-</span>
          </span>
          <span data-ttu-id="1181d-223">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-223">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1181d-224">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-224">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1181d-225">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-225">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1181d-226">Das Zeichenarray, das die zu codierenden Zeichen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-226">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1181d-227">Der Index des ersten zu codierenden Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-227">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1181d-228">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-228">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-229">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-229">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-230">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-230">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-231">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-231">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-232">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-232">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-233">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-233">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-234">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-234">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-235">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-235">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-236">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn diese als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-236">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-237">Einfügen einer Präambel am Anfang des Byte-Stream (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) die Verantwortung des Entwicklers ist und die Anzahl der Bytes in der Präambel ist nicht in den Rückgabewert von wiedergegeben, die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-237">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-238">Das folgende Beispiel füllt ein Array mit einen lateinischen Großbuchstaben und Kleinbuchstaben und ruft die <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Methode, um die Anzahl der Bytes, die zum Codieren der Zeichen des lateinischen Kleinbuchstaben erforderlich festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1181d-238">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="1181d-239">Anschließend werden diese Informationen zusammen mit der Gesamtanzahl von Bytes erforderlich, wenn eine Bytereihenfolge-Marke hinzugefügt wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1181d-239">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="1181d-240">Verglichen mit den Rückgabewert von dieser Zahl der <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> -Methode, die maximale Anzahl von Bytes, die zum Codieren der Zeichen des lateinischen Kleinbuchstaben erforderlich angibt.</span><span class="sxs-lookup"><span data-stu-id="1181d-240">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="1181d-241">Das folgende Beispiel füllt ein Array mit einer Kombination von Griechisch und Kyrillisch und Aufrufe der <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Methode, um zu bestimmen, die Anzahl der Bytes, die zum Codieren der kyrillischen Zeichen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="1181d-241">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="1181d-242">Anschließend werden diese Informationen zusammen mit der Gesamtanzahl von Bytes erforderlich, wenn eine Bytereihenfolge-Marke hinzugefügt wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1181d-242">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="1181d-243">Verglichen mit den Rückgabewert von dieser Zahl der <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> -Methode, die maximale Anzahl von Bytes, die erforderlich sind, zum Codieren der kyrillischen Zeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="1181d-243">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-244">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-244">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-245">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-245">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-246">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-246">-or-</span>
          </span>
          <span data-ttu-id="1181d-247">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-247">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="1181d-248">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-248">-or-</span>
          </span>
          <span data-ttu-id="1181d-249">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-249">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-250">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-250">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-251">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-251">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-252">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-252">-and-</span>
          </span>
          <span data-ttu-id="1181d-253">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-253">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1181d-254">Codiert Zeichen in eine Bytefolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-254">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1181d-255">Ein Zeiger auf das erste zu codierende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-255">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1181d-256">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-256">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1181d-257">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-257">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1181d-258">Die maximale Anzahl der zu schreibenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-258">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-259">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-259">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-260">Die tatsächliche Anzahl an Bytes, die an der durch den <paramref name="bytes" />-Parameter angegebenen Position geschrieben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-260">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-261">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-261">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-262">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-262">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-263">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-263">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-264">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-264">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-265">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-265">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-266">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-266">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-267">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, verwendet die Anwendung die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-267">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-268">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn sie als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-268">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-269">Einfügen einer Präambel am Anfang des Byte-Stream (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) wird die Verantwortung des Entwicklers.</span><span class="sxs-lookup"><span data-stu-id="1181d-269">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="1181d-270">Die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode ist keine Präambel an den Anfang eine codierte Bytefolge voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-270">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-271">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-271">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1181d-272">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-272">-or-</span>
          </span>
          <span data-ttu-id="1181d-273">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-273">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-274">
            <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-274">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-275">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-275">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="1181d-276">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-276">-or-</span>
          </span>
          <span data-ttu-id="1181d-277">
            <paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-277">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-278">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-278">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-279">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-279">-and-</span>
          </span>
          <span data-ttu-id="1181d-280">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-280">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1181d-281">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-281">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1181d-282">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-282">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1181d-283">Das Zeichenarray, das die zu codierenden Zeichen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-283">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="1181d-284">Der Index des ersten zu codierenden Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-284">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1181d-285">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-285">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1181d-286">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-286">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="1181d-287">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-287">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-288">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-288">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-289">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-289">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-290">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-290">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-291">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-291">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-292">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-292">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-293">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-293">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-294">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-294">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-295">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-295">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-296">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, verwendet die Anwendung die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-296">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-297">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn sie als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-297">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-298">Einfügen einer Präambel am Anfang des Byte-Stream (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) wird die Verantwortung des Entwicklers.</span><span class="sxs-lookup"><span data-stu-id="1181d-298">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="1181d-299">Die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode ist keine Präambel an den Anfang eine codierte Bytefolge voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-299">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-300">Im folgende Beispiel bestimmt die Anzahl der Bytes, die erforderlich sind, um drei Zeichen aus einem Zeichenarray zu codieren und codiert die Zeichen und zeigt die resultierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="1181d-300">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-301">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-301">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1181d-302">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-302">-or-</span>
          </span>
          <span data-ttu-id="1181d-303">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-303">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-304">
            <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-304">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-305">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-305">-or-</span>
          </span>
          <span data-ttu-id="1181d-306">
            <paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-306">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="1181d-307">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-307">-or-</span>
          </span>
          <span data-ttu-id="1181d-308">
            <paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-308">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-309">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-309">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="1181d-310">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-310">-or-</span>
          </span>
          <span data-ttu-id="1181d-311">
            <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-311">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-312">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-312">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-313">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-313">-and-</span>
          </span>
          <span data-ttu-id="1181d-314">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-314">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1181d-315">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-315">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="1181d-316">Der Index des ersten zu codierenden Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-316">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1181d-317">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-317">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1181d-318">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-318">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="1181d-319">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-319">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-320">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-320">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-321">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-321">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-322">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-322">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-323">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-323">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-324">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-324">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-325">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-325">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-326">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-326">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-327">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-327">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-328">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, verwendet die Anwendung die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-328">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-329">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, wenn sie als eine Datei oder einem Stream gespeichert werden, können Sie einen Datenstrom von codierten Bytes mit einer Präambel voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-329">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-330">Einfügen einer Präambel am Anfang des Byte-Stream (z. B. am Anfang einer Folge von Bytes in eine Datei geschrieben werden) wird die Verantwortung des Entwicklers.</span><span class="sxs-lookup"><span data-stu-id="1181d-330">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="1181d-331">Die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode ist keine Präambel an den Anfang eine codierte Bytefolge voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-331">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-332">Im folgenden Beispiel bestimmt die Anzahl der Bytes, die zum Codieren einer Zeichenfolge, erforderlich und dann die Zeichenfolge codiert und zeigt die resultierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="1181d-332">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-333">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-333">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1181d-334">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-334">-or-</span>
          </span>
          <span data-ttu-id="1181d-335">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-335">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-336">
            <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-336">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-337">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-337">-or-</span>
          </span>
          <span data-ttu-id="1181d-338">
            <paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-338">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="1181d-339">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-339">-or-</span>
          </span>
          <span data-ttu-id="1181d-340">
            <paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-340">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-341">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-341">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="1181d-342">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-342">-or-</span>
          </span>
          <span data-ttu-id="1181d-343">
            <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-343">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-344">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-344">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-345">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-345">-and-</span>
          </span>
          <span data-ttu-id="1181d-346">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-346">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1181d-347">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-347">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1181d-348">Ein Zeiger auf das erste zu decodierende Byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-348">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1181d-349">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-349">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-350">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-350">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-351">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-351">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> die genaue Arraygröße berechnet die <xref:System.Text.UTF32Encoding.GetChars%2A> Methode, um die sich ergebenden Zeichen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="1181d-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="1181d-353">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-353">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="1181d-354">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-354">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-355">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-355">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-356">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-356">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-357">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-357">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-358">
            <paramref name="count" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-358">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-359">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-359">-or-</span>
          </span>
          <span data-ttu-id="1181d-360">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-360">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-361">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-361">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-362">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-362">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-363">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-363">-and-</span>
          </span>
          <span data-ttu-id="1181d-364">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-364">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1181d-365">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-365">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1181d-366">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-366">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1181d-367">Das Bytearray, das die zu decodierende Bytefolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-367">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1181d-368">Der Index des ersten zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-368">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1181d-369">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-369">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-370">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-370">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-371">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-371">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-372">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode berechnet die genaue Arraygröße der <xref:System.Text.UTF32Encoding.GetChars%2A> Methode, um die sich ergebenden Zeichen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="1181d-372">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="1181d-373">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-373">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="1181d-374">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-374">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-375">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-375">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-376">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-376">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-377">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-377">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-378">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-378">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-379">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-379">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-380">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-380">-or-</span>
          </span>
          <span data-ttu-id="1181d-381">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-381">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="1181d-382">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-382">-or-</span>
          </span>
          <span data-ttu-id="1181d-383">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-383">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-384">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-384">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-385">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-385">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-386">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-386">-and-</span>
          </span>
          <span data-ttu-id="1181d-387">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-387">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1181d-388">Decodiert eine Bytefolge in Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-388">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1181d-389">Ein Zeiger auf das erste zu decodierende Byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-389">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1181d-390">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-390">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="1181d-391">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-391">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1181d-392">Die maximale Anzahl der zu schreibenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-392">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-393">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-393">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-394">Die durch <paramref name="chars" /> angegebene tatsächliche Anzahl der Zeichen, die am Speicherort geschrieben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-394">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-395">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetChars%2A> aufrufen, um die sich ergebenden Zeichen speichern zu können, die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-395">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="1181d-396">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-396">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="1181d-397">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-397">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-398">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-398">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-399">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-399">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-400">Wenn der Bereich der zu decodierenden Bytes die Bytereihenfolge-Marke (BOM umfasst), und die Byte-Array von einer Methode eines nicht-BOM bewusst-Typs zurückgegeben wurde, ist das Zeichen, U + FFFE in der von dieser Methode zurückgegebene Array von Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1181d-400">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="1181d-401">Sie können diese entfernen, durch den Aufruf der <xref:System.String.TrimStart%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-401">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1181d-402">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-402">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-403">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, verwendet die Anwendung die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-403">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-404">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-404">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1181d-405">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-405">-or-</span>
          </span>
          <span data-ttu-id="1181d-406">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-406">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-407">
            <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-407">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-408">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-408">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="1181d-409">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-409">-or-</span>
          </span>
          <span data-ttu-id="1181d-410">
            <paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-410">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-411">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-411">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-412">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-412">-and-</span>
          </span>
          <span data-ttu-id="1181d-413">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-413">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1181d-414">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-414">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1181d-415">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-415">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1181d-416">Das Bytearray, das die zu decodierende Bytefolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-416">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="1181d-417">Der Index des ersten zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-417">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1181d-418">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-418">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="1181d-419">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-419">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="1181d-420">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-420">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-421">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-421">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-422">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-422">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-423">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetChars%2A> aufrufen, um die sich ergebenden Zeichen speichern zu können, die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-423">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="1181d-424">Um die maximale Größe zu berechnen, rufen die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-424">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="1181d-425">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-425">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-426">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-426">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-427">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-427">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-428">Wenn der Bereich der zu decodierenden Bytes die Bytereihenfolge-Marke (BOM umfasst), und die Byte-Array von einer Methode eines nicht-BOM bewusst-Typs zurückgegeben wurde, ist das Zeichen, U + FFFE in der von dieser Methode zurückgegebene Array von Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1181d-428">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="1181d-429">Sie können diese entfernen, durch den Aufruf der <xref:System.String.TrimStart%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-429">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1181d-430">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-430">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-431">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, verwendet die Anwendung die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-431">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-432">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-432">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-433">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-433">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1181d-434">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-434">-or-</span>
          </span>
          <span data-ttu-id="1181d-435">
            <paramref name="chars" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-435">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-436">
            <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-436">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-437">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-437">-or-</span>
          </span>
          <span data-ttu-id="1181d-438">
            <paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-438">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="1181d-439">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-439">-or-</span>
          </span>
          <span data-ttu-id="1181d-440">
            <paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-440">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-441">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-441">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="1181d-442">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-442">-or-</span>
          </span>
          <span data-ttu-id="1181d-443">
            <paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-443">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-444">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-444">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-445">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-445">-and-</span>
          </span>
          <span data-ttu-id="1181d-446">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-446">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1181d-447">Ruft einen Decoder ab, der eine UTF-32-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-447">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-448">Ein <see cref="T:System.Text.Decoder" />, der eine UTF-32-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-448">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-449">Die <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Methode konvertiert die Blöcke von Bytes in sequenzielle Blöcke von Zeichen, ähnlich wie die <xref:System.Text.UTF32Encoding.GetChars%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-449">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="1181d-450">Allerdings eine <xref:System.Text.Decoder> verwaltet Zustandsinformationen zwischen den aufrufen, damit es ordnungsgemäß decodiert werden können, die Blöcke umfassen.</span><span class="sxs-lookup"><span data-stu-id="1181d-450">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="1181d-451">Die <xref:System.Text.Decoder> behält nachfolgende Bytes am Ende der Datenblöcke und verwendet Sie im nächsten Decodierungsvorgang.</span><span class="sxs-lookup"><span data-stu-id="1181d-451">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="1181d-452">Aus diesem Grund <xref:System.Text.UTF32Encoding.GetDecoder%2A> und <xref:System.Text.UTF32Encoding.GetEncoder%2A> eignen sich für die Übertragung im Netzwerk und Dateivorgänge, da diese Vorgänge Datenblöcke anstelle einer vollständigen Datenstrom oft verarbeiten müssen.</span><span class="sxs-lookup"><span data-stu-id="1181d-452">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="1181d-453">Wenn Erkennung, d. h. aktiviert ist die `throwOnInvalidCharacters` Parameter des Konstruktors festgelegt wurde, um `true`, fehlererkennung ist ebenfalls aktiviert, der <xref:System.Text.Decoder> von dieser Methode zurückgegebene.</span><span class="sxs-lookup"><span data-stu-id="1181d-453">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="1181d-454">Wenn die fehlererkennung ist aktiviert, und eine ungültige Sequenz festgestellt wird, der Zustand des Decoders ist nicht definiert und Verarbeitung muss beendet werden.</span><span class="sxs-lookup"><span data-stu-id="1181d-454">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-455">Im folgenden Beispiel wird ein Encoder und Decoder auf eine Zeichenfolge in ein Array von Bytes zu codieren und Decodieren klicken Sie dann die Bytes in ein Array von Zeichen an.</span><span class="sxs-lookup"><span data-stu-id="1181d-455">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1181d-456">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine UTF-32-codierte Bytefolge konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-456">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-457">Ein <see cref="T:System.Text.Encoder" />, der eine Unicode-Zeichenfolge in eine UTF-32-codierte Bytefolge konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-457">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-458">Die <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> konvertiert sequenzielle Blöcke von Zeichen in sequenzielle Blöcke von Bytes, ähnlich wie die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-458">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="1181d-459">Allerdings eine <xref:System.Text.Encoder> verwaltet Zustandsinformationen zwischen den aufrufen, damit es ordnungsgemäß codiert werden können, die Blöcke umfassen.</span><span class="sxs-lookup"><span data-stu-id="1181d-459">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="1181d-460">Die <xref:System.Text.Encoder> auch behält nachfolgende Zeichen am Ende der Datenblöcke und die nachgestellten Zeichen in den nächsten Vorgang für die Codierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="1181d-460">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="1181d-461">Z. B. ein Datenblock möglicherweise eine nicht übereinstimmende hohen Ersatzzeichen enden, und die entsprechende niedrige Ersatzzeichen möglicherweise der nächste Datenblock.</span><span class="sxs-lookup"><span data-stu-id="1181d-461">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="1181d-462">Aus diesem Grund <xref:System.Text.UTF32Encoding.GetDecoder%2A> und <xref:System.Text.UTF32Encoding.GetEncoder%2A> eignen sich für die Übertragung im Netzwerk und Dateivorgänge, da diese Vorgänge Datenblöcke anstelle einer vollständigen Datenstrom oft verarbeiten müssen.</span><span class="sxs-lookup"><span data-stu-id="1181d-462">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="1181d-463">Wenn Erkennung, d. h. aktiviert ist die `throwOnInvalidCharacters` Parameter des Konstruktors festgelegt wurde, um `true`, fehlererkennung ist ebenfalls aktiviert, der <xref:System.Text.Encoder> von dieser Methode zurückgegebene.</span><span class="sxs-lookup"><span data-stu-id="1181d-463">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="1181d-464">Wenn die fehlererkennung ist aktiviert, und eine ungültige Sequenz festgestellt wird, den Zustand des Encoders ist nicht definiert und Verarbeitung muss beendet werden.</span><span class="sxs-lookup"><span data-stu-id="1181d-464">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-465">Im folgenden Beispiel wird ein Encoder und Decoder auf eine Zeichenfolge in ein Array von Bytes zu codieren und Decodieren klicken Sie dann die Bytes in ein Array von Zeichen an.</span><span class="sxs-lookup"><span data-stu-id="1181d-465">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1181d-466">Gibt den Hashcode für die aktuelle Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-466">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-467">Der Hashcode für das aktuelle <see cref="T:System.Text.UTF32Encoding" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-467">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="1181d-468">Die Anzahl der zu codierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-468">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-469">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-469">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-470">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-470">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-471">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetBytes%2A> um die resultierenden Bytes zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-471">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="1181d-472">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-472">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="1181d-473">Die <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-473">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> ein Worst-Case Zahl ist, einschließlich den schlimmsten Fall für das derzeit ausgewählte <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="1181d-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="1181d-475">Wenn ein Fallback, eine potenziell große Zeichenfolge ausgewählt wird <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> große Werte zurückgeben können.</span><span class="sxs-lookup"><span data-stu-id="1181d-475">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="1181d-476">In den meisten Fällen gibt diese Methode geeignete Zahlen für kurze Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="1181d-476">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="1181d-477">Für lange Zeichenfolgen müssen Sie möglicherweise entscheiden Sie sehr große Puffer und Abfangen von Fehlern in dem seltenen Fall, dass ein geeigneteren Puffer überschritten wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-477">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="1181d-478">Sie sollten auch erwägen einen anderen Ansatz, und verwenden <xref:System.Text.UTF32Encoding.GetByteCount%2A> oder <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1181d-478">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1181d-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> keine Beziehung zur <xref:System.Text.UTF32Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="1181d-480">Wenn Sie eine ähnliche Funktion für die Verwendung mit benötigen <xref:System.Text.UTF32Encoding.GetChars%2A>, verwenden Sie <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-480">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-481">`GetMaxByteCount(N)` ist nicht unbedingt der gleiche Wert wie `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="1181d-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-482">Im folgenden Beispiel bestimmt die Anzahl der Bytes, die zum Codieren einer Zeichenfolge, erforderlich und dann die Zeichenfolge codiert und zeigt die resultierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="1181d-482">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-483">
            <paramref name="charCount" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-483">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-484">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-484">-or-</span>
          </span>
          <span data-ttu-id="1181d-485">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1181d-486">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-487">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-487">-and-</span>
          </span>
          <span data-ttu-id="1181d-488">Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-488">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="1181d-489">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-489">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-490">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-491">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-491">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-492">Berechnen Sie die genaue Arraygröße <xref:System.Text.UTF32Encoding.GetChars%2A> um die sich ergebenden Zeichen zu speichern, rufen Sie die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-492">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="1181d-493">Um die maximale Größe zu berechnen, rufen Sie die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-493">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="1181d-494">Die <xref:System.Text.UTF32Encoding.GetCharCount%2A> Methode belegt in der Regel weniger Speicher, während die <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> Methode in der Regel schneller ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-494">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="1181d-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> ein Worst-Case Zahl ist, einschließlich den schlimmsten Fall für das derzeit ausgewählte <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="1181d-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="1181d-496">Wenn ein Fallback, eine potenziell große Zeichenfolge ausgewählt wird <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> große Werte zurückgeben können.</span><span class="sxs-lookup"><span data-stu-id="1181d-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="1181d-497">In den meisten Fällen gibt diese Methode geeignete Zahlen für kurze Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="1181d-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="1181d-498">Für lange Zeichenfolgen müssen Sie möglicherweise entscheiden Sie sehr große Puffer und Abfangen von Fehlern in dem seltenen Fall, dass ein geeigneteren Puffer überschritten wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="1181d-499">Sie sollten auch erwägen einen anderen Ansatz, und verwenden <xref:System.Text.UTF32Encoding.GetCharCount%2A> oder <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-499">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="1181d-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> keine Beziehung zur <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="1181d-501">Wenn Sie eine ähnliche Funktion für die Verwendung mit benötigen <xref:System.Text.UTF32Encoding.GetBytes%2A>, verwenden Sie <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="1181d-501">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1181d-502">`GetMaxCharCount(N)` ist nicht unbedingt der gleiche Wert wie `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="1181d-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-503">Im folgenden Beispiel wird eine Zeichenfolge in ein Array von Bytes codiert, und klicken Sie dann die Bytes in ein Array von Zeichen decodiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-503">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-504">
            <paramref name="byteCount" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-504">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-505">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-505">-or-</span>
          </span>
          <span data-ttu-id="1181d-506">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-507">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-508">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-508">-and-</span>
          </span>
          <span data-ttu-id="1181d-509">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-509">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1181d-510">Gibt eine Unicode-Bytereihenfolgemarkierung im UTF-32-Format zurück, wenn das <see cref="T:System.Text.UTF32Encoding" />-Objekt dafür konfiguriert ist, eine solche bereitzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-510">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-511">Ein Bytearray, das die Unicode-Bytereihenfolgemarkierung enthält, wenn das <see cref="T:System.Text.UTF32Encoding" />-Objekt dafür konfiguriert ist, eine bereitzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="1181d-512">Andernfalls gibt diese Methode ein Bytearray mit der Länge Null zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-512">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-513">Die <xref:System.Text.UTF32Encoding> Objekt kann ein Array von Bytes, die die Abfolge von Bytes, die infolge des Codierungsvorgangs vorangestellt werden kann, wird eine Präambel bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-513">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="1181d-514">Voranstellen einer Sequenz codierter Bytes mit einer Bytereihenfolge-Marke (Codepunkte U + 0000 U + FEFF) unterstützt den Decoder, der bestimmt die Bytereihenfolge und die Transformationsformat oder UTF.</span><span class="sxs-lookup"><span data-stu-id="1181d-514">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="1181d-515">Die Unicode-bytereihenfolgemarkierung (BOM) ist (im Hexadezimalformat) wie folgt serialisiert:</span><span class="sxs-lookup"><span data-stu-id="1181d-515">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="1181d-516">Big-endian-Bytereihenfolge: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="1181d-516">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="1181d-517">Little-endian-Bytereihenfolge: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="1181d-517">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="1181d-518">Instanziieren Sie ein <xref:System.Text.UTF32Encoding> Objekt, dessen <xref:System.Text.UTF32Encoding.GetPreamble%2A> Methode gibt eine gültige BOM zurück, es gibt folgende Möglichkeiten:</span><span class="sxs-lookup"><span data-stu-id="1181d-518">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="1181d-519">Durch Abrufen der <xref:System.Text.UTF32Encoding> zurückgegebenes Objekt der <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1181d-519">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1181d-520">Durch Aufrufen der parameterlosen <xref:System.Text.UTF32Encoding.%23ctor> Konstruktor zum Instanziieren einer <xref:System.Text.UTF32Encoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1181d-520">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="1181d-521">Durch Angabe `true` als Wert für die `byteOrderMark` Argument für die <xref:System.Text.UTF32Encoding.%23ctor%2A> und <xref:System.Text.UTF32Encoding.%23ctor%2A> Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="1181d-521">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="1181d-522">Es wird empfohlen, dass Sie die BOM, verwenden, da sie fast bestimmte Identifikation einer Codierung für Dateien, die ansonsten auf verloren haben umfasst die <xref:System.Text.UTF32Encoding> -Objekt, z. B. nicht gekennzeichnet oder nicht ordnungsgemäß gekennzeichnet Webdaten oder zufälligen Text-Dateien gespeichert, wenn ein Unternehmen haben nicht Internationale Aspekte oder andere Daten.</span><span class="sxs-lookup"><span data-stu-id="1181d-522">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="1181d-523">Probleme der Benutzer möglicherweise häufig vermieden werden, wenn Daten einheitlich und ordnungsgemäß markiert werden.</span><span class="sxs-lookup"><span data-stu-id="1181d-523">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="1181d-524">Für Standards, die einen Typ der codieren bereitstellen, ist eine Bytereihenfolge-Marke gewisse Weise redundant.</span><span class="sxs-lookup"><span data-stu-id="1181d-524">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="1181d-525">Es kann jedoch verwendet werden, können Sie einen Server, den richtigen encoding-Header senden.</span><span class="sxs-lookup"><span data-stu-id="1181d-525">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="1181d-526">Alternativ können sie als ausweichlösung verwendet werden, für den Fall, dass die Codierung verloren gegangen ist.</span><span class="sxs-lookup"><span data-stu-id="1181d-526">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="1181d-527">Es gibt einige Nachteile mit einer Bytereihenfolge-Marke.</span><span class="sxs-lookup"><span data-stu-id="1181d-527">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="1181d-528">Wissen, wie die Datenbankfelder zu begrenzen, die eine Bytereihenfolge-Marke verwenden kann z. B. schwierig sein.</span><span class="sxs-lookup"><span data-stu-id="1181d-528">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="1181d-529">Verkettung von Dateien, problematisch sein kann auch, z. B. beim Zusammenführen von Dateien so eine Möglichkeit, die ein unnötiges Zeichen in der Mitte Daten ergeben kann.</span><span class="sxs-lookup"><span data-stu-id="1181d-529">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="1181d-530">Trotz der einige Nachteile wird jedoch dringend die Verwendung einer Stückliste empfohlen.</span><span class="sxs-lookup"><span data-stu-id="1181d-530">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="1181d-531">Weitere Informationen zu Byte-Reihenfolge und die Bytereihenfolge-Marke, finden Sie im Unicode-Standard auf die [Unicode-Homepage](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="1181d-531">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1181d-532">Um sicherzustellen, dass die codierten Bytes ordnungsgemäß decodiert werden, sollten Sie den codierten Bytes mit einer Präambel Präfix voranstellen.</span><span class="sxs-lookup"><span data-stu-id="1181d-532">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="1181d-533">Beachten Sie, dass die <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode wird keine BOM, um eine codierte Bytefolge vorangestellt ist eine Bytereihenfolge-Marke am Anfang einer entsprechenden Bytedatenstrom angeben der Verantwortung des Entwicklers.</span><span class="sxs-lookup"><span data-stu-id="1181d-533">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-534">Die folgenden ruft der Code-Beispiel und zeigt die Byte Order mark, für andere <xref:System.Text.UTF32Encoding> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="1181d-534">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="1181d-535">Das folgende Beispiel instanziiert zwei <xref:System.Text.UTF32Encoding> Objekte, die das erste Argument keine BOM und die zweite von das durchführt bietet.</span><span class="sxs-lookup"><span data-stu-id="1181d-535">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="1181d-536">Es ruft dann die <xref:System.Text.UTF32Encoding.GetPreamble%2A> -Methode, die BOM vor dem Schreiben einer UTF-32-codierte Zeichenfolge in eine Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="1181d-536">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="1181d-537">Wie in der Ausgabe des Beispiels gezeigt, wurde die Datei, die die Bytes aus dem zweiten Encoder speichert vier weitere Bytes, die die erste.</span><span class="sxs-lookup"><span data-stu-id="1181d-537">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="1181d-538">Sie können auch die Dateien vergleichen, mit der `fc` Befehl in einem Konsolenfenster eingeben, oder Sie können überprüfen, dass die Dateien in einem Text-Editor, der einen hexadezimal-Anzeigemodus enthält.</span><span class="sxs-lookup"><span data-stu-id="1181d-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="1181d-539">Beachten Sie, dass die Datei in einem Editor geöffnet ist, die UTF-32 unterstützt, die BOM nicht angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-539">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1181d-540">Das Bytearray, das die zu decodierende Bytefolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-540">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1181d-541">Der Index des ersten zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-541">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1181d-542">Die Anzahl der zu decodierenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-542">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1181d-543">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-543">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1181d-544">Eine Zeichenfolge, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-544">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1181d-545">Mit der fehlererkennung, eine ungültige Sequenz verursacht, löst diese Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1181d-545">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1181d-546">Fehler unbemerkt ungültige Sequenzen werden ignoriert, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1181d-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1181d-547">Wenn der Bereich der zu decodierenden Bytes die Bytereihenfolge-Marke (BOM umfasst), und die Byte-Array von einer Methode eines nicht-BOM bewusst-Typs zurückgegeben wurde, ist das Zeichen, U + FFFE in der von dieser Methode zurückgegebene Array von Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1181d-547">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="1181d-548">Sie können diese entfernen, durch den Aufruf der <xref:System.String.TrimStart%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1181d-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1181d-549">Daten konvertiert werden, z. B. aus einem Stream gelesene Daten möglicherweise nur in sequenzielle Blöcke verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1181d-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="1181d-550">In diesem Fall oder wenn die Menge der Daten so umfangreich ist, dass er in kleinere Blöcke aufgeteilt werden muss, sollte die Anwendung verwenden die <xref:System.Text.Decoder> oder die <xref:System.Text.Encoder> gebotenen der <xref:System.Text.UTF32Encoding.GetDecoder%2A> Methode oder die <xref:System.Text.UTF32Encoding.GetEncoder%2A> Methode bzw.</span><span class="sxs-lookup"><span data-stu-id="1181d-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1181d-551">Im folgenden Beispiel wird codiert eine Zeichenfolge in zwei Arrays von Arrays von Bytes, die in der little-Endian-Reihenfolge angegeben wird, und die andere ist im big-Endian-Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="1181d-551">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="1181d-552">Anschließend werden die Bytes zurück in eine Zeichenfolge decodiert.</span><span class="sxs-lookup"><span data-stu-id="1181d-552">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="1181d-553">Im folgende Beispiel wird ein Array initialisiert, durch den Aufruf der <xref:System.Text.UTF32Encoding.GetByteCount%2A> Methode, um zu bestimmen, genau wie viele Bytes für eine codierte Zeichenfolge und das anschließende Hinzufügen der Anzahl der Byte-reihenfolgemarkierung (BOM) erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="1181d-553">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="1181d-554">Das Beispiel ruft dann die <xref:System.Text.UTF32Encoding.GetPreamble%2A> Methode zum Speichern der Bytereihenfolge-Marke in das Array vor dem Aufruf der <xref:System.Text.UTF32Encoding.GetBytes%2A> Methode, um die codierten Bytes in das Array zu speichern.</span><span class="sxs-lookup"><span data-stu-id="1181d-554">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="1181d-555">Das Beispiel ruft dann die <xref:System.Text.UTF32Encoding.GetString%2A> Methode, um die Zeichenfolge zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="1181d-555">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="1181d-556">Beachten Sie, dass in diesem Fall die decodierte Zeichenfolge aus der ursprünglichen Zeichenfolge, unterscheidet, da er mit einer 32-Bit-Bytereihenfolge-Marke, U + U + 0000 FFFE beginnt.</span><span class="sxs-lookup"><span data-stu-id="1181d-556">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="1181d-557">Dies bedeutet, dass die beiden Zeichenfolgen als ungleich verglichen werden und wenn die Ausgabe ist, die BOM als das zu ersetzende Zeichen angezeigt wird "?".</span><span class="sxs-lookup"><span data-stu-id="1181d-557">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1181d-558">
            <paramref name="bytes" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-558">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1181d-559">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-559">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1181d-560">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-560">-or-</span>
          </span>
          <span data-ttu-id="1181d-561">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-561">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1181d-562">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-562">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="1181d-563">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-563">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="1181d-564">- und -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-564">-and-</span>
          </span>
          <span data-ttu-id="1181d-565">Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1181d-565">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>