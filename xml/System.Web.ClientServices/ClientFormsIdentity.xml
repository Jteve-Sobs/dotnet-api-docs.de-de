<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3eaf39e9175ad2facaf31685a9f8f05f50c4450" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77104456" /></Metadata><TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Benutzeridentität dar, die mit der Formularauthentifizierung für Clientanwendungsdienste authentifiziert wurde.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Client Anwendungsdienste-Funktion verwendet diese Klasse zur Darstellung eines authentifizierten Benutzers. Wenn Sie die Anwendung für die Verwendung von Client Anwendungsdiensten und Formular Authentifizierung konfigurieren, können Sie einen Benutzer authentifizieren, indem Sie die `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType>-Methode aufrufen. Nach der Authentifizierung können Sie einen Verweis auf die aktuelle <xref:System.Web.ClientServices.ClientFormsIdentity> Instanz über die <xref:System.Security.Principal.IPrincipal.Identity%2A>-Eigenschaft des <xref:System.Security.Principal.IPrincipal> abrufen, die über die `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>-Eigenschaft abgerufen wurde. Weitere Informationen finden Sie unter [Clientanwendungsdienste](~/docs/framework/common-client-technologies/client-application-services.md).  
  
 In der Regel greifen Sie als <xref:System.Security.Principal.IIdentity> Verweis auf ein <xref:System.Web.ClientServices.ClientFormsIdentity> Objekt zu, um eine direkte Abhängigkeit von dieser Klasse zu vermeiden. Sie können bestimmen, ob ein Benutzer authentifiziert wird, indem Sie die <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>-Eigenschaft der Identität überprüfen. Der Benutzer kann jedoch für Windows authentifiziert werden, jedoch nicht für Client Anwendungsdienste. Um zu ermitteln, ob der Benutzer für Client Anwendungsdienste authentifiziert wurde, sollten Sie auch bestätigen, dass der Wert der <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>-Eigenschaft "ClientForms" lautet.  
  
 Sie müssen einen expliziten <xref:System.Web.ClientServices.ClientFormsIdentity> Verweis verwenden, um die <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>-Methode aufzurufen, die nicht von der <xref:System.Security.Principal.IIdentity>-Schnittstelle definiert wird.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie Sie mit dieser Klasse einen Benutzer im Hintergrund erneut validieren können, wenn die Anwendung den Offline Zustand verlässt. In diesem Beispiel aktualisiert ein <xref:System.Windows.Forms.CheckBox.CheckedChanged>-Ereignishandler den Offline Status so, dass er mit dem Wert des Kontrollkästchens identisch ist. Wenn der Benutzer die Anwendung auf den Status Online festlegt, versucht der Ereignishandler, den Benutzer durch Aufrufen der <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>-Methode erneut zu validieren. Wenn der Authentifizierungsserver jedoch nicht verfügbar ist, wird die Anwendung vom Ereignishandler in den Offline Zustand versetzt.  
  
> [!NOTE]
>  Die <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> -Methode wird nur ergänzend bereitgestellt. Da sie nicht über einen Rückgabewert verfügt, kann sie nicht angeben, ob die erneute Überprüfung fehlgeschlagen ist. Die erneute Überprüfung kann z. B. fehlschlagen, wenn die Anmeldeinformationen des Benutzers auf dem Server geändert wurden. In diesem Fall ist es ratsam, Code einzuschließen, der die Benutzer nach dem Fehlschlagen eines Dienstaufrufs explizit validiert. Weitere Informationen finden Sie im Abschnitt zugreifen auf Webeinstellungen in Exemplarische Vorgehensweise [: Verwenden von Client Anwendungsdienste](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb546195(v=vs.100)">Exemplarische Vorgehensweise: Verwenden von Clientanwendungsdiensten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des authentifizierten Benutzers.</param>
        <param name="password">Das Kennwort für den authentifizierten Benutzer.</param>
        <param name="provider">Der Mitgliedschaftsanbieter, mit dem der Benutzer authentifziert wird.</param>
        <param name="authenticationType">Der verwendete Authentifizierungstyp.</param>
        <param name="isAuthenticated"><see langword="true" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="false" />.</param>
        <param name="authenticationCookies">Die vom Authentifizierungsdienst abgerufenen Cookies.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Cookies ab, die vom Authentifizierungsdienst abgerufen wurden.</summary>
        <value>Die vom Authentifizierungsdienst abgerufenen Cookies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nicht für die Verwendung in Ihrem Anwendungscode vorgesehen. Sie können die durch diese Eigenschaft abgerufenen Cookies nicht aussagekräftig ändern und enthalten keine nützlichen Informationen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Authentifizierungstyp ab, der zur Authentifizierung des Benutzers verwendet wird.</summary>
        <value>Der Authentifizierungstyp, der zur Authentifizierung des Benutzers verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel greifen Sie als <xref:System.Security.Principal.IIdentity> Verweis auf ein <xref:System.Web.ClientServices.ClientFormsIdentity> Objekt zu, um eine direkte Abhängigkeit von dieser Klasse zu vermeiden. Sie können bestimmen, ob ein Benutzer authentifiziert wird, indem Sie die <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>-Eigenschaft der Identität überprüfen. Der Benutzer kann jedoch für Windows authentifiziert werden, jedoch nicht für Client Anwendungsdienste. Um zu ermitteln, ob der Benutzer für Client Anwendungsdienste authentifiziert wurde, sollten Sie auch bestätigen, dass der Wert der <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>-Eigenschaft "ClientForms" lautet. Weitere Informationen finden Sie in der Übersicht über <xref:System.Web.ClientServices.ClientFormsIdentity>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie diese Eigenschaft über einen <xref:System.Security.Principal.IIdentity> Verweis verwendet wird, um zu bestimmen, ob ein Benutzer zurzeit für Client Anwendungsdienste authentifiziert ist. In diesem Beispiel wird davon ausgegangen, dass die Anwendung in der Standardkonfiguration ist, in der Benutzer sich nicht erneut anmelden müssen, wenn das Authentifizierungs Cookie abläuft. Andernfalls kann die <xref:System.Net.WebException> darauf hindeuten, dass die Benutzeranmeldung abgelaufen ist. Weitere Informationen finden Sie unter [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die von der <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> verwendeten Ressourcen frei.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> auf, wenn Sie <xref:System.Web.ClientServices.ClientFormsIdentity> nicht mehr benötigen. Die <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>-Methode bewirkt, dass <xref:System.Web.ClientServices.ClientFormsIdentity> nicht mehr verwendet werden kann. Nachdem Sie <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Web.ClientServices.ClientFormsIdentity> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Web.ClientServices.ClientFormsIdentity> belegt hat. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Web.ClientServices.ClientFormsIdentity> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Web.ClientServices.ClientFormsIdentity>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der öffentlichen `Dispose()`-Methode und der <xref:System.Object.Finalize%2A>-Methode aufgerufen. `Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist. <xref:System.Object.Finalize%2A> ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist.  
  
 Wenn der `disposing`-Parameter den Wert true hat, gibt diese Methode alle Ressourcen frei, die von allen verwalteten Objekten aufbewahrt werden, auf die diese <xref:System.Web.ClientServices.ClientFormsIdentity> verweist Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben <see langword="Dispose(Boolean)" /> Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren <see langword="Dispose" />von freigegeben wurden. Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzer authentifiziert wurde.</summary>
        <value><see langword="true" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel greifen Sie als <xref:System.Security.Principal.IIdentity> Verweis auf ein <xref:System.Web.ClientServices.ClientFormsIdentity> Objekt zu, um eine direkte Abhängigkeit von dieser Klasse zu vermeiden. Sie können bestimmen, ob ein Benutzer authentifiziert wird, indem Sie die <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>-Eigenschaft der Identität überprüfen. Der Benutzer kann jedoch für Windows authentifiziert werden, jedoch nicht für Client Anwendungsdienste. Um zu ermitteln, ob der Benutzer für Client Anwendungsdienste authentifiziert wurde, sollten Sie auch bestätigen, dass der Wert der <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>-Eigenschaft "ClientForms" lautet. Weitere Informationen finden Sie in der Übersicht über <xref:System.Web.ClientServices.ClientFormsIdentity>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie diese Eigenschaft über einen <xref:System.Security.Principal.IIdentity> Verweis verwendet wird, um zu bestimmen, ob ein Benutzer zurzeit für Client Anwendungsdienste authentifiziert ist. In diesem Beispiel wird davon ausgegangen, dass die Anwendung in der Standardkonfiguration ist, in der Benutzer sich nicht erneut anmelden müssen, wenn das Authentifizierungs Cookie abläuft. Andernfalls kann die <xref:System.Net.WebException> darauf hindeuten, dass die Benutzeranmeldung abgelaufen ist. Weitere Informationen finden Sie unter [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Benutzers ab.</summary>
        <value>Der Name des Benutzers.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Mitgliedschaftsanbieter ab, mit dem der Benutzer authentifziert wird.</summary>
        <value>Der Mitgliedschaftsanbieter, mit dem der Benutzer authentifziert wird.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Authentifiziert den Benutzer automatisch mit zwischengespeicherten Anmeldeinformationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Formular Authentifizierung zum Überprüfen des aktuellen Benutzers verwenden, speichert die <xref:System.Web.ClientServices.ClientFormsIdentity>-Klasse die Benutzer Anmelde Informationen, solange die Anwendung ausgeführt wird. Der Benutzer wird jedoch erst authentifiziert, wenn das Authentifizierungs Cookie abläuft. Nachdem das Cookie abläuft, muss der Benutzer erneut überprüft werden, um auf die Remote Rollen oder webeinstellungs Dienste zuzugreifen. Im Dialogfeld **Erweiterte Einstellungen für Dienste** können Sie die Anwendung so konfigurieren, dass der Benutzer automatisch erneut validiert wird, wie unter Vorgehens [Weise: Konfigurieren von Client Anwendungsdienste](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)beschrieben. Wenn Sie die Anwendung jedoch so konfigurieren, dass der Cookieablauf beachtet wird, können Sie den Benutzerprogramm gesteuert erneut validieren, indem Sie die <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>-Methode aufrufen. Diese Methode ist auch nützlich, wenn Sie vom Offline Modus in den Online Modus wechseln, da die Anwendung möglicherweise offline heruntergefahren wurde.  
  
> [!NOTE]
>  Die <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> -Methode wird nur ergänzend bereitgestellt. Da sie nicht über einen Rückgabewert verfügt, kann sie nicht angeben, ob die erneute Überprüfung fehlgeschlagen ist. Die erneute Überprüfung kann z. B. fehlschlagen, wenn die Anmeldeinformationen des Benutzers auf dem Server geändert wurden. In diesem Fall ist es ratsam, Code einzuschließen, der die Benutzer nach dem Fehlschlagen eines Dienstaufrufs explizit validiert. Weitere Informationen finden Sie im Abschnitt zugreifen auf Webeinstellungen in Exemplarische Vorgehensweise [: Verwenden von Client Anwendungsdienste](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie diese Methode verwendet wird, um einen Benutzer im Hintergrund erneut zu validieren, wenn die Anwendung den Offline Zustand verlässt. In diesem Beispiel aktualisiert ein <xref:System.Windows.Forms.CheckBox.CheckedChanged>-Ereignishandler den Offline Status so, dass er mit dem Wert des Kontrollkästchens identisch ist. Wenn der Benutzer die Anwendung auf den Status Online festlegt, versucht der Ereignishandler, den Benutzer erneut zu validieren. Wenn der Authentifizierungsserver jedoch nicht verfügbar ist, wird die Anwendung vom Ereignishandler in den Offline Zustand versetzt.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
        <related type="Article" href="/visualstudio/ide/reference/advanced-settings-for-services-dialog-box">Dialogfeld "Erweiterte Einstellungen für Dienste"</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb546195(v=vs.100)">Exemplarische Vorgehensweise: Verwenden von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
  </Members>
</Type>
