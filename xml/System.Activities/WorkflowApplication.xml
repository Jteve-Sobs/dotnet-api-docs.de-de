<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aed6b6f994120238c715839c3c767b2a95d2547e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="398fb-101">Stellt einen Host für eine einzelne Instanz eines Workflows bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="398fb-101">Provides a host for a single instance of a workflow.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-102">Die <xref:System.Activities.WorkflowApplication>-Klasse stellt einen Host für eine einzelne Workflowinstanz bereit.</span><span class="sxs-lookup"><span data-stu-id="398fb-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="398fb-103">Dabei handelt es sich um einen Proxy für die tatsächliche Workflowinstanz, die über die Workflowlaufzeit verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="398fb-104">Benutzer der <xref:System.Activities.WorkflowApplication>-Klasse können die Workflowlaufzeit anweisen, durch Aufrufen der entsprechenden Methoden für ein <xref:System.Activities.WorkflowApplication>-Objekt Aktionen für eine Workflowinstanz auszuführen.</span><span class="sxs-lookup"><span data-stu-id="398fb-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="398fb-105">Wenn eine angeforderte Aktion nicht gültig ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="398fb-106">Mit der <xref:System.Activities.WorkflowApplication>-Klasse können Sie folgende Aufgaben ausführen:</span><span class="sxs-lookup"><span data-stu-id="398fb-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="398fb-107">Erstellen einer neuen Workflowinstanz oder Laden einer Workflowinstanz aus einem Instanzspeicher</span><span class="sxs-lookup"><span data-stu-id="398fb-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="398fb-108">Bereitstellen von Erweiterungen für Aktivitäten in einer Workflowinstanz</span><span class="sxs-lookup"><span data-stu-id="398fb-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="398fb-109">Steuern der Ausführung einer Workflowinstanz</span><span class="sxs-lookup"><span data-stu-id="398fb-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="398fb-110">Wiederaufnahme eines von einer Aktivität erstellten Lesezeichens in einer Workflowinstanz</span><span class="sxs-lookup"><span data-stu-id="398fb-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="398fb-111">Ablegen im Persistenzspeicher/Entladen einer Workflowinstanz</span><span class="sxs-lookup"><span data-stu-id="398fb-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="398fb-112">Aktivieren von Benachrichtigungen bei Ereignissen im Workflowinstanzlebenszyklus</span><span class="sxs-lookup"><span data-stu-id="398fb-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-113">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-114">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-115">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-116">Erstellt eine neue Instanz der <see cref="T:System.Activities.WorkflowApplication" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="398fb-117">Die Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-117">The workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-118">Erstellt eine neue Instanz der <see cref="T:System.Activities.WorkflowApplication" />-Klasse mit der angegebenen Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-119">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-120">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mithilfe einer Workflowdefinition erstellt, die aus einer einzelnen `DiceRoll`-Aktivität besteht.</span><span class="sxs-lookup"><span data-stu-id="398fb-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="398fb-121">Die `DiceRoll`-Aktivität verfügt über zwei Ausgabeargumente, die die Ergebnisse des Würfelvorgangs darstellen.</span><span class="sxs-lookup"><span data-stu-id="398fb-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="398fb-122">Wenn der Workflow abgeschlossen wurde, werden die Ausgaben im <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler abgerufen, und die folgende Ausgabe wird in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="398fb-123">Die Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-123">The workflow definition.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-124">Die Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-124">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-125">Erstellt eine neue Instanz der <see cref="T:System.Activities.WorkflowApplication" />-Klasse mit der angegebenen Workflowdefinition und Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="398fb-126">Die Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-126">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="398fb-127">Die für die Stammaktivität der Workflowdefinition definierten Argumentwerte, die nach Argumentnamen geordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-128">Erstellt eine neue Instanz der <see cref="T:System.Activities.WorkflowApplication" />-Klasse, die die angegebene Workflowdefinition und Argumentwerte verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-129">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-130">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mithilfe einer Workflowdefinition erstellt, die aus einer einzelnen `Divide`-Aktivität besteht. Diese Aktivität akzeptiert zwei Eingabeargumente und ein Wörterbuch von Eingabeargumenten, das die zwei weiterzugebenden Werte enthält, die nach Argumentnamen geordnet sind.</span><span class="sxs-lookup"><span data-stu-id="398fb-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="398fb-131">Die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-132">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="398fb-133">Die Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-133">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="398fb-134">Die Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-134">The definition identity.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-135">Die für die Stammaktivität der Workflowdefinition definierten Argumentwerte, die nach Argumentnamen geordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-136">Erstellt eine neue Instanz der <see cref="T:System.Activities.WorkflowApplication" />-Klasse, die die angegebene Workflowdefinition, Argumentwerte und Definitionsidentität verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-137">Benachrichtigt die Workflowlaufzeit, dass diese Workflowinstanz abgebrochen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-137">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-138">Wenn ein von einer <xref:System.Activities.WorkflowApplication> gehosteter Workflow abgebrochen wird, wird der <xref:System.Activities.WorkflowApplication.Aborted%2A>-Handler aufgerufen, und der <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-139">Benachrichtigt die Workflowlaufzeit, dass diese Workflowinstanz abgebrochen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-139">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-140">Wenn ein von einer <xref:System.Activities.WorkflowApplication> gehosteter Workflow abgebrochen wird, wird der <xref:System.Activities.WorkflowApplication.Aborted%2A>-Handler aufgerufen, und der <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-141">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-142">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-143">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Abort%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="398fb-144">Wenn der Workflow abgebrochen wird, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-145">Der Grund für den angeforderten Abbruch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-145">The reason for the request to abort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-146">Benachrichtigt die Workflowlaufzeit, dass diese Workflowinstanz aus dem angegebenen Grund abgebrochen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-147">Wenn ein von einer <xref:System.Activities.WorkflowApplication> gehosteter Workflow abgebrochen wird, wird der <xref:System.Activities.WorkflowApplication.Aborted%2A>-Handler aufgerufen, und der <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-148">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-149">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-150">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Abort%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="398fb-151">Wenn der Workflow abgebrochen wird, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-152">Ruft die <see cref="T:System.Action`1" />-Aktion ab, die bei Abbruch der Workflowinstanz ausgelöst wird, bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-153">Die Aktion, die bei Abbruch der Workflowinstanz ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-153">The action that is invoked when the workflow instance is aborted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-154">Wenn ein von einer <xref:System.Activities.WorkflowApplication> gehosteter Workflow abgebrochen wird, wird der <xref:System.Activities.WorkflowApplication.Aborted%2A>-Handler aufgerufen, und der <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-155">Im folgenden Codebeispiel werden die in den <xref:System.Activities.WorkflowApplicationAbortedEventArgs>-Handler einer <xref:System.Activities.WorkflowApplication.Aborted%2A>-Instanz übergebenen <xref:System.Activities.WorkflowApplication> überprüft, und es werden Informationen darüber angezeigt, warum der Workflow abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues">
          <span data-ttu-id="398fb-156">Die Metadatenwerte, die in der ersten Persistenz enthalten sein sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-156">The metadata values to be included with the first persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-157">Gibt Instanzmetadatenwerte an, die in der ersten Persistenz einer neuen Instanz enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-158">Bricht einen Workflow mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-159"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-159"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="398fb-160">Die Methode, die aufgerufen wird, wenn der Abbruchvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-160">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-161">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-161">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-162">Bricht eine Workflowinstanz mithilfe des angegebenen <see cref="T:System.AsyncCallback" /> und des vom Benutzer bereitgestellten Status asynchron ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-163">Ein Verweis auf den asynchronen Abbruchvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-163">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-164">Um zu ermitteln, ob der Abbruchvorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndCancel%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="398fb-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-166">Wenn das <xref:System.Activities.WorkflowApplication.EndCancel%2A>-Element aufgerufen wird, bevor der Abbruchvorgang abgeschlossen ist, wird es bis zum Abschluss des Abbruchvorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="398fb-167">Standardmäßig muss der Abbruchvorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndCancel%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="398fb-168">Diese Methode bricht einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-169"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-169"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-170">Das Intervall, in dem der Abbruchvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-171">Die Methode, die aufgerufen wird, wenn der Abbruchvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-171">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-172">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-172">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-173">Bricht eine Workflowinstanz mithilfe des angegebenen Timeoutintervalls, des angegebenen <see cref="T:System.AsyncCallback" /> und des vom Benutzer bereitgestellten Status asynchron ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-174">Ein Verweis auf den asynchronen Abbruchvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-174">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-175">Um zu ermitteln, ob der Abbruchvorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndCancel%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="398fb-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> kann innerhalb oder außerhalb der im `callback`-Parameter angegebenen Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="398fb-177">Wenn das <xref:System.Activities.WorkflowApplication.EndCancel%2A>-Element aufgerufen wird, bevor der Abbruchvorgang abgeschlossen ist, wird es bis zum Abschluss des Abbruchvorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="398fb-178">Wenn der Abbruchvorgang nicht innerhalb des mit dem `timeOut`-Parameter angegebenen Intervalls abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndCancel%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="398fb-179">Diese Methode bricht einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-180"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-180"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-181">Erstellt einen Standardinstanzbesitzer asynchronen mithilfe des asynchronen <see cref="T:System.IAsyncResult" /> Entwurfsmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-182">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-182">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-183">Die Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-183">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="398fb-184">Der Identität-Filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-184">The identity filter.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-185">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-185">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-186">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-186">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-187">Erstellt einen Standardinstanzbesitzer asynchron mithilfe des <see cref="T:System.IAsyncResult" /> asynchronen Entwurfsmusters mit dem angegebenen Instanzspeicher, Definitionsidentität, Identitätsfilter, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-188">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-188">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-189">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-189">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-190">Die Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-190">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="398fb-191">Der Identität-Filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-191">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-192">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-193">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-193">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-194">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-194">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-195">Erstellt einen Standardinstanzbesitzer asynchron mithilfe des <see cref="T:System.IAsyncResult" /> asynchronen Entwurfsmusters mit dem angegebenen Instanzspeicher, Definitionsidentität, Identitätsfilter, Timeoutintervall, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-196">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-196">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-197">Löscht einen Standardinstanzbesitzer asynchron mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-198">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-198">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-199">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-199">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-200">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-200">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-201">Löscht den Standardbesitzer einer Instanz asynchron unter Verwendung des <see cref="T:System.IAsyncResult" /> asynchronen Entwurfsmusters mit angegebenem Instanzspeicher, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-202">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-202">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-203">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-203">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-204">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-205">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-205">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-206">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-206">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-207">Löscht den Standardbesitzer einer Instanz asynchron unter Verwendung des <see cref="T:System.IAsyncResult" /> asynchronen Entwurfsmusters mit angegebenem Instanzspeicher, Timeoutinterval, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-208">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-208">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-209">Ruft asynchron den Besitzer einer Instanz unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-210">Der Instanzbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-210">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="398fb-211">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-211">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-212">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-212">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-213">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-213">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-214">Ruft asynchron den Besitzer einer Instanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit dem angegebenen Instanzbezeichner, Instanzspeicher, Rückruf und Zustand ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-215">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-215">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-216">Der Instanzbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-216">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="398fb-217">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-217">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-218">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-219">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-219">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-220">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-220">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-221">Ruft asynchron den Besitzer einer Instanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit dem angegebenen Instanzbezeichner, Instanzspeicher, Timeoutinterval, Rückruf und Zustand ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-222">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-222">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-223">Ruft asynchron den Besitzer einer ausführbaren Instanz unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-224">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-224">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-225">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-225">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-226">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-226">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-227">Ruft asynchron den Besitzer einer ausführbaren Instanz unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit angegebenem Instanzspeicher, Rückruf und Zustand ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-228">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-228">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-229">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-229">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-230">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-231">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-231">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-232">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-232">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-233">Ruft asynchron den Besitzer einer ausführbaren Instanz unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit angegebenem Instanzspeicher, Timeoutinterval, Rückruf und Zustand ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-234">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-234">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-235">Lädt einen Workflow mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron aus einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-236"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-236"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-237">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-237">The instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-238">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-238">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-239">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-239">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-240">Lädt einen Workflow asynchron aus einem Instanzspeicher unter Verwendung des asynchronen Entwurfsmusters <see cref="T:System.IAsyncResult" /> mit angegebener Instanz sowie angegebenem Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-241">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-241">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-242">Ein eindeutiger Bezeichner (128 Bit) für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-242">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-243">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-243">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-244">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-244">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-245">Lädt einen Workflow asynchron aus einem Instanzspeicher, wobei der angegebene Instanzbezeichner, die angegebene Rückrufmethode und der vom Benutzer bereitgestellte Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-246">Der Status eines asynchronen Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-246">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-247">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-247">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="398fb-248">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-248">The update map.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-249">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-249">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-250">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-250">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-251">Lädt einen Workflow asynchron aus einem Instanzspeicher unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit angegebener Instanz und Update-Zuordnung sowie angegebenem Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-252">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-252">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-253">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-253">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-254">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-255">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-255">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-256">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-256">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-257">Lädt einen Workflow asynchron aus einem Instanzspeicher unter Verwendung des asynchronen Entwurfsmusters <see cref="T:System.IAsyncResult" /> mit angegebener Instanz und Zeitüberschreitungs-Intervall sowie angegebenem Timeoutinterval, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-258">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-258">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-259">Ein eindeutiger Bezeichner (128 Bit) für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-259">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-260">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-261">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-261">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-262">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-262">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-263">Lädt einen Workflow asynchron aus einem Instanzspeicher, wobei der angegebene Instanzbezeichner, das angegebene Timeoutintervall, die angegebene Rückrufmethode und der vom Benutzer bereitgestellte Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-264">Der Status eines asynchronen Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-264">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-265">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-265">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="398fb-266">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-266">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-267">Das Intervall, in dem der Ladebeginnvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-268">Die Methode, die aufgerufen wird, wenn der Ladebeginnvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-268">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-269">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-269">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-270">Lädt einen Workflow asynchron aus einem Instanzspeicher unter Verwendung des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters mit angegebener Instanz und Update-Zuordnung sowie angegebenem Timeoutinterval, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-271">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-271">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-272">Initiiert den asynchronen Prozess zum Laden einer ausführbaren Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-273">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="398fb-274">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-274">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-275">Ein optionales anwendungsspezifisches Objekt, das Informationen über den asynchronen Vorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-275">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-276">Initiiert einen Vorgang zum Laden einer ausführbaren Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-277">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-277">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-278">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="398fb-279">Um zu ermitteln, ob der Ladevorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="398fb-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-281">Wenn das <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-282">Standardmäßig muss der Wiederaufnahmevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="398fb-283">Diese Methode lädt einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-284"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-284"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-285">Das Intervall, in dem der Ladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-286">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-286">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-287">Ein optionales anwendungsspezifisches Objekt, das Informationen über den asynchronen Vorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-287">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-288">Initiiert einen Vorgang zum Laden einer ausführbaren Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-289">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-289">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-290">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="398fb-291">Um zu ermitteln, ob der Ladevorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="398fb-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-293">Wenn das <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-294">Wenn der Ladevorgang innerhalb des angegebenen Timeoutintervalls nicht abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="398fb-295">Diese Methode lädt einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-296"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-296"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-297">Speichert eine Workflowinstanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron in einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-298"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-298"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="398fb-299">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-300">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="398fb-301">Die Methode, die aufgerufen wird, wenn der Beibehaltungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-301">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-302">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-302">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-303">Speichert eine Workflowinstanz mithilfe der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron in einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-304">Ein Verweis auf den asynchronen Persistenzspeichervorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-304">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-305">Um zu ermitteln, ob der Persistenzspeichervorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndPersist%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="398fb-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="398fb-307">Wenn das <xref:System.Activities.WorkflowApplication.EndPersist%2A>-Element aufgerufen wird, bevor der Persistenzspeichervorgang abgeschlossen ist, wird es bis zum Abschluss des Persistenzspeichervorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="398fb-308">Wenn der Persistenzspeichervorgang innerhalb von 30 Sekunden nicht abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndPersist%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="398fb-309">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-310">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="398fb-311">Diese Methode speichert einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron im Persistenzspeicher.</span><span class="sxs-lookup"><span data-stu-id="398fb-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-312"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-312"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-313">Das Intervall, in dem der Persistenzspeichervorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-314">Die Methode, die aufgerufen wird, wenn der Beibehaltungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-314">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-315">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-315">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-316">Speichert eine Workflowinstanz mithilfe des angegebenen Timeoutintervalls, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron in einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-317">Ein Verweis auf den asynchronen Persistenzspeichervorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-317">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-318">Um zu ermitteln, ob der Persistenzspeichervorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndPersist%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="398fb-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="398fb-320">Wenn das <xref:System.Activities.WorkflowApplication.EndPersist%2A>-Element aufgerufen wird, bevor der Persistenzspeichervorgang abgeschlossen ist, wird es bis zum Abschluss des Persistenzspeichervorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="398fb-321">Wenn der Persistenzspeichervorgang innerhalb des angegebenen Timeoutintervalls nicht abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndPersist%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="398fb-322">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-323">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="398fb-324">Diese Methode speichert eine Workflowinstanz mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron im Persistenzspeicher.</span><span class="sxs-lookup"><span data-stu-id="398fb-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-325"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-325"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-326">Initiiert einen asynchronen Vorgang zur Wiederaufnahme eines Lesezeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-326">Initiates an asynchronous operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="398fb-327">Das wiederaufzunehmende Lesezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-327">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-328">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-329">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-329">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-330">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-330">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-331">Initiiert einen Vorgang zur Wiederaufnahme eines Lesezeichens, wobei der angegebene Wert, die angegebene Rückrufmethode und der angegebene Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-332">Ein Verweis auf den asynchronen Lesezeichenwiederaufnahmevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-332">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-333">Um zu ermitteln, ob der Wiederaufnahmevorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="398fb-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-335">Wenn das <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-336">Standardmäßig muss der Wiederaufnahmevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="398fb-337">Diese Methode nimmt ein Lesezeichen mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron wieder auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-338"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-338"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="398fb-339">Der Name des Lesezeichens, das wiederaufgenommen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-339">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-340">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-341">Die Methode, die bei Abschluss des asynchronen Vorgangs aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-341">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-342">Der Ausführungsstatus eines Workflows, der vor dem Beginn eines asynchronen Vorgangs vom aufrufenden Thread gespeichert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-343">Initiiert einen asynchronen Vorgang zur Wiederaufnahme des Lesezeichens mit dem angegebenen Namen, wobei der angegebene Wert, die angegebene Rückrufmethode und der angegebene Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span>
          </span>
          <span data-ttu-id="398fb-344">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-345">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-345">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-346">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="398fb-347">Das wiederaufzunehmende Lesezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-347">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-348">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-349">Das Intervall, in dem der Wiederaufnahmevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-350">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-350">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-351">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-351">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-352">Initiiert einen Vorgang zur Wiederaufnahme eines Lesezeichens, wobei der angegebene Wert, das angegebene Timeoutintervall, die angegebene Rückrufmethode und der angegebene Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-353">Ein Verweis auf den asynchronen Lesezeichenwiederaufnahmevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-353">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-354">Um zu ermitteln, ob der Wiederaufnahmevorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="398fb-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-356">Wenn das <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-357">Wenn der Wiederaufnahmevorgang innerhalb des angegebenen Timeoutintervalls nicht abgeschlossen wird, wird eine <xref:System.TimeoutException> vom <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>-Vorgang ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="398fb-358">Diese Methode nimmt ein Lesezeichen mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron wieder auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-359"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-359"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="398fb-360">Der Name des Lesezeichens, das wiederaufgenommen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-360">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-361">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-362">Das Zeitintervall, in dem das Lesezeichen wiederaufgenommen werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-362">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-363">Die Methode, die bei Abschluss des asynchronen Vorgangs aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-363">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-364">Der Ausführungsstatus eines Workflows, der vor dem Beginn eines asynchronen Vorgangs vom aufrufenden Thread gespeichert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-365">Initiiert einen asynchronen Vorgang zur Wiederaufnahme des Lesezeichens mit dem angegebenen Namen, wobei der angegebene Wert, das angegebene Timeoutintervall, die angegebene Rückrufmethode und der angegebene Status verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span>
          </span>
          <span data-ttu-id="398fb-366">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-367">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-367">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-368">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-369">Startet eine Workflowinstanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron bzw. nimmt sie asynchron wieder auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-370"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-370"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="398fb-371">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-371">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-372">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-372">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-373">Startet eine Workflowinstanz mithilfe der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron bzw. nimmt sie asynchron wieder auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-374">Ein Verweis auf den asynchronen Ausführungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-374">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-375">Um zu ermitteln, ob der Ausführungsvorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndRun%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="398fb-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="398fb-377">Wenn das <xref:System.Activities.WorkflowApplication.EndRun%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-378">Standardmäßig muss der Wiederaufnahmevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls wird eine <xref:System.TimeoutException> vom <xref:System.Activities.WorkflowApplication.EndRun%2A>-Vorgang ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="398fb-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="398fb-379">Diese Methode startet einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron bzw. nimmt ihn asynchron wieder auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-380"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-380"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-381">Das Intervall, in dem der Wiederaufnahmevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-382">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-382">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-383">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-383">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-384">Startet eine Workflowinstanz mithilfe des angegebenen Timeoutintervalls, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron bzw. nimmt sie asynchron wieder auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-385">Ein Verweis auf den asynchronen Ausführungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-385">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-386">Um zu ermitteln, ob der Ausführungsvorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndRun%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="398fb-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="398fb-388">Wenn das <xref:System.Activities.WorkflowApplication.EndRun%2A> aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird es bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="398fb-389">Wenn der Wiederaufnahmevorgang innerhalb des angegebenen Timeoutintervalls nicht abgeschlossen wird, wird eine <xref:System.TimeoutException> vom <xref:System.Activities.WorkflowApplication.EndRun%2A>-Vorgang ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="398fb-390">Diese Methode startet einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron bzw. nimmt ihn asynchron wieder auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-391"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-391"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-392">Beendet eine Workflowinstanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-393"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-393"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-394">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-394">The reason the workflow instance is terminated.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-395">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-396">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-396">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-397">Beendet eine Workflowinstanz mithilfe der angegebenen Ausnahme, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-398">Ein Verweis auf den aktuellen <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-399">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-400">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-401">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndTerminate%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="398fb-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="398fb-403">Wenn <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="398fb-404">Standardmäßig muss der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="398fb-405">Diese Methode beendet einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-406"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-406"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-407">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-407">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-408">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-409">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-409">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-410">Beendet eine Workflowinstanz mithilfe der angegebenen Fehlermeldung, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-411">Ein Verweis auf den aktuellen <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-412">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-413">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-414">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndTerminate%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="398fb-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="398fb-416">Wenn <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="398fb-417">Standardmäßig muss der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="398fb-418">Diese Methode beendet eine Workflowinstanz mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-419"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-419"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-420">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-420">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-421">Das Intervall, in dem der <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-422">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-423">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-423">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-424">Beendet eine Workflowinstanz mithilfe der angegebenen Ausnahme, des angegebenen Timeoutintervalls, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-425">Ein Verweis auf den aktuellen <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-426">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-427">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-428">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndTerminate%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="398fb-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> kann innerhalb oder außerhalb der `callback`-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="398fb-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="398fb-430">Wenn <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="398fb-431">Wenn der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang nicht innerhalb des angegebenen Timeoutintervalls abgeschlossen wird, wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="398fb-432">Diese oder beliebige andere Ausnahmen, die während des <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Prozesses auftreten, werden von <xref:System.Activities.WorkflowApplication.EndTerminate%2A> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="398fb-433">Diese Methode beendet einen Workflow mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-434"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-434"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-435">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-435">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-436">Das Intervall, in dem der <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-437">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-438">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-438">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-439">Beendet eine Workflowinstanz mithilfe der angegebenen Fehlermeldung, des angegebenen Timeoutintervalls, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-440">Ein Verweis auf den asynchronen <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-441">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-442">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-443">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndTerminate%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="398fb-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="398fb-445">Wenn <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="398fb-446">Wenn der <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang nicht innerhalb des angegebenen Timeoutintervalls abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndTerminate%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="398fb-447">Diese Methode beendet eine Workflowinstanz mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-448"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-448"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-449">Speichert eine Workflowinstanz mithilfe des asynchronen <see cref="T:System.IAsyncResult" />-Entwurfsmusters asynchron im Persistenzspeicher und entfernt sie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-450"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-450"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="398fb-451">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-452">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="398fb-453">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-454">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-454">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-455">Speichert eine Workflowinstanz mithilfe der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron im Persistenzspeicher und entfernt sie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-456">Ein Verweis auf den asynchronen <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-457">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndUnload%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="398fb-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="398fb-459">Wenn <xref:System.Activities.WorkflowApplication.EndUnload%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="398fb-460">Standardmäßig muss der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndUnload%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="398fb-461">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-462">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="398fb-463">Diese Methode speichert eine Workflowinstanz mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron im Persistenzspeicher und entfernt sie.</span><span class="sxs-lookup"><span data-stu-id="398fb-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-464"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-464"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-465">Das Intervall, in dem der <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />-Vorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="398fb-466">Die bei Abschluss des <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />-Vorgangs aufzurufende Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="398fb-467">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-467">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-468">Speichert eine Workflowinstanz mithilfe des angegebenen Timeoutintervalls, der angegebenen Rückrufmethode und des vom Benutzer bereitgestellten Status asynchron im Persistenzspeicher und entfernt sie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-469">Ein Verweis auf den asynchronen <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />-Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-470">Um zu ermitteln, ob der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang erfolgreich war, rufen Sie <xref:System.Activities.WorkflowApplication.EndUnload%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="398fb-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> kann innerhalb oder außerhalb der Methode aufgerufen werden, auf die im `callback`-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="398fb-472">Wenn <xref:System.Activities.WorkflowApplication.EndUnload%2A> aufgerufen wird, bevor der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang abgeschlossen ist, greift bis zum Abschluss des <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgangs eine Sperre.</span><span class="sxs-lookup"><span data-stu-id="398fb-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="398fb-473">Wenn der <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang nicht innerhalb des angegebenen Timeoutintervalls abgeschlossen wird, löst <xref:System.TimeoutException> eine <xref:System.Activities.WorkflowApplication.EndUnload%2A> aus.</span><span class="sxs-lookup"><span data-stu-id="398fb-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="398fb-474">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-475">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="398fb-476">Diese Methode speichert eine Workflowinstanz mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron im Persistenzspeicher und entlädt sie.</span><span class="sxs-lookup"><span data-stu-id="398fb-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-477"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-477"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-478">Bricht die Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-478">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-479">Diese Methode plant den Abbruch der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="398fb-480">Um bei Abschluss des Abbruchvorgangs benachrichtigt zu werden, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-481">Standardmäßig muss der Abbruchvorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-482">Bricht die Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-482">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-483">Diese Methode plant den Abbruch der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="398fb-484">Um bei Abschluss des Abbruchvorgangs benachrichtigt zu werden, verwenden Sie den <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler.</span><span class="sxs-lookup"><span data-stu-id="398fb-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="398fb-485">Standardmäßig muss der Abbruchvorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-486">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-487">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-488">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Cancel%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="398fb-489">Wenn der Workflow abgebrochen wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-490">Das Intervall, in dem der Abbruchvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-491">Bricht die Workflowinstanz mithilfe des angegebenen Timeoutintervalls ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-491">Cancels the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-492">Diese Methode plant den Abbruch der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="398fb-493">Um bei Abschluss des Abbruchvorgangs benachrichtigt zu werden, verwenden Sie den <xref:System.Activities.WorkflowApplication.Completed%2A>-Handler.</span><span class="sxs-lookup"><span data-stu-id="398fb-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-494">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-495">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-496">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Cancel%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="398fb-497">Wenn der Workflow abgebrochen wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-498">Ruft die <see cref="T:System.Action`1" />-Aktion ab, die bei Abschluss der Workflowinstanz ausgelöst wird, bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-499">Die Aktion, die bei Abschluss der Workflowinstanz ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-499">The action that is invoked when the workflow instance is complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-500">Im folgenden Codebeispiel werden die in den <xref:System.Activities.WorkflowApplicationCompletedEventArgs>-Handler einer <xref:System.Activities.WorkflowApplication.Completed%2A>-Instanz übergebenen <xref:System.Activities.WorkflowApplication> überprüft, und es werden Informationen darüber angezeigt, wie der Workflow abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-501">Erstellt einen Standardinstanzbesitzer für den Workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-501">Creates a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-502">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-502">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-503">Die Definitionsidentität des Workflows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-503">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="398fb-504">Der Identität-Filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-504">The identity filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-505">Erstellt einen Standardinstanzbesitzer für den Workflow mithilfe des angegebenen Instanzspeichers, der Definitionsidentität und dem Identitätsfilter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-506">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-506">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="398fb-507">Die Definitionsidentität des Workflows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-507">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="398fb-508">Der Identität-Filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-508">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-509">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-509">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-510">Erstellt einen Standardinstanzbesitzer für den Workflow mithilfe des angegebenen Instanzspeichers, der Definitionsidentität, dem Identitätsfilter, Timeoutintervall, Rückruf und Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-511">Löscht einen Standardinstanzbesitzer für den Workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-511">Deletes a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-512">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-512">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-513">Löscht einen Standardinstanzbesitzer für den Workflow mit dem angegebenem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-513">Deletes a default instance owner for the workflow with specified instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-514">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-514">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-515">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-515">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-516">Löscht einen Standardinstanzbesitzer für den Workflow mit dem angegebenen Timeoutintervall und Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval..</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-517">Der asynchrone Abbruchvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-517">The asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-518">Wartet, bis der ausstehende asynchrone Abbruchvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-518">Waits for the pending asynchronous cancel operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-519">Diese Methode ermittelt, ob ein <xref:System.Activities.WorkflowApplication.BeginCancel%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="398fb-520">Wenn sie aufgerufen wird, bevor der Abbruchvorgang abgeschlossen ist, wird sie bis zum Abschluss des Abbruchvorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-521">Diese Methode schließt den asynchronen Abbruchvorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-522"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-522"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="398fb-523">Das asynchrone Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-523">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-524">Wartet, bis die Erstellung des Standardinstanzbesitzers abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-524">Waits for the creation of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="398fb-525">Das asynchrone Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-525">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-526">Wartet, bis die Löschung des Standardinstanzbesitzers abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-526">Waits for the deletion of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="398fb-527">Das asynchrone Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-527">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-528">Wartet, bis der Instanz-Abruf abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-528">Waits for the instance retrieval to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-529">Das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-529">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="398fb-530">Das asynchrone Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-530">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-531">Wartet, bis der asynchrone Abruf für die ausführbare Instanz abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-532">Das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-532">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-533">Der asynchrone Ladevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-533">The asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-534">Wartet, bis der ausstehende asynchrone Ladevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-534">Waits for the pending asynchronous load operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-535">Wenn diese Methode aufgerufen wird, bevor der Ladevorgang abgeschlossen ist, wird sie bis zum Abschluss des Ladevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-536">Diese Methode schließt den asynchronen Ladevorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-537"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-537"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-538">Ein Verweis auf den asynchronen Ladevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-538">A reference to the asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-539">Wartet, bis der asynchrone Ladevorgang für die ausführbare Instanz abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-539">Waits for the asynchronous load runnable instance operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-540">Diese Methode ermittelt, ob ein <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="398fb-541">Wenn sie aufgerufen wird, bevor der Ladevorgang abgeschlossen ist, wird sie bis zum Abschluss des Vorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-542">Diese Methode lädt Workflows mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron.</span><span class="sxs-lookup"><span data-stu-id="398fb-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-543"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-543"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-544">Der asynchrone Persistenzspeichervorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-544">The asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-545">Wartet, bis der ausstehende asynchrone Persistenzspeichervorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-545">Waits for the pending asynchronous persist operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-546">Diese Methode ermittelt, ob ein <xref:System.Activities.WorkflowApplication.BeginPersist%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="398fb-547">Wenn sie aufgerufen wird, bevor der Persistenzspeichervorgang abgeschlossen ist, wird sie bis zum Abschluss des Persistenzspeichervorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-548">Diese Methode schließt den asynchronen Persistenzspeichervorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-549"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-549"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-550">Ein Verweis auf den asynchronen Lesezeichenwiederaufnahmevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-550">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-551">Wartet, bis ein Lesezeichenwiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-551">Waits for a bookmark resume operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-552">Einer der Enumerationswerte, der das Ergebnis eines Lesezeichenwiederaufnahmevorgangs angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-553">Diese Methode ermittelt, ob ein <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="398fb-554">Wenn sie aufgerufen wird, bevor der Ladevorgang abgeschlossen ist, wird sie bis zum Abschluss des Vorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-555">Diese Methode nimmt ein Lesezeichen mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters asynchron wieder auf.</span><span class="sxs-lookup"><span data-stu-id="398fb-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-556"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-556"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-557">Der asynchrone Ausführungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-557">The asynchronous run operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-558">Wartet, bis der ausstehende asynchrone Ausführungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-558">Waits for the pending asynchronous run operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-559">Diese Methode ermittelt, ob ein <xref:System.Activities.WorkflowApplication.BeginRun%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="398fb-560">Wenn die Methode aufgerufen wird, bevor der Wiederaufnahmevorgang abgeschlossen ist, wird sie bis zum Abschluss des Wiederaufnahmevorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-561">Diese Methode schließt einen asynchronen Ausführungsvorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-562"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-562"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-563">Der asynchrone Beendigungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-563">The asynchronous terminate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-564">Wartet, bis der ausstehende asynchrone Beendigungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-564">Waits for the pending asynchronous terminate operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-565">Diese Methode kann aufgerufen werden, um zu bestimmen, ob ein <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="398fb-566">Wenn die Methode aufgerufen wird, bevor der Beendigungsvorgang abgeschlossen ist, wird sie bis zum Abschluss des Vorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-567">Diese Methode schließt einen asynchronen <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>-Vorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-568"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-568"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="398fb-569">Der asynchrone Entladevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-569">The asynchronous unload operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-570">Wartet, bis der ausstehende asynchrone Entladevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-570">Waits for the pending asynchronous unload operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-571">Diese Methode kann aufgerufen werden, um zu bestimmen, ob ein <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="398fb-572">Wenn die Methode aufgerufen wird, bevor der Entladevorgang abgeschlossen ist, wird sie bis zum Abschluss des Vorgangs gesperrt.</span><span class="sxs-lookup"><span data-stu-id="398fb-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="398fb-573">Diese Methode schließt einen asynchronen <xref:System.Activities.WorkflowApplication.BeginUnload%2A>-Vorgang mithilfe des asynchronen <xref:System.IAsyncResult>-Entwurfsmusters ab.</span><span class="sxs-lookup"><span data-stu-id="398fb-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="398fb-574"> [Übersicht über die asynchrone Programmierung](http://go.microsoft.com/fwlink/?LinkId=141764).</span><span class="sxs-lookup"><span data-stu-id="398fb-574"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-575">Ruft eine Auflistung der Erweiterungen für die aktuelle Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-575">Gets the collection of extensions for the current workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-576">Eine Auflistung von Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-576">A collection of objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-577">Gibt die Auflistung der Lesezeichen für die Workflowinstanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-577">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-578">Gibt die Auflistung der Lesezeichen für die Workflowinstanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-578">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-579">Eine schreibgeschützte Auflistung von Lesezeichen für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-579">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-580">Wenn dieser Vorgang innerhalb von 30 Sekunden nicht abgeschlossen wird, wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-581">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-582">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="398fb-583">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-584">Das Intervall, in dem diese Methode abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-585">Gibt die Auflistung der Lesezeichen für die Workflowinstanz mit dem angegebenen Timeoutintervall zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-586">Eine schreibgeschützte Auflistung von Lesezeichen für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-586">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-587">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-588">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="398fb-589">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-590">Ruft die Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-590">Retrieves the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-591">Der Instanzbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-591">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="398fb-592">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-592">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-593">Ruft die Workflowinstanz unter Verwendung des angegebenen Instanzbezeichners und Instanzspeichers ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-593">Retrieves the workflow instance using specified instance identifier and instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-594">Die abgerufene Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-594">The retrieved instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-595">Der Instanzbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-595">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="398fb-596">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-596">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-597">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-597">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-598">Ruft die Workflowinstanz unter Verwendung des angegebenen Instanzbezeichners, Instanzspeichers und Timeoutintervals ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-599">Ein Verweis auf den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-599">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-600">Ruft die ausführbare Instanz des Workflows ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-600">Retrieves the runnable instance of the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-601">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-601">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-602">Ruft die ausführbare Instanz des Workflows mit angegebenem Instanzspeicher ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-602">Retrieves the runnable instance of the workflow with specified instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-603">Die ausführbare Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-603">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="398fb-604">Der Zugriff auf den beibehaltenen Zustand der aktuellen Instanz der Workflowanwendung</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-604">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-605">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-605">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-606">Ruft die ausführbare Instanz des Workflows mit angegebenem Instanzspeicher und Timeoutinterval ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-607">Die ausführbare Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-607">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-608">Ruft den 128-Bit-Bezeichner (GUID) der aktuellen Workflowanwendungsinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-609">Ein eindeutiger Bezeichner (GUID, Globally Unique Identifier) mit 128 Bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-609">A 128-bit GUID identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-610">Im folgenden Beispiel wird eine <xref:System.Activities.WorkflowApplication>-Instanz erstellt und anschließend der <xref:System.Activities.WorkflowApplication.Id%2A>-Wert in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-611">Ruft die <see cref="T:System.Action`1" />-Aktion ab, die ausgelöst wird, wenn die aktuelle Workflowinstanz in den Leerlauf wechselt, bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-612">Eine Aktion, die ausgeführt wird, wenn eine Workflowinstanz in den Leerlauf wechselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-612">An action that executes when a workflow instance becomes idle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-613">Im folgenden Codebeispiel werden die in den <xref:System.Activities.WorkflowApplicationIdleEventArgs>-Handler einer <xref:System.Activities.WorkflowApplication.Idle%2A>-Instanz übergebenen <xref:System.Activities.WorkflowApplication> überprüft.</span><span class="sxs-lookup"><span data-stu-id="398fb-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="398fb-614">In diesem Beispiel geht der Workflow in den Leerlauf über und verfügt über ein <xref:System.Activities.Bookmark> mit dem Namen `EnterGuess`, das sich im Besitz einer Aktivität mit dem Namen `ReadInt` befindet.</span><span class="sxs-lookup"><span data-stu-id="398fb-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="398fb-615">Dieses Codebeispiel basiert [Vorgehensweise: Ausführen eines Workflows](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), ist Teil der [Lernprogramm für erste Schritte &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="398fb-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="398fb-616">Wenn der <xref:System.Activities.WorkflowApplication.Idle%2A>-Handler in diesem Schritt geändert wird, um den Code aus diesem Beispiel zu enthalten, wird die folgende Ausgabe angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-617">Ruft ein Objekt ab, das Zugriff auf den Persistenzstatus der aktuellen Instanz der Workflowanwendung bereitstellt, bzw. legt es fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-618">Ein Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-618">An instance store.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-619">Im folgenden Beispiel wird eine WorkflowApplication-Instanz erstellt und anschließend der <xref:System.Activities.WorkflowApplication.InstanceStore%2A> mithilfe eines <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="398fb-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="398fb-620">Dieses Codebeispiel ist Teil des [Vorgehensweise: Erstellen und Ausführen einer Workflows mit langer Laufzeit](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), ist Teil der [Lernprogramm für erste Schritte &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="398fb-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-621">Lädt eine Workflowinstanz aus einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-621">Loads a workflow instance from an instance store.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-622">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-622">The instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-623">Lädt eine Workflowinstanz aus einem Instanzspeicher mit angegebener Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-623">Loads a workflow instance from an instance store with specified instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-624">Ein eindeutiger Bezeichner (128 Bit) für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-624">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-625">Lädt die angegebene Workflowinstanz aus einem Instanzspeicher in den Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-625">Loads the specified workflow instance into memory from an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-626">Im folgenden Beispiel wird <xref:System.Activities.WorkflowApplication.Load%2A> aufgerufen, um die beibehaltene Workflowinstanz aus einem <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> zu laden.</span><span class="sxs-lookup"><span data-stu-id="398fb-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="398fb-627">Dieses Beispiel stammt aus dem `LoadAndCompleteInstance` Methode in der [beibehalten einer Workflowanwendung](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-628">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-628">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="398fb-629">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-629">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-630">Lädt eine Workflowinstanz aus einem Instanzspeicher mit angegebener Instanz und Update-Zuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-630">Loads a workflow instance from an instance store with specified instance and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-631">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-631">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-632">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-632">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-633">Lädt eine Workflowinstanz aus einem Instanzspeicher mit angegebener Instanz und angegebenem Timeoutinterval.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="398fb-634">Ein eindeutiger Bezeichner (128 Bit) für die Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-634">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-635">Das Intervall, in dem der Ladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-636">Lädt die angegebene Workflowinstanz aus einem Instanzspeicher in den Arbeitsspeicher, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-637">Im folgenden Beispiel wird <xref:System.Activities.WorkflowApplication.Load%2A> aufgerufen, um die beibehaltene Workflowinstanz aus einem <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> zu laden.</span><span class="sxs-lookup"><span data-stu-id="398fb-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="398fb-638">Dieses Beispiel stammt aus dem `LoadAndCompleteInstance` Methode in der [beibehalten einer Workflowanwendung](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="398fb-639">Die Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-639">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="398fb-640">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-640">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-641">Das Intervall, in dem der Startladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-641">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-642">Lädt eine Workflowinstanz aus einem Instanzspeicher mit angegebener Instanz und Update-Zuordnung sowie angegebenem Timeoutinterval.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-643">Lädt eine ausführbare Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-644">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-645">Lädt eine ausführbare Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-646">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="398fb-647">Standardmäßig muss der Ladevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-648">Das Intervall, in dem der Ladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-649">Lädt eine ausführbare Workflowinstanz aus dem <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-650">Eine ausführbare Instanz ist eine Instanz, für die der Timer bzw. die Instanzsperre abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-651">Ruft die <see cref="T:System.Func`2" />-Aktion ab, die ausgelöst wird, wenn die aktuelle Workflowinstanz eine unbehandelte Ausnahme erkennt, bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-652">Der Delegat, der ausgelöst wird, wenn bei einer Workflowinstanz ein Ausnahmefehler auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-653">Sowohl <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> als auch <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> bestimmen das Verhalten der Laufzeit, wenn eine Ausnahme nicht im Workflow behandelt wird. <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> kann einen unterbrochenen Workflow jedoch optional im Persistenzspeicher belassen. Diese Option besteht bei <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> nicht.</span><span class="sxs-lookup"><span data-stu-id="398fb-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="398fb-654">Der Grund dafür ist, dass die Vorgänge im Zusammenhang mit einem unterbrochenen Workflow im Gegensatz zu <xref:System.Activities.WorkflowApplication> hostspezifisch sind.</span><span class="sxs-lookup"><span data-stu-id="398fb-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="398fb-655">Um diese Funktion mit <xref:System.Activities.WorkflowApplication> zu implementieren, erstellen Sie einen benutzerdefinierten <xref:System.Activities.Persistence.PersistenceParticipant>, der dieses Verhalten aufweist.</span><span class="sxs-lookup"><span data-stu-id="398fb-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-656">Im folgenden Beispiel wird ein Workflow aufgerufen, der eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="398fb-657">Die Ausnahme wird vom Workflow nicht behandelt, und der <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>-Handler wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="398fb-658">Die <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> werden überprüft, um Informationen zur Ausnahme bereitzustellen, und der Workflow wird beendet.</span><span class="sxs-lookup"><span data-stu-id="398fb-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-659">Speichert eine Workflowinstanz in einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-659">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-660">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-661">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-662">Speichert eine Workflowinstanz in einem Instanzspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-662">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-663">Wenn der Persistenzspeichervorgang innerhalb von 30 Sekunden nicht abgeschlossen wird, wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="398fb-664">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-665">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-666">Im folgenden Beispiel wird <xref:System.Activities.WorkflowApplication.Persist%2A> aufgerufen, um eine Workflowinstanz beizubehalten, bevor der Workflow gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="398fb-667">In diesem Beispiel ist Teil der `StartAndUnloadInstance` Methode in der [beibehalten einer Workflowanwendung](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-668">Das Intervall, in dem der Persistenzspeichervorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-669">Speichert eine Workflowinstanz in einem Instanzspeicher, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-669">Persists a workflow instance to an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-670">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-671">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-672">Im folgenden Beispiel wird <xref:System.Activities.WorkflowApplication.Persist%2A> aufgerufen, um eine Workflowinstanz beizubehalten, bevor der Workflow gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="398fb-673">Dieses Beispiel stammt aus dem `StartAndUnloadInstance` Methode in der [beibehalten einer Workflowanwendung](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-674">Ruft das <see cref="T:System.Activities.ActivityFunc" />-Element ab, das ausgelöst wird, wenn die aktuelle Workflowinstanz sich im Leerlauf befindet und im Persistenzspeicher abgelegt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-674">Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-675">Das <see cref="T:System.Activities.ActivityFunc" />-Element, das ausgelöst wird, wenn die aktuelle Workflowinstanz sich im Leerlauf befindet und im Persistenzspeicher abgelegt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-675">The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-676">Wenn ein Workflow in den Leerlauf übergeht und beibehalten werden kann, werden <xref:System.Activities.WorkflowApplication.Idle%2A> und <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> in dieser Reihenfolge aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="398fb-677">Der <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>-Handler gibt einen der <xref:System.Activities.PersistableIdleAction> Enumerationswerte von <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist> oder <xref:System.Activities.PersistableIdleAction.Unload> zurück.</span><span class="sxs-lookup"><span data-stu-id="398fb-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-678">Im folgenden Beispiel wird der <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>-Handler behandelt und das Laufzeitmodul angewiesen, den Workflow beizubehalten und zu entladen.</span><span class="sxs-lookup"><span data-stu-id="398fb-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-679">Initiiert einen Vorgang zur Wiederaufnahme eines Lesezeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-679">Initiates an operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="398fb-680">Das wiederaufzunehmende Lesezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-680">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-681">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-682">Initiiert einen Vorgang zur Wiederaufnahme des angegebenen Lesezeichens, wobei der angegebene Wert verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-682">Initiates an operation to resume the specified bookmark, using the specified value.</span>
          </span>
          <span data-ttu-id="398fb-683">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-684">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-684">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-685">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-686">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-687">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird die Eingabe des Benutzers erfasst und das Lesezeichen wieder aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="398fb-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="398fb-688">Der Name des Lesezeichens, das wiederaufgenommen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-688">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-689">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-690">Initiiert einen Vorgang zur Wiederaufnahme des Lesezeichens mit dem angegebenen Namen, wobei der angegebene Wert verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span>
          </span>
          <span data-ttu-id="398fb-691">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-692">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-692">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-693">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-694">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-695">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird die Eingabe des Benutzers erfasst und das Lesezeichen wieder aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="398fb-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="398fb-696">Das wiederaufzunehmende Lesezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-696">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-697">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-698">Das Zeitintervall, in dem das Lesezeichen wiederaufgenommen werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-698">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-699">Initiiert einen Vorgang zur Wiederaufnahme des angegebenen Lesezeichens, wobei der angegebene Wert und das angegebene Timeoutintervall verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="398fb-700">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-701">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-701">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-702">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-703">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-704">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird die Eingabe des Benutzers erfasst und das Lesezeichen wieder aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="398fb-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="398fb-705">Der Name des Lesezeichens, das wiederaufgenommen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-705">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="398fb-706">Ein Objekt, das als Parameter an die Methode übergeben wird, die bei Wiederaufnahme des Lesezeichens aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-707">Das Zeitintervall, in dem das Lesezeichen wiederaufgenommen werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-707">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-708">Initiiert einen Vorgang zur Wiederaufnahme des Lesezeichens mit dem angegebenen Namen, wobei der angegebene Wert und das angegebene Timeoutintervall verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="398fb-709">Das wiederaufzunehmende Lesezeichen wurde zuvor von einer Aktivität innerhalb der Workflowinstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="398fb-710">Das Ergebnis des Lesezeichenwiederaufnahmevorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-710">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-711">Das Ergebnis gibt an, ob der Wiederaufnahmenvorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="398fb-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-712">Im folgenden Beispiel wird ein Workflow erstellt, der eine `ReadLine`-Aktivität verwendet, die ein <xref:System.Activities.Bookmark> erstellt.</span><span class="sxs-lookup"><span data-stu-id="398fb-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="398fb-713">Der Workflow wird gestartet, und sobald das <xref:System.Activities.Bookmark> erstellt wurde und der Workflow in den Leerlauf übergeht, wird die Eingabe des Benutzers erfasst und das Lesezeichen wieder aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="398fb-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-714">Startet die Ausführung einer Workflowinstanz bzw. nimmt sie wieder auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-714">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-715">Rufen Sie diese Methode auf, um die Ausführung einer neu erstellten Workflowinstanz zu starten.</span><span class="sxs-lookup"><span data-stu-id="398fb-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-716">Startet die Ausführung einer Workflowinstanz bzw. nimmt sie wieder auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-716">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-717">Rufen Sie diese Methode auf, um die Ausführung einer neu erstellten Workflowinstanz zu starten.</span><span class="sxs-lookup"><span data-stu-id="398fb-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="398fb-718">Wenn der Ausführungsvorgang innerhalb von 30 Sekunden nicht abgeschlossen wird, wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-719">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-720">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-721">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-722">Rufen Sie diese Methode auf, um die Ausführung einer neu erstellten Workflowinstanz zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-722">Call this method to initiate execution of a newly created workflow instance.</span>
          </span>
          <span data-ttu-id="398fb-723">Das Intervall, in dem der Ausführungsvorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-724">Startet die Ausführung einer Workflowinstanz bzw. nimmt sie wieder auf, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-725">Im Gegensatz zu <xref:System.Activities.WorkflowInvoker.Invoke%2A> erfolgt für diese Methode kein Timeout, wenn der Workflow nicht innerhalb des angegebenen Zeitraums abgeschlossen wird. Stattdessen erfolgt ein Timeout, wenn der Workflow nicht innerhalb des angegebenen Zeitraums gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="398fb-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="398fb-726">Der Grund dafür ist, dass <xref:System.Activities.WorkflowInvoker.Invoke%2A> den Workflow synchron ausführt (und den Hostthread blockiert), während <xref:System.Activities.WorkflowApplication.Run%2A> asynchron ausgeführt wird und den Hostthread nur so lange blockiert, bis der Workflow gestartet ist.</span><span class="sxs-lookup"><span data-stu-id="398fb-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-727">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-728">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-729">Wenn der Workflow abgeschlossen ist, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-730">Beendet eine Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-730">Terminates a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-731">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-731">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-732">Beendet eine Workflowinstanz aus dem angegebenen Grund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-732">Terminates a workflow instance using the specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-733">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-734">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-735">Standardmäßig muss der <xref:System.Activities.WorkflowApplication.Terminate%2A>-Vorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-736">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-737">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-738">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Terminate%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="398fb-739">Wenn der Workflow beendet wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-740">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-740">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-741">Beendet eine Workflowinstanz mit der angegebenen Fehlermeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-741">Terminates a workflow instance using the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-742">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-743">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="398fb-744">Standardmäßig muss der <xref:System.Activities.WorkflowApplication.Terminate%2A>-Vorgang innerhalb von 30 Sekunden abgeschlossen werden. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-745">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-746">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-747">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Terminate%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="398fb-748">Wenn der Workflow beendet wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-749">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-749">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-750">Das Intervall, in dem der <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />-Vorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-751">Beendet eine Workflowinstanz, wobei die angegebene Ausnahme und das angegebene Timeoutintervall verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-751">Terminates a workflow instance using the specified exception and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-752">Diese Methode plant die Beendigung des Workflows.</span><span class="sxs-lookup"><span data-stu-id="398fb-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="398fb-753">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-754">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-755">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-756">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Terminate%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="398fb-757">Wenn der Workflow beendet wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="398fb-758">Der Grund für das Beenden der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-758">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="398fb-759">Das Intervall, in dem der <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />-Vorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-760">Beendet eine Workflowinstanz, wobei die angegebene Fehlermeldung und das angegebene Timeoutintervall verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-760">Terminates a workflow instance using the specified error message and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-761">Diese Methode plant die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="398fb-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="398fb-762">Um benachrichtigt zu werden, wenn die Beendigung abgeschlossen ist, verwenden Sie das <xref:System.Activities.WorkflowApplication.Completed%2A>-Handle.</span><span class="sxs-lookup"><span data-stu-id="398fb-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-763">Im folgenden Beispiel wird ein Workflow mit <xref:System.Activities.WorkflowApplication> gehostet.</span><span class="sxs-lookup"><span data-stu-id="398fb-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="398fb-764">Eine <xref:System.Activities.WorkflowApplication>-Instanz wird mit der angegebenen Workflowdefinition erstellt, die gewünschten Lebenszyklusereignisse des Workflows werden behandelt, und der Workflow wird mit einem Aufruf von <xref:System.Activities.WorkflowApplication.Run%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="398fb-765">Nachdem der Workflow gestartet wurde, wird <xref:System.Activities.WorkflowApplication.Terminate%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="398fb-766">Wenn der Workflow beendet wurde, wird die folgende Ausgabe in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-767">Speichert eine Workflowinstanz im Persistenzspeicher und entlädt sie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-767">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-768">Standardmäßig muss der Entladevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="398fb-769">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-770">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="398fb-771">Speichert eine Workflowinstanz im Persistenzspeicher und entlädt sie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-771">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-772">Standardmäßig muss der Entladevorgang innerhalb von 30 Sekunden abgeschlossen sein. Andernfalls wird eine <xref:System.TimeoutException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="398fb-773">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-774">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-775">Das folgende Codebeispiel ist Teil der [NoPersistScope-Aktivität](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="398fb-776">In diesem Beispiel befindet sich der Workflow im Leerlauf, und die Hostanwendung wartet auf eine Benutzereingabe.</span><span class="sxs-lookup"><span data-stu-id="398fb-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="398fb-777">Wenn der Benutzer das Entladen auswählt, wird <xref:System.Activities.WorkflowApplication.Unload%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="398fb-778">Bei Erfolg wird der Workflow beibehalten und aus dem Arbeitsspeicher entladen.</span><span class="sxs-lookup"><span data-stu-id="398fb-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="398fb-779">Das Intervall, in dem der Entladevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="398fb-780">Speichert eine Workflowinstanz im Persistenzspeicher und entlädt sie, wobei das angegebene Timeoutintervall verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-780">Persists and unloads a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398fb-781">Wenn die Workflowinstanz zuvor aus dem permanenten Speicher geladen wurde, wird für den permanenten Speicher der <xref:System.Runtime.DurableInstancing.InstanceStore> verwendet, mit dem der Workflow geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="398fb-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="398fb-782">Wenn der Workflow erstellt und noch nicht permanent gespeichert wurde, muss vor dem Aufrufen dieser Methode ein <xref:System.Activities.WorkflowApplication.InstanceStore%2A> konfiguriert werden. Andernfalls wird beim Aufrufen dieser Methode eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="398fb-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="398fb-783">Das folgende Codebeispiel ist Teil der [NoPersistScope-Aktivität](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="398fb-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="398fb-784">In diesem Beispiel befindet sich der Workflow im Leerlauf, und die Hostanwendung wartet auf eine Benutzereingabe.</span><span class="sxs-lookup"><span data-stu-id="398fb-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="398fb-785">Wenn der Benutzer das Entladen auswählt, wird <xref:System.Activities.WorkflowApplication.Unload%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="398fb-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="398fb-786">Bei Erfolg wird der Workflow beibehalten und aus dem Arbeitsspeicher entladen.</span><span class="sxs-lookup"><span data-stu-id="398fb-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="398fb-787">Ruft die <see cref="T:System.Action`1" />-Aktion ab, die beim Entladen des aktuellen Workflows ausgelöst wird, bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="398fb-788">Die Aktion, die beim Entladen einer Workflowinstanz ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="398fb-788">An action that is invoked when a workflow instance is unloaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="398fb-789">Im folgenden Codebeispiel werden die in den <xref:System.Activities.WorkflowApplicationEventArgs>-Handler einer <xref:System.Activities.WorkflowApplication.Unloaded%2A>-Instanz übergebenen <xref:System.Activities.WorkflowApplication> überprüft, und die <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> des Workflows, der entladen wurde, wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="398fb-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>