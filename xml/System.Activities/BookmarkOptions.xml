<Type Name="BookmarkOptions" FullName="System.Activities.BookmarkOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b34071c5c799ba007a6d515011bfe1ae57c094a" /><Meta Name="ms.sourcegitcommit" Value="feb111e137a41d186aef01d83f04819d820520eb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/21/2019" /><Meta Name="ms.locfileid" Value="67307952" /></Metadata><TypeSignature Language="C#" Value="public enum BookmarkOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BookmarkOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Activities.BookmarkOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum BookmarkOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class BookmarkOptions" />
  <TypeSignature Language="F#" Value="type BookmarkOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt die Optionen für <see cref="T:System.Activities.Bookmark" /> an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Standardmäßig entfernt die Workflowlaufzeit ein ausstehendes Lesezeichen aus der Lesezeichentabelle, wenn das Lesezeichen wieder aufgenommen wird. Aber wenn das Lesezeichen, als angegeben wird `MultipleResume`, das Lesezeichen nicht aus der Tabelle entfernt und das gleiche Lesezeichen kann mehrmals wieder aufgenommen werden. Beispiele für die Nutzung von `MultipleResume` sind als Schleife ausgeführte Aktivitäten z. B. <xref:System.Activities.Statements.While?displayProperty=nameWithType>, <xref:System.Activities.Statements.ForEach%601?displayProperty=nameWithType> und <xref:System.Activities.Statements.Flowchart?displayProperty=nameWithType>.

Standardmäßig gilt die Ausführung einer Aktivität für die Workflowlaufzeit nicht als abgeschlossen, wenn sie ausstehende Lesezeichen aufweist. Aber wenn ein Lesezeichen als angegeben wird `NonBlocking` zum Zeitpunkt der Erstellung, ermöglicht es die Workflowlaufzeit die Aktivität die Ausführung abschließt, auch wenn es ausstehende hat `NonBlocking` -Lesezeichen hat keine anderen arbeiten ausstehen.  
  
 ]]></format>
        </remarks>
  </Docs>
  <Members>
    <Member MemberName="MultipleResume">
      <MemberSignature Language="C#" Value="MultipleResume" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions MultipleResume = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.MultipleResume" />
      <MemberSignature Language="VB.NET" Value="MultipleResume" />
      <MemberSignature Language="C++ CLI" Value="MultipleResume" />
      <MemberSignature Language="F#" Value="MultipleResume = 1" Usage="System.Activities.BookmarkOptions.MultipleResume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Ein <see cref="T:System.Activities.Bookmark" />, das mehrmals wieder aufgenommen werden kann.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonBlocking">
      <MemberSignature Language="C#" Value="NonBlocking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions NonBlocking = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.NonBlocking" />
      <MemberSignature Language="VB.NET" Value="NonBlocking" />
      <MemberSignature Language="C++ CLI" Value="NonBlocking" />
      <MemberSignature Language="F#" Value="NonBlocking = 2" Usage="System.Activities.BookmarkOptions.NonBlocking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Ein <see cref="T:System.Activities.Bookmark" />, das den Workflow nicht blockiert.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Activities.BookmarkOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="T:System.Activities.Bookmark" />-Standardoptionen.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
