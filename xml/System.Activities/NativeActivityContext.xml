<Type Name="NativeActivityContext" FullName="System.Activities.NativeActivityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e0ac164b7b846d936b8e1315470f6abc8d9ec1c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86633609" /></Metadata><TypeSignature Language="C#" Value="public class NativeActivityContext : System.Activities.ActivityContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivityContext extends System.Activities.ActivityContext" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivityContext" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivityContext&#xA;Inherits ActivityContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivityContext : System::Activities::ActivityContext" />
  <TypeSignature Language="F#" Value="type NativeActivityContext = class&#xA;    inherit ActivityContext" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.ActivityContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Der Ausführungskontext für eine <see cref="T:System.Activities.NativeActivity" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Activities.NativeActivity> wird über den Zugriff auf die erweiterten Funktionen der WF-Laufzeit über bereitgestellt <xref:System.Activities.NativeActivityContext> , die als Parameter an die-Methode der Aktivität übergeben wird <xref:System.Activities.NativeActivity.Execute%2A> .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bricht die aktuelle Workflowinstanz während der Laufzeit ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="nativeActivityContext.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht die aktuelle Workflowinstanz während der Laufzeit ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Abort : Exception -&gt; unit" Usage="nativeActivityContext.Abort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Der Fehler, der den Abbruch des Workflows verursacht hat.</param>
        <summary>Bricht die aktuelle Workflowinstanz während der Laufzeit aus dem angegebenen Grund ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AbortChildInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bricht eine Instanz einer untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AbortChildInstance">
      <MemberSignature Language="C#" Value="public void AbortChildInstance (System.Activities.ActivityInstance activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AbortChildInstance(class System.Activities.ActivityInstance activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AbortChildInstance (activity As ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AbortChildInstance(System::Activities::ActivityInstance ^ activity);" />
      <MemberSignature Language="F#" Value="member this.AbortChildInstance : System.Activities.ActivityInstance -&gt; unit" Usage="nativeActivityContext.AbortChildInstance activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.ActivityInstance" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</param>
        <summary>Bricht die angegebene Instanz einer untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortChildInstance">
      <MemberSignature Language="C#" Value="public void AbortChildInstance (System.Activities.ActivityInstance activity, Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AbortChildInstance(class System.Activities.ActivityInstance activity, class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AbortChildInstance (activity As ActivityInstance, reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AbortChildInstance(System::Activities::ActivityInstance ^ activity, Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.AbortChildInstance : System.Activities.ActivityInstance * Exception -&gt; unit" Usage="nativeActivityContext.AbortChildInstance (activity, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.ActivityInstance" />
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</param>
        <param name="reason">Der Fehler, der den Abbruch der untergeordneten Aktivität verursacht hat.</param>
        <summary>Bricht die angegebene Instanz einer untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität aus dem angegebenen Grund ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelChild">
      <MemberSignature Language="C#" Value="public void CancelChild (System.Activities.ActivityInstance activityInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelChild(class System.Activities.ActivityInstance activityInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelChild (activityInstance As ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelChild(System::Activities::ActivityInstance ^ activityInstance);" />
      <MemberSignature Language="F#" Value="member this.CancelChild : System.Activities.ActivityInstance -&gt; unit" Usage="nativeActivityContext.CancelChild activityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityInstance" Type="System.Activities.ActivityInstance" />
      </Parameters>
      <Docs>
        <param name="activityInstance">Eine untergeordnete Aktivität der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</param>
        <summary>Bricht die angegebene untergeordnete Aktivitätsinstanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelChildren">
      <MemberSignature Language="C#" Value="public void CancelChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CancelChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelChildren();" />
      <MemberSignature Language="F#" Value="member this.CancelChildren : unit -&gt; unit" Usage="nativeActivityContext.CancelChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verursacht den frühzeitigen Abschluss aller untergeordneten Aktivitäten einer ausgeführten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt einen Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark () As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark();" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : unit -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt.</summary>
        <returns>Ein Lesezeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, und plant die bei Abschluss des Wiederaufnahmevorgangs auszuführende angegebene Methode.</summary>
        <returns>Die Rückrufmethode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <summary>Erstellt den Punkt mit dem angegebenen Namen, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt.</summary>
        <returns>Ein Lesezeichen mit Namen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark (callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <param name="options">Eine aufgelistete Einstellung, die regiert, wie das Lesezeichen während der Ausführung vom aktuellen <see cref="T:System.Activities.NativeActivity" /> im Verhältnis zu anderen Threads operiert.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, mit der angegebenen Methode, die bei Abschluss des Wiederaufnahmevorgangs ausgeführt werden soll, und mit der angegebenen Option, die festlegt, wie das Lesezeichen während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Aktivität verwendet wird.</summary>
        <returns>Ein Lesezeichen mit Rückrufmethode und Lesezeichenausführungsoption.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lesezeichenoptionen umfassen <xref:System.Activities.BookmarkOptions.MultipleResume>, <xref:System.Activities.BookmarkOptions.NonBlocking> und <xref:System.Activities.BookmarkOptions.None>.  
  
 Lesezeichenrückrufe können ohne Lesezeichenoptionen erfolgen, aber Lesezeichenoptionen müssen immer einem Rückruf zugeordnet werden, da die Optionen in Situationen ohne Rückrufmethode nicht gültig sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark (name, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, mit dem angegebenen Namen und mit der angegebenen Methode, die bei Abschluss des Wiederaufnahmevorgangs auszuführen ist.</summary>
        <returns>Ein Lesezeichen mit Name und Rückrufmethode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark (name, callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <param name="options">Die Lesezeichenoptionen, mit denen festgelegt wird, wie das Lesezeichen während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Aktivität verwendet wird.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, mit dem angegebenen Namen, mit der angegebenen Methode, die bei Abschluss des Wiederaufnahmevorgangs ausgeführt werden soll, und mit der angegebenen Option, die festlegt, wie das Lesezeichen während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Aktivität verwendet wird.</summary>
        <returns>Ein Lesezeichen mit Name, Rückrufmethode und Lesezeichenausführungsoption.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lesezeichenrückrufe können ohne Lesezeichenoptionen erfolgen, aber Lesezeichenoptionen müssen immer einem Rückruf zugeordnet werden, da die Optionen in Situationen ohne Rückrufmethode nicht gültig sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark (name, callback, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <param name="scope">Ein Bezeichner für eine Gruppe von Lesezeichen, die während einer Workflowlaufzeit unter demselben Protokoll ausgeführt werden.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, mit dem angegebenen Namen, mit der angegebenen Methode, die bei Abschluss des Wiederaufnahmevorgangs auszuführen ist, und mit dem angegebenen Lesezeichenbereich.</summary>
        <returns>Ein Lesezeichen mit Name, Rückrufmethode und Lesezeichenbereich.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lesezeichenrückrufe können ohne Lesezeichenoptionen erfolgen, aber Lesezeichenoptionen müssen immer einem Rückruf zugeordnet werden, da die Optionen in Situationen ohne Rückrufmethode nicht gültig sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityContext.CreateBookmark (name, callback, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn eine Benachrichtigung die Wiederaufnahme der <see cref="T:System.Activities.NativeActivity" />-Aktivität signalisiert.</param>
        <param name="scope">Ein Bezeichner für eine Gruppe von Lesezeichen, die während einer Workflowlaufzeit unter demselben Protokoll ausgeführt werden.</param>
        <param name="options">Die Lesezeichenoptionen, mit denen festgelegt wird, wie das Lesezeichen während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Aktivität verwendet wird.</param>
        <summary>Erstellt den Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Aktivität passiv warten kann, bis die Wiederaufnahme erfolgt, mit dem angegebenen Namen, mit der angegebenen Methode, die bei Abschluss des Wiederaufnahmevorgangs ausgeführt werden soll, mit dem angegebenen Lesezeichenbereich und mit der angegebenen Option, die festlegt, wie das Lesezeichen während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Aktivität verwendet wird.</summary>
        <returns>Ein Lesezeichen mit Name, Rückrufmethode, Lesezeichenbereich und Lesezeichenausführungsoption.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lesezeichenrückrufe können ohne Lesezeichenoptionen erfolgen, aber Lesezeichenoptionen müssen immer einem Rückruf zugeordnet werden, da die Optionen in Situationen ohne Rückrufmethode nicht gültig sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBookmarkScope">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkScope DefaultBookmarkScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.BookmarkScope DefaultBookmarkScope" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultBookmarkScope As BookmarkScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::BookmarkScope ^ DefaultBookmarkScope { System::Activities::BookmarkScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBookmarkScope : System.Activities.BookmarkScope" Usage="System.Activities.NativeActivityContext.DefaultBookmarkScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Lesezeichenbereich ab, der dem Workflowstamm zugewiesen ist.</summary>
        <value>Ein eindeutiger Bezeichner (GUID, Globally Unique Identifier).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.ActivityInstance&gt; GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.ActivityInstance&gt; GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As ReadOnlyCollection(Of ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::ActivityInstance ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="member this.GetChildren : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.ActivityInstance&gt;" Usage="nativeActivityContext.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.ActivityInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung der untergeordneten Aktivitäten für die aktuelle <see cref="T:System.Activities.NativeActivity" />-Aktivität zurück.</summary>
        <returns>Eine generische, schreibgeschützte Auflistung von untergeordneten <see cref="T:System.Activities.NativeActivity" />-Objekten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (variable As Variable) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="override this.GetValue : System.Activities.Variable -&gt; obj" Usage="nativeActivityContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">Die Variable, deren Wert während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Instanz abgerufen wird.</param>
        <summary>Gibt den Wert der angegebenen Variablen in der aktuellen <see cref="T:System.Activities.NativeActivity" />-Instanz zurück.</summary>
        <returns>Der Wert der angegebenen Variablen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (variable As Variable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValue(System::Activities::Variable&lt;T&gt; ^ variable);" />
      <MemberSignature Language="F#" Value="override this.GetValue : System.Activities.Variable&lt;'T&gt; -&gt; 'T" Usage="nativeActivityContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Variablen, deren Wert abgerufen wird.</typeparam>
        <param name="variable">Die generische Variable, deren Wert während der Ausführung der aktuellen <see cref="T:System.Activities.NativeActivity" />-Instanz abgerufen wird.</param>
        <summary>Gibt den Wert der angegebenen generischen Variablen in der aktuellen <see cref="T:System.Activities.NativeActivity" />-Instanz zurück.</summary>
        <returns>Der Wert der angegebenen Variablen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Activities.NativeActivityContext.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob die aktuell ausgeführte <see cref="T:System.Activities.NativeActivity" />-Instanz abgebrochen werden soll.</summary>
        <value><see langword="true" />, wenn die momentan ausführende <see cref="T:System.Activities.NativeActivity" />-Instanz abgebrochen werden soll, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkCanceled">
      <MemberSignature Language="C#" Value="public void MarkCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.MarkCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkCanceled();" />
      <MemberSignature Language="F#" Value="member this.MarkCanceled : unit -&gt; unit" Usage="nativeActivityContext.MarkCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die aktuell ausgeführte <see cref="T:System.Activities.NativeActivity" />-Instanz als abgebrochen fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Activities.ExecutionProperties Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ExecutionProperties Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ExecutionProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ExecutionProperties ^ Properties { System::Activities::ExecutionProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.ExecutionProperties" Usage="System.Activities.NativeActivityContext.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ExecutionProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt zur Behandlung von Eigenschaften für die Ausführung des aktuellen <see cref="T:System.Activities.NativeActivityContext" />-Elements ab.</summary>
        <value>Ein Objekt zur Behandlung von Ausführungseigenschaften.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBookmarks">
      <MemberSignature Language="C#" Value="public void RemoveAllBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllBookmarks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllBookmarks();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllBookmarks : unit -&gt; unit" Usage="nativeActivityContext.RemoveAllBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Instanz zugewiesenen Lesezeichen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Entfernt ein Lesezeichen der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Instanz.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (bookmark As Bookmark) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : System.Activities.Bookmark -&gt; bool" Usage="nativeActivityContext.RemoveBookmark bookmark" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">Ein Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" />-Instanz passiv warten kann, bis die Wiederaufnahme erfolgt.</param>
        <summary>Entfernt das angegebene Lesezeichen der aktuell ausgeführten <see cref="T:System.Activities.NativeActivity" />-Instanz.</summary>
        <returns><see langword="true" />, wenn das Lesezeichen entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string -&gt; bool" Usage="nativeActivityContext.RemoveBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <summary>Entfernt das Lesezeichen mit dem angegebenen Namen.</summary>
        <returns><see langword="true" />, wenn das Lesezeichen entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String, scope As BookmarkScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string * System.Activities.BookmarkScope -&gt; bool" Usage="nativeActivityContext.RemoveBookmark (name, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Lesezeichens.</param>
        <param name="scope">Ein eindeutiger Bezeichner (GUID) für eine Gruppe von <see cref="T:System.Activities.Bookmark" />-Objekten, die unter demselben Protokoll ausgeführt werden.</param>
        <summary>Entfernt das Lesezeichen mit dem angegebenen Namen und Lesezeichenbereich.</summary>
        <returns><see langword="true" />, wenn das Lesezeichen entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmark As Bookmark, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="nativeActivityContext.ResumeBookmark (bookmark, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Ein Punkt, an dem eine <see cref="T:System.Activities.NativeActivity" /> passiv warten kann, bis die Wiederaufnahme erfolgt.</param>
        <param name="value">Die Informationen zur Wiederaufnahme eines Lesezeichens.</param>
        <summary>Nimmt das Lesezeichen wieder auf.</summary>
        <returns>Das Ergebnis des Versuchs, die <see cref="T:System.Activities.NativeActivity" />-Ausführung am Lesezeichen wiederaufzunehmen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction (System.Activities.ActivityAction activityAction, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction(class System.Activities.ActivityAction activityAction, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction (activityAction As ActivityAction, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction" />-Aktion ohne Parameter, die die angegebenen Rückrufpunkte als Lesezeichen festlegt, an denen der übergeordnete Prozess nach dem Abschluss der <see cref="T:System.Activities.ActivityAction" />-Aktion wiederaufgenommen wird.</summary>
        <returns>Eine neue Instanz einer Aktivitätsaktion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T&gt; (System.Activities.ActivityAction&lt;T&gt; activityAction, T argument, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T&gt;(class System.Activities.ActivityAction`1&lt;!!T&gt; activityAction, !!T argument, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T) (activityAction As ActivityAction(Of T), argument As T, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T&gt; * 'T * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein Argument, das Daten in eine Aktivität übergibt.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument">In eine Aktivität übergebene Daten.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`1" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`1" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`1" />-Aktion, die einen Parameter für ein <see langword="in" />-Argument aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`1" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2&gt; (System.Activities.ActivityAction&lt;T1,T2&gt; activityAction, T1 argument1, T2 argument2, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2&gt;(class System.Activities.ActivityAction`2&lt;!!T1, !!T2&gt; activityAction, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2) (activityAction As ActivityAction(Of T1, T2), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`2" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`2" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`2" />-Aktion, die zwei Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`2" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3&gt; (System.Activities.ActivityAction&lt;T1,T2,T3&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3&gt;(class System.Activities.ActivityAction`3&lt;!!T1, !!T2, !!T3&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3) (activityAction As ActivityAction(Of T1, T2, T3), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`3" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`3" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`3" />-Aktion, die drei Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`3" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4&gt;(class System.Activities.ActivityAction`4&lt;!!T1, !!T2, !!T3, !!T4&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4) (activityAction As ActivityAction(Of T1, T2, T3, T4), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`4" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`4" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`4" />-Aktion, die vier Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`4" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5&gt;(class System.Activities.ActivityAction`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`5" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`5" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`5" />-Aktion, die fünf Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`5" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Activities.ActivityAction`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`6" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`6" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`6" />-Aktion, die sechs Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`6" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Activities.ActivityAction`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`7" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`7" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`7" />-Aktion, die sieben Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`7" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Activities.ActivityAction`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`8" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`8" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`8" />-Aktion, die acht Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`8" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Activities.ActivityAction`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`9" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`9" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`9" />-Aktion, die neun Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`9" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Activities.ActivityAction`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`10" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`10" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`10" />-Aktion, die zehn Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`10" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Activities.ActivityAction`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`11" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`11" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`11" />-Aktion, die elf Parameter für <see langword="in" />-Argumente aufweist und die die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`11" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Activities.ActivityAction`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`12" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`12" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`12" />, die zwölf Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityAction`12" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Activities.ActivityAction`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`13" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`13" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`13" />, die 13 Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityAction`13" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Activities.ActivityAction`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`14" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`14" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`14" />, die 14 Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityAction`14" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Activities.ActivityAction`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übertragen werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T15">Ein generischer Parameter, der die Daten darstellt, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument15">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`15" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`15" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`15" />-Aktion, die 15 Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`15" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Activities.ActivityAction`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T15">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T16">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <param name="activityAction">Eine Aktion, die ausgeführt wird, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument15">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument16">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`16" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction`16" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityAction`16" />-Aktion, die 16 Parameter für <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`16" />-Aktion als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleActivity">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Plant die Ausführung einer untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity (activity As Activity) As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität, die ausgelöst wird, wenn bei der Ausführung einer übergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ein Ereignis auftritt.</param>
        <summary>Plant die Ausführung der angegebenen untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</summary>
        <returns>Eine Aktivitätsinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity (activity As Activity, onCompleted As CompletionCallback) As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleActivity (activity, onCompleted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität, die ausgelöst wird, wenn bei der Ausführung einer übergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ein Ereignis auftritt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction" /> fortgesetzt wird.</param>
        <summary>Plant die Ausführung der angegebenen untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität, wobei der angegebene Rückrufpunkt für die Wiederaufnahme des übergeordneten Prozesses nach Abschluss der Aktivität verwendet wird.</summary>
        <returns>Eine Aktivitätsinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity (activity As Activity, onFaulted As FaultCallback) As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleActivity (activity, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität, die ausgelöst wird, wenn bei der Ausführung einer übergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ein Ereignis auftritt.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung der angegebenen untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität, wobei der angegebene Rückrufpunkt für die Wiederaufnahme des übergeordneten Prozesses bei einem Fehler in der Aktivität verwendet wird.</summary>
        <returns>Eine Aktivitätsinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity (activity As Activity, onCompleted As CompletionCallback, onFaulted As FaultCallback) As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Eine untergeordnete Aktivität, die ausgelöst wird, wenn bei der Ausführung einer übergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ein Ereignis auftritt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der <see cref="T:System.Activities.NativeActivity" /> nach dem Abschluss der <see cref="T:System.Activities.ActivityAction" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der <see cref="T:System.Activities.NativeActivity" />-Aktivität wiederaufgenommen wird, wenn die <see cref="T:System.Activities.ActivityAction" />-Aktion aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung der angegebenen untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität und legt die angegebenen Rückrufpunkte als Lesezeichen fest, an denen der übergeordnete Prozess nach Abschluss der untergeordneten Aktivität wiederaufgenommen wird.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity&lt;TResult&gt; (System.Activities.Activity&lt;TResult&gt; activity, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity&lt;TResult&gt;(class System.Activities.Activity`1&lt;!!TResult&gt; activity, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity(Of TResult) (activity As Activity(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activity">Eine untergeordnete Aktivität, die ausgelöst wird, wenn bei der Ausführung einer übergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität ein Ereignis auftritt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der <see cref="T:System.Activities.NativeActivity" /> nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`1" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der <see cref="T:System.Activities.NativeActivity" />-Aktivität wiederaufgenommen wird, wenn die <see cref="T:System.Activities.ActivityAction" />-Aktion aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung der angegebenen untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität mit einem Parameter für ein <see langword="in" />-Argument zur Festlegung der angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss der <see cref="T:System.Activities.ActivityAction`1" />-Aktion als Lesezeichen.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDelegate">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleDelegate (System.Activities.ActivityDelegate activityDelegate, System.Collections.Generic.IDictionary&lt;string,object&gt; inputParameters, System.Activities.DelegateCompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleDelegate(class System.Activities.ActivityDelegate activityDelegate, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputParameters, class System.Activities.DelegateCompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleDelegate (activityDelegate As ActivityDelegate, inputParameters As IDictionary(Of String, Object), Optional onCompleted As DelegateCompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleDelegate : System.Activities.ActivityDelegate * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.DelegateCompletionCallback * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleDelegate (activityDelegate, inputParameters, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="inputParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.DelegateCompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">Die Rückrufmethode für eine Aktivität bei Abschluss der angegebenen Aktivitätsaktion.</param>
        <param name="inputParameters">Eine Wörterbuchliste mit Namen und Werten von Aktivitätsargumenten.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityAction" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityAction" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Überträgt die Rückrufmethode für eine Aktivität mithilfe von Push in den Arbeitselementpool.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;TResult&gt; (System.Activities.ActivityFunc&lt;TResult&gt; activityFunc, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;TResult&gt;(class System.Activities.ActivityFunc`1&lt;!!TResult&gt; activityFunc, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of TResult) (activityFunc As ActivityFunc(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`1" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`1" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`1" />-Elements, das einen Parameter mit einem Rückgabewert aufweist und die angegebenen Rückrufpunkte als Lesezeichen festlegt, an denen der übergeordnete Prozess nach Abschluss des <see cref="T:System.Activities.ActivityFunc`1" />-Elements wiederaufgenommen wird.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T,TResult&gt; (System.Activities.ActivityFunc&lt;T,TResult&gt; activityFunc, T argument, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T, TResult&gt;(class System.Activities.ActivityFunc`2&lt;!!T, !!TResult&gt; activityFunc, !!T argument, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T, TResult) (activityFunc As ActivityFunc(Of T, TResult), argument As T, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T, 'Result&gt; * 'T * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T,TResult&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`2" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`2" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`2" />-Elements, das zwei Parameter für einen Rückgabewert und ein <see langword="in" />-Argument aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss des <see cref="T:System.Activities.ActivityFunc`2" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,TResult&gt; activityFunc, T1 argument1, T2 argument2, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, TResult&gt;(class System.Activities.ActivityFunc`3&lt;!!T1, !!T2, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, TResult) (activityFunc As ActivityFunc(Of T1, T2, TResult), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'Result&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`3" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`3" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`3" />, die drei Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`3" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, TResult&gt;(class System.Activities.ActivityFunc`4&lt;!!T1, !!T2, !!T3, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, TResult), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'Result&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`4" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`4" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`4" />-Elements, das vier Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`4" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, TResult&gt;(class System.Activities.ActivityFunc`5&lt;!!T1, !!T2, !!T3, !!T4, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`5" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`5" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`5" />, die fünf Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`5" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, TResult&gt;(class System.Activities.ActivityFunc`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`6" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`6" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`6" />-Elements, das sechs Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`6" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;(class System.Activities.ActivityFunc`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`7" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`7" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`7" />-Elements, das sieben Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`7" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;(class System.Activities.ActivityFunc`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`8" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`8" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`8" />-Elements, das acht Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`8" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;(class System.Activities.ActivityFunc`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`9" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`9" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`9" />, die neun Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`9" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;(class System.Activities.ActivityFunc`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`10" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`10" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`10" />-Elements, das zehn Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss des <see cref="T:System.Activities.ActivityFunc`10" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;(class System.Activities.ActivityFunc`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`11" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`11" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`11" />-Elements, das elf Parameter für einen Rückgabewert und in-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`11" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;(class System.Activities.ActivityFunc`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`12" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`12" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`12" />, die zwölf Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`12" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;(class System.Activities.ActivityFunc`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`13" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`13" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`13" />, die 13 Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`13" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;(class System.Activities.ActivityFunc`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`14" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`14" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung einer angegebenen <see cref="T:System.Activities.ActivityFunc`14" />, die 14 Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss von <see cref="T:System.Activities.ActivityFunc`14" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;(class System.Activities.ActivityFunc`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`15" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`15" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`15" />-Elements, das 15 Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss des <see cref="T:System.Activities.ActivityFunc`15" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;(class System.Activities.ActivityFunc`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T15">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ des out-Arguments der untergeordneten <see cref="T:System.Activities.NativeActivity" />-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument15">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`16" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`16" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`16" />-Elements, das 16 Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach dem Abschluss des <see cref="T:System.Activities.ActivityFunc`16" />-Elements als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;(class System.Activities.ActivityFunc`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing) As ActivityInstance" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; System.Activities.ActivityInstance" Usage="nativeActivityContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T2">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T3">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T4">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T5">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T6">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T7">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T8">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T9">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T10">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T11">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T12">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T13">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T14">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T15">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="T16">Die Daten, die in eine Aktivität übergeben werden.</typeparam>
        <typeparam name="TResult">Der Typ der <see cref="T:System.Activities.NativeActivity" /> untergeordneten <see langword="out" />-Argument-Aktivität.</typeparam>
        <param name="activityFunc">Eine untergeordnete Aktivität, die ausgeführt wird und einen Wert zurückgibt, wenn ein bestimmtes Ereignis in der übergeordneten Aktivität auftritt.</param>
        <param name="argument1">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument2">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument3">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument4">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument5">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument6">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument7">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument8">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument9">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument10">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument11">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument12">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument13">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument14">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument15">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="argument16">Ein Argument, das Daten in eine Aktivität übergibt.</param>
        <param name="onCompleted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität nach dem Abschluss der <see cref="T:System.Activities.ActivityFunc`17" /> fortgesetzt wird.</param>
        <param name="onFaulted">Ein Lesezeichen, das angibt, an welchem Punkt die Ausführung der übergeordneten Aktivität fortgesetzt wird, wenn die <see cref="T:System.Activities.ActivityFunc`17" /> aufgrund eines Fehlers beendet wird.</param>
        <summary>Plant die Ausführung eines angegebenen <see cref="T:System.Activities.ActivityFunc`17" />, das 17 Parameter für einen Rückgabewert und <see langword="in" />-Argumente aufweist und die angegebenen Rückrufpunkte zur Wiederaufnahme des übergeordneten Prozesses nach Abschluss des <see cref="T:System.Activities.ActivityFunc`17" /> als Lesezeichen festlegt.</summary>
        <returns>Eine Instanz einer Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Variable variable, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Variable variable, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (variable As Variable, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Variable ^ variable, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetValue : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">Ein Variablenobjekt ohne einen angegebenen Typ, dem ein Wertobjekt zugewiesen werden kann.</param>
        <param name="value">Ein Objekt ohne einen angegebenen Typ, das einem Variablenobjekt zugewiesen werden kann.</param>
        <summary>Weist das angegebene Wertobjekt dem angegebenen Variablenobjekt zu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue(Of T) (variable As Variable(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void SetValue(System::Activities::Variable&lt;T&gt; ^ variable, T value);" />
      <MemberSignature Language="F#" Value="override this.SetValue : System.Activities.Variable&lt;'T&gt; * 'T -&gt; unit" Usage="nativeActivityContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der <paramref name="variable" /> und der <paramref name="value" />.</typeparam>
        <param name="variable">Ein Variablenobjekt mit einem angegebenen Typ, dem ein Wertobjekt zugewiesen werden kann.</param>
        <param name="value">Ein Objekt mit einem angegebenen Typ, das einem Variablenobjekt zugewiesen werden kann.</param>
        <summary>Weist das angegebene generische Wertobjekt dem angegebenen generischen Variablenobjekt zu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public void Track (System.Activities.Tracking.CustomTrackingRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Track(class System.Activities.Tracking.CustomTrackingRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Track (record As CustomTrackingRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Track(System::Activities::Tracking::CustomTrackingRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Track : System.Activities.Tracking.CustomTrackingRecord -&gt; unit" Usage="nativeActivityContext.Track record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.CustomTrackingRecord" />
      </Parameters>
      <Docs>
        <param name="record">Die Daten, die beim Eintreten von nachverfolgten Ereignissen an Nachverfolgungsteilnehmer gesendet werden.</param>
        <summary>Fügt der aktuellen Workflowinstanz einen Aktivitätsnachverfolgungsdatensatz hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
