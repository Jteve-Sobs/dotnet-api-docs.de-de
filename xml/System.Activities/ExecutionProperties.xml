<Type Name="ExecutionProperties" FullName="System.Activities.ExecutionProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa4e7a92b4fe46976db2d675d323e1bde98a2fe0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39742150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExecutionProperties : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExecutionProperties extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ExecutionProperties" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionProperties&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionProperties sealed : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ExecutionProperties = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ed85e-101">Stellt die Auflistung von Eigenschaften in einem bestimmten Bereich dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed85e-101">Represents the collection of properties at a particular scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed85e-102">Durch TLS (Thread Local Storage, lokaler Threadspeicher) behält die CLR einen Ausführungskontext für jeden Thread bei.</span><span class="sxs-lookup"><span data-stu-id="ed85e-102">Through thread local storage (TLS), the CLR maintains an execution context for each thread.</span></span> <span data-ttu-id="ed85e-103">Dieser Ausführungskontext bestimmt bekannte Threadeigenschaften wie die Threadidentität, die Ambient-Transaktion und den aktuellen Berechtigungssatz sowie benutzerdefinierte Threadeigenschaften, z. B. benannte Slots.</span><span class="sxs-lookup"><span data-stu-id="ed85e-103">This execution context governs well-known thread properties such as the thread identity, the ambient transaction, and the current permission set as well as user-defined thread properties like named slots.</span></span>  
  
 <span data-ttu-id="ed85e-104">Im Gegensatz zu Programmen, die direkt mit der CLR verwendet werden, sind Workflowprogramme hierarchisch bewertete Strukturen, die in einer threadagnostischen Umgebung ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="ed85e-104">Unlike programs directly targeting the CLR, workflow programs are hierarchically-scoped trees that execute in a thread-agnostic environment.</span></span> <span data-ttu-id="ed85e-105">Dies bedeutet, dass mit den Standard-TLS-Mechanismen nicht direkt bestimmt werden kann, welcher Kontext im Bereich einer bestimmten Arbeitsaufgabe liegt.</span><span class="sxs-lookup"><span data-stu-id="ed85e-105">This implies that the standard TLS mechanisms cannot directly be used to determine what context is in scope for a given work item.</span></span> <span data-ttu-id="ed85e-106">Zwei parallele Verzweigungen der Ausführung können z. B. unterschiedliche Identitäten verwenden, der Planer kann sie jedoch zeitgleich für denselben CLR-Thread ausführen.</span><span class="sxs-lookup"><span data-stu-id="ed85e-106">For example, two parallel branches of execution might use different identities yet the scheduler might interleave their execution on the same CLR thread.</span></span>  
  
 <span data-ttu-id="ed85e-107">Mit Ausführungseigenschaften kann von einer Aktivität deklariert werden, welche Eigenschaften im Bereich ihrer Unterstruktur liegen, und es können Hooks für das Einrichten und Beenden für den TLS bereitgestellt werden, damit eine ordnungsgemäße Zusammenarbeit mit CLR-Objekten möglich ist.</span><span class="sxs-lookup"><span data-stu-id="ed85e-107">Execution properties allow an activity to declare which properties are in scope for its sub-tree as well as provide hooks for setting up and tearing down TLS to properly interoperate with CLR objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed85e-108">Registriert eine neue Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-108">Registers a new property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, property As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="executionProperties.Add (name, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ed85e-109">Den Namen der Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-109">The name of the property.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="ed85e-110">Das Objekt, das die Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-110">The object that represents the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed85e-111">Registriert eine neue Eigenschaft mit dem angegebenen Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-111">Registers a new property using the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object property, bool onlyVisibleToPublicChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object property, bool onlyVisibleToPublicChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, property As Object, onlyVisibleToPublicChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ property, bool onlyVisibleToPublicChildren);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * bool -&gt; unit" Usage="executionProperties.Add (name, property, onlyVisibleToPublicChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="onlyVisibleToPublicChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ed85e-112">Der Name der Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-112">The name of the property.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="ed85e-113">Das Objekt, das die Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-113">The object that represents the property.</span>
          </span>
        </param>
        <param name="onlyVisibleToPublicChildren">
          <span data-ttu-id="ed85e-114">Ein Wert, der bestimmt, ob diese Eigenschaft für die untergeordneten Elemente der besitzenden Aktivität sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-114">A value that determines whether this property is visible to the children of the owning activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed85e-115">Registriert eine Eigenschaft mit dem angegebenen Namen und der Sichtbarkeit untergeordneter Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-115">Registers a property using the specified name and child visibility.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public object Find (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Find(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Find(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; obj" Usage="executionProperties.Find name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ed85e-116">Den Namen der Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-116">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed85e-117">Gibt die nächste Eigenschaft mit dem angegebenen Namen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-117">Returns the nearest property of the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed85e-118">Die nächste Eigenschaft mit dem angegebenen Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-118">The nearest property of the given name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed85e-119"><xref:System.Activities.ExecutionProperties.Find%2A> sucht die nächste sichtbare Eigenschaft mithilfe von hierarchischen Bereichen.</span><span class="sxs-lookup"><span data-stu-id="ed85e-119"><xref:System.Activities.ExecutionProperties.Find%2A> finds the nearest visible property using hierarchical scoping.</span></span> <span data-ttu-id="ed85e-120">Wenn zwei Eigenschaften den gleichen Namen aufweisen, wird die nächste Eigenschaft im übergeordneten Bereich zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="ed85e-120">If two properties have the same name, the closest property at the parent scope is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="executionProperties.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed85e-121">Gibt einen Enumerator zurück, der die Auflistung von Eigenschaften durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-121">Returns an enumerator that iterates through the collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed85e-122">Ein Enumerator, der die Auflistung von Eigenschaften durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-122">An enumerator that iterates through the collection of properties.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ExecutionProperties.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Activities.ExecutionProperties.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed85e-123">Ruft einen Wert ab, der angibt, ob Eigenschaften im aktuellen Bereich registriert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-123">Gets a value that indicates whether there are properties registered at the current scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed85e-124">
            <see langword="true" />, wenn registrierte Eigenschaften vorhanden sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-124">
              <see langword="true" /> if there are properties registered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; bool" Usage="executionProperties.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ed85e-125">Der Name der Eigenschaft, deren Registrierung aufgehoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-125">The name of the property to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed85e-126">Hebt die Registrierung der Eigenschaft mit dem angegebenen Namen auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-126">Unregisters the property with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed85e-127">
            <see langword="true" />, wenn die Registrierung der Eigenschaft erfolgreich aufgehoben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-127">
              <see langword="true" /> if the property was unregistered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed85e-128">Die Registrierung von Eigenschaften wird automatisch aufgehoben, wenn die Aktivität abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="ed85e-128">Properties are automatically unregistered when the activity completes.</span></span> <span data-ttu-id="ed85e-129">Diese Methode kann verwendet werden, um die Registrierung einer Eigenschaft aufzuheben, bevor die Aktivität abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="ed85e-129">This method can be used to unregister a property before the activity completes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed85e-130">Gibt einen Enumerator zurück, der die Auflistung von Eigenschaften durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-130">Returns an enumerator that iterates through the collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed85e-131">Ein Enumerator, der die Auflistung von Eigenschaften durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed85e-131">An enumerator that iterates through the collection of properties.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>