<Type Name="NativeActivity" FullName="System.Activities.NativeActivity">
  <TypeSignature Language="C#" Value="public abstract class NativeActivity : System.Activities.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NativeActivity extends System.Activities.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NativeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivity abstract : System::Activities::Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dd1e9-101">Eine abstrakte Basisklasse für benutzerdefinierte Aktivitäten zur Implementierung von Ausführungslogik mit der <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" />-Methode, die über uneingeschränkten Zugriff auf die Laufzeitfunktionen verfügt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-101">Abstract base class for custom activities that implement execution logic using the <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" /> method, which has full access to the runtime’s features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd1e9-102">Im folgenden Codebeispiel wird das Erstellen einer Klasse veranschaulicht, die von <xref:System.Activities.NativeActivity%601> erbt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-102">The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="dd1e9-103">Dieses Beispiel stammt aus dem [benutzerdefinierte zusammengesetzte mit Nativeactivity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-103">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
```csharp
public sealed class MySequence : NativeActivity  
{  
    Collection<Activity> children;  
    Collection<Variable> variables;  
    Variable<int> currentIndex;  
    CompletionCallback onChildComplete;  
  
    public MySequence()  
        : base()  
    {  
        this.children = new Collection<Activity>();  
        this.variables = new Collection<Variable>();  
        this.currentIndex = new Variable<int>();  
    }  
  
    public Collection<Activity> Activities  
    {  
        get  
        {  
            return this.children;  
        }  
    }  
    public Collection<Variable> Variables  
    {  
        get  
        {  
            return this.variables;  
        }  
    }  
    protected override void CacheMetadata(NativeActivityMetadata metadata)  
    {  
        //call base.CacheMetadata to add the Activities and Variables to this activity's metadata  
        base.CacheMetadata(metadata);  
        //add the private implementation variable: currentIndex   
        metadata.AddImplementationVariable(this.currentIndex);  
    }                     
  
    protected override void Execute(NativeActivityContext context)  
    {  
        InternalExecute(context, null);  
    }  
    void InternalExecute(NativeActivityContext context, ActivityInstance instance)  
    {  
        //grab the index of the current Activity  
        int currentActivityIndex = this.currentIndex.Get(context);  
        if (currentActivityIndex == Activities.Count)  
        {  
            //if the currentActivityIndex is equal to the count of MySequence's Activities  
            //MySequence is complete  
            return;  
        }  
  
        if (this.onChildComplete == null)  
        {  
            //on completion of the current child, have the runtime call back on this method  
            this.onChildComplete = new CompletionCallback(InternalExecute);  
        }  
        //grab the next Activity in MySequence.Activities and schedule it  
        Activity nextChild = Activities[currentActivityIndex];  
        context.ScheduleActivity(nextChild, this.onChildComplete);  
  
        //increment the currentIndex  
        this.currentIndex.Set(context, ++currentActivityIndex);  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd1e9-104">Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-104">When implemented in a derived class, creates a new instance of the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd1e9-105">Im folgenden Codebeispiel wird das Erstellen einer Klasse veranschaulicht, die von <xref:System.Activities.NativeActivity%601> erbt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-105">The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="dd1e9-106">Dieses Beispiel stammt aus dem [benutzerdefinierte zusammengesetzte mit Nativeactivity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-106">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CustomCompositeNativeActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected virtual void Abort (System.Activities.NativeActivityAbortContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort(class System.Activities.NativeActivityAbortContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Abort (context As NativeActivityAbortContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Abort(System::Activities::NativeActivityAbortContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityAbortContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="dd1e9-107">Der Ausführungskontext, in dem die Aktivität ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-107">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="dd1e9-108">Führt bei Implementierung in einer abgeleiteten Klasse Aktionen als Reaktion auf die abgebrochene Aktivität aus.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-108">When implemented in a derived class, takes actions in response to the activity being aborted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd1e9-109">Erstellt und überprüft eine Beschreibung der Argumente, Variablen, untergeordneten Aktivitäten und Aktivitätsdelegaten der Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-109">Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd1e9-110">Autoren benutzerdefinierter Aktivitäten können in der <xref:System.Activities.NativeActivity.CacheMetadata%2A>-Überschreibung einer Aktivität Validierungslogik bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-110">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override.</span></span> <span data-ttu-id="dd1e9-111">Von <xref:System.Activities.NativeActivity.CacheMetadata%2A> ausgelöste Ausnahmen werden nicht als Validierungsfehler behandelt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-111">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="dd1e9-112">Diese Ausnahmen werden im Aufruf von <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> nicht verarbeitet und müssen vom Aufrufer behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-112">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.ActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub CacheMetadata (metadata As ActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::ActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="dd1e9-113">Nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-113">Not implemented.</span></span></param>
        <summary><span data-ttu-id="dd1e9-114">Nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-114">Not implemented.</span></span> <span data-ttu-id="dd1e9-115">Verwenden Sie stattdessen die <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-115">Use the <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /> method instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd1e9-116">Autoren benutzerdefinierter Aktivitäten können in der <xref:System.Activities.NativeActivity.CacheMetadata%2A>-Überschreibung einer Aktivität Validierungslogik bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-116">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override.</span></span> <span data-ttu-id="dd1e9-117">Von <xref:System.Activities.NativeActivity.CacheMetadata%2A> ausgelöste Ausnahmen werden nicht als Validierungsfehler behandelt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-117">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="dd1e9-118">Diese Ausnahmen werden im Aufruf von <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> nicht verarbeitet und müssen vom Aufrufer behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-118">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="dd1e9-119">Die Metadaten der Aktivität, die die Argumente, Variablen, untergeordnete Aktivitäten und Aktivitätsdelegaten der Aktivität kapseln.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-119">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</span></span></param>
        <summary><span data-ttu-id="dd1e9-120">Erstellt und überprüft eine Beschreibung der Argumente, Variablen, untergeordneten Aktivitäten und Aktivitätsdelegaten der Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-120">Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd1e9-121">Die Workflowlaufzeit verwendet die Standardimplementierung von <xref:System.Activities.NativeActivity.CacheMetadata%2A>, um die richtige Konstruktion eines Workflows sicherzustellen sowie Laufzeitbeziehungen und Lebensdauerregeln zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-121">The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.</span></span> <span data-ttu-id="dd1e9-122">Die Standardimplementierung von <xref:System.Activities.NativeActivity.CacheMetadata%2A> untersucht die öffentlichen Member des Aktivitätstyps mit dem <xref:System.ComponentModel.TypeDescriptor> des Typs.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-122">The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="dd1e9-123">Diese öffentlichen Member des Typs werden <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<Variable >](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<Aktivität >](xref:System.Collections.Generic.IEnumerable%601), oder <xref:System.Activities.ActivityDelegate>.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-123">These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<Variable>](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<Activity>](xref:System.Collections.Generic.IEnumerable%601), or <xref:System.Activities.ActivityDelegate>.</span></span> <span data-ttu-id="dd1e9-124">Sie können diese Methode überschreiben, um die Erstellung der Laufzeitbeschreibung der Aktivität anzupassen und benutzerdefinierte Validierungslogik bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-124">You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.</span></span> <span data-ttu-id="dd1e9-125">Von <xref:System.Activities.NativeActivity.CacheMetadata%2A> ausgelöste Ausnahmen werden nicht als Validierungsfehler behandelt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-125">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="dd1e9-126">Diese Ausnahmen werden im Aufruf von <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> nicht verarbeitet und müssen vom Aufrufer behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-126">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd1e9-127">Im folgenden Codebeispiel wird die Verwendung von CacheMetadata in einer Klasse gezeigt, die von <xref:System.Activities.NativeActivity%601> erbt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-127">The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="dd1e9-128">Dieses Beispiel stammt aus dem [benutzerdefinierte zusammengesetzte mit Nativeactivity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-128">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CustomCompositeNativeActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected virtual void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="dd1e9-129">Der Ausführungskontext, in dem die Aktivität ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-129">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="dd1e9-130">Führt bei Implementierung in einer abgeleiteten Klasse Logik für einen ordnungsgemäßen frühzeitigen Abschluss der Aktivität aus.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-130">When implemented in a derived class, runs logic to cause graceful early completion of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd1e9-131">Im folgenden Codebeispiel wird die Verwendung von Cancel in einer Klasse veranschaulicht, die von <xref:System.Activities.NativeActivity%601> erbt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-131">The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="dd1e9-132">Dieses Beispiel stammt aus dem [nicht generisch ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-132">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected virtual bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd1e9-133">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob die Aktivität verursachen kann, dass der Workflow in den Leerlauf versetzt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-133">Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</span></span></summary>
        <value>
          <span data-ttu-id="dd1e9-134"><see langword="true" />, wenn die Aktivität den Workflow in den Leerlauf versetzen kann.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-134"><see langword="true" /> if the activity can cause the workflow to become idle.</span></span> <span data-ttu-id="dd1e9-135">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-135">This value is <see langword="false" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected abstract void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="dd1e9-136">Der Ausführungskontext, in dem die Aktivität ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-136">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="dd1e9-137">Führt bei Implementierung in einer abgeleiteten Klasse die Ausführungslogik der Aktivität aus.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-137">When implemented in a derived class, runs the activity’s execution logic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd1e9-138">Im folgenden Codebeispiel wird die Verwendung von Cancel in einer Klasse veranschaulicht, die von <xref:System.Activities.NativeActivity%601> erbt.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-138">The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="dd1e9-139">Dieses Beispiel stammt aus dem [nicht generisch ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-139">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="protected override sealed Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.IgnoreDataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd1e9-140">Die Ausführungslogik der Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-140">The execution logic of the activity.</span></span></summary>
        <value><span data-ttu-id="dd1e9-141">Die Ausführungslogik.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-141">The execution logic.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="protected internal override sealed Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd1e9-142">Ruft die Implementierungsversion der Aktivität ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-142">Gets or sets the implementation version of the activity.</span></span></summary>
        <value><span data-ttu-id="dd1e9-143">Die Implementierungsversion der Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-143">The implementation version of the activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnCreateDynamicUpdateMap">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd1e9-144">Löst ein Ereignis aus, wenn eine Zuordnung für das dynamische Update erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-144">Raises an event when creating a map for the dynamic update.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="dd1e9-145">Die Metadaten.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-145">The metadata.</span></span></param>
        <param name="originalActivity"><span data-ttu-id="dd1e9-146">Die ursprüngliche Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-146">The original activity.</span></span></param>
        <summary><span data-ttu-id="dd1e9-147">Löst ein Ereignis aus, wenn eine Zuordnung für das dynamische Update erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-147">Raises an event when creating a map for the dynamic update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.UpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnCreateDynamicUpdateMap (metadata As UpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::UpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.UpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="dd1e9-148">Die Metadaten.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-148">The metadata.</span></span></param>
        <param name="originalActivity"><span data-ttu-id="dd1e9-149">Die ursprüngliche Aktivität.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-149">The original activity.</span></span></param>
        <summary><span data-ttu-id="dd1e9-150">Löst ein Ereignis aus, wenn eine Zuordnung für das dynamische Update erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-150">Raises an event when creating a map for the dynamic update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext"><span data-ttu-id="dd1e9-151">Der Updatekontext.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-151">The update context.</span></span></param>
        <summary><span data-ttu-id="dd1e9-152">Aktualisiert die <see cref="T:System.Activities.NativeActivity" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="dd1e9-152">Updates the instance of <see cref="T:System.Activities.NativeActivity" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>