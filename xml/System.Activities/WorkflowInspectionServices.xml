<Type Name="WorkflowInspectionServices" FullName="System.Activities.WorkflowInspectionServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ee19ecf0960541551a93a977d72fa8938307878" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337765" /></Metadata><TypeSignature Language="C#" Value="public static class WorkflowInspectionServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WorkflowInspectionServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowInspectionServices" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowInspectionServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInspectionServices abstract sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInspectionServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden für die Arbeit mit den Laufzeitmetadaten für eine Aktivitätsstruktur bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert die Laufzeitmetadaten für eine Aktivitätsstruktur zwischen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="public static void CacheMetadata (System.Activities.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CacheMetadata(class System.Activities.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CacheMetadata (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CacheMetadata(System::Activities::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member CacheMetadata : System.Activities.Activity -&gt; unit" Usage="System.Activities.WorkflowInspectionServices.CacheMetadata rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Die Stammaktivität der Aktivitätsstruktur.</param>
        <summary>Speichert die Laufzeitmetadaten für die angegebene Aktivitätsstruktur zwischen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="public static void CacheMetadata (System.Activities.Activity rootActivity, System.Activities.LocationReferenceEnvironment hostEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CacheMetadata(class System.Activities.Activity rootActivity, class System.Activities.LocationReferenceEnvironment hostEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CacheMetadata (rootActivity As Activity, hostEnvironment As LocationReferenceEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CacheMetadata(System::Activities::Activity ^ rootActivity, System::Activities::LocationReferenceEnvironment ^ hostEnvironment);" />
      <MemberSignature Language="F#" Value="static member CacheMetadata : System.Activities.Activity * System.Activities.LocationReferenceEnvironment -&gt; unit" Usage="System.Activities.WorkflowInspectionServices.CacheMetadata (rootActivity, hostEnvironment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Activities.Activity" />
        <Parameter Name="hostEnvironment" Type="System.Activities.LocationReferenceEnvironment" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Die Stammaktivität der Aktivitätsstruktur.</param>
        <param name="hostEnvironment">Die dieser Aktivitätsstruktur zugeordnete Umgebung.</param>
        <summary>Speichert die Laufzeitmetadaten für die angegebene Aktivitätsstruktur mithilfe der angegebenen Umgebung zwischen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="public static bool CanInduceIdle (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanInduceIdle(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanInduceIdle(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member CanInduceIdle : System.Activities.Activity -&gt; bool" Usage="System.Activities.WorkflowInspectionServices.CanInduceIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activity">Die Aktivität.</param>
        <summary>Gibt an, ob der Dienst Leerlaufaktivitäten umfassen kann.</summary>
        <returns><see langword="true" />, wenn der Dienst Leerlaufaktivitäten enthalten kann; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivities">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; GetActivities (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; GetActivities(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ GetActivities(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetActivities : System.Activities.Activity -&gt; seq&lt;System.Activities.Activity&gt;" Usage="System.Activities.WorkflowInspectionServices.GetActivities activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__3))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Die Stammaktivität.</param>
        <summary>Gibt eine <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück, die alle Aktivitäten darstellt, die der Eingabeaktivität zugeordnet sind.</summary>
        <returns>Eine Enumeration, die alle Aktivitäten darstellt, die der Eingabeaktivität zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Enumeration enthält alle untergeordneten Aktivitäten, Delegathandler, Standardwerte für Variablen und Argumentausdrücke. Wenn die Eingabe Aktivität ist `null`, wird <xref:System.ArgumentNullException> eine ausgelöst. Die Aktivitätsstruktur muss unverändert bleiben und <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A> darf nicht aufgerufen werden, während die Struktur aufgelistet wird, andernfalls wird eine <xref:System.InvalidOperationException> ausgelöst, wenn <xref:System.Collections.IEnumerator.MoveNext%2A> aufgerufen wird.  
  
 Das Aufrufen dieser Methode bewirkt ein vollständiges Zwischenspeichern der Metadaten. Wenn Sie Änderungen am Workflow vornehmen, nachdem Sie diese Methode aufgerufen haben, müssen Sie <xref:System.Activities.Validation.ActivityValidationServices> die <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> -Methode aufrufen, nachdem Sie die Änderungen vorgenommen haben, um die Metadaten erneut zwischenzuspeichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplementationVersion">
      <MemberSignature Language="C#" Value="public static Version GetImplementationVersion (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version GetImplementationVersion(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ GetImplementationVersion(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetImplementationVersion : System.Activities.Activity -&gt; Version" Usage="System.Activities.WorkflowInspectionServices.GetImplementationVersion activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activity">Die Aktivität.</param>
        <summary>Ruft die Implementierungsversion der Aktivität ab.</summary>
        <returns>Die Implementierungsversion der Aktivität.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Activities.Activity Resolve (System.Activities.Activity root, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.Activity Resolve(class System.Activities.Activity root, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (root As Activity, id As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::Activity ^ Resolve(System::Activities::Activity ^ root, System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member Resolve : System.Activities.Activity * string -&gt; System.Activities.Activity" Usage="System.Activities.WorkflowInspectionServices.Resolve (root, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Activities.Activity" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="root">Die zu suchende Aktivitätsstruktur.</param>
        <param name="id">Der Bezeichner der zu suchenden Aktivität.</param>
        <summary>Gibt die Aktivität mit der angegebenen <paramref name="id" /> aus der angegebenen Aktivitätsstruktur zurück.</summary>
        <returns>Die angegebene Aktivität, sofern sie gefunden wird, andernfalls wird eine <see cref="T:System.ArgumentException" /> ausgelöst.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
