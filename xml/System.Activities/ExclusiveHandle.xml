<Type Name="ExclusiveHandle" FullName="System.Activities.ExclusiveHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6bff4d3cfd236948e461c7f3c1c0f297f2690294" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48767954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExclusiveHandle : System.Activities.Handle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExclusiveHandle extends System.Activities.Handle" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ExclusiveHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ExclusiveHandle&#xA;Inherits Handle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExclusiveHandle : System::Activities::Handle" />
  <TypeSignature Language="F#" Value="type ExclusiveHandle = class&#xA;    inherit Handle" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Handle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fügt einem Lesezeichen zusätzliche Informationen hinzu, mit denen es auf eine Teilmenge der Bereichshandles zugreifen kann, ausschließlich der nicht erforderlichen Handles.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExclusiveHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExclusiveHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Activities.ExclusiveHandle" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected override void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="exclusiveHandle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">Die Umgebung, in der das Handle erstellt wird.</param>
        <summary>Erstellt eine Liste der <see cref="T:System.Activities.BookmarkScopeHandle" />-Standardobjekte aus Handlevariablen im angegebenen Handleinitialisierungskontext.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterBookmarkScope">
      <MemberSignature Language="C#" Value="public void RegisterBookmarkScope (System.Activities.NativeActivityContext context, System.Activities.BookmarkScopeHandle bookmarkScopeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterBookmarkScope(class System.Activities.NativeActivityContext context, class System.Activities.BookmarkScopeHandle bookmarkScopeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterBookmarkScope(System::Activities::NativeActivityContext ^ context, System::Activities::BookmarkScopeHandle ^ bookmarkScopeHandle);" />
      <MemberSignature Language="F#" Value="member this.RegisterBookmarkScope : System.Activities.NativeActivityContext * System.Activities.BookmarkScopeHandle -&gt; unit" Usage="exclusiveHandle.RegisterBookmarkScope (context, bookmarkScopeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="bookmarkScopeHandle" Type="System.Activities.BookmarkScopeHandle" />
      </Parameters>
      <Docs>
        <param name="context">Die Umgebung, in der das Handle erstellt wird.</param>
        <param name="bookmarkScopeHandle">Das verwendete Token, mit dem eine Gruppe von Lesezeichen identifiziert und abgerufen wird, die mit dem gleichen Protokoll in einem Workflowaktivitätsvorgang genutzt werden.</param>
        <summary>Fügt der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> von <see cref="T:System.Activities.BookmarkScopeHandle" />-Objekten das angegebene Lesezeichenbereichshandle mit dem angegebenen Kontext hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode aufgerufen wird, nachdem ein Lesezeichen in diesem exklusiven Bereich erstellt wurde, wird eine <xref:System.InvalidOperationException> ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredBookmarkScopes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredBookmarkScopes As ReadOnlyCollection(Of BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ RegisteredBookmarkScopes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredBookmarkScopes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt;" Usage="System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine neue oder vorhandene <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> von <see cref="T:System.Activities.BookmarkScopeHandle" />-Objekten ab.</summary>
        <value>Eine schreibgeschützte Auflistung von Lesezeichenbereichshandles.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reinitialize">
      <MemberSignature Language="C#" Value="public void Reinitialize (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reinitialize(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reinitialize (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reinitialize(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Reinitialize : System.Activities.NativeActivityContext -&gt; unit" Usage="exclusiveHandle.Reinitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">Die Umgebung, in der das Handle erstellt wird.</param>
        <summary>Legt die registrierten Lesezeichenbereichshandles wieder auf die Standardwerte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode aufgerufen wird und es beim exklusiven Handle registrierte Lesezeichen gibt, wird eine <xref:System.InvalidOperationException> ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>