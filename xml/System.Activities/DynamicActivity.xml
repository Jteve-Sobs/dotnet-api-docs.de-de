<Type Name="DynamicActivity" FullName="System.Activities.DynamicActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7ad47ca98a362f5b06d76aa279bdb1a0467fb0c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DynamicActivity : System.Activities.Activity, System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicActivity extends System.Activities.Activity implements class System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicActivity&#xA;Inherits Activity&#xA;Implements ICustomTypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicActivity sealed : System::Activities::Activity, System::ComponentModel::ICustomTypeDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ICustomTypeDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Implementation")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8e4f-101">Stellt ein Objektmodell bereit, das die dynamische Erstellung von Aktivitäten ermöglicht, die per <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> mit dem WF-Designer und der Workflowlaufzeit interagieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8e4f-101">Provides an object model that allows you to construct activities dynamically that interface with the WF designer and runtime using <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8e4f-102">Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Activities.DynamicActivity> erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-102">The following example shows how to create a <xref:System.Activities.DynamicActivity>.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-103">Erstellt eine neue Instanz der <see cref="T:System.Activities.DynamicActivity" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-103">Creates a new instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-104">Mithilfe von <xref:System.Activities.DynamicActivity> können Sie neue Aktivitäten erstellen, ohne neue Typen erstellen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-104">With <xref:System.Activities.DynamicActivity> you can create new activities without creating new types.</span></span> <span data-ttu-id="e8e4f-105"><xref:System.Activities.DynamicActivity> ermöglicht in Verbindung mit der XAML-Unterstützung in <xref:System.Activities.XamlIntegration.ActivityXamlServices> das Definieren neuer Argumente im XAML-Format und das Binden durch den Host, ohne dass eine Kompilierung der XAML-Daten erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-105"><xref:System.Activities.DynamicActivity> with its associated XAML support in <xref:System.Activities.XamlIntegration.ActivityXamlServices> allows new arguments to be defined in XAML and bound by the host without requiring XAML to be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As Collection(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ Attributes { System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-106">Ruft die Auflistung der Attribute für die dynamisch generierte Aktivität ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-106">Gets the collection of attributes of the dynamically generated activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-107">Die Auflistung der Attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-107">The collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt; Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.Constraint&gt; Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As Collection(Of Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ Constraints { System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-108">Gibt eine Auflistung mit <see cref="T:System.Activities.Validation.Constraint" />-Aktivitäten zurück, die konfiguriert werden, um die Validierung für die <see cref="T:System.Activities.DynamicActivity" /> bereitstellen zu können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-108">Returns a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that are configured to provide validation for the <see cref="T:System.Activities.DynamicActivity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-109">Die Auflistung der Einschränkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-109">The constraint collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.XamlDeferLoad(typeof(System.Activities.XamlIntegration.FuncDeferringLoader), typeof(System.Activities.Activity))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-110">Ruft die Ausführungslogik der Aktivität ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-110">Gets or sets the execution logic of the activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-111">Die Ausführungslogik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-111">The execution logic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8e4f-112">Im folgenden Beispiel wird gezeigt, wie die Implementierung für eine dynamische Aktivität angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-112">The following example shows how to specify the implementation for a dynamic activity.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="public Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.ImplementationVersionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-113">Ruft die Implementierungsversion der Aktivität ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-113">Gets or sets the implementation version of the activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-114">Die Implementierungsversion der Aktivität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-114">The implementation version of the activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.IDynamicActivity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-115">Der Name, der für die Aktivität im Workflow-Designer angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-115">The name to be displayed for the activity in the workflow designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-116">Der Name der Aktivität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-116">The activity name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.KeyedCollection&lt;string,System.Activities.DynamicActivityProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.KeyedCollection`2&lt;string, class System.Activities.DynamicActivityProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As KeyedCollection(Of String, DynamicActivityProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ Properties { System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.IDynamicActivity.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.KeyedCollection&lt;System.String,System.Activities.DynamicActivityProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-117">Ruft die Auflistung der Eigenschaften ab, die den Argumenten der dynamisch generierten Aktivität zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-117">Gets the collection of properties that map to the arguments of the dynamically generated activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8e4f-118">Die Auflistung der Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-118">The collection of properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <MemberSignature Language="C#" Value="System.ComponentModel.AttributeCollection ICustomTypeDescriptor.GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
      <MemberSignature Language="VB.NET" Value="Function GetAttributes () As AttributeCollection Implements ICustomTypeDescriptor.GetAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::AttributeCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetAttributes() = System::ComponentModel::ICustomTypeDescriptor::GetAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-119">Gibt eine Auflistung mit Attributen der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-119">Returns a collection of attributes of the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-120">Die Attribute der dynamischen Aktivität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-120">The attributes of the dynamic activity.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-121">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-121">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-122">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-122">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
      <MemberSignature Language="VB.NET" Value="Function GetClassName () As String Implements ICustomTypeDescriptor.GetClassName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetClassName() = System::ComponentModel::ICustomTypeDescriptor::GetClassName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-123">Gibt den Klassennamen der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-123">Returns the class name of the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-124">Der Klassenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-124">The class name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-125">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-125">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-126">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-126">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
      <MemberSignature Language="VB.NET" Value="Function GetComponentName () As String Implements ICustomTypeDescriptor.GetComponentName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetComponentName() = System::ComponentModel::ICustomTypeDescriptor::GetComponentName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-127">Gibt den Komponentennamen der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-127">Returns the component name of the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-128">Der Komponentenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-128">The component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-129">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-129">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-130">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-130">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <MemberSignature Language="C#" Value="System.ComponentModel.TypeConverter ICustomTypeDescriptor.GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
      <MemberSignature Language="VB.NET" Value="Function GetConverter () As TypeConverter Implements ICustomTypeDescriptor.GetConverter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::TypeConverter ^ System.ComponentModel.ICustomTypeDescriptor.GetConverter() = System::ComponentModel::ICustomTypeDescriptor::GetConverter;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-131">Gibt für die dynamische Aktivität einen Typkonverter zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-131">Returns a type converter for the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-132">Ein Typkonverter für diese Instanz der dynamischen Aktivität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-132">A type converter for this dynamic activity instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-133">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-133">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-134">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-134">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptor ICustomTypeDescriptor.GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultEvent () As EventDescriptor Implements ICustomTypeDescriptor.GetDefaultEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-135">Gibt das Standardereignis für die dynamische Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-135">Returns the default event for the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-136">Das Standardereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-136">The default event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-137">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-137">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-138">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-138">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptor ICustomTypeDescriptor.GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultProperty () As PropertyDescriptor Implements ICustomTypeDescriptor.GetDefaultProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-139">Gibt die Standardeigenschaft für die dynamische Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-139">Returns the default property for the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-140">Die Standardeigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-140">The default property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-141">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-142">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-142">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEditor">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetEditor (editorBaseType As Type) As Object Implements ICustomTypeDescriptor.GetEditor" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type ^ editorBaseType) = System::ComponentModel::ICustomTypeDescriptor::GetEditor;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="e8e4f-143">Der Basistyp des Editors, nach dem Sie suchen möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-143">The base type of the editor you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8e4f-144">Gibt einen Editor mit dem angegebenen Basistyp zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-144">Returns an editor with the specified base type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-145">Eine Instanz des Editors, die in den angegebenen Editortyp umgewandelt werden kann, oder <see langword="null" />, wenn kein Editor vom angeforderten Typ gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-145">An instance of the editor that can be cast to the specified editor type or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-146">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-146">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-147">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-147">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-148">Gibt die Auflistung mit Ereignissen der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-148">Returns the collection of events of the dynamic activity.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents () As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents() = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-149">Gibt die Auflistung mit Ereignissen der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-149">Returns the collection of events of the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-150">Die Auflistung von Ereignissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-150">The collection of events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-151">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-152">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-152">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents (attributes As Attribute()) As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e8e4f-153">Ein Array, das Sie als Filter verwenden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-153">An array that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8e4f-154">Gibt die Auflistung mit den Ereignissen der dynamischen Aktivität zurück. Hierbei wird das angegebene Array mit Attributen als Filter verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-154">Returns the collection of events of the dynamic activity using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-155">Die Auflistung der Ereignisse, die mit den angegebenen Attributen übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-155">The collection of events that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-156">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-156">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-157">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-157">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-158">Gibt die Auflistung mit den Eigenschaften der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-158">Returns the collection of properties of the dynamic activity.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties () As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties() = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8e4f-159">Gibt die Auflistung mit den Eigenschaften der dynamischen Aktivität zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-159">Returns the collection of properties of the dynamic activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-160">Die Auflistung der Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-160">The collection of properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-161">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-162">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-162">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (attributes As Attribute()) As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e8e4f-163">Ein Array, das Sie als Filter verwenden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-163">An array that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8e4f-164">Gibt die Auflistung mit den Eigenschaften der dynamischen Aktivität zurück. Hierbei wird das angegebene Array mit Attributen als Filter verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-164">Returns the collection of properties of the dynamic activity using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-165">Die Auflistung der Eigenschaften, die mit den angegebenen Attributen übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-165">The collection of properties that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-166">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-166">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-167">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-167">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyOwner (pd As PropertyDescriptor) As Object Implements ICustomTypeDescriptor.GetPropertyOwner" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System::ComponentModel::PropertyDescriptor ^ pd) = System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd">
          <span data-ttu-id="e8e4f-168">Die Eigenschaft, nach deren Besitzer gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-168">The property whose owner is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8e4f-169">Gibt diese Instanz der <see cref="T:System.Activities.DynamicActivity" />-Klasse zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-169">Returns this instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8e4f-170">Diese Instanz von <see cref="T:System.Activities.DynamicActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8e4f-170">This instance of <see cref="T:System.Activities.DynamicActivity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8e4f-171">Der `pd`-Parameter wird von dieser Methode ignoriert.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-171">The `pd` parameter is ignored by this method.</span></span> <span data-ttu-id="e8e4f-172">Dieser Parameter wird zum Implementieren der <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-172">This parameter is present to implement the <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 <span data-ttu-id="e8e4f-173">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8e4f-174">Er kann nur verwendet werden, wenn die <xref:System.Activities.DynamicActivity>-Instanz in eine <xref:System.ComponentModel.ICustomTypeDescriptor>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e8e4f-174">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>