<Type Name="XmlStreamStore" FullName="System.Windows.Annotations.Storage.XmlStreamStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="164cf46943bfc78a4ce7db862d070b0b54eb45d2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46657052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.XmlStreamStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlStreamStore&#xA;Inherits AnnotationStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlStreamStore sealed : System::Windows::Annotations::Storage::AnnotationStore" />
  <TypeSignature Language="F#" Value="type XmlStreamStore = class&#xA;    inherit AnnotationStore" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Annotations.Storage.AnnotationStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen XML-Datenspeicher zum Schreiben und Lesen von Benutzeranmerkungen dar.</summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=73824">XML-Markup-Compatibility-Spezifikation</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Der E/A-Stream zum Lesen und Schreiben von Benutzeranmerkungen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" />-Klasse mit einem angegebenen E/A-<see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `stream` muss in gültigem XML-format und entsprechen den [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] Schema.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary&lt;Uri,System.Collections.Generic.IList&lt;Uri&gt;&gt; knownNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Collections.Generic.IDictionary`2&lt;class System.Uri, class System.Collections.Generic.IList`1&lt;class System.Uri&gt;&gt; knownNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream, System::Collections::Generic::IDictionary&lt;Uri ^, System::Collections::Generic::IList&lt;Uri ^&gt; ^&gt; ^ knownNamespaces);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream * System.Collections.Generic.IDictionary&lt;Uri, System.Collections.Generic.IList&lt;Uri&gt;&gt; -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore (stream, knownNamespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="knownNamespaces" Type="System.Collections.Generic.IDictionary&lt;System.Uri,System.Collections.Generic.IList&lt;System.Uri&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream">Der E/A-Stream zum Lesen und Schreiben von Benutzeranmerkungen.</param>
        <param name="knownNamespaces">Ein Wörterbuch mit einer Liste bekannter kompatibler Namespaces.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" />-Klasse mit einem angegebenen E/A-<see cref="T:System.IO.Stream" /> und einem Wörterbuch der bekannten kompatiblen Namespaces.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> Konstruktor können Sie die Registrierung der anwendungsspezifische Namespaces bezeichnet.  
  
 Die `knownNamespace` Wörterbuch definiert Application-Namespaces, die verwendet werden, wenn Sie den benutzerdefinierten Inhalt als Teil einer Anmerkung speichern.  Die Wörterbuchschlüssel ist der primäre Namespace bekannt, dass das Anwendungsprogramm an.  Der Namespaceschlüssel ist eine Wertliste mit älteren Namespaces, die kompatibel mit dem "Key"-Namespace sind zugeordnet.  Wenn Anmerkungen aus dieser Liste alle Namespaces geladen wird durch den Namespace "Schlüssel" ersetzt.  
  
 `stream` muss in gültigem XML-format und entsprechen den [Annotations-Schema](~/docs/framework/wpf/advanced/annotations-schema.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="stream" /> enthält ungültiges XML.</exception>
        <exception cref="T:System.ArgumentException">Das <paramref name="knownNamespaces" />-Wörterbuch enthält einen doppelten Namespace.  
  
- oder -  
Das <paramref name="knownNamespaces" />-Wörterbuch enthält ein Element mit einem <see langword="null" />-Schlüssel.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberSignature Language="F#" Value="override this.AddAnnotation : System.Windows.Annotations.Annotation -&gt; unit" Usage="xmlStreamStore.AddAnnotation newAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation">Die Anmerkung, die dem Speicher hinzugefügt werden soll.</param>
        <summary>Fügt dem Speicher eine neue <see cref="T:System.Windows.Annotations.Annotation" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> aufgerufen wird, die <xref:System.Windows.Annotations.Annotation.Id%2A> von der <xref:System.Windows.Annotations.Annotation> wird überprüft, um festzustellen, ob die <xref:System.Windows.Annotations.Annotation> bereits in den Speicher hinzugefügt wurde.  Wenn die <xref:System.Windows.Annotations.Annotation> bereits hinzugefügt wurde, und befindet sich im Speicher ein <xref:System.ArgumentException> Fehler ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="newAnnotation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Eine <see cref="T:System.Windows.Annotations.Annotation" /> mit der gleichen <see cref="P:System.Windows.Annotations.Annotation.Id" /> befindet sich bereits im Speicher.</exception>
        <exception cref="T:System.InvalidOperationException">Für den Speicher wurde kein E/A-<see cref="T:System.IO.Stream" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> wurde im Speicher aufgerufen.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public override bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob Daten in Anmerkungspuffern sofort in den physischen Datenspeicher geschrieben werden sollen, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn Daten in Anmerkungspuffern für jede Operation sofort in den physischen Datenspeicher geschrieben werden sollen, andernfalls <see langword="false" />, wenn die Daten in Anmerkungspuffern nach dem expliziten Aufrufen von <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" /> durch die Anwendung in den physischen Datenspeicher geschrieben werden sollen.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.DeleteAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.DeleteAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">Die GUID <see cref="P:System.Windows.Annotations.Annotation.Id" />-Eigenschaft der zu löschenden Anmerkung.</param>
        <summary>Löscht die Anmerkung mit der angegebenen <see cref="P:System.Windows.Annotations.Annotation.Id" /> aus dem Speicher.</summary>
        <returns>Die gelöschte Anmerkung, andernfalls <see langword="null" />, wenn im Speicher keine Anmerkung mit der angegebenen <paramref name="annotationId" /> gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> und <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> Methoden.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> wurde im Speicher aufgerufen.</exception>
        <exception cref="T:System.InvalidOperationException">Für den Speicher wurde kein E/A-<see cref="T:System.IO.Stream" /> festgelegt.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xmlStreamStore.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlStreamStore.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erzwingt, dass alle in internen Puffern beibehaltenen Anmerkungsdaten auf den zugrunde liegenden Datenträger geschrieben werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> Methode, wenn die Anwendung schließt die <xref:System.Windows.Annotations.AnnotationService>.  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> und <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> Methoden.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> wurde im Speicher aufgerufen.</exception>
        <exception cref="T:System.InvalidOperationException">Für den Speicher wurde kein E/A-<see cref="T:System.IO.Stream" /> festgelegt.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Speicher-E/A-<see cref="T:System.IO.Stream" /> ist schreibgeschützt, sodass für die Ausgabe nicht darauf zugegriffen werden kann.</exception>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.GetAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">Die GUID <see cref="P:System.Windows.Annotations.Annotation.Id" />-Eigenschaft der zurückzugebenden Anmerkung.</param>
        <summary>Gibt die Anmerkung mit der angegebenen <see cref="P:System.Windows.Annotations.Annotation.Id" /> aus dem Speicher zurück.</summary>
        <returns>Die Anmerkung mit der angegebenen <paramref name="annotationId" />, andernfalls <see langword="null" />, wenn im Speicher keine Anmerkung mit der angegebenen <paramref name="annotationId" /> gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> wurde im Speicher aufgerufen.</exception>
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Liste aller Anmerkungen im Speicher zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> Methode, um zu bestimmen, ob es alle im Speicher enthaltenen Anmerkungen werden.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste aller Anmerkungen im Speicher zurück.</summary>
        <returns>Die Liste aller derzeit im Speicher befindlichen Anmerkungen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> Methode gibt nie `null`jedoch die Liste kann leer sein, wenn der Speicher keine Anmerkungen enthält.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> Methode, um zu bestimmen, ob alle Anmerkungen im Speicher vorhanden sind.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> wurde im Speicher aufgerufen.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : System.Windows.Annotations.ContentLocator -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations anchorLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator">Die Startsequenz von <see cref="T:System.Windows.Annotations.ContentLocatorPart" />, für die entsprechende Anmerkungen zurückgegeben werden sollen.</param>
        <summary>Gibt eine Liste der Anmerkungen zurück, die <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> mit Locators aufweisen, die mit einer entsprechenden <see cref="T:System.Windows.Annotations.ContentLocatorPart" />-Sequenz beginnen.</summary>
        <returns>Die Liste der Anmerkungen, die <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> mit Locators aufweisen, die mit dem angegebenen <paramref name="anchorLocator" /> beginnen und diesem entsprechen, andernfalls <see langword="null" />, wenn keine entsprechenden Anmerkungen gefunden wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> -Methode intern verwendet der <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> Methode der <xref:System.Windows.Annotations.ContentLocator> Klasse suchen, und für die Anmerkungen zurückzugebenden übereinstimmen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> Methode, um zu bestimmen, ob alle Anmerkungen im Speicher vorhanden sind.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownCompatibleNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; GetWellKnownCompatibleNamespaces (Uri name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Uri&gt; GetWellKnownCompatibleNamespaces(class System.Uri name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWellKnownCompatibleNamespaces (name As Uri) As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Uri ^&gt; ^ GetWellKnownCompatibleNamespaces(Uri ^ name);" />
      <MemberSignature Language="F#" Value="static member GetWellKnownCompatibleNamespaces : Uri -&gt; System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="name">Die Start-URI-Sequenz, für die die Liste der Namespaces zurückgegeben werden soll.</param>
        <summary>Gibt eine Liste der als Eingabenamespace kompatiblen Namespaces zurück.</summary>
        <returns>Eine Liste der kompatiblen Namespaces, die <paramref name="name" /> entsprechen, andernfalls <see langword="null" />, wenn keine kompatiblen Namespaces gefunden wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `name` Parameter funktioniert nur für vordefinierte [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] Namespaces.  Für alle anderen im angegebenen Namespace die `name` Parameter <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> zurück `null`, auch die Namespaces registriert wird, über die `knownNamespaces` Parameter der <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> Konstruktor.  
  
 Die Namespaces von vordefinierten der [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] umfassen Folgendes:  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=73824">XML-Markup-Compatibility-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName="IgnoredNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; IgnoredNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; IgnoredNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoredNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Uri ^&gt; ^ IgnoredNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoredNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste der Namespaces ab, die beim Laden des XML-Streams ignoriert wurden.</summary>
        <value>Die Liste der Namespaces, die beim Laden des XML-Streams ignoriert wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> Eigenschaft gibt nie `null`, aber die zurückgegebene Liste leer sein kann, wenn keine Namespaces ignoriert werden.  
  
 <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> hilft bei der XML-Markupkompatibilität, wenn die Anwendung Inhalte erstellt, die von verschiedenen Versionen der Anmerkung liest die [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].  Wenn eine ältere Anwendung erhält Anmerkung Inhalte erstellt, mit einer neueren Version von der [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> gibt eine Liste der XML-Namespaces für Elemente und Attribute, die nicht im älteren Framework bezeichnet.  Unbekannte XML-Elemente und Attribute, die neuere Namespaces zugeordnet werden ignoriert, wenn der Anmerkungsinhalt gelesen und durch die ältere Anwendung deserialisiert wird.  Weitere Informationen finden Sie unter den *XML-Markup-Compatibility-Spezifikation* unter [ http://go.microsoft.com/fwlink/?LinkId=73824 ](http://go.microsoft.com/fwlink/?LinkId=73824).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=73824">XML-Markup-Compatibility-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit" Usage="xmlStreamStore.OnStoreContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WellKnownNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; WellKnownNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Uri&gt; WellKnownNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WellKnownNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Uri ^&gt; ^ WellKnownNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WellKnownNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste aller in [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] vordefinierten Namespaces ab.</summary>
        <value>Die Liste der in [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] vordefinierten Namespaces.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Namespaces von vordefinierten der [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] umfassen Folgendes:  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=73824">XML-Markup-Compatibility-Spezifikation</related>
      </Docs>
    </Member>
  </Members>
</Type>