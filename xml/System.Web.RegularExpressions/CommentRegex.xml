<Type Name="CommentRegex" FullName="System.Web.RegularExpressions.CommentRegex">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b83286d9e0b4ff67ce4cae0ec770d3aa9e9a1a4f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69051761" /></Metadata><TypeSignature Language="C#" Value="public class CommentRegex : System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CommentRegex extends System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="DocId" Value="T:System.Web.RegularExpressions.CommentRegex" />
  <TypeSignature Language="VB.NET" Value="Public Class CommentRegex&#xA;Inherits Regex" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommentRegex : System::Text::RegularExpressions::Regex" />
  <TypeSignature Language="F#" Value="type CommentRegex = class&#xA;    inherit Regex" />
  <AssemblyInfo>
    <AssemblyName>System.Web.RegularExpressions</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Regex</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen regulären Ausdruck zum Analysieren eines ASP.NET-Kommentarblockes bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.RegularExpressions.CommentRegex> Klasse stellt einen kompilierten regulären Ausdruck zum Analysieren eines ASP.net Comment-Blocks ( `<%--` ... `--%>`) angezeigt wird.  
  
> [!NOTE]
>  Die <xref:System.Web.RegularExpressions> Klassen werden intern vom .NET Framework zum Analysieren von ASP.NET Seiten verwendet.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.RegularExpressions.CommentRegex" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommentRegex ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.CommentRegex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommentRegex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.RegularExpressions.CommentRegex" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor instanziiert einen kompilierten regulären Ausdruck, dessen vordefiniertes Muster eines regulären Ausdrucks ist `\G<%--(([^-]*)-)*?-%>` .  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommentRegex (TimeSpan A_1);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype System.TimeSpan A_1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.CommentRegex.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (A_1 As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommentRegex(TimeSpan A_1);" />
      <MemberSignature Language="F#" Value="new System.Web.RegularExpressions.CommentRegex : TimeSpan -&gt; System.Web.RegularExpressions.CommentRegex" Usage="new System.Web.RegularExpressions.CommentRegex A_1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="A_1" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="A_1">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, wenn entsprechende Vorgänge kein Timeout haben sollten.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.RegularExpressions.CommentRegex" />-Klasse mit dem angegebenen Timeoutwert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- `A_1` Parameter stellt das maximale Zeitintervall dar, in dem die Engine für reguläre Ausdrücke versucht, eine Entsprechung zu finden, bevor ein Timeout für den Vorgang auftritt und eine- <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Ausnahme ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
