<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee5f374a0d50488fa91d62e498174f6f1cb1f680" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46658644" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dient als Basisklasse für alle Datenquellenansichtsklassen, die die Funktionen von Datenquellensteuerelementen festlegen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt eine Architektur zur Datenbindung, die Webserver-Steuerelemente zum Binden an Daten auf konsistente Weise ermöglicht. Webserver-Steuerelemente, die an Daten gebunden werden, als von datengebundenen Steuerelementen, und die Klassen, die ermöglichen, dass die Datenquellen-Steuerelemente sind als Bindung bezeichnet bezeichnet. Datenquellensteuerelemente können jede beliebige Datenquelle darstellen: eine relationale Datenbank, eine Datei, einen Stream, ein Geschäftsobjekt usw. Datenquelle steuert die Darstellung der Daten auf konsistente Weise für datengebundene Steuerelemente, unabhängig von der Quelle oder das Format der zugrunde liegenden Daten.  
  
 Verwenden Sie die Datenquellen-Steuerelemente, die bereitgestellt werden, mit ASP.NET einschließlich <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, und <xref:System.Web.UI.WebControls.XmlDataSource>, um die meisten Aufgaben der Webentwicklung durchführen. Verwenden Sie die Basis <xref:System.Web.UI.DataSourceControl> und <xref:System.Web.UI.DataSourceView> quellcodeverwaltung für Klassen, wenn Sie Ihren eigenen benutzerdefinierten Daten implementieren möchten.  
  
 Stellen Sie sich ein Datenquellen-Steuerelement als Kombination der <xref:System.Web.UI.IDataSource> Objekt und der zugehörigen Liste von Datenquellensichten genannt. Jede Liste der Daten wird dargestellt, indem eine <xref:System.Web.UI.DataSourceView> Objekt. Die <xref:System.Web.UI.DataSourceView> Klasse ist die Basisklasse für alle von Datenquellensichten oder Listen mit Daten, Datenquellen-Steuerelementen zugeordnet. Datenquellensichten definieren, das die Funktionen des Datenquellen-Steuerelement. Da die zugrunde liegenden Datenspeicher ein oder mehrere Listen mit Daten enthält, ist ein Datenquellen-Steuerelement immer einen oder mehrere benannte Datenquellensichten zugeordnet werden. Das Datenquellen-Steuerelement verwendet die <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> Methode, um das Auflisten der Daten Datenquellensichten, die derzeit mit dem Datenquellen-Steuerelement zugeordnet sind und die <xref:System.Web.UI.DataSourceControl.GetView%2A> Methode, um eine Instanz einer bestimmten Ansicht anhand des Namens abzurufen.  
  
 Alle <xref:System.Web.UI.DataSourceView> Objekte unterstützen das Abrufen von Daten aus der zugrunde liegenden Datenquelle mithilfe der <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Methode. Alle Ansichten optional unterstützen eine Reihe grundlegende Vorgänge, einschließlich Operationen wie z. B. <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, und <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Ein vom datengebundenen Steuerelement erkennen, das die Funktionen des ein Datenquellensteuerelement durch Abrufen einer zugeordneten Datenquelle anzeigen, mit der <xref:System.Web.UI.DataSourceControl.GetView%2A> und <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> Methoden und durch Abfragen der Sicht zur Entwurfszeit oder zur Laufzeit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erweitern der <xref:System.Web.UI.DataSourceView> Klasse, um eine stark typisierte Ansicht-Klasse für ein Datenquellen-Steuerelement zu erstellen. Die `CsVDataSourceView` -Klasse definiert, das die Funktionen des die `CsvDataSource` Datenquellensteuerelement und stellt eine Implementierung für datengebundene Steuerelemente in durch Trennzeichen getrennte (.csv)-Dateien gespeicherte Daten verwenden. Weitere Informationen zu den `CsvDataSource` Datenquellen-Steuerelement, finden Sie unter den <xref:System.Web.UI.DataSourceControl> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Das Datenquellensteuerelement, dem <see cref="T:System.Web.UI.DataSourceView" /> zugeordnet ist.</param>
        <param name="viewName">Der Name des <see cref="T:System.Web.UI.DataSourceView" />-Objekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataSourceView" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> ist <see langword="null" />.  
  
\- oder – 
 <paramref name="viewName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanDelete%2A> -Eigenschaft gibt nicht nur eine Funktion von der Datenquellen-Steuerelement, sondern auch, ob es aktuell geeignet ist, einen Vorgang auszuführen. Beispielsweise, obwohl eine Datenquellenansicht unterstützt die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Vorgang im Allgemeinen gilt: Wenn eine erforderliche Eigenschaft oder einige andere Daten nicht festgelegt ist, die <xref:System.Web.UI.DataSourceView.CanDelete%2A> -Eigenschaft gibt `false`, wie Sie ein Delete-Vorgang fehlschlagen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.DataSourceView.CanDelete%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> -Methode in einer Klasse, die erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <summary>Bestimmt, ob der angegebene Befehl ausgeführt werden kann.</summary>
        <returns><see langword="true" />, wenn der Befehl ausgeführt werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanInsert%2A> -Eigenschaft gibt nicht nur eine Funktion von der Datenquellen-Steuerelement, sondern auch, ob es aktuell geeignet ist, einen Vorgang auszuführen. Beispielsweise, obwohl ein Datenquellen-Steuerelement unterstützt die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> -Operation, wenn ein erforderliches einfügen (Befehl) oder andere Daten nicht festgelegt ist, die <xref:System.Web.UI.DataSourceView.CanInsert%2A> -Eigenschaft gibt `false`, wie ein Insert-Vorgang fehlschlagen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.DataSourceView.CanInsert%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> -Methode in einer Klasse, die erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, Paging durch die Daten unterstützt, die von der <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufen wurden.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein vom datengebundenen Steuerelement kann Paging anfordern, durch das Hinzufügen der <xref:System.Web.UI.DataSourceCapabilities.Page> Feld der <xref:System.Web.UI.DataSourceSelectArguments> , übergeben die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Methode. Wenn ein vom datengebundenen Steuerelement, darunter Paging anfordert, aber die <xref:System.Web.UI.DataSourceView.CanPage%2A> -Eigenschaft gibt `false`, löst eine Ausnahme aus die Datenquellensicht an.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, das Abrufen der Gesamtanzahl der Datenzeilen (anstelle der Daten) unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein vom datengebundenen Steuerelement kann keine Gesamtzeilenanzahl anfordern, durch das Hinzufügen der <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> Feld der <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> , übergeben die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Methode. Wenn ein vom datengebundenen Steuerelement keine Gesamtzeilenanzahl anfordert, aber die <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> -Eigenschaft gibt `false`, löst eine Ausnahme aus die Datenquellensicht an.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, eine sortierte Ansicht der zugrunde liegenden Datenquelle unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Standardimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein vom datengebundenen Steuerelement kann durch Hinzufügen von Sortierung anfordern, die <xref:System.Web.UI.DataSourceCapabilities.Sort> Feld der <xref:System.Web.UI.DataSourceSelectArguments> , übergeben die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Methode. Wenn ein datengebundenes Sortierung anfordert Steuerelement, aber die <xref:System.Web.UI.DataSourceView.CanSort%2A> -Eigenschaft gibt `false`, löst eine Ausnahme aus die Datenquellensicht an.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.DataSourceView.CanSort%2A> Eigenschaft in einer Klasse, die erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Standardimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanUpdate%2A> -Eigenschaft gibt nicht nur eine Funktion von der Datenquellen-Steuerelement, sondern auch, ob es aktuell geeignet ist, einen Vorgang auszuführen. Obwohl z. B. ein vom datengebundenen Steuerelement unterstützt die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> -Operation, wenn ein erforderliches Update-Befehl oder andere Daten nicht festgelegt ist, die <xref:System.Web.UI.DataSourceView.CanUpdate%2A> -Eigenschaft gibt `false`, wie Sie ein Update-Vorgang fehlschlagen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.DataSourceView.CanUpdate%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> -Methode in einer Klasse, die erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Datenquellenansicht geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Änderung in der Datenquellensicht ist möglicherweise aufgrund einer Änderung in den Werten der Eigenschaften oder auf eine Änderung der Daten durch einen Datenvorgang ausgeführt wird, indem Sie die Datenquellensicht an.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang gelöscht werden sollen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Löschvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Delete%2A> Methode ist die Schnittstelle für alle Datenquellen-Ansichtsobjekte asynchronen Löschvorgang. Die <xref:System.Web.UI.DataSourceView.Delete%2A> Methodenaufrufe der <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Methode, die mit einer `keys` und `oldValues` Parameterwerte. Die `callback` Parameter ist ein Delegat, übergeben ein vom datengebundenen Steuerelement mit der Datenquelle, anzeigen, die verwendet wird, benachrichtigt das datengebundene Steuerelement, wenn die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Vorgang wurde abgeschlossen. Die Methode verwendet die Parameter von der <xref:System.Web.UI.DataSourceViewOperationCallback> Delegat, der die Anzahl der betroffenen Datensätze und zurück <xref:System.Exception> Ausnahme, die ausgelöst wird, indem die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Ereignishandlerdelegaten für die Datenquellenansicht ab.</summary>
        <value>Die Liste der Ereignishandlerdelegaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist vom Typ <xref:System.ComponentModel.EventHandlerList>, die Algorithmus eine lineare Suche nach Einträgen in der Liste von Delegaten verwendet. Ein lineare Suche-Algorithmus ist ineffizient, bei der Arbeit mit einer großen Anzahl von Einträgen. Aus diesem Grund, wenn Sie eine umfangreiche Liste haben, suchen, dass Einträge mit dieser Eigenschaft langsam ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt den angegebenen Befehl aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <param name="keys">Ein Wörterbuch von Objekt- oder Zeilenschlüsseln, mit denen gearbeitet werden soll.</param>
        <param name="values">Ein Wörterbuch mit Name-Wert-Paaren, die Datenelemente und deren Werte darstellen.</param>
        <summary>Führt den angegebenen Befehl aus.</summary>
        <returns>Die Anzahl der vom Vorgang betroffenen Elemente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <param name="keys">Ein Wörterbuch von Objekt- oder Zeilenschlüsseln, mit denen gearbeitet werden soll.</param>
        <param name="values">Ein Wörterbuch mit Name-Wert-Paaren, die Datenelemente und deren Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Objekt.</param>
        <summary>Führt den angegebenen Befehl aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt keinen Wert zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang gelöscht werden sollen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <summary>Führt einen Löschvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die aus dem zugrunde liegenden Datenspeicher gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente können bestimmen, ob die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Vorgang wird durch ein Datenquellen-Steuerelement unterstützt, durch Abrufen der <xref:System.Web.UI.DataSourceView> -Objekt unter Verwendung der <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> -Methode, und Überprüfen der <xref:System.Web.UI.DataSourceView.CanDelete%2A> Eigenschaft.  
  
 Die `keys` Parameter repräsentiert die Objekt- oder Zeilenschlüsseln, die Daten gelöscht. Für Datenquellen, relationale Daten, z. B. darstellen, die <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement, das `keys` Parameter ist eine Sammlung von Datenbank-Primärschlüssel. In anderen Szenarien die `keys` -Parameter ist eine Auflistung von Name/Wert-Paare und wird verwendet, um eine Liste der Daten zu filtern. Alle Daten, die Übereinstimmung von Name/Wert-Paar werden gelöscht.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.DataSourceView> Standardimplementierung der Klasse wird zum Auslösen einer <xref:System.NotSupportedException> Ausnahme. Wenn Sie erweitern die <xref:System.Web.UI.DataSourceView> Klasse außer Kraft, indem die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Methode, wenn Ihre Klasse löschen aus dem zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, erweitert die <xref:System.Web.UI.DataSourceView> -Klasse überschreiben die <xref:System.Web.UI.DataSourceView.CanDelete%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Methode. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die bei einem Einfügevorgang verwendet wurden.</param>
        <summary>Führt einen Einfügevorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die in den zugrunde liegenden Datenspeicher eingefügt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente können bestimmen, ob die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Vorgang wird durch ein Datenquellen-Steuerelement unterstützt, durch Abrufen der <xref:System.Web.UI.DataSourceView> -Objekt unter Verwendung der <xref:System.Web.UI.DataSourceControl.GetView%2A> -Methode, und Überprüfen der <xref:System.Web.UI.DataSourceView.CanInsert%2A> Eigenschaft.  
  
 Die `values` Parameter ist ein Satz von Name/Wert-Paaren, die Datenspalten oder Felder und entsprechenden Werten eingefügt darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.DataSourceView> Standardimplementierung der Klasse wird zum Auslösen einer <xref:System.NotSupportedException> Ausnahme. Wenn Sie erweitern die <xref:System.Web.UI.DataSourceView> Klasse außer Kraft, indem die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Methode, wenn Ihre Klasse einfügen in die zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, erweitert die <xref:System.Web.UI.DataSourceView> -Klasse überschreiben die <xref:System.Web.UI.DataSourceView.CanInsert%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Methode. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das zum Anfordern von Datenvorgängen verwendet wird, die über allgemeine Datenabrufvorgänge hinausgehen.</param>
        <summary>Ruft eine Liste der Daten aus dem zugrunde liegenden Datenspeicher ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste der Daten aus dem zugrunde liegenden Datenspeicher.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> aufgerufen, um Daten aus dem zugrunde liegenden Datenspeicher abrufen und zurückgeben als ein <xref:System.Collections.IEnumerable> Objekt. Alle Datenquellen-Steuerelemente unterstützen Abrufen von Daten aus ihren zugrunde liegenden Datenspeicher, auch wenn andere Vorgänge wie das Einfügen und Sortieren von nicht unterstützt werden. Da ein vom datengebundenen Steuerelement eine Liste der Daten zu einem beliebigen Zeitpunkt als Ergebnis des anfordern kann eine <xref:System.Web.UI.IDataSource.DataSourceChanged> Ereignis oder eine <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> -Methodenaufruf, das Abrufen von Daten bei Bedarf ausgeführt werden muss.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> -Methode in einer Klasse, die erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Die `CsvDataSourceView` öffnet eine durch Trennzeichen getrennte (.csv)-Datei, analysiert er Zeile für Zeile durch und erstellt eine <xref:System.Data.DataTable> Objekt und ein <xref:System.Data.DataView> Objekt zum Speichern der Daten im Arbeitsspeicher. Ein Sortierungsausdruck wird schließlich angewendet, wenn eine vom bereitgestellt wird die <xref:System.Web.UI.DataSourceSelectArguments> -Objekt, und die <xref:System.Data.DataView> Objekt wird zurückgegeben, als ein <xref:System.Collections.IEnumerable> Instanz. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den Aktualisierungsvorgang aktualisiert werden sollen.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre neuen Werte darstellen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <summary>Führt einen Aktualisierungsvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die im zugrunde liegenden Datenspeicher aktualisiert wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente können bestimmen, ob die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Vorgang wird durch ein Datenquellen-Steuerelement unterstützt, mit der <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> Methode zum Abrufen der <xref:System.Web.UI.DataSourceView> -Objekt und die Überprüfung des Werts der der <xref:System.Web.UI.DataSourceView.CanUpdate%2A> Eigenschaft.  
  
 Die `keys` Parameter repräsentiert die Objekt- oder Zeilenschlüsseln, der Daten zu aktualisieren. Für Datenquellen, relationale Daten, z. B. darstellen, die <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement, das `keys` Parameter ist eine Sammlung von Datenbank-Primärschlüssel. In anderen Szenarien die `keys` -Parameter ist eine Auflistung von Name/Wert-Paare und wird verwendet, um eine Liste der Daten zu filtern. Alle Daten, die Übereinstimmung von Name/Wert-Paar werden aktualisiert, mit den Werten finden Sie in der `values` Parameter, der einen Satz von Name/Wert-Paaren, die neuen Werte für vorhandene Felder oder Spalten darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.DataSourceView> Standardimplementierung der Klasse wird zum Auslösen einer <xref:System.NotSupportedException> Ausnahme. Wenn Sie erweitern die <xref:System.Web.UI.DataSourceView> Klasse außer Kraft, indem die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Methode, wenn Ihre Klasse aktualisieren von Daten in der zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, erweitert die <xref:System.Web.UI.DataSourceView> -Klasse überschreiben die <xref:System.Web.UI.DataSourceView.CanUpdate%2A> Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Methode. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceView> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die bei einem Einfügevorgang verwendet wurden.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Einfügevorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Insert%2A> Methode ist die Schnittstelle für alle Datenquellen-Ansichtsobjekte asynchrone Datenaktualisierungsvorgänge. Die <xref:System.Web.UI.DataSourceView.Insert%2A> Methodenaufrufe der <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Methode, die mit einer `values` angegeben. Die `callback` Parameter ist ein Delegat, übergeben ein vom datengebundenen Steuerelement mit der Datenquelle, anzeigen, die verwendet wird, benachrichtigt das datengebundene Steuerelement, wenn die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Vorgang wurde abgeschlossen. Die Methode verwendet die Parameter von der <xref:System.Web.UI.DataSourceViewOperationCallback> Delegat, der die Anzahl der betroffenen Datensätze und zurück <xref:System.Exception> Ausnahme, die ausgelöst wird, indem die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Methodenaufruf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenquellenansicht ab.</summary>
        <value>Der Name von <see cref="T:System.Web.UI.DataSourceView" />, sofern vorhanden. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> -Methode benachrichtigt einem datengebundenen Steuerelements, dass die zugrunde liegenden Datenquelle geändert hat und das Steuerelement binden soll, sowie alle erforderlichen Arbeiten durchführen. In der Regel die <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Methode wird aufgerufen, wenn eine Eigenschaft der Datenquellensicht geändert wurde.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Einer der Werte von <see cref="T:System.Web.UI.DataSourceCapabilities" />, die mit den Funktionen verglichen werden, die die Ansicht unterstützt.</param>
        <summary>Durch die <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />-Methode aufgerufen, um die für einen <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Vorgang erforderlichen Funktionen mit denen zu vergleichen, die die Ansicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> Methode wird von der Datenquellensicht verwendet, die einzelnen Funktionen, die von einem datengebundenen Steuerelement, dargestellt durch angefordert untersucht die <xref:System.Web.UI.DataSourceSelectArguments> , übergeben die <xref:System.Web.UI.DataSourceView.Select%2A> -Methode, und vergleichen sie die Funktionen unterstützt, durch die Daten Datenquellensicht an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Datenquellenansicht unterstützt die angegebene Datenquellenfunktion nicht</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das zum Anfordern von Datenvorgängen verwendet wird, die über allgemeine Datenabrufvorgänge hinausgehen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewSelectCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Ruft asynchron eine Liste der Daten aus dem zugrunde liegenden Datenspeicher ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Select%2A> Methode ist die Schnittstelle für alle Datenquellen-Ansichtsobjekte asynchronen Abruf. Die <xref:System.Web.UI.DataSourceView.Select%2A> Methodenaufrufe der <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Methode auf und übergibt alle <xref:System.Web.UI.DataSourceSelectArguments> angegeben. Die `callback` Parameter ist ein Delegat, übergeben ein vom datengebundenen Steuerelement mit der Datenquelle, anzeigen, die verwendet wird, benachrichtigt das datengebundene Steuerelement, wenn die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Vorgang wurde abgeschlossen. Vom zurückgegebenen Daten die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Aufruf wird zurückgegeben, in den-Parameter von der <xref:System.Web.UI.DataSourceViewSelectCallback> delegieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den Aktualisierungsvorgang aktualisiert werden sollen.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre neuen Werte darstellen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Aktualisierungsvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Update%2A> Methode ist die Schnittstelle für alle Datenquellen-Ansichtsobjekte asynchrone Datenänderungsvorgänge. Die <xref:System.Web.UI.DataSourceView.Update%2A> Methodenaufrufe der <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Methode, die mit einer `keys`, `values`, und `oldValues` Parameterwerte. Die `callback` Parameter ist ein Delegat, übergeben ein vom datengebundenen Steuerelement mit der Datenquelle, anzeigen, die verwendet wird, benachrichtigt das datengebundene Steuerelement, wenn die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Vorgang wurde abgeschlossen. Die Methode verwendet die Parameter von der <xref:System.Web.UI.DataSourceViewOperationCallback> Delegat, der die Anzahl der betroffenen Datensätze und zurückzugeben <xref:System.Exception> Ausnahme, die ausgelöst wird, indem Sie die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> aufrufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>