<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0742d3e2f31ce37fd6be961154d21830227bad2" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978421" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dient als Basisklasse für alle Datenquellenansichtsklassen, die die Funktionen von Datenquellensteuerelementen festlegen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt eine Daten Bindungs Architektur, mit der Webserver Steuerelemente einheitlich an Daten gebunden werden können. Webserver Steuerelemente, die an Daten gebunden werden, werden als Daten gebundene Steuerelemente bezeichnet, und die Klassen, die diese Bindung vereinfachen, werden als Datenquellen-Steuerelemente bezeichnet. Datenquellensteuerelemente können jede beliebige Datenquelle darstellen: eine relationale Datenbank, eine Datei, einen Stream, ein Geschäftsobjekt usw. Datenquellen-Steuerelemente präsentieren Daten auf konsistente Weise für Daten gebundene Steuerelemente, unabhängig von der Quelle oder dem Format der zugrunde liegenden Daten.  
  
 Sie verwenden die Datenquellen Steuerelemente, die mit ASP.NET bereitgestellt werden, einschließlich <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>und <xref:System.Web.UI.WebControls.XmlDataSource>, um die meisten Webentwicklungs Aufgaben auszuführen. Sie verwenden die Basis <xref:System.Web.UI.DataSourceControl>-und <xref:System.Web.UI.DataSourceView> Klassen, wenn Sie ein eigenes benutzerdefiniertes Datenquellen-Steuerelement implementieren möchten.  
  
 Sie können sich ein Datenquellen-Steuerelement als Kombination aus dem <xref:System.Web.UI.IDataSource>-Objekt und den zugehörigen Daten Listen vorstellen, die als Datenquellen Sichten bezeichnet werden. Jede Datenliste wird durch ein <xref:System.Web.UI.DataSourceView> Objekt dargestellt. Die <xref:System.Web.UI.DataSourceView>-Klasse ist die Basisklasse für alle Datenquellen Sichten oder Listen von Daten, die Datenquellen Steuerelementen zugeordnet sind. Datenquellen Sichten definieren die Funktionen eines Datenquellen-Steuer Elements. Da der zugrunde liegende Datenspeicher eine oder mehrere Listen mit Daten enthält, ist ein Datenquellen-Steuerelement immer einer oder mehreren benannten Datenquellen Sichten zugeordnet. Das Datenquellen-Steuerelement verwendet die <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>-Methode, um die Datenquellen Sichten aufzulisten, die derzeit dem Datenquellen-Steuerelement zugeordnet sind, und die <xref:System.Web.UI.DataSourceControl.GetView%2A>-Methode, um eine bestimmte Instanz der Datenquellen Sicht anhand des Namens abzurufen.  
  
 Alle <xref:System.Web.UI.DataSourceView>-Objekte unterstützen das Abrufen von Daten aus der zugrunde liegenden Datenquelle mithilfe der <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode. Alle Sichten unterstützen optional einen grundlegenden Satz von Vorgängen, einschließlich Operationen wie <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>und <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Ein Daten gebundenes Steuerelement kann die Funktionen eines Datenquellen-Steuer Elements ermitteln, indem eine zugeordnete Datenquellen Sicht mithilfe der Methoden <xref:System.Web.UI.DataSourceControl.GetView%2A> und <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> abgerufen wird und die Sicht zur Entwurfszeit oder zur Laufzeit abgefragt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView>-Klasse erweitert wird, um eine stark typisierte Ansichts Klasse für ein Datenquellen-Steuerelement zu erstellen. Die `CsVDataSourceView`-Klasse definiert die Funktionen des `CsvDataSource` Datenquellen-Steuer Elements und stellt eine Implementierung für Daten gebundene Steuerelemente bereit, um Daten zu verwenden, die in CSV-Dateien (Comma-Separated Value) gespeichert sind. Weitere Informationen zum `CsvDataSource` Datenquellen-Steuerelement finden Sie in der <xref:System.Web.UI.DataSourceControl>-Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Das Datenquellensteuerelement, dem <see cref="T:System.Web.UI.DataSourceView" /> zugeordnet ist.</param>
        <param name="viewName">Der Name des <see cref="T:System.Web.UI.DataSourceView" />-Objekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataSourceView" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> ist <see langword="null" />  
  
- oder - 
 <paramref name="viewName" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanDelete%2A>-Eigenschaft reflektiert nicht nur die Funktion des Datenquellen-Steuer Elements, sondern auch, ob Sie sich derzeit für die Ausführung eines Vorgangs eignet. Wenn z. b. eine Datenquellen Sicht den <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Vorgang im Allgemeinen unterstützt, wenn eine erforderliche Eigenschaft oder einige andere Daten nicht festgelegt sind, gibt die <xref:System.Web.UI.DataSourceView.CanDelete%2A>-Eigenschaft `false`zurück, da ein Löschvorgang fehlschlagen würde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView.CanDelete%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode in einer Klasse überschrieben werden, die die <xref:System.Web.UI.DataSourceView>-Klasse erweitert. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <summary>Bestimmt, ob der angegebene Befehl ausgeführt werden kann.</summary>
        <returns><see langword="true" />, wenn der Befehl ausgeführt werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanInsert%2A>-Eigenschaft reflektiert nicht nur die Funktion des Datenquellen-Steuer Elements, sondern auch, ob Sie sich derzeit für die Ausführung eines Vorgangs eignet. Wenn z. b. ein Datenquellen-Steuerelement den <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Vorgang unterstützt und ein erforderlicher INSERT-Befehl oder einige andere Daten nicht festgelegt ist, gibt die <xref:System.Web.UI.DataSourceView.CanInsert%2A>-Eigenschaft `false`zurück, da ein Einfügevorgang fehlschlagen würde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView.CanInsert%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode in einer Klasse überschrieben werden, die die <xref:System.Web.UI.DataSourceView>-Klasse erweitert. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, Paging durch die Daten unterstützt, die von der <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufen wurden.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Daten gebundenes Steuerelement kann Paging anfordern, indem das <xref:System.Web.UI.DataSourceCapabilities.Page>-Feld zum <xref:System.Web.UI.DataSourceSelectArguments>-Objekt hinzugefügt wird, das an die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode übergeben wird. Wenn ein Daten gebundenes Steuerelement Paging anfordert, aber die <xref:System.Web.UI.DataSourceView.CanPage%2A>-Eigenschaft `false`zurückgibt, löst die Datenquellen Sicht eine-Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, das Abrufen der Gesamtanzahl der Datenzeilen (anstelle der Daten) unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Basisklassenimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Daten gebundenes Steuerelement kann eine Gesamt Zeilen Anzahl durch Hinzufügen des <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> Felds zum <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType>-Objekt anfordern, das an die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode übermittelt wird. Wenn ein Daten gebundenes Steuerelement eine Gesamt Zeilen Anzahl anfordert, aber die <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A>-Eigenschaft `false`zurückgibt, löst die Datenquellen Sicht eine-Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, eine sortierte Ansicht der zugrunde liegenden Datenquelle unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Standardimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Daten gebundenes Steuerelement kann eine Sortierung anfordern, indem das <xref:System.Web.UI.DataSourceCapabilities.Sort>-Feld zum <xref:System.Web.UI.DataSourceSelectArguments> Objekt hinzugefügt wird, das an die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode geleitet wird. Wenn ein Daten gebundenes Steuerelement eine Sortierung anfordert, die <xref:System.Web.UI.DataSourceView.CanSort%2A>-Eigenschaft jedoch `false`zurückgibt, löst die Datenquellen Sicht eine-Ausnahme aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView.CanSort%2A>-Eigenschaft in einer Klasse überschrieben wird, die die <xref:System.Web.UI.DataSourceView>-Klasse erweitert. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.DataSourceControl" />-Objekt zugeordnet ist, den <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Die Standardimplementierung gibt <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.CanUpdate%2A>-Eigenschaft reflektiert nicht nur die Funktion des Datenquellen-Steuer Elements, sondern auch, ob Sie sich derzeit für die Ausführung eines Vorgangs eignet. Wenn z. b. ein Daten gebundenes Steuerelement den <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Vorgang unterstützt, wenn ein erforderlicher Update-Befehl oder andere Daten nicht festgelegt sind, gibt die <xref:System.Web.UI.DataSourceView.CanUpdate%2A>-Eigenschaft `false`zurück, da ein Update Vorgang fehlschlagen würde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView.CanUpdate%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>-Methode in einer Klasse überschrieben werden, die die <xref:System.Web.UI.DataSourceView>-Klasse erweitert. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Datenquellenansicht geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Änderung an der Datenquellen Sicht kann auf eine Änderung der Werte der Eigenschaften oder auf eine Änderung der Daten aufgrund eines von der Datenquellen Sicht ausgeführten Daten Vorgangs zurückzuführen sein.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang gelöscht werden sollen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Löschvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Delete%2A>-Methode ist die asynchrone Schnittstelle zum Löschen von Daten für alle Datenquellen Sicht-Objekte. Die <xref:System.Web.UI.DataSourceView.Delete%2A>-Methode ruft die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode unter Verwendung der angegebenen `keys` und `oldValues` Parameterwerte auf. Der `callback`-Parameter ist ein Delegat, der von einem Daten gebundenen Steuerelement an die Datenquellen Sicht übergeben wird. dieses wird verwendet, um das Daten gebundene Steuerelement zu benachrichtigen, wenn der <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Vorgang abgeschlossen wurde. Die-Methode verwendet die Parameter des <xref:System.Web.UI.DataSourceViewOperationCallback> Delegaten, um die Anzahl der betroffenen Datensätze und alle <xref:System.Exception> Ausnahmen zurückzugeben, die von der <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode ausgelöst werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Ereignishandlerdelegaten für die Datenquellenansicht ab.</summary>
        <value>Die Liste der Ereignishandlerdelegaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft hat den Typ <xref:System.ComponentModel.EventHandlerList>, der einen linearen Suchalgorithmus verwendet, um Einträge in der Liste der Delegaten zu suchen. Ein linearer Suchalgorithmus ist ineffizient, wenn eine große Anzahl von Einträgen funktioniert. Wenn Sie also über eine große Liste verfügen, ist die Suche nach Einträgen mit dieser Eigenschaft langsam.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt den angegebenen Befehl aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <param name="keys">Ein Wörterbuch von Objekt- oder Zeilenschlüsseln, mit denen gearbeitet werden soll.</param>
        <param name="values">Ein Wörterbuch mit Name-Wert-Paaren, die Datenelemente und deren Werte darstellen.</param>
        <summary>Führt den angegebenen Befehl aus.</summary>
        <returns>Die Anzahl der vom Vorgang betroffenen Elemente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <param name="keys">Ein Wörterbuch von Objekt- oder Zeilenschlüsseln, mit denen gearbeitet werden soll.</param>
        <param name="values">Ein Wörterbuch mit Name-Wert-Paaren, die Datenelemente und deren Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Objekt.</param>
        <summary>Führt den angegebenen Befehl aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt keinen Wert zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang gelöscht werden sollen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <summary>Führt einen Löschvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die aus dem zugrunde liegenden Datenspeicher gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten gebundene Steuerelemente können bestimmen, ob der <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Vorgang von einem Datenquellen-Steuerelement unterstützt wird, indem das <xref:System.Web.UI.DataSourceView>-Objekt mithilfe der <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>-Methode abgerufen wird und die <xref:System.Web.UI.DataSourceView.CanDelete%2A>-Eigenschaft überprüft wird.  
  
 Der `keys`-Parameter stellt die Objekt-oder Zeilen Schlüssel der zu löschenden Daten dar. Bei Datenquellen, die relationale Daten darstellen, wie z. b. das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement, ist der `keys`-Parameter eine Auflistung von Datenbank-primär Schlüsseln. In anderen Szenarien ist der `keys`-Parameter eine Auflistung von Name-Wert-Paaren und wird verwendet, um eine Liste der Daten zu filtern. Alle Daten, die einem Name-Wert-Paar entsprechen, werden gelöscht.  
  
> [!NOTE]
>  Die Standard Implementierung der <xref:System.Web.UI.DataSourceView> Klasse besteht darin, eine <xref:System.NotSupportedException> Ausnahme auszulösen. Wenn Sie die <xref:System.Web.UI.DataSourceView>-Klasse erweitern, überschreiben Sie die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode, wenn Ihre Klasse das Löschen aus dem zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die die <xref:System.Web.UI.DataSourceView> Klasse erweitert, die <xref:System.Web.UI.DataSourceView.CanDelete%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode überschreiben kann. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die bei einem Einfügevorgang verwendet wurden.</param>
        <summary>Führt einen Einfügevorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die in den zugrunde liegenden Datenspeicher eingefügt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten gebundene Steuerelemente können bestimmen, ob der <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Vorgang von einem Datenquellen-Steuerelement unterstützt wird, indem das <xref:System.Web.UI.DataSourceView>-Objekt mithilfe der <xref:System.Web.UI.DataSourceControl.GetView%2A>-Methode abgerufen wird und die <xref:System.Web.UI.DataSourceView.CanInsert%2A>-Eigenschaft überprüft wird.  
  
 Der `values`-Parameter ist ein Satz von Name-Wert-Paaren, die Datenspalten oder Felder und entsprechende einzufügende Werte darstellen.  
  
> [!NOTE]
>  Die Standard Implementierung der <xref:System.Web.UI.DataSourceView> Klasse besteht darin, eine <xref:System.NotSupportedException> Ausnahme auszulösen. Wenn Sie die <xref:System.Web.UI.DataSourceView> Klasse erweitern, überschreiben Sie die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode, wenn die Klasse das Einfügen in den zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die die <xref:System.Web.UI.DataSourceView> Klasse erweitert, die <xref:System.Web.UI.DataSourceView.CanInsert%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode überschreiben kann. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das zum Anfordern von Datenvorgängen verwendet wird, die über allgemeine Datenabrufvorgänge hinausgehen.</param>
        <summary>Ruft eine Liste der Daten aus dem zugrunde liegenden Datenspeicher ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste der Daten aus dem zugrunde liegenden Datenspeicher.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode wird aufgerufen, um Daten aus dem zugrunde liegenden Datenspeicher abzurufen und als <xref:System.Collections.IEnumerable>-Objekt zurückzugeben. Alle Datenquellen-Steuerelemente unterstützen das Abrufen von Daten aus dem zugrunde liegenden Datenspeicher, auch wenn andere Vorgänge wie das Einfügen und Sortieren nicht unterstützt werden. Da ein Daten gebundenes Steuerelement eine Liste der Daten zu jedem beliebigen Zeitpunkt als Ergebnis eines <xref:System.Web.UI.IDataSource.DataSourceChanged> Ereignisses oder eines <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methoden Aufrufs anfordern kann, muss der Datenabruf bei Bedarf ausgeführt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode in einer Klasse überschrieben wird, die die <xref:System.Web.UI.DataSourceView>-Klasse erweitert. Das `CsvDataSourceView` öffnet eine CSV-Datei (Comma-Separated Value), analysiert sie zeilenweise und erstellt ein <xref:System.Data.DataTable> Objekt und ein <xref:System.Data.DataView> Objekt, um die Daten im Arbeitsspeicher zu speichern. Zum Schluss wird ein Sortierungs Ausdruck angewendet, wenn eine vom <xref:System.Web.UI.DataSourceSelectArguments> Objekt bereitgestellt wird, und das <xref:System.Data.DataView> Objekt wird als <xref:System.Collections.IEnumerable>-Instanz zurückgegeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den Aktualisierungsvorgang aktualisiert werden sollen.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre neuen Werte darstellen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <summary>Führt einen Aktualisierungsvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <returns>Die Anzahl von Elementen, die im zugrunde liegenden Datenspeicher aktualisiert wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten gebundene Steuerelemente können bestimmen, ob der <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Vorgang von einem Datenquellen-Steuerelement unterstützt wird, indem die <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>-Methode verwendet wird, um das <xref:System.Web.UI.DataSourceView>-Objekt abzurufen und den Wert der <xref:System.Web.UI.DataSourceView.CanUpdate%2A>-Eigenschaft zu überprüfen.  
  
 Der `keys`-Parameter stellt die Objekt-oder Zeilen Schlüssel der zu aktualisierenden Daten dar. Bei Datenquellen, die relationale Daten darstellen, wie z. b. das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement, ist der `keys`-Parameter eine Auflistung von Datenbank-primär Schlüsseln. In anderen Szenarien ist der `keys`-Parameter eine Auflistung von Name-Wert-Paaren und wird verwendet, um eine Liste der Daten zu filtern. Alle Daten, die mit einem Name-Wert-Paar übereinstimmen, werden mit den Werten im `values`-Parameter aktualisiert. dabei handelt es sich um einen Satz von Name-Wert-Paaren, die neue Werte für vorhandene Felder oder Spalten darstellen.  
  
> [!NOTE]
>  Die Standard Implementierung der <xref:System.Web.UI.DataSourceView> Klasse besteht darin, eine <xref:System.NotSupportedException> Ausnahme auszulösen. Wenn Sie die <xref:System.Web.UI.DataSourceView>-Klasse erweitern, überschreiben Sie die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>-Methode, wenn Ihre Klasse das Aktualisieren von Daten im zugrunde liegenden Datenspeicher unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die die <xref:System.Web.UI.DataSourceView> Klasse erweitert, die <xref:System.Web.UI.DataSourceView.CanUpdate%2A>-Eigenschaft und die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>-Methode überschreiben kann. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.DataSourceView>-Klasse bereitgestellt wird.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang wird von der <see cref="T:System.Web.UI.DataSourceView" />-Klasse nicht unterstützt.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die bei einem Einfügevorgang verwendet wurden.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Einfügevorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Insert%2A>-Methode ist die asynchrone Schnittstelle zum Einfügen von Daten für alle Datenquellen Sicht-Objekte. Die <xref:System.Web.UI.DataSourceView.Insert%2A>-Methode ruft die <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode unter Verwendung der angegebenen `values` auf. Der `callback`-Parameter ist ein Delegat, der von einem Daten gebundenen Steuerelement an die Datenquellen Sicht übergeben wird. dieses wird verwendet, um das Daten gebundene Steuerelement zu benachrichtigen, wenn der <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Vorgang abgeschlossen wurde. Die-Methode verwendet die Parameter des <xref:System.Web.UI.DataSourceViewOperationCallback> Delegaten, um die Anzahl der betroffenen Datensätze und jede <xref:System.Exception> Ausnahme zurückzugeben, die durch den Aufruf der <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenquellenansicht ab.</summary>
        <value>Der Name von <see cref="T:System.Web.UI.DataSourceView" />, sofern vorhanden. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>-Methode benachrichtigt ein Daten gebundenes Steuerelement, dass sich die zugrunde liegende Datenquelle geändert hat und dass das Steuerelement eine erneute Bindung vornehmen und alle notwendigen Arbeiten ausführen sollte. In der Regel wird die <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>-Methode aufgerufen, wenn sich eine Eigenschaft der Datenquellen Sicht geändert hat.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
 Mit der <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Einer der Werte von <see cref="T:System.Web.UI.DataSourceCapabilities" />, die mit den Funktionen verglichen werden, die die Ansicht unterstützt.</param>
        <summary>Durch die <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />-Methode aufgerufen, um die für einen <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Vorgang erforderlichen Funktionen mit denen zu vergleichen, die die Ansicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A>-Methode wird von der Datenquellen Sicht verwendet, um jede der von einem Daten gebundenen Steuerelement angeforderten Funktionen zu untersuchen, die durch das <xref:System.Web.UI.DataSourceSelectArguments> Objekt dargestellt werden, das an die <xref:System.Web.UI.DataSourceView.Select%2A>-Methode übertragen wird, und vergleichen es mit den Funktionen, die von der Datenquellen Sicht unterstützt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Datenquellenansicht unterstützt die angegebene Datenquellenfunktion nicht</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das zum Anfordern von Datenvorgängen verwendet wird, die über allgemeine Datenabrufvorgänge hinausgehen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewSelectCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Ruft asynchron eine Liste der Daten aus dem zugrunde liegenden Datenspeicher ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceView.Select%2A>-Methode ist die asynchrone Schnittstelle zum Abrufen von Daten für alle Datenquellen Sicht-Objekte. Die <xref:System.Web.UI.DataSourceView.Select%2A>-Methode ruft die <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>-Methode auf und übergibt alle bereitgestellten <xref:System.Web.UI.DataSourceSelectArguments>. Der `callback`-Parameter ist ein Delegat, der von einem Daten gebundenen Steuerelement an die Datenquellen Sicht übergeben wird. dieses wird verwendet, um das Daten gebundene Steuerelement zu benachrichtigen, wenn der <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Vorgang abgeschlossen wurde. Die vom <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Aufruf zurückgegebenen Daten werden im-Parameter des <xref:System.Web.UI.DataSourceViewSelectCallback> Delegaten zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- oder Zeilenschlüsseln, die durch den Aktualisierungsvorgang aktualisiert werden sollen.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre neuen Werte darstellen.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die Datenelemente und ihre ursprünglichen Werte darstellen.</param>
        <param name="callback">Ein <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />-Delegat, der nach Abschluss eines asynchronen Vorgangs zum Benachrichtigen eines datengebundenen Steuerelements verwendet wird.</param>
        <summary>Führt einen asynchronen Aktualisierungsvorgang in der Liste der Daten aus, die das <see cref="T:System.Web.UI.DataSourceView" />-Objekt darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.DataSourceView.Update%2A>-Methode handelt es sich um die asynchrone Daten Änderungs Schnittstelle für alle Datenquellen Sicht-Objekte. Die <xref:System.Web.UI.DataSourceView.Update%2A>-Methode ruft die <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>-Methode mithilfe der angegebenen Parameterwerte `keys`, `values`und `oldValues` auf. Der `callback`-Parameter ist ein Delegat, der von einem Daten gebundenen Steuerelement an die Datenquellen Sicht übergeben wird. dieses wird verwendet, um das Daten gebundene Steuerelement zu benachrichtigen, wenn der <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Vorgang abgeschlossen wurde. Die-Methode verwendet die Parameter des <xref:System.Web.UI.DataSourceViewOperationCallback> Delegaten, um die Anzahl der betroffenen Datensätze und alle <xref:System.Exception> Ausnahmen zurückzugeben, die vom <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Aufruf ausgelöst werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der bereitgestellte <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
