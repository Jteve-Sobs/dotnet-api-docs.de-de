<Type Name="XPathBinder" FullName="System.Web.UI.XPathBinder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27b402acd2baa693248d6624eb615242f4dabf63" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86607778" /></Metadata><TypeSignature Language="C#" Value="public sealed class XPathBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XPathBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XPathBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XPathBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathBinder sealed" />
  <TypeSignature Language="F#" Value="type XPathBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Unterstützung für RAD-Designer (Rapid Application Development) beim Analysieren von Datenbindungsausdrücken bereit, die XPath-Ausdrücke verwenden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die überladene- <xref:System.Web.UI.XPathBinder.Eval%2A> Methode dieser Klasse verwenden, um das Ergebnis eines XPath-Ausdrucks zu binden, der für ein Objekt ausgeführt wird, das die- <xref:System.Xml.XPath.IXPathNavigable> Schnittstelle implementiert, z <xref:System.Xml.XmlNode> . b.. Sie können die- <xref:System.Web.UI.XPathBinder.Select%2A> Methode verwenden, um die Ergebnisse eines XPath-Ausdrucks, der für ein-Objekt ausgeführt wird, <xref:System.Xml.XPath.IXPathNavigable> als eine <xref:System.Collections.IEnumerable> Liste von Knoten abzurufen. Diese Liste von Knoten kann direkt aufgelistet oder der- `DataSource` Eigenschaft eines Listen Steuer Elements zugewiesen werden, z <xref:System.Web.UI.WebControls.Repeater> . b. oder <xref:System.Web.UI.WebControls.DataList> .  
  
 Sie können eine vereinfachte Version der Daten Bindungs Syntax verwenden, wenn Sie die <xref:System.Web.UI.XPathBinder> Methoden deklarativ verwenden. Anstelle von `XPathBinder.Eval` ( `Container.DataItem` , `xpath` ) können Sie `XPath` () verwenden `xpath` . Analog `XPathBinder.Select` `Container.DataItem` `xpath` dazu können Sie `XPathSelect` () verwenden, `xpath` um eine <xref:System.Collections.IEnumerable> Gruppe von Knoten abzurufen. Wenn diese vereinfachte Syntax verwendet wird, <xref:System.Web.UI.XPathBinder.Eval%2A> nehmen die-Methode und die- <xref:System.Web.UI.XPathBinder.Select%2A> Methode ein Standard `Container.DataItem` Kontext Objekt an.  
  
 Weitere Informationen zur Datenbindung an ASP.NET-Server Steuerelemente finden Sie unter [Syntax für Daten Bindungs Ausdrücke](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein-Steuerelement mit einem auf Vorlagen basierenden Steuerelement verwendet wird <xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.WebControls.Repeater> , um XML-Daten anzuzeigen. Dieses Beispiel besteht aus zwei Teilen:  
  
-   Eine Web Forms Seite, auf der XML-Daten angezeigt werden.  
  
-   Eine XML-Datei, die die Daten enthält.  
  
 Der erste Teil des Beispiels zeigt eine Web Forms Seite, die XML-Daten anzeigt, auf die über ein-Steuerelement zugegriffen wird <xref:System.Web.UI.WebControls.XmlDataSource> . Ein- <xref:System.Web.UI.WebControls.Repeater> Steuerelement verwendet die vereinfachte <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> Methoden Syntax zum Binden an Datenelemente innerhalb des XML-Dokuments, das das <xref:System.Web.UI.WebControls.XmlDataSource> darstellt. Er verwendet die <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> -Methode, um eine <xref:System.Collections.IEnumerable> Liste abzurufen und Sie als spät gebundene <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> Eigenschaft für das Steuerelement zuzuweisen <xref:System.Web.UI.WebControls.Repeater> .  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 Im zweiten Beispiel wird die XML-Datei (Order.xml) bereitgestellt, die als Quelle der Daten verwendet wird, die auf der oben definierten Web Forms Seite angezeigt werden.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
 </orders>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Analysiert einen XPath-Datenbindungsausdruck zur Laufzeit mit einem <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt und wertet diesen aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.XPathBinder.Eval (container, xPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage vom <paramref name="container" /> zum Eigenschaftswert, der in der Eigenschaft des gebundenen Steuerelements platziert wird.</param>
        <summary>Wertet XPath-Datenbindungsausdrücke zur Laufzeit aus.</summary>
        <returns>Ein <see cref="T:System.Object" />, das bei der Auswertung des Datenbindungsausdrucks entsteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.UI.XPathBinder.Eval%2A> Methode deklarativ verwenden, wenn Sie die Umwandlung eines XML-Knotens in eine Text Zeichenfolge vereinfachen möchten, die in einem Browser angezeigt werden soll. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um den Daten Bindungs Ausdruck herum platzieren.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` . Wenn Sie eine Bindung mit der Seite durchlaufen, sollte der- `container` Parameter lauten `Page` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein-Steuerelement mit einem auf Vorlagen basierenden Steuerelement verwendet wird <xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.WebControls.Repeater> , um XML-Daten anzuzeigen. Dieses Beispiel besteht aus zwei Teilen:  
  
-   Eine Web Forms Seite, auf der XML-Daten angezeigt werden.  
  
-   Eine XML-Datei, die die Daten enthält.  
  
 Der erste Teil des Beispiels zeigt eine Web Forms Seite, die XML-Daten anzeigt, auf die über ein-Steuerelement zugegriffen wird <xref:System.Web.UI.WebControls.XmlDataSource> . Ein- <xref:System.Web.UI.WebControls.Repeater> Steuerelement verwendet die vereinfachte <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> Methoden Syntax zum Binden an Datenelemente innerhalb des XML-Dokuments, das das <xref:System.Web.UI.WebControls.XmlDataSource> darstellt. Er verwendet die <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> -Methode, um eine <xref:System.Collections.IEnumerable> Liste abzurufen und Sie als spät gebundene <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> Eigenschaft für das Steuerelement zuzuweisen <xref:System.Web.UI.WebControls.Repeater> .  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/CS/xmlds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/VB/xmlds13vb.aspx#1)]  
  
 Im zweiten Beispiel wird die XML-Datei (Bookstore2.xml) bereitgestellt, die als Quelle der Daten verwendet wird, die auf der oben definierten Web Forms Seite angezeigt werden.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <bookstore>  
    <genre name="fiction">  
      <book ISBN="10-861003-324">  
        <author>  
          <firstname>test</firstname>  
          <lastname>test2</lastname>  
        </author>  
        <title>The Handmaid's Tale</title>  
        <price>12.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />   
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
    <genre name="nonfiction">  
      <book genre="nonfiction" ISBN="1-861001-57-5">  
        <author>  
          <firstname>test3</firstname>  
          <lastname>test4</lastname>  
        </author>      
        <title>Pride And Prejudice</title>  
        <price>24.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />  
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
  </bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="container" />-Parameter oder der <paramref name="xpath" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das in <paramref name="container" /> angegebene Objekt ist kein <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage vom <paramref name="container" /> zum Eigenschaftswert, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll.</param>
        <param name="format">Eine Formatzeichenfolge von .NET Framework (ähnlich der Zeichenfolgen, die von <see cref="M:System.String.Format(System.String,System.Object)" /> verwendet werden), die das <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt, das Ergebnis der Auswertung des Datenbindungsausdrucks, in einen <see cref="T:System.String" /> für die Anzeige im anfordernden Browser konvertiert.</param>
        <summary>Wertet XPath-Datenbindungsausdrücke zur Laufzeit aus und formatiert das Ergebnis als Text, der im anfordernden Browser angezeigt wird.</summary>
        <returns>Ein <see cref="T:System.String" />, der bei der Auswertung des Datenbindungsausdrucks und der Konvertierung in einen Zeichenfolgentyp entsteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu Format Zeichenfolgen im .NET Framework finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).  
  
 Sie können die- <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> Methode deklarativ verwenden, wenn Sie die Umwandlung eines XML-Knotens in eine Text Zeichenfolge vereinfachen möchten, die in einem Browser angezeigt werden soll. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um den Daten Bindungs Ausdruck herum platzieren.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` . Wenn Sie eine Bindung mit der Seite durchlaufen, sollte der- `container` Parameter lauten `Page` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="container" />-Parameter oder der <paramref name="xpath" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das in <paramref name="container" /> angegebene Objekt ist kein <see cref="T:System.Xml.XPath.IXPathNavigable" />.</exception>
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage vom <paramref name="container" /> zum Eigenschaftswert, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll.</param>
        <param name="resolver">Das zum Auflösen von Namespacepräfixen im XPath-Ausdruck verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
        <summary>Wertet mithilfe des <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekts, das zur Auflösung von Namespacepräfixen im XPath-Ausdruck angegeben wird, XPath-Datenbindungsausdrücke zur Laufzeit aus und formatiert das Ergebnis als Text, der im anfordernden Browser angezeigt wird.</summary>
        <returns>Ein <see cref="T:System.Object" />, das sich bei der Auswertung des Datenbindungsausdrucks ergibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.UI.XPathBinder.Eval%2A> Methode deklarativ verwenden, wenn Sie die Umwandlung eines XML-Knotens in eine Text Zeichenfolge vereinfachen möchten, die in einem Browser angezeigt werden soll. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um den Daten Bindungs Ausdruck herum platzieren. Der Daten Bindungs Ausdruck schließt den XPath-Ausdruck und ein- <xref:System.Xml.IXmlNamespaceResolver> Objekt ein, um den Namespace Verweis aufzulösen.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` . Wenn Sie eine Bindung mit der Seite durchlaufen, sollte der- `container` Parameter lauten `Page` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String, resolver As IXmlNamespaceResolver) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string * System.Xml.IXmlNamespaceResolver -&gt; string" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, format, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage vom <paramref name="container" /> zum Eigenschaftswert, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll.</param>
        <param name="format">Eine Formatzeichenfolge von .NET Framework (ähnlich der Zeichenfolgen, die von <see cref="M:System.String.Format(System.String,System.Object)" /> verwendet werden), die das <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt, das Ergebnis der Auswertung des Datenbindungsausdrucks, in einen <see cref="T:System.String" /> für die Anzeige im anfordernden Browser konvertiert.</param>
        <param name="resolver">Das zum Auflösen von Namespacepräfixen im XPath-Ausdruck verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
        <summary>Wertet mithilfe des <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekts, das zur Auflösung von Namespacepräfixen im XPath-Ausdruck angegeben wird, XPath-Datenbindungsausdrücke zur Laufzeit aus und formatiert das Ergebnis als Text, der im anfordernden Browser angezeigt wird.</summary>
        <returns>Ein <see cref="T:System.String" />, der bei der Auswertung des Datenbindungsausdrucks und der Konvertierung in einen Zeichenfolgentyp entsteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.UI.XPathBinder.Eval%2A> Methode deklarativ verwenden, wenn Sie die Umwandlung eines XML-Knotens in eine Text Zeichenfolge vereinfachen möchten, die in einem Browser angezeigt werden soll. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um den Daten Bindungs Ausdruck herum platzieren. Der Daten Bindungs Ausdruck schließt den XPath-Ausdruck und ein- <xref:System.Xml.IXmlNamespaceResolver> Objekt ein, um den Namespace Verweis aufzulösen.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` . Wenn Sie eine Bindung mit der Seite durchlaufen, sollte der- `container` Parameter lauten `Page` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verwendet einen XPath-Datenbindungsausdruck zur Laufzeit, um eine Liste mit Knoten zurückzugeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die überladene <xref:System.Web.UI.XPathBinder.Select%2A> Methode deklarativ verwenden, wenn Sie das Abrufen einer Gruppe von Knoten mithilfe einer XPath-Abfrage vereinfachen möchten. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um die XPath-Abfrage herum platzieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath);" />
      <MemberSignature Language="F#" Value="static member Select : obj * string -&gt; System.Collections.IEnumerable" Usage="System.Web.UI.XPathBinder.Select (container, xPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage, die eine Liste mit Knoten abruft.</param>
        <summary>Verwendet einen XPath-Datenbindungsausdruck zur Laufzeit, um eine Liste mit Knoten zurückzugeben.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste von Knoten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> Methode deklarativ verwenden, wenn Sie das Abrufen einer Gruppe von Knoten mithilfe einer XPath-Abfrage vereinfachen möchten. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um die XPath-Abfrage herum platzieren.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein-Steuerelement mit einem auf Vorlagen basierenden Steuerelement verwendet wird <xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.WebControls.Repeater> , um XML-Daten anzuzeigen. Dieses Beispiel besteht aus zwei Teilen:  
  
-   Eine Web Forms Seite, auf der XML-Daten angezeigt werden.  
  
-   Eine XML-Datei, die die Daten enthält.  
  
 Der erste Teil des Beispiels zeigt eine Web Forms Seite, die XML-Daten anzeigt, auf die über ein-Steuerelement zugegriffen wird <xref:System.Web.UI.WebControls.XmlDataSource> . Ein- <xref:System.Web.UI.WebControls.Repeater> Steuerelement verwendet die vereinfachte <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> Methoden Syntax zum Binden an Datenelemente innerhalb des XML-Dokuments, das das <xref:System.Web.UI.WebControls.XmlDataSource> darstellt. Er verwendet die <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> -Methode, um eine <xref:System.Collections.IEnumerable> Liste abzurufen und Sie als spät gebundene <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> Eigenschaft für das Steuerelement zuzuweisen <xref:System.Web.UI.WebControls.Repeater> .  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 Im zweiten Beispiel wird die XML-Datei (Order.xml) bereitgestellt, die als Quelle der Daten verwendet wird, die auf der oben definierten Web Forms Seite angezeigt werden.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
  </orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="container" />-Parameter oder der <paramref name="xpath" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das in <paramref name="container" /> angegebene Objekt ist kein <see cref="T:System.Xml.XPath.IXPathNavigable" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten von <see cref="T:System.Xml.XPath.XPathNodeIterator" /> hat keinen zugeordneten XML-Knoten.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Select : obj * string * System.Xml.IXmlNamespaceResolver -&gt; System.Collections.IEnumerable" Usage="System.Web.UI.XPathBinder.Select (container, xPath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="xPath">Die XPath-Abfrage, die eine Liste mit Knoten abruft.</param>
        <param name="resolver">Das zum Auflösen von Namespacepräfixen im XPath-Ausdruck verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
        <summary>Verwendet das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das zur Auflösung von Namespacepräfixen im XPath-Ausdruck angegeben wird, um mit einem XPath-Datenbindungsausdruck zur Laufzeit eine Liste von Knoten zurückzugeben.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste von Knoten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.UI.XPathBinder.Select%2A> Methode deklarativ verwenden, wenn Sie das Abrufen einer Gruppe von Knoten mithilfe einer XPath-Abfrage vereinfachen möchten. Zu diesem Zweck müssen Sie die \<%# and %> Tags, die auch in der ASP.net-Standarddaten Bindung verwendet werden, um die XPath-Abfrage und ein <xref:System.Xml.IXmlNamespaceResolver> Objekt zum Auflösen der Namespace Referenz platzieren.  
  
 Für eine der Listen ASP.NET-Server Steuerelemente, wie <xref:System.Web.UI.WebControls.DataList> z <xref:System.Web.UI.WebControls.DataGrid> . b., oder <xref:System.Web.UI.WebControls.Repeater> , sollte der- `container` Parameter sein `Container.DataItem` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
