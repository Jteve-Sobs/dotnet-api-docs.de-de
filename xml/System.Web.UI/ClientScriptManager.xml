<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f75d704bbe231919966e4fc5a123f6ed1bb202ac" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66005932" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e127e-101">Definiert Methoden zum Verwalten von Clientskripts in Webanwendungen.</span><span class="sxs-lookup"><span data-stu-id="e127e-101">Defines methods for managing client scripts in Web applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-102">Die <xref:System.Web.UI.ClientScriptManager> Klasse wird verwendet, um das Verwalten von Clientskripts und Webanwendungen hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="e127e-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="e127e-103">Erhalten Sie einen Verweis auf die <xref:System.Web.UI.ClientScriptManager> -Klasse aus der <xref:System.Web.UI.Page.ClientScript%2A> Eigenschaft der <xref:System.Web.UI.Page> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="e127e-104">Sie können ein Clientskript deklarativ zu einer Webseite hinzufügen, indem Sie das Skript in das HTML-Markup der Seite einschließen.</span><span class="sxs-lookup"><span data-stu-id="e127e-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="e127e-105">Es gibt jedoch Situationen, in dynamisch Hinzufügen eines Clientskripts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="e127e-106">Um ein Skript dynamisch hinzuzufügen, verwenden die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode, die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> -Methode, die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode, oder die <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> -Methode, je nachdem, wann und wie Sie das Skript hinzufügen möchten.</span><span class="sxs-lookup"><span data-stu-id="e127e-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="e127e-107">Weitere Informationen finden Sie unter [Vorgehensweise: Dynamisches Hinzufügen von Clientskripts zu ASP.NET Web Pages](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="e127e-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="e127e-108">Die <xref:System.Web.UI.ClientScriptManager> Klasse eindeutig identifiziert Skripts mit einem Schlüssel <xref:System.String> und <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="e127e-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="e127e-109">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-110">Mithilfe von Skripttyp auswählen können, um verwirrend ähnliche Skripts von verschiedenen Benutzersteuerelemente zu vermeiden, die auf der Seite verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="e127e-111">Die <xref:System.Web.UI.ClientScriptManager> Klasse kann verwendet werden, um Clientrückrufe in Situationen Servercode ohne einen Postback vom Client ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="e127e-112">Dies wird als einen Out-of-Band-Rückruf an den Server ausführen bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="e127e-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="e127e-113">Bei einem Clientrückruf sendet eine Clientskriptfunktion eine asynchrone Anforderung auf einer ASP.NET-Webseite an.</span><span class="sxs-lookup"><span data-stu-id="e127e-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="e127e-114">Die Webseite wird eine geänderte Version des normalen Lebenszyklus den Prozess der Rückruf ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="e127e-115">Verwenden der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode, um einem Verweis auf eine Clientfunktion abzurufen, die beim Aufrufen, wird ein Clientrückrufs an ein Serverereignis initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="e127e-116">Weitere Informationen finden Sie unter [implementieren Sie Client-Callbacks ohne Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="e127e-116">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-117">Skript-Rückrufe funktioniert nicht in älteren Browsern, die nicht (DOKUMENTOBJEKTMODELL unterstützen), und sie erfordern, dass ECMAScript auf dem Client aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="e127e-118">Verwenden, um festzustellen, ob der Browser Rückrufe unterstützt, die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Eigenschaft, die über die <xref:System.Web.HttpRequest.Browser%2A> -Eigenschaft des ASP.NET-systeminterne <xref:System.Web.HttpContext.Request%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="e127e-119">Verwenden der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> Methode, um ein postback-Ereignis des Clients zu definieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="e127e-120">Diese Methoden ermöglichen die Client-Skriptfunktionen, wenn aufgerufen, um die dazu führen, dass den Server zum Zurücksenden an die Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="e127e-121">Ein Client-postback-Ereignis unterscheidet sich von einem Clientrückruf, dass die Webseite einen normalen Lebenszyklus, den Prozess der Client-postback-Ereignis abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-122">Bei Verwendung einer <xref:System.Web.UI.WebControls.Button> Steuerelement und die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> -Eigenschaftensatz auf `false`, anschließend können Sie die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode, um den Client zurückzugeben postback-Ereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e127e-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e127e-123">Die <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Eigenschaft der <xref:System.Web.UI.WebControls.Button> Steuerelement <xref:System.Web.UI.WebControls.ImageButton> -Steuerelement, und <xref:System.Web.UI.WebControls.LinkButton> -Steuerelement kann verwendet werden, um Clientskript auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e127e-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-124">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode der <xref:System.Web.UI.ClientScriptManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e127e-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="e127e-125">Zwei Clientskripts auf der Seite definiert sind: `PopupScript`, die eine Warnmeldung zeigt an, wenn die Seite geladen wird, und `ButtonClickScript`, das definiert, dass eines Client-Handlers für einer HTML-Schaltfläche `onClick` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e127e-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
    <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa"><span data-ttu-id="e127e-126">Clientskript in ASP.NET Web Pages</span><span class="sxs-lookup"><span data-stu-id="e127e-126">Client Script in ASP.NET Web Pages</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-127">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-127">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-128">Ruft einen Verweis auf eine Clientfunktion ab, die beim Aufruf einen Clientrückruf für ein Serverereignis initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-128">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-129">Das Server-<see cref="T:System.Web.UI.Control" />, das den Clientrückruf behandelt.</span><span class="sxs-lookup"><span data-stu-id="e127e-129">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="e127e-130">Das Steuerelement muss die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle implementieren und eine <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />-Methode bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="e127e-130">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-131">Ein Argument, das vom Clientskript an den Server übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-131">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="e127e-132"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> -Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-132"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="e127e-133">Der Name des Clientereignishandlers, der das Ergebnis des erfolgreich ausgeführten Serverereignisses empfängt.</span><span class="sxs-lookup"><span data-stu-id="e127e-133">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="e127e-134">Clientskript, das auf dem Client vor der Initialisierung des Rückrufs ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-134">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="e127e-135">Das Ergebnis des Skripts wird an den Clientereignishandler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e127e-135">The result of the script is passed back to the client event handler.</span></span></param>
        <summary><span data-ttu-id="e127e-136">Ruft einen Verweis auf eine Clientfunktion ab, die beim Aufruf einen Clientrückruf für ein Serverereignis initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-136">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span> <span data-ttu-id="e127e-137">Die Clientfunktion für diese überladene Methode schließt ein angegebenes Steuerelement, ein Argument, ein Clientskript sowie einen Kontext ein.</span><span class="sxs-lookup"><span data-stu-id="e127e-137">The client function for this overloaded method includes a specified control, argument, client script, and context.</span></span></summary>
        <returns><span data-ttu-id="e127e-138">Der Name einer Clientfunktion, die den Clientrückruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-138">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-139">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> -Methode führt einen Out-of-Band-Rückruf an den Server, die eine geänderte Version des normalen Lebenszyklus einer Seite ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-139">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="e127e-140">Weitere Informationen finden Sie unter [implementieren Sie Client-Callbacks ohne Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="e127e-140">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-141">Wenn der Browser Microsoft Internet Explorer (Version 5.0 oder höher) ist, wird der Skriptrückrufmechanismus wird über das Microsoft.XmlHttp COM-Objekt implementiert und verlangt, dass der Browser zur Ausführung von ActiveX-Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="e127e-141">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="e127e-142">Für andere Browser wird ein XMLHttpRequest mithilfe des Browsers lokalen (DOKUMENTOBJEKTMODELL) verwendet.</span><span class="sxs-lookup"><span data-stu-id="e127e-142">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="e127e-143">Verwenden Sie zum Überprüfen, ob ein Browser Clientrückrufe unterstützt die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e127e-143">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="e127e-144">Verwenden Sie zum Überprüfen, ob ein Browser XML über HTTP unterstützt die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e127e-144">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="e127e-145">Beide Eigenschaften stehen über die <xref:System.Web.HttpRequest.Browser%2A> Eigenschaft des systeminternen ASP <xref:System.Web.HttpContext.Request%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-145">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="e127e-146">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode führt einen Rückruf synchron mit XML über HTTP.</span><span class="sxs-lookup"><span data-stu-id="e127e-146">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="e127e-147">Beim Senden von Daten synchron in ein Szenario, synchrone Rückrufe sofort zurückgegeben, und blockieren sich nicht auf den Browser.</span><span class="sxs-lookup"><span data-stu-id="e127e-147">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="e127e-148">Keine zwei synchrone Rückrufe kann zur gleichen Zeit im Browser ausführen.</span><span class="sxs-lookup"><span data-stu-id="e127e-148">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="e127e-149">Ein zweiter synchroner Rückruf ausgelöst, während eine zurzeit aussteht, der zweiten synchronen Rückruf abgebrochen, die erste und nur der zweite Rückruf zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-149">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="e127e-150">Um Daten asynchron senden zu können, verwenden Sie eine der Überladungen, die die `useAsync` -Parameter, der ein boolescher Wert ist Wert, der dieses Verhalten steuern.</span><span class="sxs-lookup"><span data-stu-id="e127e-150">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="e127e-151">In einem asynchronen Szenario haben Sie mehrere ausstehende Rückrufe; Allerdings ist die Reihenfolge, in der sie zurückgibt, nicht garantiert, entsprechend die Reihenfolge, in der sie initiiert wurden.</span><span class="sxs-lookup"><span data-stu-id="e127e-151">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="e127e-152">Darüber hinaus diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode gibt keine Clientfunktion zur Verarbeitung der Fehlerzustand generiert, indem Sie der Groß-/Kleinschreibung der <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-152">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="e127e-153">Um einen Rückrufhandler für Client-Fehler anzugeben, verwenden Sie eine der Überladungen, die die `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-153">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="e127e-154">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Methode akzeptiert eine optionale Zeichenfolge `argument` Parameter und gibt eine Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-154">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="e127e-155">Übergeben oder mehrere Werte zu erhalten, verketten Sie die Werte in der Eingabe oder jeweils.</span><span class="sxs-lookup"><span data-stu-id="e127e-155">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-156">Verwenden Sie den Ansichtszustand in der Implementierung der Seite oder das Steuerelement Eigenschaften, die während der Skriptvorgänge-Rückruf aktualisiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="e127e-156">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="e127e-157">Wenn die Eigenschaften sind Seitenanforderungen überstehen, können Sie den Sitzungsstatus verwenden.</span><span class="sxs-lookup"><span data-stu-id="e127e-157">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-158">Im folgenden Codebeispiel wird veranschaulicht, wie mit zwei Überladungen der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode in einem Clientrückruf an, die ganzen Zahlen inkrementiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-158">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="e127e-159">Es werden zwei Rückrufmechanismen zur angezeigt; der Unterschied zwischen ihnen ist die Verwendung von der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-159">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="e127e-160">Ein `ReceiveServerData1` Client Callback-Funktion wird bereitgestellt, mit der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-160">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="e127e-161">Im Gegensatz dazu die `ReceiveServerData2` Client Callback-Funktion wird definiert, einem `<script>` -Block auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-161">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="e127e-162">Ein <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode ist der Serverhandler, der der Wert erhöht wird, die an ihn übergeben wird und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methode gibt den inkrementierten Wert als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-162">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="e127e-163">Wenn die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode ein Fehler zurückgegeben, und klicken Sie dann die `ProcessCallBackError` Clientfunktion wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e127e-163">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-164">Das angegebene <see cref="T:System.Web.UI.Control" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-164">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e127e-165">Das angegebene <see cref="T:System.Web.UI.Control" /> implementiert die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle nicht.</span><span class="sxs-lookup"><span data-stu-id="e127e-165">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-166">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-166">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-167">Das Server-<see cref="T:System.Web.UI.Control" />, das den Clientrückruf behandelt.</span><span class="sxs-lookup"><span data-stu-id="e127e-167">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="e127e-168">Das Steuerelement muss die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle implementieren und eine <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />-Methode bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="e127e-168">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-169">Ein Argument, das vom Clientskript an den Server übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-169">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="e127e-170"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> -Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-170"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="e127e-171">Der Name des Clientereignishandlers, der das Ergebnis des erfolgreich ausgeführten Serverereignisses empfängt.</span><span class="sxs-lookup"><span data-stu-id="e127e-171">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="e127e-172">Clientskript, das auf dem Client vor der Initialisierung des Rückrufs ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-172">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="e127e-173">Das Ergebnis des Skripts wird an den Clientereignishandler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e127e-173">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="e127e-174"><see langword="true" />, um den Rückruf asynchron auszuführen, <see langword="false" />, um den Rückruf synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e127e-174"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="e127e-175">Ruft einen Verweis auf eine Clientfunktion ab, die beim Aufruf einen Clientrückruf für Serverereignisse initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-175">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="e127e-176">Die Clientfunktion für diese überladene Methode schließt ein angegebenes Steuerelement, ein Argument, ein Clientskript, einen Kontext sowie einen booleschen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="e127e-176">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="e127e-177">Der Name einer Clientfunktion, die den Clientrückruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-177">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-178">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` -Parameter, der Ihnen ermöglicht, das den Clientrückruf asynchron ausführen, durch Festlegen des Werts auf `true`.</span><span class="sxs-lookup"><span data-stu-id="e127e-178">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="e127e-179">Die Überladungsversionen dieser Methode, die keine erfordern die `useAsync` Parameter legen Sie den Wert `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="e127e-179">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="e127e-180">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-180">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-181">Das angegebene <see cref="T:System.Web.UI.Control" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-181">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e127e-182">Das angegebene <see cref="T:System.Web.UI.Control" /> implementiert die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle nicht.</span><span class="sxs-lookup"><span data-stu-id="e127e-182">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-183">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-183">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e127e-184">Der Name von einem Server-<see cref="T:System.Web.UI.Control" />, das den Clientrückruf behandelt.</span><span class="sxs-lookup"><span data-stu-id="e127e-184">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="e127e-185">Das Steuerelement muss die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle implementieren und eine <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />-Methode bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="e127e-185">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-186">Ein Argument, das vom Clientskript an den Server übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-186">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="e127e-187"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> -Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-187"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="e127e-188">Der Name des Clientereignishandlers, der das Ergebnis des erfolgreich ausgeführten Serverereignisses empfängt.</span><span class="sxs-lookup"><span data-stu-id="e127e-188">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="e127e-189">Clientskript, das auf dem Client vor der Initialisierung des Rückrufs ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-189">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="e127e-190">Das Ergebnis des Skripts wird an den Clientereignishandler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e127e-190">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="e127e-191">Der Name des Clientereignishandlers, der das Ergebnis empfängt, wenn ein Fehler im Serverereignishandler auftritt.</span><span class="sxs-lookup"><span data-stu-id="e127e-191">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="e127e-192"><see langword="true" />, um den Rückruf asynchron auszuführen, <see langword="false" />, um den Rückruf synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e127e-192"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="e127e-193">Ruft einen Verweis auf eine Clientfunktion ab, die beim Aufruf einen Clientrückruf für Serverereignisse initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-193">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="e127e-194">Die Clientfunktion für diese überladene Methode schließt ein angegebenes Ziel, ein Argument, ein Clientskript, einen Kontext, einen Fehlerhandler sowie einen booleschen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="e127e-194">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="e127e-195">Der Name einer Clientfunktion, die den Clientrückruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-195">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-196">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode übernimmt eine `target` Zeichenfolgenparameter anstelle von einer <xref:System.Web.UI.Control> Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-196">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="e127e-197">Wenn Sie den Rückruf zu etwas anderes als eine Zeichenfolge mit zurückkehren möchten, verwenden Sie diese Überladung der <xref:System.Web.UI.Control.UniqueID%2A> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="e127e-197">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="e127e-198">Darüber hinaus diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` und `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-198">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="e127e-199">Die `useAsync` Parameter können Sie den Clientrückruf asynchron durchführen, indem Sie den Wert auf `true`.</span><span class="sxs-lookup"><span data-stu-id="e127e-199">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="e127e-200">Die Überladungsversionen dieser Methode, die keine erfordern die `useAsync` Parameter legen Sie den Wert `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="e127e-200">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="e127e-201">Die `clientErrorCallback` Parameter können Sie den Namen der Clientfunktion zu definieren, die aufgerufen wird, wenn den Serverhandler für, die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> -Methode gibt einen Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-201">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="e127e-202">Die Überladungsversionen dieser Methode, die keine erfordern die `clientErrorCallback` -Parameter den Wert auf null festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e127e-202">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="e127e-203">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-203">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-204">Im folgenden Codebeispiel wird veranschaulicht, wie mit zwei Überladungen der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode in einem Clientrückruf an, die ganzen Zahlen inkrementiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-204">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="e127e-205">Es werden zwei Rückrufmechanismen zur angezeigt; der Unterschied zwischen ihnen ist die Verwendung von der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-205">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="e127e-206">Ein `ReceiveServerData1` Client Callback-Funktion wird bereitgestellt, mit der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-206">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="e127e-207">Im Gegensatz dazu die `ReceiveServerData2` Client Callback-Funktion wird definiert, einem `<script>` -Block auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-207">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="e127e-208">Ein <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode ist der Serverhandler, der der Wert erhöht wird, die an ihn übergeben wird und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methode gibt den inkrementierten Wert als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-208">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="e127e-209">Wenn die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode gibt einen Fehler, und klicken Sie dann auf die Clientfunktion `ProcessCallBackError` aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-209">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-210">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-210">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-211">Das Server-<see cref="T:System.Web.UI.Control" />, das den Clientrückruf behandelt.</span><span class="sxs-lookup"><span data-stu-id="e127e-211">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="e127e-212">Das Steuerelement muss die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle implementieren und eine <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />-Methode bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="e127e-212">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-213">Ein Argument, das vom Clientskript an die <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />-Methode des Servers übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-213">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="e127e-214">Der Name des Clientereignishandlers, der das Ergebnis des erfolgreich ausgeführten Serverereignisses empfängt.</span><span class="sxs-lookup"><span data-stu-id="e127e-214">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="e127e-215">Clientskript, das auf dem Client vor der Initialisierung des Rückrufs ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-215">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="e127e-216">Das Ergebnis des Skripts wird an den Clientereignishandler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e127e-216">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="e127e-217">Der Name des Clientereignishandlers, der das Ergebnis empfängt, wenn ein Fehler im Serverereignishandler auftritt.</span><span class="sxs-lookup"><span data-stu-id="e127e-217">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="e127e-218"><see langword="true" />, um den Rückruf asynchron auszuführen, <see langword="false" />, um den Rückruf synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e127e-218"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="e127e-219">Ruft einen Verweis auf eine Clientfunktion ab, die beim Aufruf einen Clientrückruf für Serverereignisse initiiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-219">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="e127e-220">Die Clientfunktion für diese überladene Methode schließt ein angegebenes Steuerelement, ein Argument, ein Clientskript, einen Kontext, einen Fehlerhandler sowie einen booleschen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="e127e-220">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="e127e-221">Der Name einer Clientfunktion, die den Clientrückruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-221">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-222">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` und `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-222">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="e127e-223">Die `useAsync` Parameter können Sie den Clientrückruf asynchron durchführen, indem Sie den Wert auf `true`.</span><span class="sxs-lookup"><span data-stu-id="e127e-223">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="e127e-224">Die Überladungsversionen dieser Methode, die keine erfordern die `useAsync` Parameter legen Sie den Wert `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="e127e-224">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="e127e-225">Die `clientErrorCallback` Parameter können Sie den Namen der Clientfunktion zu definieren, die aufgerufen wird, wenn der Server-Handler (den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode) gibt einen Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="e127e-225">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="e127e-226">Die Überladungsversionen dieser Methode, die keine erfordern die `clientErrorCallback` -Parameter den Wert auf null festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e127e-226">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="e127e-227">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-227">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-228">Das angegebene <see cref="T:System.Web.UI.Control" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-228">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e127e-229">Das angegebene <see cref="T:System.Web.UI.Control" /> implementiert die <see cref="T:System.Web.UI.ICallbackEventHandler" />-Schnittstelle nicht.</span><span class="sxs-lookup"><span data-stu-id="e127e-229">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-230">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-230">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-231">Ruft einen Verweis ab, an dessen Beginn <see langword="javascript:" /> angefügt ist und der in einem Clientereignis für das Postback an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-231">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-232">Das Serversteuerelement, das das Postback verarbeiten soll.</span><span class="sxs-lookup"><span data-stu-id="e127e-232">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-233">Der an das Serversteuerelement übergebene Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-233">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="e127e-234">Ruft einen Verweis ab, an dessen Beginn <see langword="javascript:" /> angefügt ist und der in einem Clientereignis verwendet werden kann, das für das angegebene Steuerelement und mit den angegebenen Ereignisargumenten an den Server zurückgesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e127e-234">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="e127e-235">Eine Zeichenfolge, die einen JavaScript-Aufruf der Postbackfunktion darstellt, die ID und Ereignisargumente des Zielsteuerelements enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-235">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-236">Mithilfe der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode muss das Steuerelement, das das Postback implementieren behandelt die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-236">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="e127e-237">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-237">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-238">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-238">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="e127e-239">Das benutzerdefinierte Steuerelement, `MyControl`, implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-239">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="e127e-240">Wenn das HTML-Anchor-Element auf der Seite klicken, wird die <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> Methode des benutzerdefinierten Steuerelements wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e127e-240">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="e127e-241">Im folgenden Codebeispiel wird hat die gleiche Funktion wie im vorangehenden, außer dass ein benutzerdefiniertes Steuerelement, das <xref:System.Web.UI.Page> -Klasse implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-241">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-242">Das Serversteuerelement, das das Postback verarbeiten soll.</span><span class="sxs-lookup"><span data-stu-id="e127e-242">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-243">Der an das Serversteuerelement übergebene Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-243">The parameter passed to the server control.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="e127e-244"><see langword="true" />, um das Postbackergebnis für die Validierung zu registrieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-244"><see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span></span></param>
        <summary><span data-ttu-id="e127e-245">Ruft einen Verweis ab, an dessen Beginn <see langword="javascript:" /> angefügt ist und der in einem Clientereignis verwendet werden kann, das für das angegebene Steuerelement mit den angegebenen Ereignisargumenten und dem booleschen Wert, der angibt, ob das Postback für die Ereignisvalidierung registriert werden soll, an den Server zurückgesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-245">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span></span></summary>
        <returns><span data-ttu-id="e127e-246">Eine Zeichenfolge, die einen JavaScript-Aufruf der Postbackfunktion darstellt, die ID und Ereignisargumente des Zielsteuerelements enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-246">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-247">Mithilfe der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode muss das Steuerelement, das das Postback implementieren behandelt die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-247">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="e127e-248">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-249">Gibt eine Zeichenfolge zurück, die in einem Clientereignis zum Auslösen eines Postbacks an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-249">Returns a string that can be used in a client event to cause postback to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="e127e-250">Eine Instanz von <see cref="T:System.Web.UI.PostBackOptions" />, die das Postback definiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-250">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <summary><span data-ttu-id="e127e-251">Gibt eine Zeichenfolge zurück, die in einem Clientereignis zum Auslösen eines Postbacks an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-251">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="e127e-252">Die Verweiszeichenfolge wird von der angegebenen <see cref="T:System.Web.UI.PostBackOptions" />-Instanz definiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-252">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e127e-253">Eine Zeichenfolge, die das Clientpostback initiiert, wenn sie auf dem Client als Skript behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-253">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-254">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="e127e-255">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="e127e-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="e127e-256">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methodenrückgabe, die das Clientpostback-Ereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e127e-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-257">Der <see cref="T:System.Web.UI.PostBackOptions" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-257">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-258">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-258">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-259">Das Server-<see cref="T:System.Web.UI.Control" />, das das Postback auf dem Server verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="e127e-259">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-260">Eine Zeichenfolge optionaler Argumente, die an das Steuerelement übergeben werden soll, das das Postback verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="e127e-260">A string of optional arguments to pass to the control that processes the postback.</span></span></param>
        <summary><span data-ttu-id="e127e-261">Gibt eine Zeichenfolge zurück, die in einem Clientereignis zum Auslösen eines Postbacks an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-261">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="e127e-262">Die Verweiszeichenfolge wird durch das angegebene Steuerelement definiert, das das Postback behandelt, und einem Zeichenfolgenargument mit weiteren Ereignisinformationen.</span><span class="sxs-lookup"><span data-stu-id="e127e-262">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span></summary>
        <returns><span data-ttu-id="e127e-263">Eine Zeichenfolge, die das Postback initiiert, wenn sie auf dem Client als Skript behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-263">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-264">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-264">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="e127e-265">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="e127e-265">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="e127e-266">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methodenrückgabe, die das Clientpostback-Ereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e127e-266">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-267">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-267">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="e127e-268">Das benutzerdefinierte Steuerelement, `MyControl`, implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-268">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="e127e-269">Wenn die Schaltfläche auf der Seite geklickt wird, die <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> Methode des benutzerdefinierten Steuerelements wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e127e-269">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="e127e-270">Im folgenden Codebeispiel wird hat die gleiche Funktion wie im vorangehenden, außer dass ein benutzerdefiniertes Steuerelement, das <xref:System.Web.UI.Page> -Klasse implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e127e-270">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-271">Der angegebene <see cref="T:System.Web.UI.Control" /> ist gleich <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-271">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-272">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-272">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="e127e-273">Eine Instanz von <see cref="T:System.Web.UI.PostBackOptions" />, die das Postback definiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-273">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="e127e-274"><see langword="true" />, um den Ereignisverweis für die Validierung zu registrieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-274"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e127e-275">Gibt eine Zeichenfolge zurück, die in einem Clientereignis zum Auslösen eines Postbacks an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-275">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="e127e-276">Die Verweiszeichenfolge wird vom angegebenen <see cref="T:System.Web.UI.PostBackOptions" />-Objekt definiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-276">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span></span> <span data-ttu-id="e127e-277">Registriert den Ereignisverweis optional für die Validierung.</span><span class="sxs-lookup"><span data-stu-id="e127e-277">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="e127e-278">Eine Zeichenfolge, die das Clientpostback initiiert, wenn sie auf dem Client als Skript behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-278">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-279">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page> Objekt, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-279">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="e127e-280">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="e127e-280">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="e127e-281">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methodenrückgabe, die das Clientpostback-Ereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e127e-281">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e127e-282">Wenn `registerForEventValidation` ist `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> Methodenaufrufe der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> Methode, um den Ereignisverweis für die Überprüfung mit einer eindeutigen Steuerelement-ID zu registrieren, die das Clientsteuerelement darstellt, die das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-282">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-283"><see cref="T:System.Web.UI.PostBackOptions" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-283">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-284">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-284">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e127e-285">Das Server-<see cref="T:System.Web.UI.Control" />, das das Postback auf dem Server verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="e127e-285">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-286">Eine Zeichenfolge optionaler Argumente, die an <paramref name="control" /> übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e127e-286">A string of optional arguments to pass to <paramref name="control" />.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="e127e-287"><see langword="true" />, um den Ereignisverweis für die Validierung zu registrieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-287"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e127e-288">Gibt eine Zeichenfolge zurück, die in einem Clientereignis zum Auslösen eines Postbacks an den Server verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-288">Returns a string to use in a client event to cause postback to the server.</span></span> <span data-ttu-id="e127e-289">Die Verweiszeichenfolge wird durch das angegebene Steuerelement definiert, das das Postback behandelt, und einem Zeichenfolgenargument mit weiteren Ereignisinformationen.</span><span class="sxs-lookup"><span data-stu-id="e127e-289">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span> <span data-ttu-id="e127e-290">Registriert den Ereignisverweis optional für die Validierung.</span><span class="sxs-lookup"><span data-stu-id="e127e-290">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="e127e-291">Eine Zeichenfolge, die das Postback initiiert, wenn sie auf dem Client als Skript behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-291">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-292">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="e127e-292">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="e127e-293">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="e127e-293">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="e127e-294">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methodenrückgabe, die das Clientpostback-Ereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e127e-294">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e127e-295">Wenn `registerForEventValidation` ist "true", die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> Methodenaufrufe der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> Methode, um den Ereignisverweis für die Überprüfung mit einer eindeutigen Steuerelement-ID zu registrieren, die das Clientsteuerelement darstellt, die das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-295">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-296">Der angegebene <see cref="T:System.Web.UI.Control" /> ist gleich <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-296">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="e127e-297">Clientrückrufe ohne Postbacks in ASP.NET-Seiten</span><span class="sxs-lookup"><span data-stu-id="e127e-297">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-298">Der Typ der Ressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-298">The type of the resource.</span></span></param>
        <param name="resourceName"><span data-ttu-id="e127e-299">Der vollqualifizierte Name der Ressource in der Assembly.</span><span class="sxs-lookup"><span data-stu-id="e127e-299">The fully qualified name of the resource in the assembly.</span></span></param>
        <summary><span data-ttu-id="e127e-300">Ruft einen URL-Verweis auf eine Ressource in einer Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="e127e-300">Gets a URL reference to a resource in an assembly.</span></span></summary>
        <returns><span data-ttu-id="e127e-301">Der URL-Verweis auf die Ressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-301">The URL reference to the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-302">Die <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methode gibt einen URL-Verweis auf eine Ressource in eine Assembly eingebettet.</span><span class="sxs-lookup"><span data-stu-id="e127e-302">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="e127e-303">Der zurückgegebene Verweis ist nicht die URL-codiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-303">The returned reference is not URL encoded.</span></span> <span data-ttu-id="e127e-304">Ressourcen können Skriptdateien, Bilder oder statische Datei sein.</span><span class="sxs-lookup"><span data-stu-id="e127e-304">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="e127e-305">Sie geben den Typ basierend auf das Objekt, das die Ressource zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-305">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="e127e-306">Eine Webressource, die mit der Seite registriert wird durch den Typ und den Namen eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-306">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="e127e-307">Nur eine Ressource mit einem angegebenen Typ und Name-Paar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-307">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="e127e-308">Versucht, eine Ressource zu registrieren, die bereits registriert ist, wird ein Duplikat der registrierten Ressource nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-308">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="e127e-309">Die <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methode wird verwendet, in Verbindung mit der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> -Methode für den Zugriff auf Ressourcen in Assemblys eingebettet.</span><span class="sxs-lookup"><span data-stu-id="e127e-309">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="e127e-310">Weitere Informationen zur Verwendung von Ressourcen in Anwendungen finden Sie unter [ASP.NET Web Page Resources Overview](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="e127e-310">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-311">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-311">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="e127e-312">Die *Typ* Parameter in diesem Beispiel wird festgelegt, in den Typ der Klasse in der Assembly, die mit der Ressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-312">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="e127e-313">Die `resourceName` Parameter wird angegeben, durch den vollqualifizierten Pfad zu der Ressource, die den Standardnamespace enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-313">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="e127e-314">Im folgenden Codebeispiel wird veranschaulicht, wie programmgesteuert Anwenden der <xref:System.Web.UI.WebResourceAttribute> Attribut für die Metadaten die Assembly für die Ressourcen markieren, die verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-314">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="e127e-315">Kompilieren Sie die folgende Klasse in einer Klassenbibliothek mit einem Standardnamespace festgelegt `Samples.AspNet.CS.Controls` oder `Samples.AspNet.VB.Controls`, je nachdem, in welcher Sprache Sie verwenden.</span><span class="sxs-lookup"><span data-stu-id="e127e-315">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="e127e-316">Dieses Beispiel erfordert eine JavaScript-Datei mit dem Namen `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="e127e-316">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="e127e-317">Die JS-Datei ist eine eingebettete Ressource in die Assembly mit der `ClientScriptResourceLabel` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-317">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="e127e-318">Wenn Sie Visual Studio im Fenster "Eigenschaften" das Klassenbibliotheksprojekt verwenden, legen Sie **Buildvorgang** zu **eingebettete Ressource** Wenn die Skript-Datei ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-318">If you are using Visual Studio, in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="e127e-319">Wenn Sie die Bibliothek in der Befehlszeile kompilieren, verwenden Sie die [/Resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) Switch zum Einbetten der Ressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-319">If you are compiling the library at the command line, use the [/resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-320">Der Webressourcentyp ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-320">The web resource type is <see langword="null" />.</span></span>

<span data-ttu-id="e127e-321">- oder - </span><span class="sxs-lookup"><span data-stu-id="e127e-321">-or-</span></span>

<span data-ttu-id="e127e-322">Der Webressourcenname ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-322">The web resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e127e-323">- oder - </span><span class="sxs-lookup"><span data-stu-id="e127e-323">-or-</span></span> 
<span data-ttu-id="e127e-324">Der Webressourcenname hat eine Länge von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="e127e-324">The web resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <related type="Article" href="https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd"><span data-ttu-id="e127e-325">ASP.NET Web Page Resources Overview</span><span class="sxs-lookup"><span data-stu-id="e127e-325">ASP.NET Web Page Resources Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5212666e-98ab-47e4-a497-b5545ab15c7f"><span data-ttu-id="e127e-326">/ Resource (Ressourcendatei in Ausgabe einbetten) (C#-Compileroptionen)</span><span class="sxs-lookup"><span data-stu-id="e127e-326">/resource (Embed Resource File to Output) (C# Compiler Options)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/eee2f227-91f2-4f2b-a9d6-1c51c5320858"><span data-ttu-id="e127e-327">/resource (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e127e-327">/resource (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-328">Bestimmt, ob der Clientskriptblock für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-328">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e127e-329">Der Schlüssel des zu suchenden Clientskriptblocks.</span><span class="sxs-lookup"><span data-stu-id="e127e-329">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-330">Bestimmt unter Verwendung des angegebenen Schlüssels, ob der Clientskriptblock für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-330">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="e127e-331"><see langword="true" />, wenn der Clientskriptblock registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-331"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-332">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-332">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="e127e-333">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-333">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-334">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-334">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-335">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-335">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="e127e-336">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> -Methode ruft die Überladung, die beide akzeptiert eine `key` und `type` Parameter mit dem Typ festgelegt wird, als eine <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="e127e-336">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-337">Der Typ des zu suchenden Clientskriptblocks.</span><span class="sxs-lookup"><span data-stu-id="e127e-337">The type of the client script block to search for.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-338">Der Schlüssel des zu suchenden Clientskriptblocks.</span><span class="sxs-lookup"><span data-stu-id="e127e-338">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-339">Bestimmt unter Verwendung des Schlüssels und des Typs, ob der Clientskriptblock für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-339">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="e127e-340"><see langword="true" />, wenn der Clientskriptblock registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-340"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-341">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-341">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="e127e-342">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-342">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-343">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-343">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-344">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-344">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-345">Sie geben den Typ basierend auf das Objekt, das die Ressource zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-345">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="e127e-346">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="e127e-346">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-347">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-347">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="e127e-348">Beachten Sie, dass, wenn die Logik zum Prüfen, ob des Clientskriptblocks für vorhandene entfernt wurden, es wäre nicht zwei doppelte Client-Skripts im HTML-Quellcode der gerenderten Seite da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="e127e-348">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="e127e-349">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-349">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-350">Der Clientskripttyp ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-350">The client script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-351">Bestimmt, ob der Clientskriptinclude für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-351">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e127e-352">Der Schlüssel des zu suchenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-352">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-353">Bestimmt unter Verwendung des angegebenen Schlüssels, ob der Clientskriptinclude für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-353">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="e127e-354"><see langword="true" />, wenn der Clientskriptinclude registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-354"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-355">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-355">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="e127e-356">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-356">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-357">Ein Clientskriptinclude wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-357">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-358">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-358">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="e127e-359">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> -Methode ruft die Überladung, die beide akzeptiert eine `key` und `type` Parameter mit dem Typ festgelegt wird, als eine <xref:System.Web.UI.Page> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-359">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-360">Der Typ des zu suchenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-360">The type of the client script include to search for.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-361">Der Schlüssel des zu suchenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-361">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-362">Bestimmt unter Verwendung des Schlüssels und des Typs, ob der Clientskriptinclude für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-362">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="e127e-363"><see langword="true" />, wenn der Clientskriptinclude registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-363"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-364">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode, um zu vermeiden, Registrierung doppelter enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="e127e-365">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-365">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-366">Ein Clientskriptinclude wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-366">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-367">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-367">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-368">Sie geben den Typ basierend auf das Objekt, das die Ressource zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-368">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="e127e-369">Z. B. wenn eine Seiteninstanz verwenden, um die Ressource zugreifen, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="e127e-369">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-370">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-370">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="e127e-371">Beachten Sie, dass, wenn die Logik zum Überprüfen der vorhandenen Clientskriptinclude entfernt wurden, es wäre nicht zwei doppelte Client-Skripts im HTML-Quellcode der gerenderten Seite da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="e127e-371">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="e127e-372">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-372">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="e127e-373">Dieses Beispiel erfordert eine JavaScript-Datei mit dem Namen `Script_include.js`, mit dem folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="e127e-373">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-374">Der Typ des Clientskriptincludes ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-374">The client script include type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-375">Bestimmt, ob die OnSubmit-Anweisung für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-375">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e127e-376">Der Schlüssel der zu suchenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-376">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-377">Bestimmt anhand des angegebenen Schlüssels, ob die OnSubmit-Anweisung für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-377">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="e127e-378"><see langword="true" />, wenn die OnSubmit-Anweisung registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-378"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-379">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode zur Vermeidung von doppelten OnSubmit-Anweisungen registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-379">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="e127e-380">Dies ist besonders wichtig, wenn die Anweisung eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-380">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-381">Eine Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-381">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-382">Anweisungen mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-382">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="e127e-383">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> -Methode ruft die Überladung, die beide akzeptiert eine `key` und `type` Parameter mit dem Typ festgelegt wird, als eine <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="e127e-383">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-384">Der Typ der zu suchenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-384">The type of the OnSubmit statement to search for.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-385">Der Schlüssel der zu suchenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-385">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-386">Bestimmt unter Verwendung des angegebenen Schlüssels und Typs, ob die OnSubmit-Anweisung für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-386">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="e127e-387"><see langword="true" />, wenn die OnSubmit-Anweisung registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-387"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-388">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode zur Vermeidung von doppelten-Anweisungen registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-388">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="e127e-389">Dies ist besonders wichtig, wenn die Anweisung eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-389">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-390">Eine Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-390">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-391">Anweisungen mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-391">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-392">Sie geben den Typ basierend auf das Objekt, das die Ressource zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-392">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="e127e-393">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="e127e-393">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-394">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-394">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="e127e-395">Ein Skript namens `OnSubmitScript` registriert ist, mit der <xref:System.Web.UI.Page> , damit bei der Seite-Formular übermittelt wird. das Skript wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e127e-395">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-396">Der Typ der OnSubmit-Anweisung ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-396">The OnSubmit statement type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-397">Bestimmt, ob das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-397">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e127e-398">Der Schlüssel des zu suchenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-398">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-399">Bestimmt unter Verwendung des angegebenen Schlüssels, ob das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-399">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="e127e-400"><see langword="true" />, wenn das Startskript registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-400"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-401">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-401">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="e127e-402">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-402">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-403">Ein Startskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-403">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-404">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-404">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="e127e-405">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode ruft die Überladung, die sowohl eine Zeichenfolge akzeptiert `key` und `type` Parameter mit dem Typ festgelegt wird, als eine <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="e127e-405">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-406">Der Typ des zu suchenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-406">The type of the startup script to search for.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-407">Der Schlüssel des zu suchenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-407">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="e127e-408">Bestimmt unter Verwendung des angegebenen Schlüssels und Typs, ob das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-408">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="e127e-409"><see langword="true" />, wenn das Startskript registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-409"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-410">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-410">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="e127e-411">Dies ist besonders wichtig, wenn das Skript eine große Menge der zu erstellenden Serverressourcen erfordert.</span><span class="sxs-lookup"><span data-stu-id="e127e-411">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="e127e-412">Ein Client-Startskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-412">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-413">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-413">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-414">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-414">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="e127e-415">Beachten Sie, dass, wenn die Logik zum Prüfen, ob die vorhandenen Startskriptblock entfernt wurden, es wäre nicht zwei doppelte Startskripts im HTML-Quellcode der gerenderten Seite da die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="e127e-415">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="e127e-416">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-416">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-417">Der Startskripttyp ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-417">The startup script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName"><span data-ttu-id="e127e-418">Der zu registrierende Arrayname.</span><span class="sxs-lookup"><span data-stu-id="e127e-418">The array name to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="e127e-419">Der zu registrierende Arraywert bzw. die zu registrierenden Arraywerte.</span><span class="sxs-lookup"><span data-stu-id="e127e-419">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="e127e-420">Registriert unter Verwendung eines Arraynamens und eines Arraytyps eine JavaScript-Arraydeklaration für ein <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-420">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-421">Die <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> überprüft, ob ein registriertes Array mit den gleichen Namen wie den in angegebenen Namen vorhanden ist die `arrayName` Parameter und, wenn dies der Fall ist, fügt im angegebenen Werte die `arrayValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-421">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="e127e-422">Da die zugrunde liegenden Speichermechanismus basiert eine <xref:System.Collections.ArrayList>, Duplikate sind zulässig.</span><span class="sxs-lookup"><span data-stu-id="e127e-422">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="e127e-423">Wenn kein registriertes Array mit den gleichen Namen wie die `arrayName` Parameter ist nicht vorhanden, wird Sie erstellt und die Werte in der `arrayValue` Parameter hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-423">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="e127e-424">Wenn Sie Zeichenfolgenliterale in der sich ergebenden JavaScript-Array, einfache Anführungszeichen (') enthalten oder mit Escapezeichen versehen doppelte Anführungszeichen (\\") in der `arrayValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-424">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="e127e-425">Der Wert des der `arrayValue` Parameter muss ein einzelnes Element sein.</span><span class="sxs-lookup"><span data-stu-id="e127e-425">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="e127e-426">Wenn mehr als einen Wert in das Array hinzugefügt werden muss, stellen Sie mehrere Aufrufe, die mit der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-426">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-427">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> und <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="e127e-427">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="e127e-428">Im Beispiel wird ein Array und einen ausgeblendeten Wert registriert und definiert die `OnClick` Ereignis eine `<input>` Schaltfläche, um die Summe der beiden Werte des Arrays und dem ausgeblendeten Wert zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="e127e-428">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-429"><paramref name="arrayName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-429"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-430">Registriert das Clientskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-431">Der Typ des zu registrierenden Clientskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-431">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-432">Der Schlüssel des zu registrierenden Clientskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-432">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="e127e-433">Das zu registrierende Clientskriptliteral.</span><span class="sxs-lookup"><span data-stu-id="e127e-433">The client script literal to register.</span></span></param>
        <summary><span data-ttu-id="e127e-434">Registriert unter Verwendung eines Typs, eines Schlüssels und eines Skriptliterals das Clientskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-435">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-436">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-437">Nur ein Skript mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-438">Versucht, ein Skript zu registrieren, die bereits registriert ist, wird ein Duplikat des Skripts nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="e127e-439">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode, um zu bestimmen, ob ein Clientskript mit einem angegebenen Paar aus Schlüssel und Typ bereits registriert ist und nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="e127e-440">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode, Sie müssen sicherstellen, dass das Skript, in bereitgestellt der `script` Parameter als Wrapper versehen einer `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-440">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="e127e-441">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode fügt einen Skriptblock an den Anfang der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-441">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="e127e-442">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="e127e-442">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="e127e-443">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> das Objekt, für die Skripts in einer einzelnen Zeichenfolge zusammenfassen, und registrieren Sie sie alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-443">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-444">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-444">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-445">Der Typ des zu registrierenden Clientskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-445">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-446">Der Schlüssel des zu registrierenden Clientskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-446">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="e127e-447">Das zu registrierende Clientskriptliteral.</span><span class="sxs-lookup"><span data-stu-id="e127e-447">The client script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="e127e-448">Ein boolescher Wert, der angibt, ob Skripttags hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e127e-448">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="e127e-449">Registriert unter Verwendung eines Typs, eines Schlüssels, eines Skriptliterals sowie eines booleschen Werts, der angibt, ob Skripttags hinzugefügt werden sollen, das Clientskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-449">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-450">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-450">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-451">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-451">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-452">Nur ein Skript mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-452">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-453">Versucht, ein Skript zu registrieren, die bereits registriert ist, wird ein Duplikat des Skripts nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-453">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="e127e-454">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode, um zu bestimmen, ob ein Clientskript mit einem angegebenen Paar aus Schlüssel und Typ bereits registriert ist.</span><span class="sxs-lookup"><span data-stu-id="e127e-454">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="e127e-455">Dadurch können Sie nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-455">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="e127e-456">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode können Sie angeben, ob das Skript, in bereitgestellt der `script` Parameter in gesetzt ist eine `<script>` Elementblock mithilfe der `addScriptTags` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-456">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="e127e-457">Festlegen von `addScriptTags` zu `true` gibt an, dass die Skripttags automatisch hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-457">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="e127e-458">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode fügt einen Skriptblock an den Anfang der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-458">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="e127e-459">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="e127e-459">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="e127e-460">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> das Objekt, für die Skripts in einer einzelnen Zeichenfolge zusammenfassen, und registrieren Sie sie alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-460">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-461">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-461">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="e127e-462">Beachten Sie, dass die `addScriptTags` Parametersatz zu `true` , damit die öffnenden und schließenden Skripttags nicht enthalten sind die `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-462">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-463">Der Typ des Clientskriptblocks ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-463">The client script block type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-464">Registriert den Clientskriptinclude für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-464">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e127e-465">Der Schlüssel des zu registrierenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-465">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="e127e-466">Die URL des zu registrierenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-466">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="e127e-467">Registriert das Clientskript beim <see cref="T:System.Web.UI.Page" />-Objekt mit einem Schlüssel und einer URL, wodurch das Skript vom Client aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="e127e-467">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-468">Ein Clientskriptinclude wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-468">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-469">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-469">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-470">Nur ein Skript mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-470">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-471">Versucht, ein Skript zu registrieren, die bereits registriert ist, wird ein Duplikat des Skripts nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-471">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="e127e-472">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> Methode, um zu bestimmen, ob der Clientskriptinclude mit einem angegebenen Schlüssel und Typ-Paar ist bereits registriert und nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-472">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-473">Um die Client-URL zu beheben, verwenden Sie die <xref:System.Web.UI.Control.ResolveClientUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-473">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="e127e-474">Diese Methode verwendet den Kontext der URL auf dem sie aufgerufen wird, um den Pfad zu beheben.</span><span class="sxs-lookup"><span data-stu-id="e127e-474">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="e127e-475">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode ruft die Überladung mit einer `key`, `URL`, und ein `type` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-475">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="e127e-476">Die Methode fügt einen Skriptblock am oberen Rand der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-476">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-477">Weitere Informationen sowie zu Syntax, Nutzung und ein Beispiel finden Sie unter <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="e127e-477">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-478">Der Typ des zu registrierenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-478">The type of the client script include to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-479">Der Schlüssel des zu registrierenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-479">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="e127e-480">Die URL des zu registrierenden Clientskriptincludes.</span><span class="sxs-lookup"><span data-stu-id="e127e-480">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="e127e-481">Registriert unter Verwendung eines Typs, eines Schlüssels sowie einer URL den Clientskriptinclude für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-481">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-482">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> -Methode übernimmt *Schlüssel* und *Url* Parameter zum Identifizieren des Skripts, als auch ein `type` enthalten Parameter, um die Kennung des Clientskripts anzugeben.</span><span class="sxs-lookup"><span data-stu-id="e127e-482">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="e127e-483">Sie geben den Typ basierend auf das Objekt, das die Ressource zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-483">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="e127e-484">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="e127e-484">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e127e-485">Um die Client-URL zu beheben, verwenden Sie die <xref:System.Web.UI.Control.ResolveClientUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-485">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="e127e-486">Diese Methode verwendet den Kontext der URL auf dem sie aufgerufen wird, um den Pfad zu beheben.</span><span class="sxs-lookup"><span data-stu-id="e127e-486">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="e127e-487">Diese Methode fügt einen Skriptblock am oberen Rand der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-487">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-488">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-488">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="e127e-489">Beachten Sie, dass, wenn die Logik zum Überprüfen der vorhandenen Clientskriptinclude entfernt wurden, es wäre immer noch nicht, doppelte Clientskripts auf der gerenderten Seite da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="e127e-489">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="e127e-490">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-490">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="e127e-491">Dieses Beispiel erfordert eine JavaScript-Datei mit dem Namen Script_include.js mit dem folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="e127e-491">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-492">Der Typ des Clientskriptincludes ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-492">The client script include type is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e127e-493">Die URL ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-493">The URL is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e127e-494">- oder - </span><span class="sxs-lookup"><span data-stu-id="e127e-494">-or-</span></span> 
<span data-ttu-id="e127e-495">Der URL ist leer.</span><span class="sxs-lookup"><span data-stu-id="e127e-495">The URL is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-496">Der Typ der zu registrierenden Clientskriptressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-496">The type of the client script resource to register.</span></span></param>
        <param name="resourceName"><span data-ttu-id="e127e-497">Der Name der zu registrierenden Clientskriptressource.</span><span class="sxs-lookup"><span data-stu-id="e127e-497">The name of the client script resource to register.</span></span></param>
        <summary><span data-ttu-id="e127e-498">Registriert die Clientskriptressource unter Verwendung eines Typ und eines Ressourcennamens für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-498">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-499">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode wird verwendet, wenn Sie kompilierte Ressourcen aus Assemblys, die über der WebResource.axd-HTTP-Handler zugreifen.</span><span class="sxs-lookup"><span data-stu-id="e127e-499">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="e127e-500">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode registriert das Skript mit dem <xref:System.Web.UI.Page> Objekt aus, und verhindert, dass doppelte Skripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-500">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="e127e-501">Diese Methode dient als Wrapper für den Inhalt des Ressourcen-URL mit einem `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-501">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-502">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-502">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="e127e-503">Im folgenden Codebeispiel wird veranschaulicht, wie programmgesteuert Anwenden der <xref:System.Web.UI.WebResourceAttribute> Attribut für die Metadaten die Assembly für die Ressourcen markieren, die verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-503">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="e127e-504">Dieses Beispiel erfordert eine JavaScript-Datei mit dem Namen `Script_include.js`, mit dem folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="e127e-504">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="e127e-505">Kompilieren Sie die `Script_include.js` -Datei als Ressource in der `Samples.AspNet.CS.Controls` Assembly mit der `ClientScriptResourceLabel` Klasse.</span><span class="sxs-lookup"><span data-stu-id="e127e-505">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-506">Der Clientressourcentyp ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-506">The client resource type is <see langword="null" />.</span></span>

<span data-ttu-id="e127e-507">- oder - </span><span class="sxs-lookup"><span data-stu-id="e127e-507">-or-</span></span>

<span data-ttu-id="e127e-508">Der Clientressourcenname ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-508">The client resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e127e-509">- oder - </span><span class="sxs-lookup"><span data-stu-id="e127e-509">-or-</span></span> 
<span data-ttu-id="e127e-510">Der Clientressourcenname hat eine Länge von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="e127e-510">The client resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-511">Registriert ein Name-Wert-Paar als benutzerdefiniertes Attribut (Expando-Attribut) des angegebenen Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="e127e-511">Registers a name/value pair as a custom (expando) attribute of the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e127e-512">Das <see cref="T:System.Web.UI.Control" /> auf der Seite, die das benutzerdefinierte Attribut enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-512">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="e127e-513">Der Name des zu registrierenden benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="e127e-513">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="e127e-514">Der Wert des benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="e127e-514">The value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="e127e-515">Registriert ein Name-Wert-Paar mithilfe einer bestimmten Steuerelement-ID, eines Attributnamens und eines Attributwerts als benutzerdefiniertes Attribut (Expando-Attribut) des angegebenen Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="e127e-515">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-516">Die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode registriert ein Name/Wert-Paar als benutzerdefiniertes (Expando) Attribut für den angegebenen <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="e127e-516">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="e127e-517">Das Expando-Attribut wird von JavaScript dynamisch festgelegt, XHTML-Kompatibilität für das gerenderte Markup des Steuerelements beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-517">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="e127e-518">Anführungszeichen und umgekehrte Schrägstriche in Attributwerten den benutzerdefinierten (Expando) werden mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="e127e-518">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="e127e-519">Wenn Sie keine Anführungszeichen und umgekehrte Schrägstriche mit Escapezeichen versehen möchten, rufen Sie die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Überladungsmethode, und legen Sie die `encode` Parameter, um `false`.</span><span class="sxs-lookup"><span data-stu-id="e127e-519">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="e127e-520">Wenn das Expando-Attribut nicht gefunden wurde oder das Steuerelement, das Expando-Attribut hinzugefügt wurde nicht gefunden, das Clientskript wird immer noch ausgegeben, aber das Steuerelement sind davon nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="e127e-520">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e127e-521">Das <see cref="T:System.Web.UI.Control" /> auf der Seite, die das benutzerdefinierte Attribut enthält.</span><span class="sxs-lookup"><span data-stu-id="e127e-521">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="e127e-522">Der Name des zu registrierenden benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="e127e-522">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="e127e-523">Der Wert des benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="e127e-523">The value of the custom attribute.</span></span></param>
        <param name="encode"><span data-ttu-id="e127e-524">Ein boolescher Wert, der angibt, ob das zu registrierende benutzerdefinierte Attribut codiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="e127e-524">A Boolean value indicating whether to encode the custom attribute to register.</span></span></param>
        <summary><span data-ttu-id="e127e-525">Registriert ein Name-Wert-Paar mithilfe einer bestimmten Steuerelement-ID, eines Attributnamens und eines Attributwerts sowie eines booleschen Werts (der angibt, ob der Attributwert codiert werden soll) als benutzerdefiniertes Attribut (Expando-Attribut) des angegebenen Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="e127e-525">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-526">Die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode registriert ein Name/Wert-Paar als benutzerdefiniertes (Expando) Attribut für den angegebenen <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="e127e-526">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="e127e-527">Das Expando-Attribut wird von JavaScript dynamisch festgelegt, XHTML-Kompatibilität für das gerenderte Markup des Steuerelements beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-527">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="e127e-528">Legen Sie die `encode` Parameter `true` Anführungszeichen und umgekehrte Schrägstriche in Ihre Expando-Attribut-Wert mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e127e-528">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="e127e-529">Wenn das Expando-Attribut nicht gefunden wurde oder das Steuerelement, das Expando-Attribut hinzugefügt wurde nicht gefunden, das Clientskript wird immer noch ausgegeben, aber das Steuerelement sind davon nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="e127e-529">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-530">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode der <xref:System.Web.UI.ClientScriptManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e127e-530">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="e127e-531">Das Clientskript in der gerenderten Seite legt die `title` Attribut eine `<span>` Element.</span><span class="sxs-lookup"><span data-stu-id="e127e-531">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-532">Registriert einen Ereignisverweis für die Validierung.</span><span class="sxs-lookup"><span data-stu-id="e127e-532">Registers an event reference for validation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="e127e-533">Eine eindeutige ID, die das Clientsteuerelement darstellt, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-533">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="e127e-534">Registriert einen Ereignisverweis für die Validierung bei einer eindeutigen Steuerelement-ID, die das Clientsteuerelement darstellt, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-534">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-535">Weitere Informationen und Beispiele finden Sie unter den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-535">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-536">Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode zum Registrieren eines Rückrufs für die Überprüfung, und überprüfen Sie, dass der Rückruf über die Seite stammt.</span><span class="sxs-lookup"><span data-stu-id="e127e-536">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="e127e-537">Ein <see cref="T:System.Web.UI.PostBackOptions" />-Objekt, das angibt, wie clientseitiges JavaScript zum Initiieren eines Postbackereignisses generiert wird.</span><span class="sxs-lookup"><span data-stu-id="e127e-537">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span></span></param>
        <summary><span data-ttu-id="e127e-538">Registriert einen Ereignisverweis für die Validierung bei <see cref="T:System.Web.UI.PostBackOptions" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-538">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-539">Weitere Informationen und Beispiele finden Sie unter den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-539">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="e127e-540">Eine eindeutige ID, die das Clientsteuerelement darstellt, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-540">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-541">An das Clientereignis übergebene Ereignisargumente.</span><span class="sxs-lookup"><span data-stu-id="e127e-541">Event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="e127e-542">Registriert einen Ereignisverweis für die Validierung bei einer eindeutigen Steuerelement-ID und Ereignisargumenten, die das Clientsteuerelement darstellen, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-542">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e127e-543">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode zum Registrieren eines Rückrufs für die Validierung und um sicherzustellen, dass der Rückruf von der Seite stammen.</span><span class="sxs-lookup"><span data-stu-id="e127e-543">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="e127e-544">Zur Verbesserung der für die Validierung, die im Beispiel gezeigt, Sie könnten die Validierung ändern `argument` Parameter, um Informationen zu Benutzer z. B. einer Identität oder Rolle enthalten</span><span class="sxs-lookup"><span data-stu-id="e127e-544">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="e127e-545">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode, um einen Rückruf für die Validierung zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="e127e-545">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e127e-546">Die Methode wird vor der <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e127e-546">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/18fc94c9-56fc-46c3-9f29-7358f18667df"><span data-ttu-id="e127e-547">Clientrückruf mit Beispiel für die Implementierung von Validierung</span><span class="sxs-lookup"><span data-stu-id="e127e-547">Client Callback with Validation Implementation Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName"><span data-ttu-id="e127e-548">Der Name des zu registrierenden ausgeblendeten Felds.</span><span class="sxs-lookup"><span data-stu-id="e127e-548">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="e127e-549">Der Anfangswert des zu registrierenden Felds.</span><span class="sxs-lookup"><span data-stu-id="e127e-549">The initial value of the field to register.</span></span></param>
        <summary><span data-ttu-id="e127e-550">Registriert einen ausgeblendeten Wert für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-550">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-551">Die <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> erstellt die Methode ein ausgeblendetes `<input>` Element auf der gerenderten HTML-Seite.</span><span class="sxs-lookup"><span data-stu-id="e127e-551">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-552">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> und <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="e127e-552">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="e127e-553">Im Beispiel wird ein Array und einen ausgeblendeten Wert registriert und definiert die `OnClick` Ereignis eine `<input>` Schaltfläche, um die Summe der beiden Werte des Arrays und dem ausgeblendeten Wert zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="e127e-553">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-554"><paramref name="hiddenFieldName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-554"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-555">Der Typ der zu registrierenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-555">The type of the OnSubmit statement to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-556">Der Schlüssel der zu registrierenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-556">The key of the OnSubmit statement to register.</span></span></param>
        <param name="script"><span data-ttu-id="e127e-557">Das Skriptliteral der zu registrierenden OnSubmit-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e127e-557">The script literal of the OnSubmit statement to register.</span></span></param>
        <summary><span data-ttu-id="e127e-558">Registriert unter Verwendung eines Typs, eines Schlüssels sowie eines Skriptliterals eine OnSubmit-Anweisung für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-558">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span> <span data-ttu-id="e127e-559">Die Anweisung wird beim Übermitteln des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e127e-559">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-560">Eine OnSubmit-Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-560">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-561">Anweisungen mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-561">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-562">Nur eine Anweisung mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-562">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-563">Versucht, eine Anweisung zu registrieren, die bereits registriert ist, wird ein Duplikat der Anweisung nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-563">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="e127e-564">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> Methode, um zu bestimmen, ob eine OnSubmit-Anweisung mit einem angegebenen Paar aus Schlüssel und Typ bereits registriert ist und nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-564">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="e127e-565">Die `script` Parameter, der die <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode kann mehrere Skriptbefehle enthalten, solange sie ordnungsgemäß mit einem Semikolon (;) getrennte sind.</span><span class="sxs-lookup"><span data-stu-id="e127e-565">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="e127e-566">Die <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Fügt ein Skript, das ausgeführt wird, bevor die Seite übermittelt wird, und bietet Ihnen die Möglichkeit der Übermittlung.</span><span class="sxs-lookup"><span data-stu-id="e127e-566">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="e127e-567">Weitere Informationen zum HTML-Formulare und `OnSubmit` Attribut, finden Sie unter den [World Wide Web Consortium (W3C)-Website](https://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="e127e-567">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-568">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-568">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-569"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-569"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-570">Registriert das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-570">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-571">Der Typ des zu registrierenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-571">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-572">Der Schlüssel des zu registrierenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-572">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="e127e-573">Das zu registrierende Startskriptliteral.</span><span class="sxs-lookup"><span data-stu-id="e127e-573">The startup script literal to register.</span></span></param>
        <summary><span data-ttu-id="e127e-574">Registriert unter Verwendung eines Typs, eines Schlüssels und eines Skriptliterals das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-574">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-575">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-575">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-576">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-576">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-577">Nur ein Skript mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-577">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-578">Versucht, ein Skript zu registrieren, die bereits registriert ist, wird ein Duplikat des Skripts nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-578">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="e127e-579">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode, um zu bestimmen, ob ein Startskript mit einem angegebenen Paar aus Schlüssel und Typ bereits registriert ist und nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-579">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="e127e-580">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode, Sie müssen sicherstellen, dass das Skript, in bereitgestellt der `script` Parameter in gesetzt ist eine `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-580">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="e127e-581">Der Skriptblock hinzugefügt, indem die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode ausgeführt wird, wenn die Seite geladen wurde, aber vor der Seite <xref:System.Web.UI.Control.OnLoad%2A> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e127e-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="e127e-582">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="e127e-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="e127e-583">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> das Objekt, für die Skripts in einer einzelnen Zeichenfolge zusammenfassen, und registrieren Sie sie alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-584">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="e127e-585">Beachten Sie, die die öffnenden und schließenden Skripttags, in enthalten sind der `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-585">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="e127e-586">Um das Skript zu erhalten, basierend auf einem zusätzlichen Parameter-Einstellung, Tags hinzugefügt wurden, finden Sie unter, den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-586">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e127e-587">Der Typ des zu registrierenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-587">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="e127e-588">Der Schlüssel des zu registrierenden Startskripts.</span><span class="sxs-lookup"><span data-stu-id="e127e-588">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="e127e-589">Das zu registrierende Startskriptliteral.</span><span class="sxs-lookup"><span data-stu-id="e127e-589">The startup script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="e127e-590">Ein boolescher Wert, der angibt, ob Skripttags hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e127e-590">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="e127e-591">Registriert unter Verwendung eines Typs, eines Schlüssels, eines Skriptliterals sowie eines booleschen Werts, der angibt, ob Skripttags hinzugefügt werden sollen, das Startskript für das <see cref="T:System.Web.UI.Page" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e127e-591">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e127e-592">Ein Startskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e127e-592">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="e127e-593">Skripts mit den gleichen Schlüssel und Typ werden als Duplikate betrachtet.</span><span class="sxs-lookup"><span data-stu-id="e127e-593">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="e127e-594">Nur ein Skript mit einem angegebenen Typ und das Schlüsselpaar kann mit der Seite registriert werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-594">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="e127e-595">Versucht, ein Skript zu registrieren, die bereits registriert ist, wird ein Duplikat des Skripts nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="e127e-595">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="e127e-596">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode, um zu bestimmen, ob ein Startskript mit einem angegebenen Paar aus Schlüssel und Typ bereits registriert ist und nicht unnötigerweise das Skript hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e127e-596">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="e127e-597">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode können Sie angeben, ob das Skript, in bereitgestellt der `script` Parameter in gesetzt ist eine `<script>` Elementblock mithilfe der `addScriptTags` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-597">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="e127e-598">Festlegen von `addScriptTags` zu `true` gibt an, dass die Skripttags automatisch hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e127e-598">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="e127e-599">Der Skriptblock hinzugefügt, indem die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode ausgeführt wird, wenn die Seite geladen wurde, aber vor der Seite <xref:System.Web.UI.Control.OnLoad%2A> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e127e-599">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="e127e-600">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="e127e-600">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="e127e-601">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> das Objekt, für die Skripts in einer einzelnen Zeichenfolge zusammenfassen, und registrieren Sie sie alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="e127e-601">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e127e-602">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e127e-602">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="e127e-603">Beachten Sie, dass die `addScriptTags` Parametersatz zu `false` , damit die öffnenden und schließenden Skripttags enthalten sind die `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e127e-603">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e127e-604"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e127e-604"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e127e-605">Validiert ein Clientereignis.</span><span class="sxs-lookup"><span data-stu-id="e127e-605">Validates a client event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="e127e-606">Eine eindeutige ID, die das Clientsteuerelement darstellt, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-606">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="e127e-607">Validiert ein Clientereignis, das mit der <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />-Methode für die Ereignisvalidierung registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="e127e-607">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="e127e-608">Eine eindeutige ID, die das Clientsteuerelement darstellt, das das Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="e127e-608">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="e127e-609">An das Clientereignis übergebene Ereignisargumente.</span><span class="sxs-lookup"><span data-stu-id="e127e-609">The event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="e127e-610">Validiert ein Clientereignis, das mit der <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />-Methode für die Ereignisvalidierung registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="e127e-610">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e127e-611">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode zum Registrieren eines Rückrufs für die Validierung und um sicherzustellen, dass der Rückruf von der Seite stammen.</span><span class="sxs-lookup"><span data-stu-id="e127e-611">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="e127e-612">Zur Verbesserung der für die Validierung, die hier gezeigten können Sie die Überprüfung ändern `argument` Parameter, um Informationen zu Benutzer z. B. einer Identität oder Rolle enthalten</span><span class="sxs-lookup"><span data-stu-id="e127e-612">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e127e-613"><paramref name="uniqueId" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="e127e-613"><paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>