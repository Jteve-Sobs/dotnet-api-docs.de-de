<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d1aaf1836d51670198575fb3b23de5427984cc3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378665" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fc998-101">Defines methods for managing client scripts in Web applications.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc998-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-102">Die <xref:System.Web.UI.ClientScriptManager> Klasse dient zum Verwalten von Clientskripts und Webanwendungen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="fc998-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="fc998-103">Erhalten Sie einen Verweis auf die <xref:System.Web.UI.ClientScriptManager> -Klasse aus den <xref:System.Web.UI.Page.ClientScript%2A> Eigenschaft von der <xref:System.Web.UI.Page> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc998-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="fc998-104">Sie können ein Clientskript deklarativ zu einer Webseite hinzufügen, indem Sie das Skript in das HTML-Markup der Seite einschließen.</span><span class="sxs-lookup"><span data-stu-id="fc998-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="fc998-105">Es gibt jedoch auch Situationen ein Dynamisches Hinzufügen von Clientskripts erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="fc998-106">Um ein Skript dynamisch hinzuzufügen, verwenden die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode, die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> -Methode, die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode oder die <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> -Methode, je nachdem, wann und wie Sie das Skript hinzufügen möchten.</span><span class="sxs-lookup"><span data-stu-id="fc998-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="fc998-107">Weitere Informationen finden Sie unter [wie: Hinzufügen Client Skript dynamisch für ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="fc998-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="fc998-108">Die <xref:System.Web.UI.ClientScriptManager> Klasse eindeutig identifiziert Skripts unter Verwendung eines Schlüssels <xref:System.String> und ein <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="fc998-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="fc998-109">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-110">Verwenden den Skripttyp hilft verwirrend ähnliche Skripts aus verschiedenen Benutzersteuerelemente zu vermeiden, die auf der Seite verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc998-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="fc998-111">Die <xref:System.Web.UI.ClientScriptManager> Klasse kann verwendet werden, um die Clientrückrufe in Situationen aufrufen, wenn es wünschenswert ist, Servercode vom Client ausgeführt wird, ohne ein Postback ausführt.</span><span class="sxs-lookup"><span data-stu-id="fc998-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="fc998-112">Dies ist einen Out-of-Band-Rückruf an den Server ausführt bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="fc998-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="fc998-113">Bei einem Clientrückruf sendet eine Client-Skriptfunktion eine asynchrone Anforderung an eine ASP.NET-Webseite an.</span><span class="sxs-lookup"><span data-stu-id="fc998-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="fc998-114">Die Webseite führt eine geänderte Version des normalen Lebenszyklus, den Prozess der Rückruf.</span><span class="sxs-lookup"><span data-stu-id="fc998-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="fc998-115">Verwenden der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode, um einem Verweis auf eine Clientfunktion abzurufen, die beim Aufrufen, wird einen Clientrückruf für ein Serverereignis initiiert.</span><span class="sxs-lookup"><span data-stu-id="fc998-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="fc998-116">Weitere Informationen finden Sie unter [Implementing Client Rückrufe ohne Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="fc998-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-117">Skript-Rückrufe funktionieren nicht in älteren Browsern, die nicht (DOKUMENTOBJEKTMODELL unterstützen) und erfordern, dass ECMAScript auf dem Client aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="fc998-118">Verwenden Sie zum Überprüfen, ob der Browser Rückrufe unterstützt, die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> -Eigenschaft, die über den möglich ist die <xref:System.Web.HttpRequest.Browser%2A> Eigenschaft von der systeminterne ASP.NET <xref:System.Web.HttpContext.Request%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc998-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="fc998-119">Verwenden der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> Methode, um ein Clientpostbackereignis definieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="fc998-120">Diese Methoden aktivieren Clientskriptfunktionen, wenn aufgerufen, um den Server zum Zurücksenden an die Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="fc998-121">Ein Clientpostbackereignis unterscheidet sich von einem Clientrückruf insofern, dass die Webseite einen normalen Lebenszyklus den Prozess des Client-Postbacks abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-122">Bei Verwendung von einer <xref:System.Web.UI.WebControls.Button> Steuerelement und die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> -Eigenschaftensatz auf `false`, dann können Sie mithilfe der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode, um den Client zurückzugeben Postbackereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="fc998-123">Die <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Button> -Steuerelement, <xref:System.Web.UI.WebControls.ImageButton> -Steuerelement, und <xref:System.Web.UI.WebControls.LinkButton> -Steuerelement kann verwendet werden, um Clientskript auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc998-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-124">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode der <xref:System.Web.UI.ClientScriptManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fc998-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="fc998-125">Zwei Clientskripts werden auf der Seite definiert: `PopupScript`, dem eine Warnmeldung angezeigt, wenn die Seite geladen ist, und `ButtonClickScript`, die einen Client-Ereignishandler für einer HTML-Schaltfläche definiert `onClick` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fc998-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="fc998-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-129">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-129">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="fc998-130">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-130">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fc998-131">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-131">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="fc998-132">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-132">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-133">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-133">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="fc998-134">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-134">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-135">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-135">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-136">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> -Methode führt einen Out-of-Band-Rückruf an den Server, eine geänderte Version des normalen Lebenszyklus einer Seite befindet.</span><span class="sxs-lookup"><span data-stu-id="fc998-136">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="fc998-137">Weitere Informationen finden Sie unter [Implementing Client Rückrufe ohne Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="fc998-137">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-138">Wenn der Browser Microsoft Internet Explorer (Version 5.0 oder höher) ist, wird das Skriptrückrufmechanismus wird durch das Microsoft.XmlHttp-COM-Objekt implementiert und muss der Browser ActiveX-Steuerelemente ausführen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-138">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="fc998-139">Für andere Browser wird ein XMLHttpRequest mithilfe des Browsers lokale (DOKUMENTOBJEKTMODELL) verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc998-139">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="fc998-140">Um zu überprüfen, ob ein Browser Clientrückrufe unterstützt, verwenden Sie die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fc998-140">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="fc998-141">Um zu überprüfen, ob ein Browser XML über HTTP unterstützt, verwenden die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fc998-141">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="fc998-142">Beide Eigenschaften stehen über die <xref:System.Web.HttpRequest.Browser%2A> Eigenschaft von der systeminterne ASP.NET <xref:System.Web.HttpContext.Request%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc998-142">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="fc998-143">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode führt einen Rückruf synchron mit XML über HTTP.</span><span class="sxs-lookup"><span data-stu-id="fc998-143">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="fc998-144">Beim synchronen Senden von Daten in einem Rückrufszenario mit wird synchrone Rückrufe sofort zurückgegeben und den Browser nicht blockieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-144">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="fc998-145">Keine zwei synchrone Rückrufe kann zur gleichen Zeit im Browser ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-145">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="fc998-146">Wenn ein zweiter synchroner Rückruf ausgelöst wird, während eine zurzeit aussteht, wird vom zweite synchrone Rückruf bricht ab, das erste, und nur der zweite Rückruf wird zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="fc998-146">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="fc998-147">Um Daten asynchron zu senden, verwenden Sie eine der Überladungen, die die `useAsync` -Parameter, der ein boolescher Wert Wert steuern dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="fc998-147">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="fc998-148">In einem asynchronen Szenario können Sie mehrere ausstehende Rückrufe haben; die Reihenfolge, in der sie zurückzugeben ist jedoch nicht garantiert, entsprechend die Reihenfolge, in der sie initiiert wurden.</span><span class="sxs-lookup"><span data-stu-id="fc998-148">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="fc998-149">Darüber hinaus diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode gibt keine Clientfunktion, um die Groß-/Kleinschreibung von generierten Fehlerzustand behandeln die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-149">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="fc998-150">Um einen Client Rückruf Fehlerhandler anzugeben, verwenden Sie eine der Überladungen, die die `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-150">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="fc998-151">Die <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Methode akzeptiert eine optionale Zeichenfolge `argument` Parameter und gibt eine Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="fc998-151">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="fc998-152">Übergeben oder mehrere Werte zu erhalten, verketten Sie Werte in der Eingabe oder Rückgabezeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="fc998-152">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-153">Verwenden Sie den Ansichtszustand in der Implementierung von Seiten- oder Eigenschaften, die während der Skriptvorgänge-Rückruf aktualisiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="fc998-153">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="fc998-154">Wenn die Eigenschaften sind, diesen Zwischenfall zu überstehen Seitenanforderungen, können Sie den Sitzungsstatus verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc998-154">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-155">Im folgenden Codebeispiel wird veranschaulicht, wie mit zwei Überladungen der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode in einem Client-Rückruf-Szenario, in der ganzen Zahlen erhöht.</span><span class="sxs-lookup"><span data-stu-id="fc998-155">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="fc998-156">Zwei Rückrufmechanismen werden angezeigt. der Unterschied ist die Verwendung von der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-156">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="fc998-157">Ein `ReceiveServerData1` Client Callback-Funktion wird bereitgestellt, mit der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-157">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="fc998-158">Im Gegensatz dazu die `ReceiveServerData2` Clientrückruffunktion wird definiert, einem `<script>` -Block auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-158">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="fc998-159">Ein <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode ist der Serverhandler, der der Wert erhöht, die an sie übergeben wird und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methodenrückgabe den inkrementierten Wert als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="fc998-159">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="fc998-160">Wenn die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode einen Fehler zurückgibt, wird das `ProcessCallBackError` Clientfunktion wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fc998-160">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-161">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-161">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc998-162">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-162">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-163">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-163">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="fc998-164">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-164">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-165">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-165">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="fc998-166">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-166">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fc998-167">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-167">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="fc998-168">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-168">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="fc998-169">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-169">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-170">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-170">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="fc998-171">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-171">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-172">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-172">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-173">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` -Parameter, der Ihnen ermöglicht, den Clientrückruf asynchron ausführen, indem Sie den Wert auf `true`.</span><span class="sxs-lookup"><span data-stu-id="fc998-173">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="fc998-174">Die Überladungsversionen dieser Methode, die nicht erfordern die `useAsync` Parameter legen den Wert auf `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="fc998-174">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="fc998-175">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-175">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-176">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-176">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc998-177">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-177">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fc998-178">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-178">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="fc998-179">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-179">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-180">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-180">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="fc998-181">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-181">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fc998-182">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-182">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="fc998-183">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-183">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="fc998-184">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-184">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="fc998-185">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-185">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-186">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-186">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="fc998-187">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-187">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-188">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-188">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-189">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> -Methode übernimmt ein `target` Zeichenfolgenparameter anstelle von einer <xref:System.Web.UI.Control> Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-189">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="fc998-190">Verwenden Sie diese Überladung, wenn Sie möchten, dass den Rückruf zurückdatieren, um etwas anderes als eine Zeichenfolge mit der <xref:System.Web.UI.Control.UniqueID%2A> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="fc998-190">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="fc998-191">Darüber hinaus diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` und ein `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-191">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="fc998-192">Die `useAsync` Parameter können Sie den Clientrückruf asynchron ausführen, indem Sie den Wert auf `true`.</span><span class="sxs-lookup"><span data-stu-id="fc998-192">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="fc998-193">Die Überladungsversionen dieser Methode, die nicht erfordern die `useAsync` Parameter legen den Wert auf `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="fc998-193">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="fc998-194">Die `clientErrorCallback` Parameter können Sie den Namen der Clientfunktion zu definieren, die aufgerufen wird, wenn der Server-Ereignishandler der <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> -Methode, einen Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="fc998-194">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="fc998-195">Die Überladungsversionen dieser Methode, die nicht erfordern die `clientErrorCallback` -Parameter den Wert auf null festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fc998-195">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="fc998-196">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-196">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-197">Im folgenden Codebeispiel wird veranschaulicht, wie mit zwei Überladungen der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode in einem Client-Rückruf-Szenario, in der ganzen Zahlen erhöht.</span><span class="sxs-lookup"><span data-stu-id="fc998-197">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="fc998-198">Zwei Rückrufmechanismen werden angezeigt. der Unterschied ist die Verwendung von der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-198">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="fc998-199">Ein `ReceiveServerData1` Client Callback-Funktion wird bereitgestellt, mit der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-199">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="fc998-200">Im Gegensatz dazu die `ReceiveServerData2` Clientrückruffunktion wird definiert, einem `<script>` -Block auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-200">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="fc998-201">Ein <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode ist der Serverhandler, der der Wert erhöht, die an sie übergeben wird und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methodenrückgabe den inkrementierten Wert als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="fc998-201">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="fc998-202">Wenn die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methodenrückgabe einen Fehler, und klicken Sie dann auf die Clientfunktion `ProcessCallBackError` aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc998-202">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-203">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-203">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="fc998-204">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-204">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-205">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-205">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="fc998-206">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-206">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fc998-207">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-207">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="fc998-208">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-208">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="fc998-209">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-209">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="fc998-210">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-210">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-211">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-211">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="fc998-212">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-212">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-213">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-213">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-214">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode erfordert eine `useAsync` und ein `clientErrorCallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-214">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="fc998-215">Die `useAsync` Parameter können Sie den Clientrückruf asynchron ausführen, indem Sie den Wert auf `true`.</span><span class="sxs-lookup"><span data-stu-id="fc998-215">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="fc998-216">Die Überladungsversionen dieser Methode, die nicht erfordern die `useAsync` Parameter legen den Wert auf `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="fc998-216">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="fc998-217">Die `clientErrorCallback` Parameter können Sie den Namen der Clientfunktion zu definieren, die aufgerufen wird, wenn der Serverhandler (den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode) gibt einen Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="fc998-217">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="fc998-218">Die Überladungsversionen dieser Methode, die nicht erfordern die `clientErrorCallback` -Parameter den Wert auf null festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fc998-218">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="fc998-219">Weitere Informationen zu dieser Methode finden Sie unter den Hinweisen für die Überladung <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-219">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-220">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-220">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc998-221">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-221">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-222">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-222">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-223">The server control to process the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-223">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-224">The parameter passed to the server control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-224">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-226">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-226">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-227">Mithilfe der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode muss das Steuerelement, das Postback zum Implementieren behandelt, der <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-227">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="fc998-228">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-228">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-229">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-229">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="fc998-230">Das benutzerdefinierte Steuerelement `MyControl`, implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-230">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="fc998-231">Beim Klicken auf das HTML-Ankerelement auf der Seite die <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> -Methode des benutzerdefinierten Steuerelements aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc998-231">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="fc998-232">Im folgenden Codebeispiel wird hat die gleiche Funktionalität wie der vorherigen Abfrage, außer dass ein benutzerdefiniertes Steuerelement, das <xref:System.Web.UI.Page> -Klasse implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-232">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-233">The server control to process the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-233">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-234">The parameter passed to the server control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-234">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="fc998-235">
            <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-235">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-236">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-236">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-237">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-237">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-238">Mithilfe der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode muss das Steuerelement, das Postback zum Implementieren behandelt, der <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-238">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="fc998-239">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-239">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-240">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-240">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fc998-241">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-241">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-242">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-242">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="fc998-243">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-243">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-244">A string that, when treated as script on the client, initiates the client postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-244">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-245">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-245">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="fc998-246">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft ist `false`.</span><span class="sxs-lookup"><span data-stu-id="fc998-246">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="fc998-247">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode gibt der Client Postbackereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-247">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-248">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-248">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-249">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-249">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-250">A string of optional arguments to pass to the control that processes the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-250">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-251">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-251">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="fc998-252">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-252">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-253">A string that, when treated as script on the client, initiates the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-253">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-254">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="fc998-255">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft ist `false`.</span><span class="sxs-lookup"><span data-stu-id="fc998-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="fc998-256">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode gibt der Client Postbackereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-257">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-257">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="fc998-258">Das benutzerdefinierte Steuerelement `MyControl`, implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-258">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="fc998-259">Wenn die Schaltfläche auf der Seite klicken, wird die <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> -Methode des benutzerdefinierten Steuerelements aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc998-259">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="fc998-260">Im folgenden Codebeispiel wird hat die gleiche Funktionalität wie der vorherigen Abfrage, außer dass ein benutzerdefiniertes Steuerelement, das <xref:System.Web.UI.Page> -Klasse implementiert die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fc998-260">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-261">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-261">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fc998-262">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-262">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="fc998-263">
            <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-263">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-264">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-264">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="fc998-265">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-265">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="fc998-266">Optionally, registers the event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-266">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-267">A string that, when treated as script on the client, initiates the client postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-267">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-268">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für ein <xref:System.Web.UI.Page> Objekt, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-268">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="fc998-269">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft ist `false`.</span><span class="sxs-lookup"><span data-stu-id="fc998-269">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="fc998-270">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode gibt der Client Postbackereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-270">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="fc998-271">Wenn `registerForEventValidation` ist `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> Methodenaufrufe der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> Methode, um den Ereignisverweis für die Validierung mit einer eindeutigen Steuerelement-ID zu registrieren, die das Steuerelement darstellt, das das Ereignis erzeugt.</span><span class="sxs-lookup"><span data-stu-id="fc998-271">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-272">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-272">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fc998-273">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-273">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-274">A string of optional arguments to pass to <c>control</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-274">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="fc998-275">
            <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-275">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-276">Returns a string to use in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-276">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="fc998-277">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-277">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="fc998-278">Optionally, registers the event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-278">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-279">A string that, when treated as script on the client, initiates the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-279">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-280">Zum Implementieren der <xref:System.Web.UI.IPostBackEventHandler> eine Schnittstelle für eine <xref:System.Web.UI.Page>, verwenden Sie die Direktive.</span><span class="sxs-lookup"><span data-stu-id="fc998-280">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="fc998-281">Die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode kann verwendet werden, mit der <xref:System.Web.UI.WebControls.Button> steuern, wann die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft ist `false`.</span><span class="sxs-lookup"><span data-stu-id="fc998-281">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="fc998-282">In diesem Szenario die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode gibt der Client Postbackereignis für die <xref:System.Web.UI.WebControls.Button> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-282">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="fc998-283">Wenn `registerForEventValidation` ist "true", die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> Methodenaufrufe der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> Methode, um den Ereignisverweis für die Validierung mit einer eindeutigen Steuerelement-ID zu registrieren, die das Steuerelement darstellt, das das Ereignis erzeugt.</span><span class="sxs-lookup"><span data-stu-id="fc998-283">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-284">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-284">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-285">The type of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-285">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="fc998-286">The fully qualified name of the resource in the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-286">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-287">Gets a URL reference to a resource in an assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-287">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-288">The URL reference to the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-288">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-289">Die <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methodenrückgabe einen URL-Verweis auf eine Ressource in einer Assembly eingebettet.</span><span class="sxs-lookup"><span data-stu-id="fc998-289">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="fc998-290">Der zurückgegebene Verweis ist nicht URL-codiert.</span><span class="sxs-lookup"><span data-stu-id="fc998-290">The returned reference is not URL encoded.</span></span> <span data-ttu-id="fc998-291">Ressourcen können Skriptdateien, Bilder oder statische Dateien handeln.</span><span class="sxs-lookup"><span data-stu-id="fc998-291">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="fc998-292">Sie geben den basierend auf dem Objekt, das auf die Ressource zugreift.</span><span class="sxs-lookup"><span data-stu-id="fc998-292">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="fc998-293">Eine Webressource, die mit der Seite registriert wird durch den Typ und den Namen eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-293">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="fc998-294">Die Seite kann nur eine Ressource mit einem angegebenen Typ und Name-Paar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-294">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="fc998-295">Versucht, eine Ressource zu registrieren, die bereits registriert ist, erstellt ein Duplikat der registrierten Ressource nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-295">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="fc998-296">Die <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methode dient in Verbindung mit der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode für den Zugriff auf Ressourcen in Assemblys eingebettet.</span><span class="sxs-lookup"><span data-stu-id="fc998-296">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="fc998-297">Weitere Informationen zum Verwenden von Ressourcen in Anwendungen finden Sie unter [Übersicht über ASP.NET Webseite-Ressourcen](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="fc998-297">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-298">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-298">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="fc998-299">Die *Typ* Parameter in diesem Beispiel wird festgelegt, um den Typ der Klasse in der Assembly, die mit der Ressource.</span><span class="sxs-lookup"><span data-stu-id="fc998-299">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="fc998-300">Die `resourceName` Parameter angegeben wird, durch den vollqualifizierten Pfad zu der Ressource, die den Standardnamespace enthält.</span><span class="sxs-lookup"><span data-stu-id="fc998-300">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="fc998-301">Im folgenden Codebeispiel wird veranschaulicht, wie programmgesteuert Anwenden der <xref:System.Web.UI.WebResourceAttribute> Attribut für die Metadaten die Assembly für die Ressourcen zu markieren, die verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-301">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="fc998-302">Kompilieren Sie die folgende Klasse in einer Klassenbibliothek mit einem Standardnamespace festgelegt `Samples.AspNet.CS.Controls` oder `Samples.AspNet.VB.Controls`, je nachdem, welche Sprache Sie verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc998-302">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="fc998-303">Dieses Beispiel benötigen Sie eine JavaScript-Datei mit dem Namen `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="fc998-303">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="fc998-304">Die JS-Datei ist eine eingebettete Ressource in der Assembly, die `ClientScriptResourceLabel` Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc998-304">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="fc998-305">Wenn Sie Visual Studio verwenden], legen Sie im Fenster Eigenschaften das Klassenbibliotheksprojekt **Buildvorgang** auf **eingebettete Ressource** Wenn die Skriptdatei aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-305">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="fc998-306">Wenn Sie die Bibliothek über die Befehlszeile kompilieren, verwenden Sie den Schalter zum Einbetten der Ressource.</span><span class="sxs-lookup"><span data-stu-id="fc998-306">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-307">The web resource name is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-307">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="fc998-308">\- or -  The web resource name has a length of zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-308">\- or -  The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-309">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-309">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="fc998-310">The key of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-310">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-311">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-311">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-312">
            <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-312">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-313">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-313">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="fc998-314">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-314">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-315">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-315">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-316">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-316">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="fc998-317">Diese Überladung der der <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode ruft die Überladung, die beide akzeptiert eine `key` und ein `type` Parameter mit dem Typ festgelegt werden, als ein <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="fc998-317">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-318">The type of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-318">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-319">The key of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-319">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-320">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-320">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-321">
            <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-321">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-322">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-322">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="fc998-323">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-323">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-324">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-324">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-325">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-325">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-326">Sie geben den basierend auf dem Objekt, das auf die Ressource zugreift.</span><span class="sxs-lookup"><span data-stu-id="fc998-326">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="fc998-327">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="fc998-327">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-328">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-328">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="fc998-329">Beachten Sie, dass, wenn die Logik für die Prüfung auf vorhandene Clientskriptblocks entfernt wurden, nicht es zwei doppelte Clientskripts im HTML-Quellcode der gerenderten Seite gäbe da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="fc998-329">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="fc998-330">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-330">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-331">The client script type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-331">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-332">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-332">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="fc998-333">The key of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-333">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-334">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-334">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-335">
            <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-335">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-336">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-336">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="fc998-337">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-337">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-338">Ein Clientskript enthalten wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-338">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-339">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-339">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="fc998-340">Diese Überladung der der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode ruft die Überladung, die beide akzeptiert eine `key` und ein `type` Parameter mit dem Typ festgelegt werden, als ein <xref:System.Web.UI.Page> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc998-340">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-341">The type of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-341">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-342">The key of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-342">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-343">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-343">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-344">
            <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-344">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-345">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode zur Vermeidung doppelter Clientskripts registrieren enthält.</span><span class="sxs-lookup"><span data-stu-id="fc998-345">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="fc998-346">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-346">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-347">Ein Clientskript enthalten wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-347">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-348">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-348">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-349">Sie geben den basierend auf dem Objekt, das auf die Ressource zugreift.</span><span class="sxs-lookup"><span data-stu-id="fc998-349">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="fc998-350">Z. B. wenn eine Seiteninstanz verwenden, um die Ressource zuzugreifen, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="fc998-350">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-351">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-351">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="fc998-352">Beachten Sie, dass, wenn die Logik zum Überprüfen Sie, ob die vorhandenen Clientskripts enthalten entfernt wurden, nicht es zwei doppelte Clientskripts im HTML-Quellcode der gerenderten Seite gäbe da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="fc998-352">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="fc998-353">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-353">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="fc998-354">Dieses Beispiel benötigen Sie eine JavaScript-Datei mit dem Namen `Script_include.js`, mit dem folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="fc998-354">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-355">The client script include type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-355">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-356">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-356">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="fc998-357">The key of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-357">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-358">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-358">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-359">
            <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-359">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-360">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode zur Vermeidung doppelte OnSubmit-Anweisungen registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-360">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="fc998-361">Dies ist besonders wichtig, wenn die Anweisung eine große Menge an Serverressourcen erstellen erfordert.</span><span class="sxs-lookup"><span data-stu-id="fc998-361">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-362">Eine Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-362">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-363">Anweisungen mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-363">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="fc998-364">Diese Überladung der der <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> Methode ruft die Überladung, die beide akzeptiert eine `key` und ein `type` Parameter mit dem Typ festgelegt werden, als ein <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="fc998-364">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-365">The type of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-365">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-366">The key of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-366">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-367">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-367">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-368">
            <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-368">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-369">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode zur Vermeidung doppelte-Anweisungen registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-369">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="fc998-370">Dies ist besonders wichtig, wenn die Anweisung eine große Menge an Serverressourcen erstellen erfordert.</span><span class="sxs-lookup"><span data-stu-id="fc998-370">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-371">Eine Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-371">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-372">Anweisungen mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-372">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-373">Sie geben den basierend auf dem Objekt, das auf die Ressource zugreift.</span><span class="sxs-lookup"><span data-stu-id="fc998-373">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="fc998-374">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="fc998-374">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-375">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-375">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="fc998-376">Ein Skript namens `OnSubmitScript` registriert ist, mit der <xref:System.Web.UI.Page> , wenn die Seite-Formular gesendet wird das Skript wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fc998-376">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-377">The OnSubmit statement type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-377">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-378">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-378">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="fc998-379">The key of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-379">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-380">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-380">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-381">
            <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-381">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-382">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-382">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="fc998-383">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-383">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-384">Einem Startskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-384">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-385">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-385">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="fc998-386">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode ruft die Überladung, die beide eine Zeichenfolge akzeptiert `key` und ein `type` Parameter mit dem Typ festgelegt werden, als ein <xref:System.Web.UI.Page> Objekt</span><span class="sxs-lookup"><span data-stu-id="fc998-386">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-387">The type of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-387">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-388">The key of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-388">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-389">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-389">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc998-390">
            <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-390">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-391">Rufen Sie diese Methode vor dem Aufruf der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode zur Vermeidung doppelter Skripts registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-391">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="fc998-392">Dies ist besonders wichtig, wenn das Skript eine große Menge an Serverressourcen zum Erstellen erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-392">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="fc998-393">Ein Clientstartskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-393">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-394">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-394">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-395">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-395">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="fc998-396">Beachten Sie, dass, wenn die Logik für die Prüfung auf vorhandene Startskriptblock entfernt wurden, nicht es zwei doppelte Startskripts im HTML-Quellcode der gerenderten Seite gäbe da die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="fc998-396">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="fc998-397">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-397">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-398">The startup script type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-398">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="fc998-399">The array name to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-399">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="fc998-400">The array value or values to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-400">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-401">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-401">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-402">Die <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> überprüft, ob ein registriertes Array mit den gleichen Namen wie die im angegebenen Namen vorhanden ist die `arrayName` Parameter und, wenn dies der Fall ist, fügt die Werte im angegebenen der `arrayValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-402">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="fc998-403">Da die zugrunde liegenden Speichermechanismus basiert eine <xref:System.Collections.ArrayList>, Duplikate sind zulässig.</span><span class="sxs-lookup"><span data-stu-id="fc998-403">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="fc998-404">Wenn kein registriertes Array mit dem gleichen Namen wie die `arrayName` Parameter ist nicht vorhanden, wird diese erstellt und die Werte in der `arrayValue` Parameter hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc998-404">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="fc998-405">Gegebenenfalls Zeichenfolgenliteralen in der resultierenden JavaScript-Array enthalten einfache Anführungszeichen (') oder mit Escapezeichen versehen doppelte Anführungszeichen (\\") in der `arrayValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-405">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="fc998-406">Der Wert, der die `arrayValue` Parameter muss ein einzelnes Element sein.</span><span class="sxs-lookup"><span data-stu-id="fc998-406">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="fc998-407">Wenn mehr als einen Wert in das Array hinzugefügt werden muss, stellen Sie mehrere Aufrufe, die mithilfe der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-407">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-408">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> und <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="fc998-408">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="fc998-409">Im Beispiel wird ein Array und einen verborgenen Wert registriert und definiert die `OnClick` -Ereignis für ein `<input>` Schaltfläche, um die Summe der beiden Werte des Arrays und den Wert hidden zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="fc998-409">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-410">
            <paramref name="arrayName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-410">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-411">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-411">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-412">The type of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-412">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-413">The key of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-413">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="fc998-414">The client script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-414">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-416">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-416">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-417">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-417">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-418">Mit der Seite kann nur ein Skript mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-418">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-419">Versucht, ein Skript zu registrieren, die bereits registriert ist, erstellt ein Duplikat des Skripts nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-419">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="fc998-420">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode, um zu bestimmen, ob ein Clientskript mit einem angegebenen Schlüssel und Typ-Paar bereits registriert ist und nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-420">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="fc998-421">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode, müssen Sie sich vergewissern, dass das Skript im bereitgestellten der `script` Parameter umschlossen ist eine `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-421">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="fc998-422">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode fügt einen Skriptblock hinzu, an den Anfang der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-422">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="fc998-423">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="fc998-423">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="fc998-424">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> Objekt, um die Skripts in einer einzelnen Zeichenfolge zusammenzufassen, und registrieren sie Sie dann alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-424">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-425">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-425">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-426">The type of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-426">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-427">The key of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-427">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="fc998-428">The client script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-428">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="fc998-429">A Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-429">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-431">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-431">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-432">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-432">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-433">Mit der Seite kann nur ein Skript mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-433">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-434">Versucht, ein Skript zu registrieren, die bereits registriert ist, erstellt ein Duplikat des Skripts nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-434">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="fc998-435">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Methode, um zu bestimmen, ob ein Clientskript mit einem angegebenen Schlüssel und Typ-Paar bereits registriert ist.</span><span class="sxs-lookup"><span data-stu-id="fc998-435">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="fc998-436">Dadurch können Sie nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-436">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="fc998-437">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> -Methode, können Sie angeben, ob das Skript im bereitgestellten der `script` Parameter mit umbrochen wird eine `<script>` Elementblock mithilfe der `addScriptTags` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-437">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="fc998-438">Festlegen von `addScriptTags` auf `true` gibt an, dass Skripttags automatisch hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc998-438">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="fc998-439">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode fügt einen Skriptblock hinzu, an den Anfang der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-439">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="fc998-440">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="fc998-440">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="fc998-441">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> Objekt, um die Skripts in einer einzelnen Zeichenfolge zusammenzufassen, und registrieren sie Sie dann alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-441">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-442">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-442">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="fc998-443">Beachten Sie, dass die `addScriptTags` Parametersatz auf `true` damit die öffnenden und schließenden Skripttags nicht enthalten sind die `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-443">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-444">The client script block type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-444">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-445">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-445">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="fc998-446">The key of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-446">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="fc998-447">The URL of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-447">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-448">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-448">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-449">Ein Clientskript enthalten wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-449">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-450">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-450">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-451">Mit der Seite kann nur ein Skript mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-451">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-452">Versucht, ein Skript zu registrieren, die bereits registriert ist, erstellt ein Duplikat des Skripts nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-452">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="fc998-453">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> Methode, um zu bestimmen, ob ein Clientskript enthalten, mit einem angegebenen Schlüssel und Typ-Paar ist bereits registriert und nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-453">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-454">Um die Client-URL zu beheben, verwenden Sie die <xref:System.Web.UI.Control.ResolveClientUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-454">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="fc998-455">Diese Methode verwendet den Kontext der URL auf dem sie aufgerufen wird, um den Pfad zu beheben.</span><span class="sxs-lookup"><span data-stu-id="fc998-455">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="fc998-456">Diese Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode ruft die Überladung mit einem `key`, eine `URL`, und eine `type` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-456">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="fc998-457">Die Methode fügt einen Skriptblock am oberen Rand der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-457">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-458">Weitere Informationen, einschließlich Syntax, Nutzung und ein Beispiel finden Sie unter <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc998-458">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-459">The type of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-459">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-460">The key of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-460">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="fc998-461">The URL of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-461">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-462">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-462">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-463">Diese Überladung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> -Methode übernimmt *Schlüssel* und *Url* Parameter zum Identifizieren des Skripts als auch eine `type` enthalten Parameter, um die Kennung des Clientskripts anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fc998-463">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="fc998-464">Sie geben den basierend auf dem Objekt, das auf die Ressource zugreift.</span><span class="sxs-lookup"><span data-stu-id="fc998-464">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="fc998-465">Z. B. bei Verwendung einer `Page` Instanz Zugriff auf die Ressource, Sie geben die `Page` Typ.</span><span class="sxs-lookup"><span data-stu-id="fc998-465">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc998-466">Um die Client-URL zu beheben, verwenden Sie die <xref:System.Web.UI.Control.ResolveClientUrl%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-466">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="fc998-467">Diese Methode verwendet den Kontext der URL auf dem sie aufgerufen wird, um den Pfad zu beheben.</span><span class="sxs-lookup"><span data-stu-id="fc998-467">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="fc998-468">Diese Methode fügt einen Skriptblock am oberen Rand der gerenderten Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-468">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-469">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-469">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="fc998-470">Beachten Sie, dass, wenn die Logik zum Überprüfen Sie, ob die vorhandenen Clientskripts enthalten entfernt wurden, noch nicht es doppelte Clientskripts auf der gerenderten Seite gäbe da die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Methode, die auf Duplikate überprüft.</span><span class="sxs-lookup"><span data-stu-id="fc998-470">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="fc998-471">Der Vorteil der Überprüfung ist unnötiger Berechnungen zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-471">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="fc998-472">Dieses Beispiel benötigen Sie eine JavaScript-Datei Script_include.js mit den folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="fc998-472">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-473">The client script include type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-473">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc998-474">The URL is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-474">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="fc998-475">\- or -  The URL is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-475">\- or -  The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-476">The type of the client script resource to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-476">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="fc998-477">The name of the client script resource to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-477">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-478">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-478">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-479">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode wird verwendet, wenn Assemblys über den "WebResource.axd" HTTP-Handler kompilierte Ressourcen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="fc998-479">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="fc998-480">Die <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode registriert das Skript mit dem <xref:System.Web.UI.Page> -Objekt und verhindert, dass doppelte Skripts.</span><span class="sxs-lookup"><span data-stu-id="fc998-480">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="fc998-481">Diese Methode dient als Wrapper für den Inhalt des Ressourcen-URL mit einem `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-481">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-482">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-482">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="fc998-483">Im folgenden Codebeispiel wird veranschaulicht, wie programmgesteuert Anwenden der <xref:System.Web.UI.WebResourceAttribute> Attribut für die Metadaten die Assembly für die Ressourcen zu markieren, die verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-483">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="fc998-484">Dieses Beispiel benötigen Sie eine JavaScript-Datei mit dem Namen `Script_include.js`, mit dem folgenden Inhalt:</span><span class="sxs-lookup"><span data-stu-id="fc998-484">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="fc998-485">Kompilieren Sie die `Script_include.js` -Datei als Ressource in der `Samples.AspNet.CS.Controls` Assembly, enthält die `ClientScriptResourceLabel` Klasse.</span><span class="sxs-lookup"><span data-stu-id="fc998-485">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-486">The client resource name is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-486">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="fc998-487">\- or -  The client resource name has a length of zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-487">\- or -  The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-488">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-488">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="fc998-489">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-489">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="fc998-490">The name of the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-490">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="fc998-491">The value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-491">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-492">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-492">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-493">Die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode registriert ein Name/Wert-Paar als Attribut für den benutzerdefinierten (Attributen Expando) auf dem angegebenen <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="fc998-493">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="fc998-494">Das Expando-Attribut wird von JavaScript dynamisch festgelegt, XHTML-Kompatibilität für das gerenderte Steuerelement Markup erhalten bleiben.</span><span class="sxs-lookup"><span data-stu-id="fc998-494">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="fc998-495">Anführungszeichen und umgekehrte Schrägstriche in den benutzerdefinierten (Attributen Expando) Attributwerte mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-495">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="fc998-496">Aufrufen, wenn Sie keine Anführungszeichen und umgekehrte Schrägstriche mit Escapezeichen versehen werden soll, die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode zu überladen, und legen Sie die `encode` Parameter `false`.</span><span class="sxs-lookup"><span data-stu-id="fc998-496">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="fc998-497">Wenn das Expando-Attribut wurde nicht gefunden, oder das Steuerelement, das Expando-Attribut, um hinzugefügt wurde nicht gefunden, Clientskripts weiterhin ausgegeben wird, wirkt sich jedoch nicht das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-497">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="fc998-498">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-498">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="fc998-499">The name of the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-499">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="fc998-500">The value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-500">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="fc998-501">A Boolean value indicating whether to encode the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-501">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-502">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-502">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-503">Die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode registriert ein Name/Wert-Paar als Attribut für den benutzerdefinierten (Attributen Expando) auf dem angegebenen <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="fc998-503">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="fc998-504">Das Expando-Attribut wird von JavaScript dynamisch festgelegt, XHTML-Kompatibilität für das gerenderte Steuerelement Markup erhalten bleiben.</span><span class="sxs-lookup"><span data-stu-id="fc998-504">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="fc998-505">Legen Sie die `encode` Parameter `true` Anführungszeichen und umgekehrte Schrägstriche in Ihre Expando-Attribut-Wert mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc998-505">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="fc998-506">Wenn das Expando-Attribut wurde nicht gefunden, oder das Steuerelement, das Expando-Attribut, um hinzugefügt wurde nicht gefunden, Clientskripts weiterhin ausgegeben wird, wirkt sich jedoch nicht das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="fc998-506">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-507">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Methode der <xref:System.Web.UI.ClientScriptManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fc998-507">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="fc998-508">Das Clientskript in der gerenderten Seite legt die `title` Attribut eine `<span>` Element.</span><span class="sxs-lookup"><span data-stu-id="fc998-508">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-509">Registers an event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-509">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="fc998-510">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-510">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-511">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-511">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-512">Weitere Informationen und Beispiele finden Sie unter der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-512">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-513">Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode zum Registrieren eines Rückrufs für die Validierung und wie Sie überprüfen, ob der Rückruf auf der Seite stammt.</span><span class="sxs-lookup"><span data-stu-id="fc998-513">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fc998-514">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-514">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-515">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-515">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-516">Weitere Informationen und Beispiele finden Sie unter der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-516">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="fc998-517">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-517">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-518">Event arguments passed with the client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-518">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-519">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-519">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc998-520">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode, um einen Rückruf für die Überprüfung zu registrieren und zu überprüfen, ob der Rückruf auf der Seite stammt.</span><span class="sxs-lookup"><span data-stu-id="fc998-520">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="fc998-521">Sie könnten zum Verbessern der für die Validierung, die im Beispiel gezeigt die Überprüfung ändern `argument` Parameter enthalten spezifische Informationen zum Benutzer z. B. eine Identität oder Rolle</span><span class="sxs-lookup"><span data-stu-id="fc998-521">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="fc998-522">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode, um einen Rückruf für die Überprüfung zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="fc998-522">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc998-523">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-523">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="fc998-524">The name of the hidden field to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-524">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="fc998-525">The initial value of the field to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-525">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-526">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-526">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-527">Die <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Methode erstellt ein ausgeblendetes `<input>` Element auf der gerenderten HTML-Seite.</span><span class="sxs-lookup"><span data-stu-id="fc998-527">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-528">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> und <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="fc998-528">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="fc998-529">Im Beispiel wird ein Array und einen verborgenen Wert registriert und definiert die `OnClick` -Ereignis für ein `<input>` Schaltfläche, um die Summe der beiden Werte des Arrays und den Wert hidden zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="fc998-529">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-530">
            <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-530">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-531">The type of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-531">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-532">The key of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-532">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="fc998-533">The script literal of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-533">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-534">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-534">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="fc998-535">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-535">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-536">Eine OnSubmit-Anweisung wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-536">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-537">Anweisungen mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-537">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-538">Die Seite kann nur eine Anweisung mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-538">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-539">Bei dem Versuch, eine Anweisung zu registrieren, die bereits registriert ist, wird ein Duplikat der Anweisung nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc998-539">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="fc998-540">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> Methode, um zu bestimmen, ob eine OnSubmit-Anweisung mit einem angegebenen Schlüssel und Typ-Paar bereits registriert ist und nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-540">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="fc998-541">Die `script` Parameter von der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> -Methode kann mehrere Skriptbefehle enthalten, solange sie ordnungsgemäß mit einem Semikolon (;) getrennte sind.</span><span class="sxs-lookup"><span data-stu-id="fc998-541">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="fc998-542">Die <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Fügt ein Skript, das ausgeführt wird, bevor die Seite übermittelt wird, haben Sie die Möglichkeit zum Abbrechen der Übermittlung.</span><span class="sxs-lookup"><span data-stu-id="fc998-542">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="fc998-543">Weitere Informationen zu HTML-Formularen und `OnSubmit` -Attribut angegeben wird, finden Sie unter der [Website des World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="fc998-543">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-544">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-544">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-545">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-545">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-546">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-546">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-547">The type of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-547">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-548">The key of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-548">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="fc998-549">The startup script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-549">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-550">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-550">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-551">Ein Clientskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-551">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-552">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-552">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-553">Mit der Seite kann nur ein Skript mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-553">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-554">Versucht, ein Skript zu registrieren, die bereits registriert ist, erstellt ein Duplikat des Skripts nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-554">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="fc998-555">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode, um zu bestimmen, ob ein Startskript mit einem angegebenen Schlüssel und Typ-Paar bereits registriert ist und nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-555">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="fc998-556">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode, müssen Sie sich vergewissern, dass das Skript im bereitgestellten der `script` Parameter mit umbrochen wird eine `<script>` Elementblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-556">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="fc998-557">Der Skriptblock hinzugefügt, indem die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode ausgeführt wird, wenn das Laden die Seite abgeschlossen ist, aber vor der Seite <xref:System.Web.UI.Control.OnLoad%2A> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fc998-557">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="fc998-558">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="fc998-558">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="fc998-559">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> Objekt, um die Skripts in einer einzelnen Zeichenfolge zusammenzufassen, und registrieren sie Sie dann alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-559">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-560">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-560">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="fc998-561">Beachten Sie, das die Anfangs- und Endtags Skript enthalten sind die `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-561">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="fc998-562">Damit das Skript basierend auf einem zusätzlichen Parameter-Einstellung Tags hinzugefügt wurden, finden Sie unter der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-562">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fc998-563">The type of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-563">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fc998-564">The key of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-564">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="fc998-565">The startup script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-565">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="fc998-566">A Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-566">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-567">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-567">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc998-568">Einem Startskript wird durch seinen Schlüssel und seinen Typ eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fc998-568">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="fc998-569">Skripts mit dem gleichen Schlüssel und Typ werden als Duplikate angesehen.</span><span class="sxs-lookup"><span data-stu-id="fc998-569">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="fc998-570">Mit der Seite kann nur ein Skript mit einem angegebenen Typ und ein Schlüsselpaar registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc998-570">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="fc998-571">Versucht, ein Skript zu registrieren, die bereits registriert ist, erstellt ein Duplikat des Skripts nicht.</span><span class="sxs-lookup"><span data-stu-id="fc998-571">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="fc998-572">Rufen Sie die <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> Methode, um zu bestimmen, ob ein Startskript mit einem angegebenen Schlüssel und Typ-Paar bereits registriert ist und nicht unnötigerweise das Skript hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc998-572">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="fc998-573">In dieser Überladung der der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> -Methode, können Sie angeben, ob das Skript im bereitgestellten der `script` Parameter mit umbrochen wird eine `<script>` Elementblock mithilfe der `addScriptTags` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-573">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="fc998-574">Festlegen von `addScriptTags` auf `true` gibt an, dass Skripttags automatisch hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc998-574">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="fc998-575">Der Skriptblock hinzugefügt, indem die <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode ausgeführt wird, wenn das Laden die Seite abgeschlossen ist, aber vor der Seite <xref:System.Web.UI.Control.OnLoad%2A> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fc998-575">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="fc998-576">Skriptblöcke werden nicht unbedingt in der Reihenfolge ausgegeben werden, die sie registriert sind.</span><span class="sxs-lookup"><span data-stu-id="fc998-576">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="fc998-577">Wenn die Reihenfolge der Skriptblöcke wichtig ist, verwenden Sie eine <xref:System.Text.StringBuilder> Objekt, um die Skripts in einer einzelnen Zeichenfolge zusammenzufassen, und registrieren sie Sie dann alle in einem einzelnen Client-Skriptblock.</span><span class="sxs-lookup"><span data-stu-id="fc998-577">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc998-578">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fc998-578">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="fc998-579">Beachten Sie, dass der `addScriptTags` Parametersatz zu `false` damit die Anfangs- und Endtags Skript enthalten sind die `script` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc998-579">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc998-580">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-580">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc998-581">Validates a client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-581">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="fc998-582">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-582">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-583">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-583">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="fc998-584">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-584">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="fc998-585">The event arguments passed with the client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-585">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc998-586">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-586">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc998-587">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> Methode und die <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> Methode, um einen Rückruf für die Überprüfung zu registrieren und zu überprüfen, ob der Rückruf auf der Seite stammt.</span><span class="sxs-lookup"><span data-stu-id="fc998-587">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="fc998-588">Um auf die hier gezeigten Überprüfung zu verbessern, könnten Sie die Überprüfung ändern `argument` Parameter enthalten spezifische Informationen zum Benutzer z. B. eine Identität oder Rolle</span><span class="sxs-lookup"><span data-stu-id="fc998-588">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc998-589">
            <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc998-589">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>