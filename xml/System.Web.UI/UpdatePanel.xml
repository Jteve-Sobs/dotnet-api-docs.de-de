<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50e45e98009c2cb50112d508134513b3fdb47d14" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55359563" /></Metadata><TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht das teilweise Rendern von Seitenabschnitten ohne Postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Aktualisieren von UpdatePanel-Inhalt](#refreshing_updatepanel_content)  
  
-   [UpdatePanel-Verwendung](#updatepanel_usage)  
  
-   [Anwenden von Stilen](#applying_styles)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 <xref:System.Web.UI.UpdatePanel> Steuerelemente sind ein zentraler Bestandteil von AJAX-Funktionen in ASP.NET. Sie werden verwendet, mit der <xref:System.Web.UI.ScriptManager> Steuerelement, das Teilrendering von Seiten zu aktivieren. Teilrendering von Seiten reduziert die Notwendigkeit für synchrone Postbacks und auf der Seite abgeschlossen-Updates auf, wenn nur ein Teil der Seite muss aktualisiert werden. Teilrendering von Seiten verbessert die benutzerfreundlichkeit, da dadurch das Flimmern des Bildschirms, das bei einem ganzseitigen Postback auftritt, und verbessert die Webseite Interaktivität.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Aktualisieren von UpdatePanel-Inhalt  
 Wenn das Teilrendering von Seiten aktiviert ist, kann ein Steuerelement ausführen, ein Postback, das die gesamte Seite aktualisiert oder ein asynchrones Postback, die den Inhalt von einem oder mehreren aktualisiert <xref:System.Web.UI.UpdatePanel> Steuerelemente. Gibt an, ob ein Steuerelement eines asynchronen Postbacks und Updates führt dazu, dass ein <xref:System.Web.UI.UpdatePanel> Steuerelement hängt von folgendem:  
  
-   Wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Eigenschaft der <xref:System.Web.UI.UpdatePanel> -Steuerelement so eingestellt ist, dass <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> den Inhalt des Steuerelements wird aktualisiert, bei jedem Postback, die von der Seite stammt. Dazu gehören asynchrone Postbacks aus Steuerelementen, die innerhalb von anderen <xref:System.Web.UI.UpdatePanel> Steuerelemente und Postbacks über Steuerelemente, die nicht in <xref:System.Web.UI.UpdatePanel> Steuerelemente.  
  
-   Wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, <xref:System.Web.UI.UpdatePanel> den Inhalt des Steuerelements wird aktualisiert, in den folgenden Situationen:  
  
    -   Beim Aufrufen der <xref:System.Web.UI.UpdatePanel.Update%2A> Methode der <xref:System.Web.UI.UpdatePanel> explizit zu steuern.  
  
    -   Wenn die <xref:System.Web.UI.UpdatePanel> in einem anderen Steuerelement geschachtelt ist <xref:System.Web.UI.UpdatePanel> -Steuerelement, und der übergeordnete Bereich wird aktualisiert.  
  
    -   Wenn wird ein Postback verursacht, wird von einem Steuerelement, das als Trigger definiert ist, mit der `Triggers` Eigenschaft der <xref:System.Web.UI.UpdatePanel> Steuerelement. In diesem Fall löst das Steuerelement explizit ein Update des Inhalts des Bereichs. Das Steuerelement kann sein, entweder innerhalb oder außerhalb der <xref:System.Web.UI.UpdatePanel> -Steuerelement, das der Trigger zugeordnet ist.  
  
    -   Wenn die <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> -Eigenschaftensatz auf `true` und ein untergeordnetes Steuerelement von der <xref:System.Web.UI.UpdatePanel> Steuerelement ein Postback auslöst. Untergeordnete Steuerelemente von geschachtelten <xref:System.Web.UI.UpdatePanel> Steuerelemente bewirken keine Aktualisierung der äußeren <xref:System.Web.UI.UpdatePanel> steuern, es sei denn, sie sind explizit als Trigger definiert.  
  
 Die Kombination der Einstellung der <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaft `false` und die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Eigenschaft <xref:System.Web.UI.UpdatePanelUpdateMode.Always> ist nicht zulässig und löst eine Ausnahme aus.  
  
 Wenn die <xref:System.Web.UI.UpdatePanel> Steuerelement führt einen asynchronen Post, einen benutzerdefinierten HTTP-Header hinzugefügt. Einige Proxys Entfernen dieser benutzerdefinierten HTTP-Header. In diesem Fall übernimmt der Server die Anforderung als reguläre Postback, wodurch einen Fehler auf. Um dieses Problem zu beheben, fügen Sie ein benutzerdefiniertes Formularfeld beim Ausführen von asynchronen Beiträge. Überprüfen Sie den Header oder das benutzerdefinierte Formular-Feld in Servercode.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>UpdatePanel-Verwendung  
 Sie können mehrere <xref:System.Web.UI.UpdatePanel> Steuerelemente zum Aktualisieren von verschiedenen Seitenbereiche, die unabhängig voneinander. Wenn die Seite, eine oder mehrere enthält <xref:System.Web.UI.UpdatePanel> zuerst Steuerelemente gerendert wird, wird alle Inhalte mit allen <xref:System.Web.UI.UpdatePanel> Steuerelemente gerendert und an den Browser gesendet werden. Bei nachfolgenden asynchrone Postbacks, den Inhalt jeder <xref:System.Web.UI.UpdatePanel> Steuerelement kann nicht aktualisiert werden, abhängig von den Einstellungen der Systemsteuerung und Client oder Server Logik für die einzelnen Bereiche.  
  
 Sie können auch <xref:System.Web.UI.UpdatePanel> Steuerelemente in den folgenden Szenarien:  
  
-   In Steuerelementen.  
  
-   Für die Master- und Inhaltsseiten.  
  
-   In anderen geschachtelt <xref:System.Web.UI.UpdatePanel> Steuerelemente.  
  
-   In auf Vorlagen basierende Steuerelemente wie z. B. die <xref:System.Web.UI.WebControls.GridView> oder <xref:System.Web.UI.WebControls.Repeater> Steuerelemente.  
  
 <xref:System.Web.UI.UpdatePanel> Steuerelemente können deklarativ oder programmgesteuert hinzugefügt werden.  
  
 Sie können Hinzufügen einer <xref:System.Web.UI.UpdatePanel> programmgesteuert steuern, aber Sie können keine Trigger programmgesteuert hinzufügen. Um die Trigger-ähnliches Verhalten zu erstellen, können Sie ein Steuerelement auf der Seite als Steuerelement für asynchrone Postbacks registrieren. Rufen Sie dazu die <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Methode der <xref:System.Web.UI.ScriptManager> Steuerelement. Sie können dann erstellen, einen Ereignishandler, der als Reaktion auf das asynchrone Postback, und klicken Sie im Aufruf-Handler ausgeführt wird die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Anwenden von Stilen  
 Die <xref:System.Web.UI.UpdatePanel> Steuerelement akzeptiert Expando-Attributen. Dadurch können Sie eine CSS-Klasse für den HTMLelements festgelegt wird, die die Steuerelemente zu rendern. Beispielsweise können Sie das Markup im folgenden Beispiel gezeigt erstellen:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Das Markup im vorherigen Beispiel gibt HTML-ähnlich der folgenden wieder, wenn die Seite ausgeführt wird:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Die folgenden Beispiele zeigen die unterschiedliche Verwendung der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 **Steuerelemente in einem UpdatePanel-Steuerelement**  
  
 Das folgende Beispiel zeigt, wie Sie Steuerelemente in einem <xref:System.Web.UI.UpdatePanel> Steuerelement um Flackern zu verringern, bei der Bereitstellung auf dem Server. In diesem Beispiel eine <xref:System.Web.UI.WebControls.Calendar> und <xref:System.Web.UI.WebControls.DropDownList> sind innerhalb einer <xref:System.Web.UI.UpdatePanel> Steuerelement. In der Standardeinstellung die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaft ist <xref:System.Web.UI.UpdatePanelUpdateMode.Always> und <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaft `true`. Aus diesem Grund dazu führen, dass untergeordnete Steuerelemente des Bereichs ein asynchrones Postbacks.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Master/Detail-Szenario mit UpdatePanel-Steuerelemente**  
  
 Im folgenden Beispiel eine <xref:System.Web.UI.UpdatePanel> Steuerelement wird in einem Master/Detail-Szenario, das zeigt, Bestellungen und Bestelldetails aus der Northwind-Datenbank verwendet. Eine <xref:System.Web.UI.UpdatePanel> Steuerelement enthält die <xref:System.Web.UI.WebControls.GridView> -Steuerelement, das eine Liste der Aufträge wird angezeigt. Ein zweites <xref:System.Web.UI.UpdatePanel> Steuerelement enthält eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, das die Details einer Bestellung anzeigt. Wenn Sie einen Auftrag aus der ersten Tabelle auswählen, werden die Details für diesen Auftrag in der zweiten Tabelle angezeigt. In der zweite Tabelle wird asynchron basierend auf der Auswahl in der ersten Tabelle aktualisiert. Die Sortierung und paging-Vorgänge in der Zusammenfassungstabelle Aufträge führen auch teilweise Updates.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Wenn Sie setzen eine <xref:System.Web.UI.WebControls.GridView> -Steuerelement innerhalb einer <xref:System.Web.UI.UpdatePanel> steuerelementeinstellung, die <xref:System.Web.UI.WebControls.GridView> des Steuerelements <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> Eigenschaft, um `true` wird nicht unterstützt. Allerdings da die <xref:System.Web.UI.UpdatePanel> -Steuerelement unterstützt asynchrone Postbacks, Postbacks, die sich ändern der <xref:System.Web.UI.WebControls.GridView> -Steuerelement innerhalb einer <xref:System.Web.UI.UpdatePanel> Steuerelement dazu führen, dass das gleiche Verhalten wie Sortierung und paging Rückrufe.  
  
 **Verwenden ein UpdatePanel-Steuerelement in einer Vorlage**  
  
 Im folgenden Beispiel eine <xref:System.Web.UI.UpdatePanel> Steuerelement wird verwendet, in der Elementvorlage, der eine <xref:System.Web.UI.WebControls.GridView> Steuerelement. <xref:System.Web.UI.UpdatePanel> Steuerelemente in jeder Datenzeile werden automatisch generiert. Jeder Zeile <xref:System.Web.UI.UpdatePanel> Steuerelement enthält eine <xref:System.Web.UI.WebControls.Label> Steuerelement, um die Menge des Elements in dieser Zeile anzuzeigen und eine <xref:System.Web.UI.WebControls.Button> Steuerelement zu verringern und die Menge zu erhöhen.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a">UpdatePanel-Technologie – Übersicht</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b0156068-0d33-48e4-80fe-9ef76670ed26">Übersicht über die Technologie von ScriptManager</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.UpdatePanel" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.UpdatePanel> Klasse. Dynamisch Hinzufügen einer <xref:System.Web.UI.UpdatePanel> die Steuerung an eine Seite, erstellen Sie ein neues <xref:System.Web.UI.UpdatePanel> Instanz, und fügen Sie die untergeordneten Steuerelemente auf die Steuerelementobjekt, das von der Instanz verfügbar gemacht wird <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie dynamisch erstellen eine <xref:System.Web.UI.UpdatePanel> steuern und eine Seite hinzugefügt wird. Wenn Sie klicken Sie auf die Schaltfläche in der <xref:System.Web.UI.UpdatePanel> -Steuerelement, die Nachricht wird mit Datum und Uhrzeit aktualisiert. Untergeordnete Steuerelemente werden hinzugefügt, mit der <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die CSS (Cascading Stylesheet)-Attributauflistung des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements ab.</summary>
        <value>Die Namen der CSS-Formatierungsregeln in der Attributauflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.Attributes%2A> Eigenschaft enthält eine Auflistung von CSS-Stilattribute, die in der einschließenden verwendet werden können `div` Element der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Postbacks aus direkt untergeordneten Steuerelementen eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements den Inhalt des Bereichs aktualisieren, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Postbacks aus direkt untergeordneten Steuerelementen des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements den Inhalt des Bereichs aktualisieren, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaft, um `true` Wenn Postbacks aus direkt untergeordneten Steuerelementen des sollen die <xref:System.Web.UI.UpdatePanel> Steuerelement dazu führen, dass ein Update der den Inhalt des Bereichs. Untergeordnete Steuerelemente von geschachtelten <xref:System.Web.UI.UpdatePanel> Steuerelementen führt nicht dazu, dass ein Update des übergeordneten Elements <xref:System.Web.UI.UpdatePanel> Steuerelement den Inhalt, es sei denn, Sie rufen die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode explizit oder definieren Sie die untergeordneten Steuerelemente als Trigger.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Always> und die <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> -Eigenschaftensatz auf `false`, eine <xref:System.InvalidOperationException> Ausnahme ausgelöst, während die <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> Methode. Diese Kombination von Eigenschaften ist nicht zulässig, für die <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Ein Szenario, in dem Sie festlegen können <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> zu `false` ist, wenn zwei <xref:System.Web.UI.UpdatePanel> Steuerelemente, und Sie möchten ein Postback aus dem ersten Bereich aktualisieren Sie den Inhalt des zweiten Bereichs jedoch nicht aktualisiert werden des eigene Inhalts. Z. B. der erste Bereich ist möglicherweise eine Liste der Produkte kaufen und im zweite Bereich handelt es sich möglicherweise um einen Einkaufswagen gelegt hat.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage ab, die den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements definiert, oder legt sie fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />-Instanz, die den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements definiert. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> Eigenschaft enthält den Inhalt, der angezeigt wird ein <xref:System.Web.UI.UpdatePanel> steuern, wenn er gerendert wird. Sie können den Inhalt der Vorlage deklarativ oder programmgesteuert erstellen. Den Inhalt der Vorlage von einer <xref:System.Web.UI.UpdatePanel> Steuerelement ist ein Einzelinstanz-Vorlage. Aus diesem Grund können die Eigenschaften der darin enthaltenen Steuerelemente direkt auf der Seite zugegriffen werden, ohne die <xref:System.Web.UI.Page.FindControl%2A> Methode. Weitere Informationen finden Sie unter den <xref:System.Web.UI.TemplateInstanceAttribute> Übersicht über die Klasse.  
  
 Elemente hinzufügen das <xref:System.Web.UI.UpdatePanel> Steuerelement deklarativ, fügen eine `<ContentTemplate>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.UpdatePanel> Steuerelement. In der `<ContentTemplate>` Element-Tags, deklarieren Sie andere Steuerelemente und HTML-Elemente.  
  
 Elemente hinzufügen das <xref:System.Web.UI.UpdatePanel> dynamisch zu steuern, verwenden Sie die <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> -Eigenschaft, die ermöglicht es Ihnen, untergeordnete Steuerelemente hinzufügen, ohne eine benutzerdefinierte Vorlage zu erstellen, die implementiert die <xref:System.Web.UI.ITemplate> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />-Eigenschaft des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements wird nach dem Erstellen einer Instanz der Vorlage bzw. nach dem Erstellen des Vorlagencontainers für den Inhalt festgelegt.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">Vorlagen für ASP.NET-Webserversteuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Steuerelementobjekt ab, dem Sie programmgesteuert untergeordnete Steuerelemente hinzufügen können.</summary>
        <value>Ein <see cref="T:System.Web.UI.Control" />-Objekt, das den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Eigenschaft können Sie programmgesteuert untergeordnete Steuerelemente zum Hinzufügen der <xref:System.Web.UI.UpdatePanel> Steuerelement ohne eine benutzerdefinierte Vorlage zu definieren, die von erbt die <xref:System.Web.UI.ITemplate> Schnittstelle. Wenn Sie Inhalte hinzufügen der <xref:System.Web.UI.UpdatePanel> deklarativ zu steuern oder über einen Designer, sollten Sie die Inhalte hinzufügen der <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> -Eigenschaft mithilfe eine `<ContentTemplate>` Element.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie programmgesteuert angeben, die <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Eigenschaft eine <xref:System.Web.UI.UpdatePanel> Steuerelement. Die <xref:System.Web.UI.WebControls.Label.Text%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.Label> Steuerelement wird festgelegt, wenn `Button1` geklickt wird.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.ControlCollection" />-Objekt ab, das die untergeordneten Steuerelemente für das <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement enthält.</summary>
        <value>Die Auflistung der untergeordneten Steuerelemente für das <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.Controls%2A> Eigenschaft wird von der Basisklasse überschrieben <xref:System.Web.UI.Control> Klasse und versiegelt, um weitere Ableitung zu verhindern. Zum Hinzufügen von Steuerelementen, die <xref:System.Web.UI.UpdatePanel> deklarativ zu steuern, erstellen Sie eine `<ContentTemplate>` Element innerhalb der <xref:System.Web.UI.UpdatePanel> Markup des Steuerelements. Zum Hinzufügen von Steuerelementen, die <xref:System.Web.UI.UpdatePanel> programmgesteuert steuern, verwenden Sie die <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" /> oder <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> der <see cref="T:System.Web.UI.ControlCollection" />-Klasse wurde aufgerufen. Wenn Sie den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements ändern möchten, ändern Sie die untergeordneten Steuerelemente der <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />-Eigenschaft.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Web.UI.Control" />-Objekt, das als Container für untergeordnete Steuerelemente fungiert, die den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements definieren.</summary>
        <returns>Ein <see cref="T:System.Web.UI.Control" />-Container für den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist für die Verwendung von Entwicklern, die zu erweiternden vorgesehen der <xref:System.Web.UI.UpdatePanel> Steuerelement. Geben Sie z. B. in abgeleiteten Klassen, ein anderes Stammsteuerelement, das fungiert als Container für Ihre <xref:System.Web.UI.UpdatePanel> den Inhalt des Steuerelements. Die Standardimplementierung gibt eine <xref:System.Web.UI.Control> Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> Methode in einem benutzerdefinierten <xref:System.Web.UI.UpdatePanel> Steuerelement rendern immer die `<fieldset>` und `<legend>` Elemente für den Inhalt des Bereichs. Die benutzerdefinierte <xref:System.Web.UI.UpdatePanel> -Steuerelement definiert eine öffentliche Eigenschaft mit dem Namen `GroupingText` , Zeichenfolgenliteral in den `<legend>` Element.  
  
 Eine benutzerdefinierte <xref:System.Web.UI.UpdatePanel> Steuerelement mit dem Namen `CustomUpdatePanel` leitet sich von <xref:System.Web.UI.UpdatePanel> und überschreibt die <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> Methode. Platzieren der `CustomUpdatePanel` Klasse Quellcode im Ordner "App_Code" der Website.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Die benutzerdefinierte <xref:System.Web.UI.UpdatePanel> Steuerelement wird verwendet, auf der Seite wie die <xref:System.Web.UI.UpdatePanel> Steuerelement ist. Das folgende Beispiel zeigt eine Seite mit der benutzerdefinierten <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Auflistung aller Steuerelemente zurück, die im <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement enthalten sind.</summary>
        <returns>Ein <see cref="T:System.Web.UI.ControlCollection" />-Objekt, das alle Steuerelemente umfasst, die den Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements definieren.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> Methode wird von Steuerelemententwicklern verwendet.  
  
 Da diese Methode geschützt und versiegelt ist, ist es sichtbar für Klassen, die von erben die <xref:System.Web.UI.UpdatePanel> -Klasse, aber es kann nicht überschrieben werden. Diese Methode überschreibt die basisimplementierung um ein spezielles zurückzugeben <xref:System.Web.UI.ControlCollection> -Objekt, das löst eine <xref:System.InvalidOperationException> beim der <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, oder <xref:System.Web.UI.ControlCollection.RemoveAt%2A> -Methode der der <xref:System.Web.UI.ControlCollection> -Klasse aufgerufen wird. Wenn Sie den Inhalt des <xref:System.Web.UI.UpdatePanel>-Steuerelements ändern möchten, ändern Sie die untergeordneten Steuerelemente der <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Triggerauflistung des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements, wenn das Teilrendering von Seiten aktiviert ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Teilrendering von Seiten nicht aktiviert ist, die Trigger, die in definierten die <xref:System.Web.UI.UpdatePanel.Triggers%2A> -Eigenschaft sind nicht initialisiert werden, da sie keine Auswirkungen haben. Die <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> Eigenschaft der <xref:System.Web.UI.ScriptManager> Steuerelement ruft ab oder legt einen Wert, der angibt, ob das Teilrendering von Seiten aktiviert ist. Die <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> Eigenschaft der <xref:System.Web.UI.ScriptManager> Steuerelement ruft ab oder legt einen Wert, der angibt, ob Teilrendering von Seiten unterstützt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie außer Kraft setzen der <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> -Methode, stellen Sie sicher, dass die Basisklasse aufrufen, damit Trigger registriert werden, wenn das Teilrendering von Seiten aktiviert ist.</para></block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement durch ein asynchrones Postback aktualisiert wird.</summary>
        <value><see langword="true" />, wenn das aktuelle <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement durch ein asynchrones Postbacks aktualisiert wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> Eigenschaft für die Verwendung von Entwicklern, die wissen möchten, sollte ein <xref:System.Web.UI.UpdatePanel> -Steuerelement durch ein asynchrones Postbacks aktualisiert wird. Verwenden Sie in Szenarien für die Entwicklung von Seiten, die <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> Eigenschaft, um zu bestimmen, ob eine Seite, die als Ergebnis eines asynchronen Postbacks verarbeitet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel> des Steuerelements <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> Eigenschaft instanziiert wird, während die <xref:System.Web.UI.UpdatePanel.OnInit%2A> Methode.  
  
 Die <xref:System.Web.UI.UpdatePanel.OnInit%2A> Methode wird von Entwicklern verwendet, zum Erweitern der Funktionalität von der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />-Eigenschaft wird definiert, wenn die <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />-Eigenschaft bereits erstellt wurde.</exception>
        <block subset="none" type="overrides"><para>Beim Überschreiben der <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> -Methode in einer abgeleiteten Klasse, achten Sie darauf, rufen Sie die <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> Methode der Basisklasse, damit Delegaten registrierte das Ereignis empfangen kann.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Übersicht über den Lebenszyklus ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Load" />-Ereignis für das <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement aus und ruft die <see cref="M:System.Web.UI.UpdatePanel.Initialize" />-Methode auf, wenn das Teilrendering von Seiten nicht aktiviert ist.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Wenn Sie außer Kraft setzen der <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> -Methode, stellen Sie sicher, dass die Basisklasse aufrufen, damit die <see cref="E:System.Web.UI.Control.Load" /> Ereignis wird ausgelöst.</para></block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> Methode wird von Entwicklern verwendet, zum Erweitern der Funktionalität von der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />-Eigenschaft wird auf <see langword="false" /> und die <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" />-Eigenschaft auf <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" /> festgelegt.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Unload" />-Basisereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.OnUnload%2A> Methode wird von Entwicklern verwendet, zum Erweitern der Funktionalität von der <xref:System.Web.UI.UpdatePanel> Steuerelement  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Übersicht über den Lebenszyklus ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream zum Rendern von HTML-Inhalt darstellt.</param>
        <summary>Löst das <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.Render%2A> Methode wird von Entwicklern verwendet, zum Erweitern der Funktionalität von der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Die <xref:System.Web.UI.UpdatePanel.Render%2A> Methode schreibt den gerenderten Inhalt der <xref:System.Web.UI.UpdatePanel> Steuerelement an den Browser mithilfe des bereitgestellten <xref:System.Web.UI.HtmlTextWriter> Objekt. Beim Überschreiben der <xref:System.Web.UI.UpdatePanel.Render%2A> -Methode in einer abgeleiteten Klasse, achten Sie darauf, rufen Sie die <xref:System.Web.UI.UpdatePanel.Render%2A> -Methode der Basisklasse-Klasse so, dass die untergeordneten Steuerelemente den <xref:System.Web.UI.UpdatePanel> Steuerelement gerendert werden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Übersicht über den Lebenszyklus ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream zum Rendern von HTML-Inhalt darstellt.</param>
        <summary>Löst das <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Methode wird von Entwicklern verwendet, zum Erweitern der Funktionalität von der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Die <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Methode schreibt den gerenderten Inhalt der <xref:System.Web.UI.UpdatePanel> Steuerelement an den Browser mithilfe des bereitgestellten <xref:System.Web.UI.HtmlTextWriter> Objekt. Beim Überschreiben der <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> -Methode in einer abgeleiteten Klasse, achten Sie darauf, rufen Sie die <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> -Methode der Basisklasse-Klasse so, dass die untergeordneten Steuerelemente den <xref:System.Web.UI.UpdatePanel> Steuerelement gerendert werden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Übersicht über den Lebenszyklus ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Inhalt eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements in ein <see langword="&lt;div&gt;" />- bzw. <see langword="&lt;span&gt;" />-HTML-Element eingeschlossen wird, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.UpdatePanelRenderMode" />-Werte. Der Standardwert ist <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />. Damit wird angegeben, dass der Inhalt eines Bereichs in ein <see langword="&lt;div&gt;" />-HTML-Element eingeschlossen wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.UpdatePanel.RenderMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, wird der Inhalt der ein <xref:System.Web.UI.UpdatePanel> -Steuerelements in einem HTML- `<span>` Element. Wenn die <xref:System.Web.UI.UpdatePanel.RenderMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelRenderMode.Block>, es wird gerendert, in einem HTML- `<div>` Element.  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht die legen Sie die <xref:System.Web.UI.UpdatePanel.RenderMode%2A> Eigenschaft deklarativ. Die <xref:System.Web.UI.UpdatePanel> Steuerelement mit dem Namen `UpdatePanel1` gerendert wird, in einem HTML- `<span>` Element. Wenn die <xref:System.Web.UI.UpdatePanel.RenderMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelRenderMode.Block>, der sich ergebenden Absatz sieht aufgrund der Art, in der separaten HTML-Code `<div>` Element gerendert wird.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements aktualisiert wird.</summary>
        <value><see langword="true" />, wenn der Inhalt des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements aktualisiert wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig die <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.UpdatePanel.Update%2A> -Methode explizit aufgerufen wurde oder wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Diese Eigenschaft dient zur Verwendung von Entwicklern, die erweitern möchten die <xref:System.Web.UI.UpdatePanel> Steuerelement. Z. B. in abgeleiteten Klassen, Sie möglicherweise zusätzliche Logik bereitstellen, um zu bestimmen, ob ein <xref:System.Web.UI.UpdatePanel> Steuerelement aktualisiert werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Attributs.</param>
        <summary>Gibt mithilfe eines angegebenen Namens ein Attribut eines Websteuerelements zurück.</summary>
        <returns>Der Wert des Attributs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.UpdatePanel>-Instanz in eine <xref:System.Web.UI.IAttributeAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des festzulegenden Attributs.</param>
        <param name="value">Der Wert des festzulegenden Attributs.</param>
        <summary>Legt den Wert des angegebenen Steuerelementattributs fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.UpdatePanel>-Instanz in eine <xref:System.Web.UI.IAttributeAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />-Objekt ab, das <see cref="T:System.Web.UI.AsyncPostBackTrigger" />-Objekte und <see cref="T:System.Web.UI.PostBackTrigger" />-Objekte enthält, die deklarativ für das <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement registriert wurden.</summary>
        <value>Eine Auflistung von Objekten vom Typ <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> und <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.UpdatePanel.Triggers%2A> Eigenschaft ruft eine Auflistung aller Trigger, die für definiert wurden die <xref:System.Web.UI.UpdatePanel> Steuerelement. (Sie können Trigger deklarativ definieren, mit der **UpdatePanelTrigger-Auflistungs-Editor** Dialogfeld im Designer oder mithilfe der `<Triggers>` Element der <xref:System.Web.UI.UpdatePanel> Steuerelement.) Die Auflistung enthält <xref:System.Web.UI.AsyncPostBackTrigger> und <xref:System.Web.UI.PostBackTrigger> Objekte.  
  
 Deklarative Trigger, die definiert sind die <xref:System.Web.UI.UpdatePanel.Triggers%2A> Auflistung werden nicht im Ansichtszustand verfolgt.  
  
 Wenn ein Steuerelement, das ein Namenscontainer ist als Trigger verwendet wird, verhalten sich alle untergeordneten Steuerelemente, die dazu führen, Postbacks dass als Trigger ein.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt die Aktualisierung des Inhalts eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Seite für die Partial-Page Rendering, beim Aufrufen aktiviert ist der <xref:System.Web.UI.UpdatePanel.Update%2A> -Methode, die <xref:System.Web.UI.UpdatePanel> den Inhalt des Steuerelements wird im Browser aktualisiert. Rufen Sie die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode, wenn Sie über Servercode, die ausführen müssen verfügen, um zu bestimmen, ob ein <xref:System.Web.UI.UpdatePanel> Steuerelement aktualisiert werden soll. Wenn Sie planen, verwenden Sie die <xref:System.Web.UI.UpdatePanel.Update%2A> legen Sie die Methode, die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Eigenschaft, um <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Wenn Sie die Entscheidung zum Aktualisieren des Bereichs in der Serverlogik möchten, stellen sicher, dass die <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaft `false` und, die keine expliziten Trigger für den Bereich definiert sind.  
  
 In einem typischen Seite Entwicklungsszenario, wenn Sie festlegen, oder wenn die <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> -Eigenschaft ist `true` für die <xref:System.Web.UI.UpdatePanel> -Steuerelement, das <xref:System.Web.UI.UpdatePanel.Update%2A> -Methode automatisch aufgerufen, während des Lebenszyklus der Seite.  
  
 Wenn die <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> Eigenschaft ist nicht definiert, für die <xref:System.Web.UI.UpdatePanel> steuern, die keine Updates des Panels erfolgt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode, um den Inhalt aktualisieren eine <xref:System.Web.UI.UpdatePanel> steuern, wenn mehr als fünf Sekunden seit dem letzten Update vergangen sind.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" />-Eigenschaft ist auf <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" /> festgelegt.  
  
- oder - 
Die <see cref="M:System.Web.UI.UpdatePanel.Update" />-Methode wird während des <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />-Ereignisses der Seite oder danach aufgerufen.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, dass der Inhalt eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements aktualisiert wird, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein <xref:System.Web.UI.UpdatePanel> -Steuerelement ist nicht in einem anderen <xref:System.Web.UI.UpdatePanel> die Panel-Steuerelement wird aktualisiert, entsprechend den Einstellungen des der <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> und <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaften zusammen mit der Auflistung von Triggern. Wenn ein <xref:System.Web.UI.UpdatePanel> Steuerelement ist in einem anderen <xref:System.Web.UI.UpdatePanel> -Steuerelement, dem untergeordneten Bereich wird automatisch aktualisiert, wenn der übergeordnete Bereich aktualisiert wird.  
  
 Der Inhalt des ein <xref:System.Web.UI.UpdatePanel> Steuerelement wird aktualisiert, in den folgenden Situationen:  
  
-   Wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> den Inhalt des Steuerelements wird aktualisiert, bei jedem Postback, die von überall auf der Seite stammt. Dazu gehören asynchrone Postbacks aus Steuerelementen, die innerhalb von anderen <xref:System.Web.UI.UpdatePanel> Steuerelemente und Postbacks über Steuerelemente, die nicht in <xref:System.Web.UI.UpdatePanel> Steuerelemente.  
  
-   Wenn die <xref:System.Web.UI.UpdatePanel> in einem anderen Steuerelement geschachtelt ist <xref:System.Web.UI.UpdatePanel> -Steuerelement und das übergeordnete UpdatePanel aktualisiert wird.  
  
-   Wenn die <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, und eine der folgenden Bedingungen auftritt:  
  
    -   Rufen Sie die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode der <xref:System.Web.UI.UpdatePanel> explizit zu steuern.  
  
    -   Das Postback wird verursacht, wird von einem Steuerelement, das als Trigger, mithilfe definiert ist der <xref:System.Web.UI.UpdatePanel.Triggers%2A> Eigenschaft der <xref:System.Web.UI.UpdatePanel> Steuerelement. In diesem Fall löst das Steuerelement explizit ein Update des Inhalts des Bereichs. Das Steuerelement kann sein, entweder innerhalb oder außerhalb der <xref:System.Web.UI.UpdatePanel> -Steuerelement, das den Trigger definiert.  
  
    -   Die <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> -Eigenschaftensatz auf `true` und ein untergeordnetes Steuerelement von der <xref:System.Web.UI.UpdatePanel> Steuerelement ein Postback auslöst. Ein untergeordnetes Steuerelement eines geschachtelten <xref:System.Web.UI.UpdatePanel> Steuerelement bewirkt keine Aktualisierung der äußeren <xref:System.Web.UI.UpdatePanel> steuern, es sei denn, es ist explizit als Trigger definiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>-Eigenschaft veranschaulicht. Das Beispiel deklariert zwei <xref:System.Web.UI.UpdatePanel> Steuerelemente. Im ersten Bereich der <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Im zweiten Bereich <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> nastaven NA hodnotu <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Eine Schaltfläche außerhalb sowohl Bereiche als Steuerelement für asynchrone Postbacks registriert ist, durch den Aufruf der <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Methode der <xref:System.Web.UI.ScriptManager> Steuerelement. In der Schaltfläche `Click` -Ereignishandler der <xref:System.Web.UI.UpdatePanel.Update%2A> Methode des ersten Bereichs wird immer dann aufgerufen, wenn mehr als fünf Sekunden seit der letzten Aktualisierung vergangen sind. In diesem Szenario wird der Inhalt des Bereichs nur aktualisiert, wenn die letzte Aktualisierung des Bereichs vor mehr als fünf Sekunden wurde. Der Inhalt des zweiten Bereichs wird immer aktualisiert.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Typ ist keiner der <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>