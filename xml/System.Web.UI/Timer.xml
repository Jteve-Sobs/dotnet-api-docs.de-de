<Type Name="Timer" FullName="System.Web.UI.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24626021d1da27740036597859ac1c4d943a127f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70429406" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.Web.UI.Control implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Control&#xA;Implements IPostBackEventHandler, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::Web::UI::Control, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptControl" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Control&#xA;    interface IPostBackEventHandler&#xA;    interface IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Führt in einem definierten Intervall asynchrone oder synchrone Postbacks von Webseiten aus.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Das <xref:System.Web.UI.Timer> -Steuerelement ermöglicht das Ausführen von Postbacks in einem angegebenen Intervall. Wenn Sie das <xref:System.Web.UI.Timer> -Steuerelement als ein-Element <xref:System.Web.UI.UpdatePanel> für ein- <xref:System.Web.UI.UpdatePanel> Steuerelement verwenden, wird das-Steuerelement mithilfe einer asynchronen, partiellen Seiten Aktualisierung aktualisiert. Sie müssen ein <xref:System.Web.UI.ScriptManager> -Objekt in eine Webseite einschließen, um das <xref:System.Web.UI.Timer> -Steuerelement zu verwenden.  
  
 Sie verwenden das <xref:System.Web.UI.Timer> -Steuerelement, <xref:System.Web.UI.UpdatePanel> um ein Steuerelement zu aktualisieren, <xref:System.Web.UI.UpdatePanel> indem Sie den Timer in das Steuerelement einschließen Alternativ können Sie den Timer außerhalb des <xref:System.Web.UI.UpdatePanel> Steuer Elements platzieren und den Timer als Trigger festlegen.  
  
 Sie können auch das vollständige Postback einer vollständigen Webseite initiieren, indem <xref:System.Web.UI.Timer> Sie das-Steuerelement in die Webseite einschließen und es nicht als einen <xref:System.Web.UI.UpdatePanel> -Wert für ein-Steuerelement festlegen.  
  
 Sie können Servercode ausführen, wenn das Zeit Geber Intervall verstrichen ist, indem Sie einen <xref:System.Web.UI.Timer.Tick> Ereignishandler für das-Ereignis erstellen. Im-Ereignishandler können Sie Code einschließen, der das Verhalten des <xref:System.Web.UI.Timer> Steuer Elements dynamisch anpasst.  
  
 Legen Sie <xref:System.Web.UI.Timer.Interval%2A> die-Eigenschaft fest, um anzugeben, wie oft Postbacks auftreten. Legen Sie <xref:System.Web.UI.Timer.Enabled%2A> die-Eigenschaft fest <xref:System.Web.UI.Timer> , um das ein-oder auszuschalten.  
  
> [!NOTE]
>  Die Genauigkeit, mit der <xref:System.Web.UI.Timer> das Steuerelement an den Webserver zurückgesendet wird, hängt von der Genauigkeit der ECMAScript ( `window.setTimeout` JavaScript)-Funktion ab, die im Browser ausgeführt wird.  
  
 Die <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft wird in Millisekunden definiert. Sie müssen die <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft auf einen Wert festlegen, mit dem mindestens ein asynchrones Postback durchgeführt werden kann, bevor das nächste Postback initiiert wird. Wenn sich <xref:System.Web.UI.Timer> das Steuerelement außerhalb <xref:System.Web.UI.UpdatePanel> eines Steuer Elements befindet, wird der Timer weiterhin ausgeführt, <xref:System.Web.UI.UpdatePanel> während der Inhalt des Steuer Elements aktualisiert wird. Wenn ein neues Postback initiiert wird, während ein früherer Postback verarbeitet wird, wird das erste Postback abgebrochen. Der Standardwert ist 60.000 Millisekunden (60 Sekunden).  
  
> [!NOTE]
>  Durch das <xref:System.Web.UI.Timer> Hinzufügen eines Steuer Elements mit einem <xref:System.Web.UI.Timer.Interval%2A> kleinen Wert in der-Eigenschaft kann ein erheblicher Datenverkehr zum und vom Webserver generiert werden. Verwenden Sie <xref:System.Web.UI.Timer> das-Steuerelement, um den Inhalt nur so oft wie nötig zu aktualisieren.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:Timer  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Interval="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTick="Tick event handler"  
    OnUnload="Unload handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein <xref:System.Web.UI.UpdatePanel> Steuerelement, das einen zufällig generierten Aktienkurs und die Uhrzeit anzeigt, zu der der Aktienkurs generiert wurde. Das <xref:System.Web.UI.Timer> -Steuerelement aktualisiert den Inhalt <xref:System.Web.UI.UpdatePanel> des-Steuer Elements alle 10 Sekunden.  
  
> [!NOTE]
>  In diesem Beispiel wird das Zeit Geber Intervall auf 10 Sekunden festgelegt, sodass Sie beim Ausführen des Beispiels nicht lange warten müssen, bis die Ergebnisse angezeigt werden. Da jedes Zeit Geber Intervall ein Postback verursacht, das den Netzwerk Datenverkehr verursacht, sollten Sie in einer Produktionsanwendung das Intervall auf die längste Zeit festlegen, die für Ihre Anwendung noch praktikabel ist.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Timer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.Timer" />-Steuerelement nach Ablauf der in der <see cref="P:System.Web.UI.Timer.Interval" />-Eigenschaft angegebenen Anzahl von Millisekunden ein Postback an den Server initiiert, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Web.UI.Timer" /> ein Postback initiiert, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.Timer.Enabled%2A> die-Eigenschaft, <xref:System.Web.UI.Timer> um das-Steuerelement ein-und auszuschalten. Wenn Sie auf <xref:System.Web.UI.Timer.Enabled%2A> `true`festlegen, startet <xref:System.Web.UI.Timer> das-Steuerelement den Zeitgeber Countdown, wenn die Webseite gerendert wird.  
  
 Beim Postback können Sie Eigenschaftswerte in der <xref:System.Web.UI.Timer.Enabled%2A> -Eigenschaft ändern, und die Änderungen werden reflektiert, wenn der Webseiteninhalt im Browser gerendert wird. Wenn Sie die <xref:System.Web.UI.Timer.Enabled%2A> Eigenschaft ändern und Sie dann beim gleichen Postback wieder in den ursprünglichen Wert ändern, wird das <xref:System.Web.UI.Timer> Steuerelement so ausgeführt, als ob keine Änderung vorgenommen wurde.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein <xref:System.Web.UI.UpdatePanel> Steuerelement, das einen zufällig generierten Aktienkurs und die Uhrzeit anzeigt, zu der der Aktienkurs generiert wurde. Standardmäßig aktualisiert das <xref:System.Web.UI.Timer> -Steuerelement alle 10 Sekunden <xref:System.Web.UI.UpdatePanel> den Inhalt des-Steuer Elements. Der Benutzer kann den Aktienkurs alle 10 Sekunden, alle 60 Sekunden oder überhaupt nicht aktualisieren. Wenn der Benutzer entscheidet, den Aktienkurs nicht zu aktualisieren, <xref:System.Web.UI.Timer.Enabled%2A> wird die-Eigenschaft `false`auf festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="timer.GetScriptDescriptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Eigenschaften aus einem <see cref="T:System.Web.UI.Timer" />-Objekt ab, die an die Clientkomponente übergeben werden, die Zeitgeberlogik im Browser implementiert.</summary>
        <returns>Ein Array vom Typ <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> -Methode fügt einem <xref:System.Web.UI.Timer.Enabled%2A> <xref:System.Web.UI.Timer> <xref:System.Web.UI.Timer.Interval%2A> -Objekt die-Eigenschaft und die-Eigenschaft einer Instanz der-Klasse hinzu. <xref:System.Web.UI.ScriptDescriptor> Die Client Komponente greift auf die Werte zu und legt die entsprechenden Werte im Skript fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="timer.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das Clientskript für das <see cref="T:System.Web.UI.Timer" />-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.ScriptReference" />-Objekt, das ein Clientskript für das <see cref="T:System.Web.UI.Timer" />-Steuerelement enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Web.UI.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(60000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Wartezeit (in Millisekunden) bis zum Initiieren eines Postbacks ab oder legt diese fest.</summary>
        <value>Die Wartezeit (in Millisekunden) bis zum Initiieren eines Postbacks. Der Standardwert ist 60.000 (60 Sekunden).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.Timer.Interval%2A> die-Eigenschaft, um fest <xref:System.Web.UI.Timer> zulegen, wie oft das-Steuerelement ein Postback an den Server initiiert. Sie können den Wert der <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft im Servercode nach einem Postback ändern, z. b. in einem Ereignishandler für das <xref:System.Web.UI.Timer.Tick> -Ereignis. Die Genauigkeit, mit der <xref:System.Web.UI.Timer> das Steuerelement an den Webserver zurückgesendet wird, hängt von der Genauigkeit der ECMAScript ( `window.setTimeout` JavaScript)-Funktion ab, die im Browser ausgeführt wird.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.Timer.Interval%2A> Eigenschaft auf einen kleinen Wert festgelegt wird, kann dies zu einem erheblichen Datenverkehr zum und vom Webserver führen. Verwenden Sie <xref:System.Web.UI.Timer> das-Steuerelement, um den Inhalt nur so oft wie nötig zu aktualisieren.  
  
 Wenn Sie den Wert der <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft ändern, wird der ECMAScript-Zeit Steuerungs Code, der im Browser ausgeführt wird, zurückgesetzt, wenn die Updates gerendert werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein <xref:System.Web.UI.UpdatePanel> Steuerelement, das einen zufällig generierten Aktienkurs und die Uhrzeit anzeigt, zu der der Aktienkurs generiert wurde. Standardmäßig aktualisiert das <xref:System.Web.UI.Timer> -Steuerelement alle 10 Sekunden <xref:System.Web.UI.UpdatePanel> den Inhalt des-Steuer Elements. Der Benutzer kann den Aktienkurs alle 10 Sekunden, alle 60 Sekunden oder überhaupt nicht aktualisieren. Die <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft wird auf die Auswahl des Benutzers festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als oder gleich 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="timer.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis des <see cref="T:System.Web.UI.Timer" />-Steuerelements aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Timer.Tick" />-Ereignis des <see cref="T:System.Web.UI.Timer" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.Timer.Tick> -Ereignis wird ausgelöst, wenn die in der <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft angegebene Anzahl von Millisekunden verstrichen ist, weil die Webseite oder seit dem <xref:System.Web.UI.Timer.Tick> vorherigen Ereignis gerendert wurde.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein <xref:System.Web.UI.UpdatePanel> Steuerelement, das einen zufällig generierten Aktienkurs und die Uhrzeit anzeigt, zu der der Aktienkurs generiert wurde. Das <xref:System.Web.UI.Timer> -Steuerelement aktualisiert den Inhalt <xref:System.Web.UI.UpdatePanel> des-Steuer Elements alle 10 Sekunden. Der Aktienkurs und die Uhrzeit werden in einem Handler für das <xref:System.Web.UI.Timer.Tick> -Ereignis festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="timer.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge mit einem optionalen Argument, das an den Ereignishandler übergeben werden soll.</param>
        <summary>Aktiviert ein <see cref="T:System.Web.UI.Timer" />-Steuerelement, um das <see cref="E:System.Web.UI.Timer.Tick" />-Ereignis auszulösen, wenn eine Seite an den Server gesendet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="timer.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, mit dem der Inhalt des <see cref="T:System.Web.UI.Timer" />-Steuerelements im Browser gerendert wird.</param>
        <summary>Rendert den Inhalt des <see cref="T:System.Web.UI.Timer" />-Steuerelements mithilfe des angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekts im Browser.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge mit einem optionalen Argument, das an den Ereignishandler übergeben werden soll.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Timer.Tick" />-Ereignis aus, wenn eine Seite an den Server gesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Timer>-Instanz in eine <xref:System.Web.UI.IPostBackEventHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Eigenschaften aus einem <see cref="T:System.Web.UI.Timer" />-Objekt ab, die an die Clientkomponente übergeben werden.</summary>
        <returns>Ein Array vom Typ <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Timer>-Instanz in eine <xref:System.Web.UI.IScriptControl>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> -Methode fügt einem <xref:System.Web.UI.Timer.Enabled%2A> <xref:System.Web.UI.Timer> <xref:System.Web.UI.Timer.Interval%2A> -Objekt die-Eigenschaft und die-Eigenschaft einer Instanz der-Klasse hinzu. <xref:System.Web.UI.ScriptDescriptor> Die Client Komponente ruft die Werte ab und legt die entsprechenden Werte im Skript fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das Clientskript für das <see cref="T:System.Web.UI.Timer" />-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.ScriptReference" />-Objekt, das ein Clientskript für das <see cref="T:System.Web.UI.Timer" />-Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Timer>-Instanz in eine <xref:System.Web.UI.IScriptControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Tick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler&lt;EventArgs&gt; " Usage="member this.Tick : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die in der <see cref="P:System.Web.UI.Timer.Interval" />-Eigenschaft angegebene Anzahl von Millisekunden abgelaufen ist und die Seite an den Server gesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.Timer.Tick> -Ereignis wird ausgelöst, wenn die in der <xref:System.Web.UI.Timer.Interval%2A> -Eigenschaft angegebene Anzahl von Millisekunden entweder seit dem letzten Rendern der Webseite oder seit dem <xref:System.Web.UI.Timer.Tick> vorherigen Ereignis verstrichen ist. Behandeln Sie <xref:System.Web.UI.Timer.Tick> das-Ereignis, wenn Sie während jedes Postbacks Aktionen ausführen müssen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein <xref:System.Web.UI.UpdatePanel> Steuerelement, das einen zufällig generierten Aktienkurs und die Uhrzeit anzeigt, zu der der Aktienkurs generiert wurde. Das <xref:System.Web.UI.Timer> -Steuerelement aktualisiert den Inhalt <xref:System.Web.UI.UpdatePanel> des-Steuer Elements alle 10 Sekunden. Der Aktienkurs und die Uhrzeit werden in einem Handler für das <xref:System.Web.UI.Timer.Tick> -Ereignis festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Timer.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.Control.Visible" />-Eigenschaft der <see cref="T:System.Web.UI.Control" />-Klasse, um zu verhindern, dass dieser Wert festgelegt wird.</summary>
        <value><see langword="true" />, wenn das Steuerelement auf der Seite gerendert wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Visible` -Eigenschaft wird in der <xref:System.Web.UI.Timer> -Klasse überschrieben, um das Festlegen dieser Eigenschaft zu verhindern. Die `Visible` -Eigenschaft `true` gibt zurück, wenn <xref:System.Web.UI.Timer> die Client Komponente der-Klasse in der Webseite enthalten ist, <xref:System.Web.UI.Timer.Enabled%2A> auch wenn auf `false`festgelegt ist. Die `Visible` -Eigenschaft `false` gibt zurück, wenn Sie sich innerhalb eines Containers befindet <xref:System.Web.UI.UpdatePanel> , z. `Visible` b. ein- `false`Steuerelement, dessen-Eigenschaft auf festgelegt  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ein Wert wird der <c>Visible</c>-Eigenschaft zugewiesen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
