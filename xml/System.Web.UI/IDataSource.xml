<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c40086fa88021febbf189caad773f244eb65f43" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83908238" /></Metadata><TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Datenquelle dar, an die sich datengebundene Steuerelemente binden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt eine Steuerelement Daten Bindungs Architektur, mit der Webserver Steuerelemente konsistent an Daten gebunden werden können. Webserver Steuerelemente, die an Daten gebunden werden, werden als Daten gebundene Steuerelemente bezeichnet, und die Klassen, die diese Bindung vereinfachen, werden als Datenquellen-Steuerelemente bezeichnet. Datenquellensteuerelemente können jede beliebige Datenquelle darstellen: eine relationale Datenbank, eine Datei, einen Stream, ein Geschäftsobjekt usw. Datenquellen-Steuerelemente präsentieren Daten auf konsistente Weise für Daten gebundene Steuerelemente, unabhängig von der Quelle oder dem Format der zugrunde liegenden Daten.  
  
 Sie implementieren die- <xref:System.Web.UI.IDataSource> Schnittstelle, wenn Sie Ihr eigenes benutzerdefiniertes ASP.NET-Datenquellen-Steuerelement implementieren möchten.  
  
 Jede Klasse, die die- <xref:System.Web.UI.IDataSource> Schnittstelle implementiert, ist ein Datenquellen-Steuerelement. Die <xref:System.Web.UI.IDataSource> -Schnittstelle dient als Grundlage für alle ASP.NET-Datenquellen-Steuerelemente und definiert eines der grundlegenden Konzepte für die Daten Bindungs Architektur mit zwei Methoden: der <xref:System.Web.UI.IDataSource.GetView%2A> -Methode und der- <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode. Dieses Konzept besteht darin, dass alle Datenquellen-Steuerelemente eine oder mehrere benannte Sichten für Ihre Daten unterstützen. Das Datenquellen Sicht-Objekt ähnelt der <xref:System.Data.DataView> Abstraktion im- <xref:System.Data> Namespace: eine Daten bindbare, angepasste Ansicht von Daten zum Sortieren, Filtern und anderen Daten Vorgängen, die in der Sicht definiert sind. Im Kern bewirkt ein Datenquellen-Steuerelement nicht mehr als das Abrufen von Sichten zu Daten.  
  
 Ein Datenquellen-Steuerelement kann über ein oder mehrere zugeordnete Datenquellen Sicht-Objekte verfügen. Einige Datenquellen Steuerelemente, einschließlich derjenigen, die relationale Datenbanken wie <xref:System.Web.UI.WebControls.SqlDataSource> und darstellen <xref:System.Web.UI.WebControls.AccessDataSource> , unterstützen nur eine Sicht. Andere Datenquellen-Steuerelemente, einschließlich hierarchischer Datenquellen-Steuerelemente wie <xref:System.Web.UI.WebControls.SiteMapDataSource> , unterstützen viele Ansichten. Die Datenquellen Sicht definiert die Funktionen einer Datenquelle und die Vorgänge, die Sie unterstützt.  
  
 Zusammengefasst implementieren Datenquellen Steuerelemente die- <xref:System.Web.UI.IDataSource> Schnittstelle, unterstützen eine oder mehrere benannte Sichten für die Daten, die Sie darstellen, und unterstützen immer das Abrufen von Daten aus der Datenquelle, die Sie darstellen. Datenquellen Steuerelemente rufen Daten immer bei Bedarf ab, z `DataBind` . b. Wenn für ein Daten gebundenes Steuerelement aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse die von der-Schnittstelle definierten Methoden implementieren kann <xref:System.Web.UI.IDataSource> , um Daten für Daten gebundene Steuerelemente bereitzustellen. Das Datenquellen-Steuerelement in diesem Beispiel fungiert als Datenquelle für eine durch Trennzeichen getrennte Datei und kann von einem Daten gebundenen Steuerelement verwendet werden, um durch Trennzeichen getrennte Datei Daten anzuzeigen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.DataSourceControl> .  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenquellensteuerelement auf eine Weise geändert wurde, die sich auf datengebundene Steuerelemente auswirkt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das- <xref:System.Web.UI.IDataSource.DataSourceChanged> Ereignis wird ausgelöst, wenn sich die Eigenschaften eines Daten gebundenen Steuer Elements oder der zugrunde liegenden Daten in irgendeiner Weise geändert haben, die sich auf die Daten Bindungen zwischen einem Daten gebundenen Steuerelement und seinen Daten auswirkt. Beispielsweise wird das-Ereignis ausgelöst, wenn eine Dateinamen Eigenschaft, z. b. die- <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> Eigenschaft, in einem dateibasierten Datenquellen-Steuerelement geändert wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der abzurufenden Ansicht.</param>
        <summary>Ruft die benannte Datenquellenansicht ab, die dem Datenquellensteuerelement zugeordnet ist.</summary>
        <returns>Gibt die benannte <see cref="T:System.Web.UI.DataSourceView" /> zurück, die dem <see cref="T:System.Web.UI.IDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datenquellen-Steuerelement Klassen können eine oder mehrere Sichten für die zugrunde liegenden Daten unterstützen. Diese Sichten werden durch Instanzen der- <xref:System.Web.UI.DataSourceView> Klasse dargestellt. Die Datenquellen Sicht definiert die Funktionen eines Datenquellen-Steuer Elements und führt alle notwendigen Schritte zum Abrufen von Daten aus dem zugrunde liegenden Datenspeicher und zum Ausführen von Vorgängen wie Sortieren, einfügen, löschen und aktualisieren aus.  
  
 Datenquellen-Steuerelement Klassen, die die- <xref:System.Web.UI.IDataSource> Schnittstelle implementieren, implementieren die- <xref:System.Web.UI.IDataSource.GetView%2A> Methode, um stark typisierte Ansichts Objekte zurückzugeben  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht, wie eine Datenquellen-Steuerelement Klasse, die die- <xref:System.Web.UI.IDataSource> Schnittstelle implementiert, die- <xref:System.Web.UI.IDataSource.GetView%2A> Methode implementiert und eine stark typisierte Instanz der-Klasse zurückgibt <xref:System.Web.UI.DataSourceView> . Da das Datenquellen-Steuerelement nur eine Ansicht unterstützt, wird der Name ignoriert und eine Sicht mit dem Namen mit dem Standard Ansichts Namen zurückgegeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.DataSourceControl> .  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Namen ab, die die Liste der Ansichtsobjekte darstellt, die der <see cref="T:System.Web.UI.IDataSource" />-Schnittstelle zugeordnet sind.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Namen der Ansichten enthält, die der <see cref="T:System.Web.UI.IDataSource" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datenquellen-Steuerelement Klassen können eine oder mehrere benannte Sichten für die zugrunde liegenden Daten unterstützen. Die- <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode gibt eine Auflistung von Ansichts Namen zurück, die derzeit der Datenquellen-Steuerelement Instanz zugeordnet sind. Aufrufer können die Auflistung von Ansichts Namen durchlaufen und einzelne <xref:System.Web.UI.DataSourceView> Objekte mit der- <xref:System.Web.UI.IDataSource.GetView%2A> Methode abrufen.  
  
 Datenquellen-Steuerelement Klassen, die die- <xref:System.Web.UI.IDataSource> Schnittstelle implementieren, implementieren die- <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode, um eine Auflistung von Namen zurückzugeben, die alle der Datenquellen-Steuerelement Klasse zugeordneten Datenquellen Sicht-Objekte darstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Datenquellen Steuerelement, das die- <xref:System.Web.UI.IDataSource> Schnittstelle implementiert, die- <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode implementiert und eine Auflistung <xref:System.Collections.ICollection> von Namen zurückgibt. Da die Datenquelle nur eine Sicht unterstützt, gibt die Methode mithilfe des Standard namens für die Sicht eine Auflistung von einem Element zurück. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.DataSourceControl> .  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>
