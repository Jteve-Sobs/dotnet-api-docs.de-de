<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bc745508e22af28c1bf4d51ec95afad4d0656fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Datenquelle dar, an die sich datengebundene Steuerelemente binden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt eine Steuerelement Architektur zur Datenbindung, die Webserver-Steuerelemente zum Binden an Daten auf konsistente Weise ermöglicht. Webserver-Steuerelemente, die an Daten gebunden werden, als von datengebundenen Steuerelementen, und die Klassen, die ermöglichen, dass die Datenquellen-Steuerelemente sind als Bindung bezeichnet bezeichnet. Datenquellensteuerelemente können jede beliebige Datenquelle darstellen: eine relationale Datenbank, eine Datei, einen Stream, ein Geschäftsobjekt usw. Datenquelle steuert die Darstellung der Daten auf konsistente Weise für datengebundene Steuerelemente, unabhängig von der Quelle oder das Format der zugrunde liegenden Daten.  
  
 Sie implementieren die <xref:System.Web.UI.IDataSource> -Schnittstelle auf, wenn Sie Ihre eigenen benutzerdefinierten ASP.NET-Datenquellensteuerelements implementieren möchten.  
  
 Jede Klasse, implementiert die <xref:System.Web.UI.IDataSource> Schnittstelle ist ein Datenquellen-Steuerelement. Die <xref:System.Web.UI.IDataSource> Schnittstelle bildet die Grundlage für alle ASP.NET-Datenquelle und eines der grundlegenden Konzepte der Datenbindung-Architektur mit den beiden Methoden definiert: die <xref:System.Web.UI.IDataSource.GetView%2A> Methode und die <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode. Dieses Konzept ist, dass alle Datenquellen-Steuerelemente eine oder mehrere benannte Ansicht ihrer Daten unterstützen. Das Datenquellenobjekt für die Ansicht ähnelt der <xref:System.Data.DataView> Abstraktion in den <xref:System.Data> Namespace: datenbindbares, angepasste Ansicht von Daten sortieren, Filtern und andere Data-Vorgänge, die die Sicht definiert. Im Grunde eine Datenquelle steuern nichts mehr als Ansichten Daten abzurufen.  
  
 Ein Datenquellen-Steuerelement kann eine oder mehrere zugeordnete Datenquellen-Ansichtsobjekte haben. Einige Datenquellen-Steuerelemente, einschließlich derjenigen, die darstellen, z. B. relationale Datenbanken <xref:System.Web.UI.WebControls.SqlDataSource> und <xref:System.Web.UI.WebControls.AccessDataSource>, unterstützen nur eine Ansicht. Andere Datenquellen-Steuerelemente, einschließlich von hierarchischen Datenquellen-Steuerelemente wie z. B. <xref:System.Web.UI.WebControls.SiteMapDataSource>, viele Ansichten zu unterstützen. Die Datenquellensicht definiert, die Funktionen einer Datenquelle sowie der Vorgänge, die es unterstützt wird.  
  
 Zusammenfassend lässt sich sagen, Datenquellen-Steuerelemente implementieren das <xref:System.Web.UI.IDataSource> Schnittstelle, unterstützt eine oder mehrere benannte Ansichten der Daten, die sie darstellen, und immer unterstützen das Abrufen von Daten aus der Datenquelle, die sie darstellen. Datenquellen-Steuerelemente immer Abrufen von Daten nach Bedarf, z. B. wenn `DataBind` für ein datengebundenes Steuerelement aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse definierten Methoden implementieren, kann die <xref:System.Web.UI.IDataSource> Schnittstelle, um Daten für datengebundene Steuerelemente bereitzustellen. Das Datenquellen-Steuerelement in diesem Beispiel fungiert als eine Datenquelle in eine CSV-Datei, und kann von jedem vom datengebundenen Steuerelement verwendet werden, zum Anzeigen von Daten von CSV-Datei. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceControl> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenquellensteuerelement auf eine Weise geändert wurde, die sich auf datengebundene Steuerelemente auswirkt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.IDataSource.DataSourceChanged> Ereignis wird ausgelöst, wenn in irgendeiner Form, die datenbindungen, die zwischen einem datengebundenen Steuerelement und dessen Daten wirkt sich auf die Eigenschaften eines datengebundenen Steuerelements oder die zugrunde liegenden Daten geändert hat. Das Ereignis wird beispielsweise ausgelöst, wenn ein wie z. B.-Eigenschaft Dateiname, die <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> -Eigenschaft auf eine dateibasierte Datenquellen-Steuerelement geändert wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der abzurufenden Ansicht.</param>
        <summary>Ruft die benannte Datenquellenansicht ab, die dem Datenquellensteuerelement zugeordnet ist.</summary>
        <returns>Gibt die benannte <see cref="T:System.Web.UI.DataSourceView" /> zurück, die dem <see cref="T:System.Web.UI.IDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datenquellen-Steuerelementklassen können eine oder mehrere Ansichten der zugrunde liegenden Daten unterstützen. Diese Ansichten werden von einer Instanz des dargestellt die <xref:System.Web.UI.DataSourceView> Klasse. Die Datenquellensicht definiert die Funktionen des Datenquellen-Steuerelement, und führt alle erforderlichen Schritte zum Abrufen von Daten aus dem zugrunde liegenden Datenspeicher und Vorgänge wie sortieren, einfügen, löschen und aktualisieren.  
  
 Datenquellen-Steuerelement, Klassen, in denen die <xref:System.Web.UI.IDataSource> Schnittstelle implementieren die <xref:System.Web.UI.IDataSource.GetView%2A> Methode, um stark typisierte zurückzugeben Anzeigen von Objekten, die der Klasse zugeordnet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Datenquellen-Steuerelementklasse, die implementiert die <xref:System.Web.UI.IDataSource> -Schnittstelle implementiert die <xref:System.Web.UI.IDataSource.GetView%2A> -Methode an und gibt eine stark typisierte Instanz der <xref:System.Web.UI.DataSourceView> Klasse. Da das Datenquellen-Steuerelement nur eine Ansicht unterstützt, ignoriert den Namen und gibt eine Ansicht mit dem Namen, mit dem Standardnamen für die Ansicht zurück. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceControl> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Namen ab, die die Liste der Ansichtsobjekte darstellt, die der <see cref="T:System.Web.UI.IDataSource" />-Schnittstelle zugeordnet sind.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Namen der Ansichten enthält, die der <see cref="T:System.Web.UI.IDataSource" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datenquellen-Steuerelementklassen können eine oder mehrere benannte Sichten der zugrunde liegenden Daten unterstützen. Die <xref:System.Web.UI.IDataSource.GetViewNames%2A> -Methode gibt eine Auflistung von Ansichtsnamen, gegenwärtig die Datenquelleninstanz-Steuerelement zugeordnet. Aufrufer können Durchlaufen der Auflistung der Namen von Ansichten und Abrufen einzelner <xref:System.Web.UI.DataSourceView> Objekte mit der <xref:System.Web.UI.IDataSource.GetView%2A> Methode.  
  
 Datenquellen-Steuerelement, Klassen, in denen die <xref:System.Web.UI.IDataSource> Schnittstelle implementieren die <xref:System.Web.UI.IDataSource.GetViewNames%2A> Methode, um eine Auflistung von Namen zurückzugeben, die die Datenquelle darstellt. Anzeigen von Objekten, die derzeit mit der Data Source-Control-Klasse zugeordnet sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Datenquellen-Steuerelement, das implementiert die <xref:System.Web.UI.IDataSource> -Schnittstelle implementiert die <xref:System.Web.UI.IDataSource.GetViewNames%2A> -Methode an und gibt eine <xref:System.Collections.ICollection> Auflistung von Namen. Da die Datenquelle nur eine Ansicht unterstützt, gibt die Methode eine Auflistung von einem Element mit dem Standardnamen für die Ansicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.DataSourceControl> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>