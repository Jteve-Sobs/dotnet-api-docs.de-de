<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ca4e3b6d190aa259f9cfd1ab311a793528c2b59" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86656350" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f1819-101">Enthält Informationen zu einer asynchronen Aufgabe, die für eine Seite registriert ist.</span><span class="sxs-lookup"><span data-stu-id="f1819-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="f1819-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-103">Mit ASP.NET Version 2,0 können Sie mehrere Tasks auf einer Seite registrieren und vor dem Rendern der Seite asynchron ausführen.</span><span class="sxs-lookup"><span data-stu-id="f1819-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="f1819-104">Sie können angeben, dass ein Task asynchron ausgeführt werden soll, wenn es sich um einen langsamen Prozess handelt und Sie nicht möchten, dass andere Prozesse während der Ausführung gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="f1819-105">Die asynchronen Aufgaben können parallel oder sequenziell ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="f1819-106">Ein- <xref:System.Web.UI.PageAsyncTask> Objekt muss über die-Methode auf der Seite registriert werden <xref:System.Web.UI.Page.RegisterAsyncTask%2A> .</span><span class="sxs-lookup"><span data-stu-id="f1819-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="f1819-107">Die Seite selbst muss nicht asynchron verarbeitet werden, um asynchrone Aufgaben auszuführen.</span><span class="sxs-lookup"><span data-stu-id="f1819-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="f1819-108">Sie können das- `Async` Attribut entweder auf `true` (wie im folgenden Codebeispiel gezeigt) oder `false` auf der Page-Direktive festlegen, und die asynchronen Aufgaben werden weiterhin asynchron verarbeitet:</span><span class="sxs-lookup"><span data-stu-id="f1819-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="f1819-109">Wenn das- `Async` Attribut auf festgelegt ist `false` , wird der Thread, der die Seite ausführt, blockiert, bis alle asynchronen Aufgaben vollständig sind.</span><span class="sxs-lookup"><span data-stu-id="f1819-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="f1819-110">Alle asynchronen Tasks, die vor dem Ereignis registriert werden, werden <xref:System.Web.UI.Page.PreRenderComplete> automatisch von der Seite ausgeführt, wenn Sie noch nicht ausgeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="f1819-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="f1819-111">Die asynchronen Aufgaben, die nach dem <xref:System.Web.UI.Page.PreRenderComplete> Ereignis registriert werden, müssen explizit über die-Methode ausgeführt werden <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> .</span><span class="sxs-lookup"><span data-stu-id="f1819-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="f1819-112">Die- <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Methode kann auch zum Starten von Aufgaben vor dem-Ereignis verwendet werden <xref:System.Web.UI.Page.PreRenderComplete> .</span><span class="sxs-lookup"><span data-stu-id="f1819-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f1819-113">Die- <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Methode führt alle registrierten asynchronen Tasks auf der Seite aus, die noch nicht ausgeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="f1819-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="f1819-114">Standardmäßig wird für eine asynchrone Aufgabe ein Timeout durchgeführt, wenn Sie nicht innerhalb von 45 Sekunden abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="f1819-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="f1819-115">Sie können einen anderen Timeout Wert in der Web.config-Datei oder der Page-Direktive angeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="f1819-116">Der- `<pages>` Abschnitt der Web.config Datei enthält ein- `asyncTimeout` Attribut, wie unten gezeigt.</span><span class="sxs-lookup"><span data-stu-id="f1819-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="f1819-117">Die Page-Direktive enthält ein- `AsyncTimeout` Attribut.</span><span class="sxs-lookup"><span data-stu-id="f1819-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="f1819-118">Im folgenden Codebeispiel werden drei asynchrone Aufgaben für eine Seite registriert und parallel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f1819-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f1819-119">Jede Aufgabe ruft eine Methode auf, die lediglich bewirkt, dass der Thread 5 Sekunden in den Standbymodus wechselt.</span><span class="sxs-lookup"><span data-stu-id="f1819-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1819-120">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.PageAsyncTask" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f1819-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="f1819-121">Ein Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="f1819-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="f1819-122">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.PageAsyncTask" />-Klasse unter Verwendung eines Ereignishandlers, der ermöglicht, dass die Aufgabe abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f1819-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-123">Dieser Konstruktor umschließt einen Delegaten <xref:System.Web.TaskEventHandler> , sodass das- <xref:System.Web.UI.PageAsyncTask> Objekt asynchronen Code (basierend auf- <xref:System.Threading.Tasks.Task> Objekten) mit dem vorhandenen ASP.net Web Forms asynchronen Pages-Funktion integrieren kann.</span><span class="sxs-lookup"><span data-stu-id="f1819-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="f1819-124">ASP.NET signalisiert dem- <xref:System.Threading.CancellationToken> Objekt, das an einen Delegaten übermittelt wird, <xref:System.Web.TaskEventHandler> für den Abbruch basierend auf dem Attribut, das <xref:System.Web.UI.Page.AsyncTimeout%2A> in der- `@ Page` Direktive der Webseite festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="f1819-125">Wenn der <xref:System.Web.UI.Page.AsyncTimeout%2A> Wert erreicht ist, wird das <xref:System.Threading.CancellationToken> Objekt signalisiert.</span><span class="sxs-lookup"><span data-stu-id="f1819-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="f1819-126">Der- `CancellationToken` Parameter muss an alle asynchronen APIs übergeben werden, die von der Implementierung der- <xref:System.Web.TaskEventHandler> Klasse aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="f1819-127">Ein Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="f1819-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="f1819-128">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.PageAsyncTask" />-Klasse unter Verwendung eines Ereignishandlers, der ermöglicht, dass die Aufgabe verarbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="f1819-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="f1819-129">Der Handler, der zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f1819-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="f1819-130">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="f1819-131">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum nicht erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="f1819-132">Das Objekt, das den Zustand der Aufgabe darstellt.</span><span class="sxs-lookup"><span data-stu-id="f1819-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="f1819-133">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.PageAsyncTask" />-Klasse, die den Standardwert zum parallelen Ausführen verwendet.</span><span class="sxs-lookup"><span data-stu-id="f1819-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-134">Diese Implementierung des Konstruktors legt die- <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Eigenschaft auf fest, `false` sodass die asynchrone Aufgabe nicht parallel mit anderen Tasks auf der Seite verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1819-135">Der <paramref name="beginHandler" />-Parameter oder der <paramref name="endHandler" />-Parameter ist nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="f1819-136">Der Handler, der zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f1819-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="f1819-137">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="f1819-138">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum nicht erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="f1819-139">Das Objekt, das den Zustand der Aufgabe darstellt.</span><span class="sxs-lookup"><span data-stu-id="f1819-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="f1819-140">Der Wert, der angibt, ob die Aufgabe parallel mit anderen Aufgaben verarbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="f1819-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="f1819-141">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.PageAsyncTask" />-Klasse, die den angegebenen Wert zum parallelen Ausführen verwendet.</span><span class="sxs-lookup"><span data-stu-id="f1819-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-142">Diese Implementierung des Konstruktors ermöglicht Ihnen, festzulegen, ob die asynchrone Aufgabe parallel mit anderen Aufgaben auf der Seite verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-143">Im folgenden Codebeispiel werden drei asynchrone Aufgaben erstellt, die parallel zueinander verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="f1819-144">Dieses Beispiel ist Teil eines größeren Beispiels in der <xref:System.Web.UI.PageAsyncTask> Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f1819-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1819-145">Der <paramref name="beginHandler" />-Parameter oder der <paramref name="endHandler" />-Parameter ist nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1819-146">Ruft die Methode ab, die zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f1819-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="f1819-147">Ein <see cref="T:System.Web.BeginEventHandler" />-Delegat, der die Methode darstellt, die zu Beginn der asynchronen Aufgabe aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f1819-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-148">Der Delegat <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> wird im Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f1819-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-149">Im folgenden Codebeispiel werden drei asynchrone Aufgaben für eine Seite registriert und parallel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f1819-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f1819-150">Jede Aufgabe ruft eine Methode auf, die lediglich bewirkt, dass der Thread 5 Sekunden in den Standbymodus wechselt.</span><span class="sxs-lookup"><span data-stu-id="f1819-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f1819-151"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A>Für jede Aufgabe wird ein Delegat angegeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1819-152">Ruft die Methode ab, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="f1819-153">Ein <see cref="T:System.Web.EndEventHandler" />-Delegat, der die Methode darstellt, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-154">Der Delegat <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> wird im Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f1819-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-155">Im folgenden Codebeispiel werden drei asynchrone Aufgaben für eine Seite registriert und parallel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f1819-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f1819-156">Jede Aufgabe ruft eine Methode auf, die lediglich bewirkt, dass der Thread 5 Sekunden in den Standbymodus wechselt.</span><span class="sxs-lookup"><span data-stu-id="f1819-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f1819-157">Ein-Delegat <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> wird für jede Aufgabe angegeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1819-158">Ruft einen Wert ab, der angibt, ob die Aufgabe parallel mit anderen Aufgaben verarbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="f1819-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="f1819-159"><see langword="true" />, wenn die Aufgabe parallel mit anderen Aufgaben verarbeitet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1819-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-160">Die- <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Eigenschaft wird im-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f1819-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="f1819-161">Wenn mehrere Tasks auf einer Seite registriert sind und die- <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Eigenschaft auf festgelegt ist `true` , werden diese Aufgaben gleichzeitig verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="f1819-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="f1819-162">Wenn die- <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Eigenschaft jedoch auf festgelegt ist `false` , werden diese Aufgaben sequenziell verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="f1819-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="f1819-163">Wenn eine Seite z. b. zwei asynchrone Aufgaben enthält, die jeweils 5 Sekunden gedauert haben und <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> auf festgelegt ist `true` , werden beide Aufgaben in 5 Sekunden abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="f1819-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="f1819-164">Wenn <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> `false` für diese beiden Aufgaben auf festgelegt ist, wird die erste Aufgabe in 5 Sekunden abgeschlossen, und die zweite Aufgabe wird 5 Sekunden nach dem Abschluss der ersten Aufgabe abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="f1819-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-165">Im folgenden Codebeispiel werden drei asynchrone Aufgaben definiert, die jeweils parallel verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="f1819-166">Dieses Beispiel ist Teil eines größeren Beispiels in der <xref:System.Web.UI.PageAsyncTask> Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f1819-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1819-167">Ruft ein Objekt ab, das den Zustand der Aufgabe darstellt.</span><span class="sxs-lookup"><span data-stu-id="f1819-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="f1819-168">Ein <see cref="T:System.Object" />, das den Zustand der Aufgabe darstellt.</span><span class="sxs-lookup"><span data-stu-id="f1819-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-169">Die <xref:System.Web.UI.PageAsyncTask.State%2A> -Eigenschaft wird im Konstruktor festgelegt und kann während der Ausführung der asynchronen Aufgabe nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="f1819-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="f1819-170">Sie können asynchrone Aufgaben in einer Seite unterscheiden, indem Sie den entsprechenden Eigenschaften eindeutige Zeichen folgen Werte zuweisen <xref:System.Web.UI.PageAsyncTask.State%2A> .</span><span class="sxs-lookup"><span data-stu-id="f1819-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-171">Im folgenden Codebeispiel werden drei asynchrone Aufgaben erstellt und eindeutige Werte für Ihre <xref:System.Web.UI.PageAsyncTask.State%2A> Eigenschaften erteilt.</span><span class="sxs-lookup"><span data-stu-id="f1819-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="f1819-172">Dieses Beispiel ist Teil eines größeren Beispiels in der <xref:System.Web.UI.PageAsyncTask> Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f1819-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1819-173">Ruft die Methode ab, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums nicht erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="f1819-174">Ein <see cref="T:System.Web.EndEventHandler" />-Delegat, der die Methode darstellt, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums nicht erfolgreich abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="f1819-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1819-175">Der Delegat <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> wird im Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f1819-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1819-176">Im folgenden Codebeispiel werden drei asynchrone Aufgaben für eine Seite registriert und parallel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f1819-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f1819-177">Jede Aufgabe ruft eine Methode auf, die lediglich bewirkt, dass der Thread 5 Sekunden in den Standbymodus wechselt.</span><span class="sxs-lookup"><span data-stu-id="f1819-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f1819-178"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A>Für jede Aufgabe wird ein Delegat angegeben.</span><span class="sxs-lookup"><span data-stu-id="f1819-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
