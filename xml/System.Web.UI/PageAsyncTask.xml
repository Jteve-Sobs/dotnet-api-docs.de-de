<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PageAsyncTask.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536cc8e3f70ac39686797a62234cd83eb5704a5b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36cc8e3f70ac39686797a62234cd83eb5704a5b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>Contains information about an asynchronous task registered to a page.</source>
          <target state="translated">Enthält Informationen zu einer asynchronen Aufgabe, die für eine Seite registriert ist.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</source>
          <target state="translated">ASP.NET-Version 2.0 können Sie mehrere Aufgaben zu einer Seite registrieren und asynchron ausgeführt, vor dem Rendern der Seite.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</source>
          <target state="translated">Sie können angeben, dass eine Aufgabe asynchron ausgeführt werden, wenn es ein langsamer Vorgang ist und nicht möchten, dass andere Prozesse auf die Sie gebunden werden, während er ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The asynchronous tasks can be executed in parallel or sequentially.</source>
          <target state="translated">Die asynchrone Aufgaben können parallel oder sequenziell ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> object must be registered to the page through the <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</ph> method.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> Objekt muss registriert werden, auf der Seite über die <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The page itself does not have to be processed asynchronously to execute asynchronous tasks.</source>
          <target state="translated">Die Seite selbst muss nicht asynchron verarbeitet werden, um asynchrone Aufgaben ausführen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You can set the <ph id="ph1">`Async`</ph> attribute to either <ph id="ph2">`true`</ph> (as shown in the following code example) or <ph id="ph3">`false`</ph> on the page directive and the asynchronous tasks will still be processed asynchronously:</source>
          <target state="translated">Sie können festlegen, die <ph id="ph1">`Async`</ph> Attribut entweder <ph id="ph2">`true`</ph> (wie im folgenden Codebeispiel gezeigt) oder <ph id="ph3">`false`</ph> auf der Seite Richtlinie und die asynchrone Aufgaben werden immer noch asynchron verarbeitet werden:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>When the <ph id="ph1">`Async`</ph> attribute is set to <ph id="ph2">`false`</ph>, the thread that executes the page will be blocked until all asynchronous tasks are complete.</source>
          <target state="translated">Wenn die <ph id="ph1">`Async`</ph> -Attributsatz zur <ph id="ph2">`false`</ph>, den Thread, der die Seite ausführt wird blockiert, bis alle asynchronen Vorgänge abgeschlossen sind.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Any asynchronous tasks registered before the <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event will be executed automatically by the page if they have not already been executed.</source>
          <target state="translated">Alle asynchronen Vorgänge registriert werden, bevor die <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> Ereignis wird automatisch von der Seite ausgeführt werden, wenn sie nicht bereits ausgeführt wurde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Those asynchronous tasks registered after the <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event must be executed explicitly through the <ph id="ph2">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method.</source>
          <target state="translated">Registrierten asynchronen Aufgaben nach der <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> Ereignis muss über explizit ausgeführt werden, die <ph id="ph2">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method can also be used to start tasks before the <ph id="ph2">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> Methode kann auch verwendet werden, um die Aufgaben vor dem Starten der <ph id="ph2">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method executes all the registered asynchronous tasks on the page that have not been executed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> Methode alle registrierten asynchrone Aufgaben ausführt, auf der Seite, die nicht ausgeführt wurden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>By default, an asynchronous task will time out if it has not completed within 45 seconds.</source>
          <target state="translated">Standardmäßig wird eine asynchrone Aufgabe einen Timeout beendet wird, wenn er nicht innerhalb von 45 Sekunden abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You can specify a different time-out value in either the Web.config file or the page directive.</source>
          <target state="translated">Sie können einen anderen Timeoutwert angeben, in der Datei "Web.config" oder der Seitendirektive.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">`&lt;pages&gt;`</ph> section of the Web.config file contains an <ph id="ph2">`asyncTimeout`</ph> attribute, as shown below.</source>
          <target state="translated">Die <ph id="ph1">`&lt;pages&gt;`</ph> Abschnitt der Datei "Web.config" enthält ein <ph id="ph2">`asyncTimeout`</ph> Attribut, wie unten dargestellt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The page directive contains an <ph id="ph1">`AsyncTimeout`</ph> attribute.</source>
          <target state="translated">Der Seitendirektive enthält ein <ph id="ph1">`AsyncTimeout`</ph> Attribut.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">Im folgenden Codebeispiel wird drei asynchrone Aufgaben zu einer Seite registriert und parallel ausgeführt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">Eine Methode, die lediglich den Thread 5 Sekunden im Ruhezustand verbleiben, bewirkt, dass Ruft jede Aufgabe.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>An event handler.</source>
          <target state="translated">Ein Ereignishandler.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using an event handler that enables the task to be canceled.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph>-Klasse unter Verwendung eines Ereignishandlers, der ermöglicht, dass die Aufgabe abgebrochen werden kann.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>This constructor wraps a <ph id="ph1">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate so that the <ph id="ph2">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> object can integrate asynchronous code (based on <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</source>
          <target state="translated">Dieser Konstruktor dient als Wrapper für eine <ph id="ph1">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegieren, damit die <ph id="ph2">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> Objekt kann asynchronen Code integrieren (basierend auf <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> Objekte) mit der vorhandenen ASP.NET Web Forms asynchrone Seiten-Funktion.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>ASP.NET will signal the <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> object that is passed to a <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate for cancellation based on the <ph id="ph3">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> attribute set in the <ph id="ph4">`@ Page`</ph> directive of the Web page.</source>
          <target state="translated">ASP.NET signalisiert der <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> -Objekt, das übergeben wird eine <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegieren Abbrüche basierend auf der <ph id="ph3">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> Attribut festgelegt wird, der <ph id="ph4">`@ Page`</ph> Richtlinie der Webseite.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> value has been reached, the <ph id="ph2">&lt;xref:System.Threading.CancellationToken&gt;</ph> object will be signaled.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> Wert erreicht haben, die <ph id="ph2">&lt;xref:System.Threading.CancellationToken&gt;</ph> -Objekt signalisiert wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>The <ph id="ph1">`CancellationToken`</ph> parameter must be passed to any asynchronous APIs that are called by your implementation of the <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">`CancellationToken`</ph> Parameter übergeben werden muss, um alle asynchronen APIs, die durch Ihre Implementierung von aufgerufen werden der <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})">
          <source>An event handler.</source>
          <target state="translated">Ein Ereignishandler.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using an event handler that enables the task to be handled.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph>-Klasse unter Verwendung eines Ereignishandlers, der ermöglicht, dass die Aufgabe verarbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">Der Handler, der zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum nicht erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The object that represents the state of the task.</source>
          <target state="translated">Das Objekt, das den Zustand der Aufgabe darstellt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using the default value for executing in parallel.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph>-Klasse, die den Standardwert zum parallelen Ausführen verwendet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>This implementation of the constructor sets the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> so the asynchronous task is not processed in parallel with other tasks on the page.</source>
          <target state="translated">Diese Implementierung des Konstruktors die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> Eigenschaft <ph id="ph2">`false`</ph> damit die asynchrone Aufgabe nicht parallel mit anderen Aufgaben auf der Seite verarbeitet wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> parameter is not specified.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph>-Parameter ist nicht angegeben.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">Der Handler, der zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">Der Handler, der aufgerufen werden soll, wenn die Aufgabe im Timeoutzeitraum nicht erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The object that represents the state of the task.</source>
          <target state="translated">Das Objekt, das den Zustand der Aufgabe darstellt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">Der Wert, der angibt, ob die Aufgabe parallel mit anderen Aufgaben verarbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using the specified value for executing in parallel.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph>-Klasse, die den angegebenen Wert zum parallelen Ausführen verwendet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</source>
          <target state="translated">Diese Implementierung des Konstruktors können Sie festlegen, ob die asynchrone Aufgabe parallel mit anderen Aufgaben auf der Seite verarbeitet werden.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The following code example creates three asynchronous tasks that are processed in parallel to each other.</source>
          <target state="translated">Das folgende Codebeispiel erstellt drei asynchrone Tasks, die verarbeitet werden parallel zueinander.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">In diesem Beispiel ist Teil eines umfangreicheren Beispiels der <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> -Klassenübersicht.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> parameter is not specified.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph>-Parameter ist nicht angegeben.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>Gets the method to call when beginning an asynchronous task.</source>
          <target state="translated">Ruft die Methode ab, die zu Beginn einer asynchronen Aufgabe aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> delegate that represents the method to call when beginning the asynchronous task.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>-Delegat, der die Methode darstellt, die zu Beginn der asynchronen Aufgabe aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> Delegat wird im Konstruktor festgelegt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">Im folgenden Codebeispiel wird drei asynchrone Aufgaben zu einer Seite registriert und parallel ausgeführt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">Eine Methode, die lediglich den Thread 5 Sekunden im Ruhezustand verbleiben, bewirkt, dass Ruft jede Aufgabe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> Delegaten für jede Aufgabe angegeben wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>Gets the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">Ruft die Methode ab, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> delegate that represents the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>-Delegat, der die Methode darstellt, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> Delegat wird im Konstruktor festgelegt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">Im folgenden Codebeispiel wird drei asynchrone Aufgaben zu einer Seite registriert und parallel ausgeführt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">Eine Methode, die lediglich den Thread 5 Sekunden im Ruhezustand verbleiben, bewirkt, dass Ruft jede Aufgabe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>An <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> Delegaten für jede Aufgabe angegeben wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>Gets a value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Aufgabe parallel mit anderen Aufgaben verarbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the task should be processed in parallel with other tasks; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Aufgabe parallel mit anderen Aufgaben verarbeitet werden soll, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set in the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> Eigenschaft wird im Konstruktor festgelegt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>When multiple tasks are registered in a page and the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, then those tasks are processed concurrently.</source>
          <target state="translated">Wenn mehrere Aufgaben auf einer Seite registriert sind und die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph>, und klicken Sie dann diese Aufgaben gleichzeitig verarbeitet werden.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>However, if the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, then those tasks are processed sequentially.</source>
          <target state="translated">Jedoch, wenn die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und klicken Sie dann diese Vorgänge sequenziell verarbeitet werden.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, both tasks will complete in 5 seconds.</source>
          <target state="translated">Wenn eine Seite beispielsweise zwei asynchrone Aufgaben enthält, die jede 5 Sekunden abgeschlossen und <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> auf festgelegt ist <ph id="ph2">`true`</ph>, beide Aufgaben innerhalb von 5 Sekunden abgeschlossen werden.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> festgelegt ist, um <ph id="ph2">`false`</ph> für dieselben zwei Aufgaben, und klicken Sie dann die erste Aufgabe wird in 5 Sekunden abgeschlossen und die zweite Aufgabe 5 Sekunden nach dem Abschluss der ersten Aufgabe abgeschlossen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>The following code example defines three asynchronous tasks that are each set to be processed in parallel.</source>
          <target state="translated">Das folgende Codebeispiel definiert drei asynchrone Tasks, die jede werden parallel verarbeitet werden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">In diesem Beispiel ist Teil eines umfangreicheren Beispiels der <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> -Klassenübersicht.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>Gets an object that represents the state of the task.</source>
          <target state="translated">Ruft ein Objekt ab, das den Zustand der Aufgabe darstellt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the state of the task.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den Zustand der Aufgabe darstellt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> property is set in the constructor and cannot be modified during execution of the asynchronous task.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> Eigenschaft wird im Konstruktor festgelegt und kann nicht geändert werden, während der Ausführung der asynchronen Aufgabe.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> properties.</source>
          <target state="translated">Sie können asynchrone Aufgaben in einer Seite unterscheiden, indem Sie Werte zuweisen, eindeutige Zeichenfolge, die ihren jeweiligen <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>The following code example creates three asynchronous tasks and gives them unique values for their <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> properties.</source>
          <target state="translated">Im folgenden Codebeispiel werden drei asynchrone Aufgaben erstellt und erhalten sie eine eindeutige Werte für ihre <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">In diesem Beispiel ist Teil eines umfangreicheren Beispiels der <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> -Klassenübersicht.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>Gets the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">Ruft die Methode ab, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums nicht erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> delegate that represents the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>-Delegat, der die Methode darstellt, die aufgerufen werden soll, wenn die Aufgabe innerhalb des Timeoutzeitraums nicht erfolgreich abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> Delegat wird im Konstruktor festgelegt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">Im folgenden Codebeispiel wird drei asynchrone Aufgaben zu einer Seite registriert und parallel ausgeführt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">Eine Methode, die lediglich den Thread 5 Sekunden im Ruhezustand verbleiben, bewirkt, dass Ruft jede Aufgabe.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> Delegaten für jede Aufgabe angegeben wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>