<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b94f7e3250c9bd8b39839de4ef6fd5b8cb2dbf6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86609052" /></Metadata><TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <TypeSignature Language="F#" Value="type HierarchicalDataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Datenansicht eines Knotens oder einer Auflistung von Knoten in einer hierarchischen Datenstruktur für ein <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt eine Daten Bindungs Architektur, mit der Webserver Steuerelemente Daten an Daten binden und auf konsistente Weise präsentieren können. Webserver Steuerelemente, die an Daten gebunden werden, werden als Daten gebundene Steuerelemente bezeichnet, und die Klassen, die diese Bindung vereinfachen, werden als Datenquellen-Steuerelemente bezeichnet. Datenquellensteuerelemente können jede beliebige Datenquelle darstellen: eine Datei, einen Stream, eine relationale Datenbank, ein Geschäftsobjekt usw. Datenquellen-Steuerelemente präsentieren Daten auf konsistente Weise für Daten gebundene Steuerelemente, unabhängig von der Quelle oder dem Format der zugrunde liegenden Daten.  
  
 Datenquellen Steuerelemente, die hierarchische Daten darstellen, werden von der abstrakten- <xref:System.Web.UI.HierarchicalDataSourceControl> Klasse abgeleitet. Sie können sich ein Datenquellen-Steuerelement als die Kombination aus dem Datenquellen-Steuerelement Objekt und den zugehörigen Sichten für die zugrunde liegenden Daten vorstellen, die durch Datenquellen Sicht-Objekte dargestellt werden. Hierarchische Datenquellen-Steuerelemente unterstützen eine hierarchische Datenquellen Sicht für jede hierarchische Ebene von Daten, die Sie darstellen. Die Datenquellen Sichten werden nicht benannt, wie z <xref:System.Web.UI.DataSourceView> . b. die einem Steuerelement zugeordneten Objekte <xref:System.Web.UI.DataSourceControl> , werden aber durch ihren eindeutigen hierarchischen Pfad identifiziert.  
  
 Datenquellen Sichten definieren die Funktionen eines Datenquellen-Steuer Elements. Alle Datenquellen Sicht-Objekte, einschließlich <xref:System.Web.UI.HierarchicalDataSourceView> , unterstützen das Abrufen von Daten aus der zugrunde liegenden Datenquelle mithilfe der- <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Methode, die eine hierarchische Liste von Daten als ein-Objekt abruft <xref:System.Web.UI.IHierarchicalEnumerable> . Alle Datenquellen Sicht-Objekte unterstützen optional einen grundlegenden Satz von Funktionen, einschließlich Operationen wie <xref:System.Web.UI.DataSourceView.Insert%2A> , <xref:System.Web.UI.DataSourceView.Update%2A> , <xref:System.Web.UI.DataSourceView.Delete%2A> und Sortierung. Ein Daten gebundenes Steuerelement kann die Funktionen eines Datenquellen-Steuer Elements ermitteln, indem eine zugeordnete Datenquellen Sicht mit der <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> -Methode abgerufen und die Sicht zur Entwurfszeit oder zur Laufzeit abgefragt wird. <xref:System.Web.UI.HierarchicalDataSourceView> unterstützt zurzeit keine- <xref:System.Web.UI.DataSourceView.Insert%2A> ,- <xref:System.Web.UI.DataSourceView.Update%2A> oder- <xref:System.Web.UI.DataSourceView.Delete%2A> Vorgänge.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse von der- <xref:System.Web.UI.HierarchicalDataSourceView> Klasse abgeleitet wird, um Daten aus dem hierarchischen Datenspeicher abzurufen, in diesem Fall in einem Dateisystem. Die- `FileSystemDataSourceView` Klasse ist eine stark typisierte- <xref:System.Web.UI.HierarchicalDataSourceView> Instanz, mit der hierarchische Webserver Steuerelemente, z <xref:System.Web.UI.WebControls.TreeView> . b. das-Steuerelement, an ein Steuerelement gebunden `FileSystemDataSource` und Dateisystem Informationen angezeigt Aus Sicherheitsgründen werden Dateisystem Informationen nur angezeigt, wenn das Datenquellen-Steuerelement in einem localhost-, authentifizierten Szenario verwendet wird und nur mit dem virtuellen Verzeichnis gestartet wird, in dem sich die Web Forms Seite mit dem Datenquellen-Steuerelement befindet. Andernfalls kann der `viewPath` an den-Konstruktor übergebenen-Parameter verwendet werden, um eine Sicht basierend auf dem aktuellen Dateisystempfad zu erstellen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.HierarchicalDataSourceControl> .  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie von <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> erben, müssen Sie folgenden Member überschreiben: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</para></block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HierarchicalDataSourceView" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="hierarchicalDataSourceView.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste aller Datenelemente in der Ansicht ab.</summary>
        <returns>Eine <see cref="T:System.Web.UI.IHierarchicalEnumerable" />-Auflistung von Datenelementen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Methode gibt eine Auflistung <xref:System.Web.UI.IHierarchicalEnumerable> von Datenelementen in der aktuellen Ansicht zurück. Sie können die- <xref:System.Collections.IEnumerable.GetEnumerator%2A> Methode zum Abrufen eines <xref:System.Collections.IEnumerator> Objekts und durchlaufen der Auflistung von Datenelementen abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Methode in einer Klasse überschrieben wird, die von der-Klasse abgeleitet wird <xref:System.Web.UI.HierarchicalDataSourceView> , um hierarchische <xref:System.IO.FileSystemInfo> Daten aus einem Dateisystem abzurufen. Aus Sicherheitsgründen werden Dateisystem Informationen nur angezeigt, wenn das Datenquellen-Steuerelement in einem localhost-, authentifizierten Szenario verwendet wird und nur mit dem virtuellen Verzeichnis gestartet wird, in dem sich die Web Forms Seite mit dem Datenquellen-Steuerelement befindet. Andernfalls kann der-Parameter, der `viewPath` an den Konstruktor des View-Objekts übergeben wird, zum Erstellen einer Sicht verwendet werden, die auf dem aktuellen Dateisystempfad basiert. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.HierarchicalDataSourceControl> .  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>
