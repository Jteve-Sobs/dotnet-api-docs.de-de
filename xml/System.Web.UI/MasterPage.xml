<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb459e5e810ab8e8fdc1464669fafdf06bed0bd3" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55366362" /></Metadata><TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <TypeSignature Language="F#" Value="type MasterPage = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als Vorlage und Zusammenführungscontainer für Seiten, die nur aus <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelementen und ihre jeweiligen untergeordneten Steuerelementen bestehen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Masterseite fungiert als Vorlagencontainer und das Zusammenführen von Seite Inhaltsseiten in Ihrer ASP.NET Web-Anwendung. Masterseiten bieten eine bequeme Möglichkeit, die Struktur und Inhalt für einen Satz von Inhaltsseiten freigeben. Verwenden Sie Platzhalter für Inhalte, um die Abschnitte der Masterseite mit dem Inhalt der Inhaltsseiten ersetzen zu definieren.  
  
 Bei Verwendung einer Masterseite und die entsprechenden Inhaltsseiten fügen Sie die erforderlichen Tags des XHTML-Dokument (z. B. `html`, `head`, und `body`) nur auf die Masterseite und darf nicht mehr, erstellen Sie Ihre andere ASPX-Dateien (ASP.NET-Seiten) als eigenständige Web Seiten. Der Inhalt zum Einfügen in die Platzhalter in die Masterseite wird von Inhaltsseiten definiert.  
  
 Wenn eine HTTP-Anforderung für eine Seite zur Laufzeit erfolgt, werden die Masterseite und Inhaltsseiten in einer Klasse mit dem gleichen Namen wie die Inhaltsseiten kombiniert. Die resultierende kompiliert, zusammengeführte Klasse abgeleitet ist, aus der <xref:System.Web.UI.Page> Klasse.  
  
 Eine Masterseite kann es sich um direkte Markup und Serversteuerelemente sowie Container-Steuerelemente enthalten. Jedes Element, das in die Masterseite außerhalb der platziert wird eine <xref:System.Web.UI.WebControls.ContentPlaceHolder> -Steuerelements auf alle Seiten, die infolge des Zusammenführens von der Masterseite und Inhaltsseiten.  
  
 Jeder Inhaltsseite, die mit der Masterseite verknüpft ist, muss auf die Masterseite in verweisen eine `MasterPageFile` Attribut, dessen Richtlinie. Inhalt Seiten darf nur eine `@ Page` Richtlinie und einer oder mehrerer <xref:System.Web.UI.WebControls.Content> Steuerelemente. Alle von Ihrer Seite Text, Markup und Serversteuerelemente muss platziert werden, in <xref:System.Web.UI.WebControls.Content> Steuerelemente. Sie Identifizieren der <xref:System.Web.UI.WebControls.ContentPlaceHolder> , auf die Steuerung der einem Masterauftrag für den eine <xref:System.Web.UI.WebControls.Content> Steuerelement zugeordnet ist, durch Festlegen der <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> Eigenschaft der <xref:System.Web.UI.WebControls.Content> Steuerelement.  
  
 Zur Laufzeit den dynamischen Inhalt aus jedem <xref:System.Web.UI.WebControls.Content> -Steuerelement in die angeforderte Seite mit der in den genauen Speicherort der zugeordneten Masterseite zusammengeführt <xref:System.Web.UI.WebControls.ContentPlaceHolder> Steuerelement. Alle anderen Markup und Steuerelemente auf der Masterseite sind nicht betroffen. Ereignishandler können in sowohl der master-Klasse, und klicken Sie auf der Seite Inhalt definiert werden. Weitere Informationen finden Sie unter [Ereignisse in ASP.NET Master- und Inhaltsseiten](https://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd).  
  
 Die <xref:System.Web.UI.MasterPage> -Klasse Dateien, die Erweiterung .master zugeordnet ist. Diese Dateien werden zur Laufzeit als kompiliert <xref:System.Web.UI.MasterPage> Objekte und im Serverspeicher zwischengespeichert werden.  
  
 Die Masterseite der Inhaltsseite über zur Verfügung gestellt wird die <xref:System.Web.UI.Page.Master%2A> Eigenschaft des basistexts <xref:System.Web.UI.Page> Klasse. Die <xref:System.Web.UI.Page.Master%2A> Eigenschaft gibt die Instanz der Masterseite zurück; es wird jedoch als Basis angegeben <xref:System.Web.UI.MasterPage> Klasse. Preisgabe von Zugangsdaten, Eigenschaften und Funktionen der Masterseite die <xref:System.Web.UI.Page.Master%2A> Eigenschaft umgewandelt werden kann, um eine <xref:System.Web.UI.MasterPage> Objekt. Der Klassenname der Masterseite ist definiert, mit der `ClassName` Attribut der Richtlinie.  
  
> [!NOTE]
>  Dateien mit der Master-Erweiterungen werden nicht an einen Browser verarbeitet.  
  
 Die Anweisungen, die auf einer Masterseite gelten die identisch sind, die verfügbar sind ein <xref:System.Web.UI.UserControl> Objekt. Sie können die folgenden Attribute enthalten:  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 Die Anweisungen für einzelne Seiten überschreiben Masterseite Richtlinien nicht.  
  
 Gestaltungsvorlagen werden am häufigsten deklarativ erstellt werden. Wenn Sie eine Masterseite programmgesteuert erstellen möchten, leiten Sie direkt aus der <xref:System.Web.UI.MasterPage> Klasse. Neben der Erweiterung von der <xref:System.Web.UI.MasterPage> -Klasse, müssen Sie die Master-Datei, um die Benutzeroberfläche (UI) anzuzeigen, die mit den Klassen zugeordnet ist, die Sie in der Quelldatei aufgerufen haben erstellen.  
  
> [!NOTE]
>  Wenn Sie eine Masterseite erstellen, indem Sie zuerst eine eigene Klasse zu erstellen, müssen Sie alle Namespaces einschließen, die für die Klassen erforderlich sind, die von der Seite verwendet werden.  
  
 Weitere Informationen zu den Masterseiten, finden Sie unter [ASP.NET-Masterseiten](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
   
  
## Examples  
 Dieser Abschnitt enthält vier Codebeispiele:  
  
-   Im ersten Codebeispiel wird veranschaulicht, wie eine Masterseite deklarativ erstellt wird.  
  
-   Im zweite Codebeispiel stellt dar, die Seite Inhalte, die mit der Masterseite zugeordnet ist, die im ersten Codebeispiel erstellt wurde.  
  
-   Im dritten Codebeispiel wird veranschaulicht, wie eine Eigenschaft auf eine Gestaltungsvorlage hinzufügen wird.  
  
-   Im vierten Codebeispiel wird veranschaulicht, wie mit einer Inhaltsseite auf eine öffentliche Eigenschaft auf der Masterseite zugegriffen wird.  
  
 Im folgenden Beispiel wird veranschaulicht, wie eine Masterseite deklarativ erstellt und mithilfe einer Inhaltsseite Inhalt hinzugefügt wird. Die erste Webseite wird die master-Seite, die mit dem Namen `MasterPageSample_1.master`.  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Das folgende Beispiel zeigt die Inhaltsseite, der zugeordnet wird `MasterPageSample_1.master`. Er enthält eine <xref:System.Web.UI.WebControls.Content> steuern und identifiziert die <xref:System.Web.UI.WebControls.ContentPlaceHolder> -Steuerelement, das der Inhalt mithilfe von zugeordnet ist die <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> Eigenschaft.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 Im folgende Beispiel veranschaulicht das Hinzufügen einer Eigenschaft auf eine Gestaltungsvorlage. Die `ClassName` Attribut wird verwendet, um die Masterseite benannt.  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Das folgende Beispiel zeigt, wie Sie eine Inhaltsseite, um Zugriff auf die öffentliche Eigenschaft `SiteName` auf der Masterseite, die im vorherigen Codebeispiel.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">Übersicht über ASP.NET-Masterseiten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Geschachtelte Masterseiten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.UI.MasterPage" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">Ein eindeutiger Name für den <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <param name="template">Die <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <summary>Fügt dem <see cref="T:System.Web.UI.WebControls.Content" />-Wörterbuch ein <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />-Steuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Masterseite für abgeleitete Klassen können hinzufügen <xref:System.Web.UI.WebControls.Content> -Steuerelementen an die <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Wörterbuch mit den <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> Methode. Abgeleitete Typen nicht in der Regel überschreiben die <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ein <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelement mit demselben Namen ist bereits im <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />-Wörterbuch vorhanden.</exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentPlaceHolders : System.Collections.IList" Usage="System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />-Steuerelementen ab, mit deren Hilfe die Masterseite andere Inhaltsbereiche definiert.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> von <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />-Steuerelementen, die die Masterseite als Platzhalter für <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelemente auf Inhaltsseiten verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Masterseite Klassen greifen auf die <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> Eigenschaft, um die aktuelle Liste <xref:System.Web.UI.WebControls.ContentPlaceHolder> Steuerelemente, die vom Master enthalten sind. Abgeleitete Typen nicht in der Regel überschreiben die <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplates : System.Collections.IDictionary" Usage="System.Web.UI.MasterPage.ContentTemplates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Inhaltssteuerelementen ab, die der Masterseite zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> von Inhaltssteuerelementen, die der Masterseite zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Masterseite Klassen greifen auf die <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Eigenschaft zum Abrufen der aktuellen <xref:System.Web.UI.WebControls.Content> steuert, wie vom zugeordneten Inhaltsseiten definiert. Abgeleitete Typen nicht in der Regel überschreiben die <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.InstantiateInContentPlaceHolder : System.Web.UI.Control * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.InstantiateInContentPlaceHolder (contentPlaceHolder, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">Das Steuerelement, das den Container für den Inhalt darstellt.</param>
        <param name="template">Die zu verwendende <see cref="T:System.Web.UI.WebControls.Content" />-Instanz.</param>
        <summary>Stellt eine Methode bereit, um das aktuelle Vorlagensteuerelement auf eine Seite festzulegen, die die Masterseite besitzt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.MasterPage.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die übergeordnete Masterseite des aktuellen Masters in Szenarios mit geschachtelten Masterseiten ab.</summary>
        <value>Die Masterseite, die der aktuellen Masterseite übergeordnet ist, andernfalls <see langword="null" />, wenn der aktuellen Masterseite keine Seite übergeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.MasterPage.Master%2A> Eigenschaft ist schreibgeschützt, da Hierarchien von Masterseiten, die zur Laufzeit erstellt werden können.  
  
   
  
## Examples  
 Dieser Abschnitt enthält drei Codebeispiele aufgeführt. Im ersten Codebeispiel wird veranschaulicht, wie zum Erstellen einer geschachtelten Masterseite`.` im zweiten Codebeispiel wird veranschaulicht, wie auf die Masterseite verweisen, die im ersten Codebeispiel erstellt wurde. Im dritte Codebeispiel veranschaulicht eine Inhaltsseite zu verwenden, um die Masterseite verweisen, die im zweiten Codebeispiel erstellt wurde.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine geschachtelte Masterseite und stellt die übergeordnete Masterseite, die mit dem Namen `ParentMasterPage_1`.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer geschachtelten Masterseite, die mit dem Namen `ChildMasterPage_1` , verweist die Masterseite, die im vorherigen Beispiel erstellt wurde.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Inhaltsseite, die mit dem Namen mit `ContentPage` , die auf die `ChildMasterPage_1` , die im vorherigen Beispiel erstellt wurde.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Geschachtelte Masterseiten</related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.MasterPage.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Masterseite ab, die den aktuellen Inhalt enthält, oder legt diesen fest.</summary>
        <value>Der Name der Masterseite, die der aktuellen Masterseite übergeordnet ist, andernfalls <see langword="null" />, wenn der aktuellen Masterseite keine Seite übergeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dieser Abschnitt enthält drei Codebeispiele aufgeführt. Im ersten Codebeispiel wird veranschaulicht, wie zum Erstellen einer geschachtelten Masterseite`.` im zweiten Codebeispiel wird veranschaulicht, wie auf die Masterseite verweisen, die im ersten Codebeispiel erstellt wurde. Im dritte Codebeispiel veranschaulicht eine Inhaltsseite zu verwenden, um die Masterseite verweisen, die im zweiten Codebeispiel erstellt wurde.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine geschachtelte Masterseite und stellt die übergeordnete Masterseite, die mit dem Namen `ParentMasterPage_1`.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer geschachtelten Masterseite, die mit dem Namen `ChildMasterPage_1` , verweist die Masterseite, die im vorherigen Beispiel erstellt wurde.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Inhaltsseite, die mit dem Namen mit `ContentPage` , die auf die `ChildMasterPage_1` , die im vorherigen Beispiel erstellt wurde.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.MasterPage.MasterPageFile" />-Eigenschaft kann nur während des <see cref="E:System.Web.UI.Page.PreInit" />-Ereignisses oder davor festgelegt werden.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Geschachtelte Masterseiten</related>
      </Docs>
    </Member>
  </Members>
</Type>