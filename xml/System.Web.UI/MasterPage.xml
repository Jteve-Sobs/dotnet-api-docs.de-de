<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c02206fd45072871738cd447ae029b663027f0c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86608922" /></Metadata><TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <TypeSignature Language="F#" Value="type MasterPage = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als Vorlage und Zusammenführungscontainer für Seiten, die nur aus <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelementen und ihre jeweiligen untergeordneten Steuerelementen bestehen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Master Seite fungiert als Vorlagen Container und Zusammenführungs Seite für Inhaltsseiten in Ihrer ASP.NET-Webanwendung. Master Seiten stellen eine bequeme Möglichkeit dar, Struktur und Inhalte über einen Satz von Inhaltsseiten hinweg gemeinsam zu nutzen. Sie können Inhalts Platzhalter verwenden, um die Abschnitte der Master Seite zu definieren, die durch Inhalte der Inhaltsseiten ersetzt werden sollen.  
  
 Wenn Sie eine Master Seite und die zugehörigen Inhaltsseiten verwenden, fügen Sie die erforderlichen XHTML-Dokument Tags (z. b. `html` , `head` und `body` ) nur der Master Seite hinzu und erstellen nicht mehr Ihre anderen ASPX-Dateien (ASP.net Pages) als eigenständige Webseiten. Die Inhaltsseiten definieren den Inhalt, der in die Platzhalter auf der Master Seite eingefügt werden soll.  
  
 Wenn zur Laufzeit eine HTTP-Anforderung für eine Seite erfolgt, werden die Master Seite und Inhaltsseiten zu einer einzelnen Klasse mit dem gleichen Namen wie die Inhaltsseiten kombiniert. Die resultierende kompilierte, zusammengeführte Klasse wird von der- <xref:System.Web.UI.Page> Klasse abgeleitet.  
  
 Eine Master Seite kann direkte Markup-und Server Steuerelemente sowie Container Steuerelemente enthalten. Alle Elemente, die in der Master Seite außerhalb eines-Steuer Elements platziert werden <xref:System.Web.UI.WebControls.ContentPlaceHolder> , werden auf allen Seiten gerendert, die sich aus der Zusammenführung der Master Seite und Inhaltsseiten ergeben.  
  
 Jede Inhaltsseite, die sich auf die Master Seite bezieht, muss in einem- `MasterPageFile` Attribut ihrer [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) -Direktive auf die Master Seite verweisen. Inhaltsseiten können nur eine `@ Page` -Direktive und ein oder mehrere-Steuer <xref:System.Web.UI.WebControls.Content> Elemente enthalten. Alle Seiten Text-, Markup-und Server Steuerelemente müssen in Steuerelementen platziert werden <xref:System.Web.UI.WebControls.Content> . Sie identifizieren das <xref:System.Web.UI.WebControls.ContentPlaceHolder> Steuerelement einer Master Seite, der ein <xref:System.Web.UI.WebControls.Content> Steuerelement zugeordnet ist, indem Sie die- <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> Eigenschaft des-Steuer Elements festlegen <xref:System.Web.UI.WebControls.Content> .  
  
 Zur Laufzeit wird der dynamische Inhalt jedes Steuer Elements <xref:System.Web.UI.WebControls.Content> auf der angeforderten Seite mit der Master Seite an der genauen Position des zugehörigen Steuer Elements zusammengeführt <xref:System.Web.UI.WebControls.ContentPlaceHolder> . Alle anderen Markup-und Steuerelemente auf der Master Seite sind nicht betroffen. Ereignishandler können sowohl in der Master-Klasse als auch auf der Inhaltsseite definiert werden. Weitere Informationen finden Sie unter [Events in ASP.net Master and Content Pages](https://docs.microsoft.com/previous-versions/aspnet/dct97kc3(v=vs.100)).  
  
 Die- <xref:System.Web.UI.MasterPage> Klasse ist mit Dateien verknüpft, die über die Erweiterung ". Master" verfügen. Diese Dateien werden zur Laufzeit als Objekte kompiliert <xref:System.Web.UI.MasterPage> und im Server Speicher zwischengespeichert.  
  
 Die Master Seite wird über die- <xref:System.Web.UI.Page.Master%2A> Eigenschaft der-Basisklasse der Seite Inhalt zur Verfügung gestellt <xref:System.Web.UI.Page> . Die- <xref:System.Web.UI.Page.Master%2A> Eigenschaft gibt die Instanz der Master Seite zurück, Sie wird jedoch als Basisklasse typisiert <xref:System.Web.UI.MasterPage> . Um auf Steuerelemente, Eigenschaften und Funktionen der Master Seite zuzugreifen, kann die- <xref:System.Web.UI.Page.Master%2A> Eigenschaft in ein- <xref:System.Web.UI.MasterPage> Objekt umgewandelt werden. Der Klassenname der Master Seite wird mithilfe des- `ClassName` Attributs der [@ Master](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228176(v=vs.100)) -Direktive definiert.  
  
> [!NOTE]
>  Dateien mit Master Erweiterungen werden nicht in einem Browser bereitgestellt.  
  
 Die auf einer Master Seite gültigen Direktiven sind identisch mit denen, die für ein-Objekt verfügbar sind <xref:System.Web.UI.UserControl> . Sie können die folgenden Attribute enthalten:  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 Master Seiten Direktiven überschreiben die Anweisungen auf einzelnen Inhaltsseiten nicht.  
  
 Master Seiten werden am häufigsten deklarativ erstellt. Wenn Sie eine Master Seite Programm gesteuert erstellen möchten, leiten Sie Sie direkt von der- <xref:System.Web.UI.MasterPage> Klasse ab. Zusätzlich zur Erweiterung der- <xref:System.Web.UI.MasterPage> Klasse müssen Sie die Master Datei erstellen, um die Benutzeroberfläche visuell anzuzeigen, die den Klassen zugeordnet ist, die Sie in der Quelldatei aufgerufen haben.  
  
> [!NOTE]
>  Wenn Sie eine Master Seite erstellen, indem Sie zuerst eine eigene Klasse erstellen, müssen Sie alle Namespaces einschließen, die für die von der Seite verwendeten Klassen erforderlich sind.  
  
 Weitere Informationen zu Masterseiten finden Sie unter [ASP.net Master Pages](https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)).  
  
   
  
## Examples  
 Dieser Abschnitt enthält vier Codebeispiele:  
  
-   Im ersten Codebeispiel wird veranschaulicht, wie eine Master Seite deklarativ erstellt wird.  
  
-   Das zweite Codebeispiel stellt die Inhaltsseite dar, die der Master Seite zugeordnet ist, die im ersten Codebeispiel erstellt wurde.  
  
-   Im dritten Codebeispiel wird veranschaulicht, wie einer Master Seite eine Eigenschaft hinzugefügt wird.  
  
-   Im vierten Codebeispiel wird veranschaulicht, wie eine Inhaltsseite verwendet wird, um auf eine öffentliche Eigenschaft auf der Master Seite zuzugreifen.  
  
 Im folgenden Beispiel wird veranschaulicht, wie eine Master Seite deklarativ erstellt und mithilfe einer Inhaltsseite Inhalte hinzugefügt werden. Die erste Webseite ist die. Master Seite mit dem Namen `MasterPageSample_1.master` .  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Das folgende Beispiel stellt die Inhaltsseite dar, die zugeordnet ist `MasterPageSample_1.master` . Sie enthält ein <xref:System.Web.UI.WebControls.Content> -Steuerelement und identifiziert das <xref:System.Web.UI.WebControls.ContentPlaceHolder> Steuerelement, dem der Inhalt zugeordnet ist, mithilfe der- <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> Eigenschaft.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 Im folgenden Beispiel wird veranschaulicht, wie einer Master Seite eine Eigenschaft hinzugefügt wird. Das- `ClassName` Attribut wird verwendet, um die Master Seite zu benennen.  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Im folgenden Beispiel wird gezeigt, wie eine Inhaltsseite verwendet wird, um `SiteName` auf der Master Seite im vorangehenden Codebeispiel auf die Public-Eigenschaft zuzugreifen.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)">Übersicht über ASP.net-Master Seiten</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x2b3ktt7(v=vs.100)">Geänderte Master Seiten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.UI.MasterPage" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">Ein eindeutiger Name für den <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <param name="template">Die <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <summary>Fügt dem <see cref="T:System.Web.UI.WebControls.Content" />-Wörterbuch ein <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />-Steuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Masterseiten Klassen können <xref:System.Web.UI.WebControls.Content> mithilfe der-Methode Steuerelemente zum <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Wörterbuch hinzufügen <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> . Abgeleitete Typen überschreiben die-Methode in der Regel nicht <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ein <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelement mit demselben Namen ist bereits im <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />-Wörterbuch vorhanden.</exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentPlaceHolders : System.Collections.IList" Usage="System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />-Steuerelementen ab, mit deren Hilfe die Masterseite andere Inhaltsbereiche definiert.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> von <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />-Steuerelementen, die die Masterseite als Platzhalter für <see cref="T:System.Web.UI.WebControls.Content" />-Steuerelemente auf Inhaltsseiten verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen für Masterseiten greifen auf die- <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> Eigenschaft zu, um die aktuellen Steuer <xref:System.Web.UI.WebControls.ContentPlaceHolder> Elemente aufzulisten, die im Master enthalten sind. Abgeleitete Typen Überschreiben in der Regel nicht die- <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplates : System.Collections.IDictionary" Usage="System.Web.UI.MasterPage.ContentTemplates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Inhaltssteuerelementen ab, die der Masterseite zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> von Inhaltssteuerelementen, die der Masterseite zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen von Masterseiten greifen auf die- <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Eigenschaft zu, um die aktuellen Steuer <xref:System.Web.UI.WebControls.Content> Elemente abzurufen, die von zugehörigen Inhaltsseiten definiert werden. Abgeleitete Typen Überschreiben in der Regel nicht die- <xref:System.Web.UI.MasterPage.ContentTemplates%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.InstantiateInContentPlaceHolder : System.Web.UI.Control * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.InstantiateInContentPlaceHolder (contentPlaceHolder, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">Das Steuerelement, das den Container für den Inhalt darstellt.</param>
        <param name="template">Die zu verwendende <see cref="T:System.Web.UI.WebControls.Content" />-Instanz.</param>
        <summary>Stellt eine Methode bereit, um das aktuelle Vorlagensteuerelement auf eine Seite festzulegen, die die Masterseite besitzt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.MasterPage.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die übergeordnete Masterseite des aktuellen Masters in Szenarios mit geschachtelten Masterseiten ab.</summary>
        <value>Die Masterseite, die der aktuellen Masterseite übergeordnet ist, andernfalls <see langword="null" />, wenn der aktuellen Masterseite keine Seite übergeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.MasterPage.Master%2A> -Eigenschaft ist schreibgeschützt, da die Masterseiten Hierarchien zur Laufzeit nicht erstellt werden können.  
  
   
  
## Examples  
 Dieser Abschnitt enthält drei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie eine Seite für eine Seite mit einer Seite erstellen `.` . im zweiten Codebeispiel wird veranschaulicht, wie auf die Master Seite verwiesen wird, die im ersten Codebeispiel erstellt wurde. Im dritten Codebeispiel wird veranschaulicht, wie eine Inhaltsseite verwendet wird, um auf die im zweiten Codebeispiel erstellte Master Seite zu verweisen.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Seite mit einer untergeordneten Master Seite erstellen und die übergeordnete Master Seite mit dem Namen darstellen `ParentMasterPage_1` .  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine geschlagerte Master Seite mit dem Namen verwenden `ChildMasterPage_1` , die auf die Master Seite verweist, die im vorangehenden Codebeispiel erstellt wurde.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Inhaltsseite mit dem Namen verwendet wird `ContentPage` , die auf den verweist `ChildMasterPage_1` , der im vorangehenden Codebeispiel erstellt wurde.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x2b3ktt7(v=vs.100)">Geänderte Master Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.MasterPage.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Masterseite ab, die den aktuellen Inhalt enthält, oder legt diesen fest.</summary>
        <value>Der Name der Masterseite, die der aktuellen Masterseite übergeordnet ist, andernfalls <see langword="null" />, wenn der aktuellen Masterseite keine Seite übergeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dieser Abschnitt enthält drei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie eine Seite für eine Seite mit einer Seite erstellen `.` . im zweiten Codebeispiel wird veranschaulicht, wie auf die Master Seite verwiesen wird, die im ersten Codebeispiel erstellt wurde. Im dritten Codebeispiel wird veranschaulicht, wie eine Inhaltsseite verwendet wird, um auf die im zweiten Codebeispiel erstellte Master Seite zu verweisen.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Seite mit einer untergeordneten Master Seite erstellen und die übergeordnete Master Seite mit dem Namen darstellen `ParentMasterPage_1` .  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine geschlagerte Master Seite mit dem Namen verwenden `ChildMasterPage_1` , die auf die Master Seite verweist, die im vorangehenden Codebeispiel erstellt wurde.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Inhaltsseite mit dem Namen verwendet wird `ContentPage` , die auf den verweist `ChildMasterPage_1` , der im vorangehenden Codebeispiel erstellt wurde.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.MasterPage.MasterPageFile" />-Eigenschaft kann nur während des <see cref="E:System.Web.UI.Page.PreInit" />-Ereignisses oder davor festgelegt werden.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x2b3ktt7(v=vs.100)">Geänderte Master Seiten</related>
      </Docs>
    </Member>
  </Members>
</Type>
