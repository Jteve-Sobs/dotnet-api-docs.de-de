<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b377786fb7b19c08a73b9c0d28446deab3dc520" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52224754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Unterstützung für RAD (Rapid Application Development)-Designer bereit, um Syntax für Datenbindungsausdrücke zu generieren und zu analysieren. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mithilfe der überladene statischen <xref:System.Web.UI.DataBinder.Eval%2A> Methode dieser Klasse in die Datenbindungssyntax in einer ASP.NET-Webseite. Dies bietet eine einfachere Syntax zu verwenden als standard-Datenbindung. Aber da `DataBinder.Eval` bietet automatische typkonvertierung, kann es zu Leistungseinbußen führen.  
  
 Weitere Informationen über die ASP.NET Datenbindung, Ausdrücken und Syntax finden Sie unter [Binden an Datenbanken](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) und [Ausdrücke Übersicht über die Datenbindung](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Ab .NET Framework 4.5, können wurden die modellbindung Sie um einige der Aufgaben zu vereinfachen, die Sie ausführen musste, über die Datenbindung in früheren Versionen. Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die statische <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> Methode zum Auffüllen der Felder der einen <xref:System.Web.UI.WebControls.Repeater> steuern mit einer <xref:System.Collections.ArrayList> von `Product` Objekte. Die <xref:System.Web.UI.DataBinder.Eval%2A> Methode konnte mit derselben Syntax angewendet werden, aber es wäre nicht so schnell ausgeführt.  
  
 In diesem Beispiel verwendet einen benutzerdefinierten `Product` Klasse, die eine Zeichenfolge stellt `Model` -Eigenschaft und ein numerisches `UnitPrice` Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 Der folgende Code ist die benutzerdefinierte `Product` Klasse. Dieser Code sollte in eine separate Datei im Verzeichnis "App_Code", wie z. B. Product.cs oder Product.vb enthalten sein.  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataBinder" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob zur Laufzeit die Datenzwischenspeicherung aktiviert ist</summary>
        <value>
          <see langword="true" />, wenn Zwischenspeichern für die <see cref="T:System.Web.UI.DataBinder" />-Klasse aktiviert wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verwendet Reflektion, um einen Datenbindungsausdruck für ein Objekt zur Laufzeit zu analysieren und auszuwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ab .NET Framework 4.5, können wurden die modellbindung Sie um einige der Aufgaben zu vereinfachen, die Sie ausführen musste, über die Datenbindung in früheren Versionen. Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="expression">Der Pfad vom <paramref name="container" />-Objekt zum Wert der öffentlichen Eigenschaften, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll. Dieser muss eine Zeichenfolge von Eigenschaften- oder Feldnamen sein, die durch Punkte voneinander getrennt sind, z.B. <c>Tables[0].DefaultView.[0].Price</c> in C# oder <c>Tables(0).DefaultView.(0).Price</c> in Visual Basic.</param>
        <summary>Wertet Datenbindungsausdrücke zur Laufzeit aus</summary>
        <returns>Eine <see cref="T:System.Object" />-Instanz, die bei der Auswertung des Datenbindungsausdrucks entsteht</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der `expression` -Parameter muss eine öffentliche Eigenschaft ausgewertet.  
  
 Diese Methode wird automatisch aufgerufen, wenn Sie die datenbindungen, die in einem rapid Application Development (RAD) Designer wie Visual Studio erstellen. Sie können auch sie deklarativ verwenden zur Vereinfachung der Umwandlung in eine Zeichenfolge. Zu diesem Zweck verwenden Sie die `<%#  %>` Ausdruckssyntax, wie in ASP.NET-Standarddatenbindung verwendet.  
  
 Diese Methode ist besonders nützlich, beim Binden von Daten an Steuerelemente, die in einer Liste mit Vorlagen sind.  
  
> [!NOTE]
>  Da diese Methode spät gebundene Auswertung ausführt, kann, auf dem sie die Leistung deutlich langsam im Vergleich zur standardmäßigen ASP.NET Datenbindung verursachen mithilfe von Reflektion zur Laufzeit.  
  
 Für jeden der Liste der Web Steuerelemente, z. B. <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, oder <xref:System.Web.UI.WebControls.Repeater>, `container` muss `Container.DataItem`. Wenn Sie mit der Seite binden `container` muss `Page`.  
  
 Ab .NET Framework 4.5, können wurden die modellbindung Sie um einige der Aufgaben zu vereinfachen, die Sie ausführen musste, über die Datenbindung in früheren Versionen. Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Die folgenden Beispiele zeigen, wie Sie mit der `Eval` Methode zum Binden von Daten <xref:System.Web.UI.WebControls.Repeater> Steuerelement. Es ist eine Datenklasse, die mit dem Namen Product erforderlich.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Die Code-Behind-Datei, lädt der Testdaten, und bindet die Daten einer <xref:System.Web.UI.WebControls.Repeater> Steuerelement.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 In der deklarativen Syntax für die <xref:System.Web.UI.WebControls.Repeater> Steuerung, verwenden die Sie die <xref:System.Web.UI.DataBinder.Eval%2A> -Methode mit `Container.DataItem` für die `container` Parameter.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Oder Sie rufen `Eval` Funktion und keine der `container` Parameter.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" /> ist <see langword="null" /> oder entspricht nach dem Verkürzen einer leeren Zeichenfolge.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="expression">Der Pfad vom <paramref name="container" />-Objekt zum Wert der öffentlichen Eigenschaften, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll. Dieser muss eine Zeichenfolge von Eigenschaften- oder Feldnamen sein, die durch Punkte voneinander getrennt sind, z.B. <c>Tables[0].DefaultView.[0].Price</c> in C# oder <c>Tables(0).DefaultView.(0).Price</c> in Visual Basic.</param>
        <param name="format">Eine .NET Framework-Formatierungszeichenfolge (wie von <see cref="M:System.String.Format(System.String,System.Object)" /> verwendet), die die vom Datenbindungsausdruck zurückgegebene <see cref="T:System.Object" />-Instanz in ein <see cref="T:System.String" />-Objekt konvertiert</param>
        <summary>Wertet zur Laufzeit Datenbindungsausdrücke aus und formatiert das Ergebnis als Zeichenfolge</summary>
        <returns>Ein <see cref="T:System.String" />-Objekt, das sich beim Auswerten des Datenbindungsausdrucks und dem Konvertieren in einen Zeichenfolgentyp ergibt</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des `expression` muss eine öffentliche Eigenschaft ausgewertet werden.  
  
 Weitere Informationen zu Formatzeichenfolgen in .NET Framework finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).  
  
 Diese Methode wird automatisch aufgerufen, wenn Sie die datenbindungen, die in einem rapid Application Development (RAD) Designer wie Visual Studio erstellen. Außerdem können sie deklarativ Konvertieren der <xref:System.Object> durch den XPath-Datenbindungsausdruck, eine <xref:System.String>.  Um die Methode deklarativ verwenden möchten, verwenden die `<%#   %>` Ausdruckssyntax, wie in ASP.NET-Standarddatenbindung verwendet.  
  
 Diese Methode ist besonders nützlich, beim Binden von Daten an Steuerelemente, die in einer Liste mit Vorlagen sind.  
  
> [!NOTE]
>  Da diese Methode spät gebundene Auswertung ausführt, kann, auf dem sie die Leistung deutlich langsam im Vergleich zur standardmäßigen ASP.NET Datenbindung verursachen mithilfe von Reflektion zur Laufzeit. Verwenden Sie diese Methode mit Bedacht, insbesondere dann, wenn Formatierung von Zeichenfolgen nicht erforderlich ist.  
  
 Für jeden der Liste der Web Steuerelemente, z. B. <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, oder <xref:System.Web.UI.WebControls.Repeater>, `container` muss `Container.DataItem`. Wenn Sie mit der Seite binden `container` muss `Page`.  
  
 Ab .NET Framework 4.5, können wurden die modellbindung Sie um einige der Aufgaben zu vereinfachen, die Sie ausführen musste, über die Datenbindung in früheren Versionen. Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Die folgenden Beispiele zeigen, wie Sie mit der `Eval` Methode zum Binden von Daten <xref:System.Web.UI.WebControls.Repeater> Steuerelement. Es ist eine Datenklasse, die mit dem Namen Product erforderlich.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Die Code-Behind-Datei, lädt der Testdaten, und bindet die Daten einer <xref:System.Web.UI.WebControls.Repeater> Steuerelement.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 In der deklarativen Syntax für die <xref:System.Web.UI.WebControls.Repeater> Steuerung, verwenden die Sie die <xref:System.Web.UI.DataBinder.Eval%2A> -Methode mit `Container.DataItem` für die `container` Parameter.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Oder Sie rufen `Eval` Funktion und keine der `container` Parameter.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das deklarierte Datenelement eines Objekts ab</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <summary>Ruft das deklarierte Datenelement eines Objekts ab</summary>
        <returns>Ein Objekt, das das deklarierte Datenelement des Containers darstellt Gibt <see langword="null" /> zurück, wenn kein Datenelement gefunden wird oder der Container <see langword="null" /> ergibt</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29> -Methode, ignoriert die `foundDataItem` Parameter beim Zurückgeben des Ergebnisses.  
  
 Datenelement eines Objekts wird in zwei Arten identifiziert werden. Wenn das Containerobjekt implementiert die <xref:System.Web.UI.IDataItemContainer> -Schnittstelle, die <xref:System.Web.UI.IDataItemContainer.DataItem%2A> identifiziert das Datenelement und dessen Wert zurückgegeben. Andernfalls versucht die Methode zum Auflösen und eine Containereigenschaft, die mit dem Namen "DataItem" zurückgeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj *  -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="foundDataItem">Ein boolescher Wert, der angibt, ob das Datenelement erfolgreich aufgelöst und zurückgegeben wurde Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft das deklarierte Datenelement eines Objekts ab, das den Erfolg oder Misserfolg angibt</summary>
        <returns>Ein Objekt, das das deklarierte Datenelement des Containers darstellt Gibt <see langword="null" /> zurück, wenn kein Datenelement gefunden wird oder der Container <see langword="null" /> ergibt</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datenelement eines Objekts wird auf zwei Arten identifiziert werden. Wenn das Containerobjekt implementiert die <xref:System.Web.UI.IDataItemContainer> -Schnittstelle, die <xref:System.Web.UI.IDataItemContainer.DataItem%2A> Eigenschaft identifiziert das Datenelement, und wird zurückgegeben. Andernfalls versucht die Methode zum Auflösen und eine Containereigenschaft, die mit dem Namen "DataItem" zurückgeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den Wert einer indizierten Eigenschaft ab</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, anhand dessen <paramref name="expr" /> ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="expr">Der Navigationspfad vom <paramref name="container" />-Objekt zum Wert der öffentlichen Eigenschaften, der in der Eigenschaft des gebundenen Steuerelements platziert werden soll. Dieser muss eine Zeichenfolge von Eigenschaften- oder Feldnamen sein, die durch Punkte voneinander getrennt sind, z.B. <c>Tables[0].DefaultView.[0].Price</c> in C# oder <c>Tables(0).DefaultView.(0).Price</c> in Visual Basic.</param>
        <summary>Ruft den Wert einer Eigenschaft des angegebenen Containers und Navigationspfades ab</summary>
        <returns>Ein Objekt, das bei der Auswertung des Datenbindungsausdrucks entsteht</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des `expr` muss eine öffentliche Eigenschaft ausgewertet werden.  
  
 Für jeden der Liste der Web Steuerelemente, z. B. <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, oder <xref:System.Web.UI.WebControls.Repeater>, `container` muss `Container.DataItem`. Wenn Sie mit der Seite binden `container` muss `Page`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> ist <see langword="null" />.  
  
\- oder – 
 <paramref name="expr" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="expr" /> ist kein gültiger indizierter Ausdruck.  
  
\- oder – 
 <paramref name="expr" /> lässt keinen indizierten Zugriff zu.</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Der Objektverweis, für den der Ausdruck ausgewertet wird. Dabei muss es sich um einen gültigen Objektbezeichner in der angegebenen Sprache der Seite handeln.</param>
        <param name="propName">Der Name der Eigenschaft, die den abzurufenden Wert enthält</param>
        <param name="format">Eine Zeichenfolge, die das Anzeigeformat für die Ergebnisse angibt</param>
        <summary>Ruft den Wert der angegebenen Eigenschaft für den angegebenen Container ab und formatiert die Ergebnisse</summary>
        <returns>Der Wert der angegebenen Eigenschaft im durch <paramref name="format" /> angegebenen Format</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> Methode ruft die <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> -Methode und verwendet dann die <xref:System.String.Format%2A?displayProperty=nameWithType> Methode, um das Ergebnis als im angegebenen format der `format` Parameter. Eine .NET Framework-Formatzeichenfolge (wie diejenigen, die von verwendet <xref:System.String.Format%2A?displayProperty=nameWithType>) konvertiert die <xref:System.Object> vom auf die XPath-Datenbindungsausdruck zurückgegebene Instanz einen <xref:System.String> Objekt.  
  
 Ausnahmen, die ausgelöst werden, für die <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> Methode gelten für die <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> -Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> Methode deklarativ an einen indizierten Wert zu binden.  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den Wert einer Eigenschaft ab</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Das Objekt, das die Eigenschaft enthält.</param>
        <param name="propName">Der Name der Eigenschaft, die den abzurufenden Wert enthält</param>
        <summary>Ruft den Wert der angegebenen Eigenschaft des angegebenen Objekts ab</summary>
        <returns>Der Wert der angegebenen Eigenschaft</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> Methode dient zum Abrufen des Werts einer Eigenschaft in einem Objekt.  
  
   
  
## Examples  
 Das Beispiel für <xref:System.Web.UI.DataBinder> veranschaulicht die Verwendung dieser Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="propName" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
        <exception cref="T:System.Web.HttpException">Das Objekt im <paramref name="container" /> weist nicht die von <paramref name="propName" /> angegebene Eigenschaft auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Das Objekt, das die Eigenschaft enthält.</param>
        <param name="propName">Der Name der Eigenschaft, die den abzurufenden Wert enthält</param>
        <param name="format">Eine Zeichenfolge, die das Anzeigeformat für die Ergebnisse angibt</param>
        <summary>Ruft den Wert der angegebenen Eigenschaft des angegebenen Objekts ab und formatiert die Ergebnisse</summary>
        <returns>Der Wert der angegebenen Eigenschaft im durch <paramref name="format" /> angegebenen Format</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version von der <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> Methode dient zum Abrufen und den Wert einer Eigenschaft in einem Objekt formatieren.  
  
   
  
## Examples  
 Das Beispiel für <xref:System.Web.UI.DataBinder> veranschaulicht die Verwendung dieser Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> ist <see langword="null" />.  
  
\- oder – 
 <paramref name="propName" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
        <exception cref="T:System.Web.HttpException">Das Objekt im <paramref name="container" /> weist nicht die von <paramref name="propName" /> angegebene Eigenschaft auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den zu testenden Datentyp darstellt</param>
        <summary>Bestimmt, ob der angegebene Datentyp gebunden werden kann</summary>
        <returns>
          <see langword="true" /> für Typen, die in Steuerelementen automatisch datengebunden werden können; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>