<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef9792acb2f2d74dd907cb4382dc21b40f0dd0ef" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78759573" /></Metadata><TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert die Methoden, die eine Klasse implementieren muss, um das Erstellen von Formatierungsregeln zu unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die diese Schnittstelle implementieren, können Sie verwenden, um die Erstellung von Stilregeln zu unterstützen.  
  
 Zum Anpassen der Art und Weise, wie Cascading Stylesheets erstellt und registriert werden, müssen Sie eine Klasse erstellen, die diese Schnittstelle implementiert.  
  
 Die- <xref:System.Web.UI.HtmlControls.HtmlHead> Klasse implementiert diese Schnittstelle für die Verwendung durch ASP.net durch die- <xref:System.Web.UI.Page.Header%2A> Eigenschaft.  
  
> [!NOTE]
>  Das Hinzufügen oder Ändern von Stilen oder Stilregeln bei asynchronen Postbacks wird nicht unterstützt. Wenn Sie einer ASP.NET-Webseite AJAX-Funktionen hinzufügen, werden die Bereiche der Seite durch asynchrone Postbacks aktualisiert, ohne dass die gesamte Seite aktualisiert wird. Weitere Informationen finden Sie unter [Übersicht über Microsoft AJAX](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.UI.Page.Header%2A> Implementierung von verwendet <xref:System.Web.UI.IStyleSheet> , um das programmgesteuerte Erstellen einer neuen Stilregel und das Registrieren des benutzerdefinierten Objekts zu veranschaulichen <xref:System.Web.UI.WebControls.Style> .  
  
 Im ersten Teil des Beispiels wird ein Benutzer <xref:System.Web.UI.WebControls.Style> `labelStyle` definiertes-Objekt erstellt und dann für den aktuellen Speicherort (URL) registriert. Die `label1` Bezeichnung ruft dann die- <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> Methode auf, sodass der `labelStyle` Stil auf die `label1` Bezeichnung angewendet wird.  
  
 Im zweiten Teil des Beispiels wird ein anderes benutzerdefiniertes <xref:System.Web.UI.WebControls.Style> Objekt definiert, `bodyStyle` und seine Eigenschaften werden festgelegt, um eine neue Stilregel zu erstellen.  
  
> [!NOTE]
>  Diese Klasse ist hauptsächlich für Entwickler gedacht, die eine benutzerdefinierte Implementierung erstellen möchten. Dieses Beispiel veranschaulicht die Implementierung, die vom .NET Framework bereitgestellt wird.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 Im folgenden Beispiel wird die Code Behind-Datei für die Webseite angezeigt.  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
    <related type="Article" href="https://msdn.microsoft.com/library/14adecd2-b688-45ec-b942-4a89183b3f91">Exemplarische Vorgehensweise: Implementieren eines neuen Stils</related>
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateStyleRule (style As Style, urlResolver As IUrlResolutionService, selector As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">Die Formatierungsregel, die dem eingebetteten Stylesheet hinzugefügt werden soll.</param>
        <param name="urlResolver">Ein in <see cref="T:System.Web.UI.IUrlResolutionService" /> implementiertes Objekt mit den Kontextinformationen für den aktuellen Speicherort (URL).</param>
        <param name="selector">Der Teil der HTML-Seite, auf den das Format angewendet wird.</param>
        <summary>Bei Implementierung durch eine Klasse wird für den angegebenen Dokumentsprachelementtyp bzw. die entsprechende Auswahl eine Formatierungsregel erstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> Methode erstellt eine Stilregel für den angegebenen Selektor. Es können mehrere Stilregeln für denselben Selektor erstellt werden.  
  
 Wenn `urlResolver` auf festgelegt ist `null` , wird die URL der aktuellen- <xref:System.Web.UI.Page> Instanz verwendet.  
  
> [!NOTE]
>  Das Hinzufügen oder Ändern von Stilen oder Stilregeln bei asynchronen Postbacks wird nicht unterstützt. Wenn Sie einer ASP.NET-Webseite AJAX-Funktionen hinzufügen, werden die Bereiche der Seite durch asynchrone Postbacks aktualisiert, ohne dass die gesamte Seite aktualisiert wird. Weitere Informationen finden Sie unter [Übersicht über Microsoft AJAX](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.UI.Page.Header%2A> Implementierung von verwendet, <xref:System.Web.UI.IStyleSheet> um zu veranschaulichen, wie ein neues- <xref:System.Web.UI.WebControls.Style> Objekt definiert wird `bodyStyle` . Anschließend `bodyStyle` wird der aktuellen URL durch Aufrufen von hinzugefügt <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> .  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterStyle (style As Style, urlResolver As IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">Die Formatierungsregel, die dem eingebetteten Stylesheet hinzugefügt werden soll.</param>
        <param name="urlResolver">Ein in <see cref="T:System.Web.UI.IUrlResolutionService" /> implementiertes Objekt mit den Kontextinformationen für den aktuellen Speicherort (URL).</param>
        <summary>Bei Implementierung durch eine Klasse wird dem eingebetteten Stylesheet im <see langword="&lt;head&gt;" />-Abschnitt einer Webseite eine neue Formatierungsregel hinzugefügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> dem eingebetteten Stylesheet im-Abschnitt eines-Objekts eine neue Stilregel und einen Eigenschaftsnamen hinzu `<head>` <xref:System.Web.UI.Page> und ordnet die Regel einem automatisch generierten Stilnamen zu. Das- <xref:System.Web.UI.WebControls.Style> Objekt wird mit dem angegebenen-Parameter gerendert `urlResolver` .  
  
 Wenn `urlResolver` auf festgelegt ist `null` , wird die URL der aktuellen <xref:System.Web.UI.Page> verwendet.  
  
 Wenn ein- <xref:System.Web.UI.WebControls.Style> Objekt bereits registriert ist, wird es nicht mehrmals hinzugefügt.  
  
> [!NOTE]
>  Das programmgesteuerte Hinzufügen oder Ändern von Stilen bei asynchronen Postbacks wird nicht unterstützt. Wenn Sie einer ASP.NET-Webseite AJAX-Funktionen hinzufügen, werden die Bereiche der Seite durch asynchrone Postbacks aktualisiert, ohne dass die gesamte Seite aktualisiert wird. Weitere Informationen finden Sie unter [Übersicht über Microsoft AJAX](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.UI.Page.Header%2A> Implementierung von verwendet, <xref:System.Web.UI.IStyleSheet> um das Erstellen eines benutzerdefinierten <xref:System.Web.UI.WebControls.Style> -Objekts zu veranschaulichen `labelStyle` und es dann für den aktuellen Speicherort (URL) zu registrieren. Die `label1` Bezeichnung ruft dann die- <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> Methode auf, sodass der `labelStyle` Stil auf die `label1` Bezeichnung angewendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
