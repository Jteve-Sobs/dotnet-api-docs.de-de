<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f2497c33eaf27f68789628a3955254edac82843" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37588601" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Wird verwendet, um anzugeben, dass ein Steuerelement Ziel eines Rückrufereignisses auf dem Server sein kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren der <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle für ein beliebiges benutzerdefiniertes Steuerelement, das zum Empfangen von Ereignissen der Rückruf muss. Weitere Informationen finden Sie unter [implementieren Sie Client-Callbacks ohne Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).  
  
 Beispiele für Steuerelemente, implementieren die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle einschließen der <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, und <xref:System.Web.UI.WebControls.TreeView> Steuerelemente. Wenn ein Rückrufereignis ist ein Steuerelement, implementiert die <xref:System.Web.UI.ICallbackEventHandler> -Schnittstelle, die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> aufgerufen, um die Behandlung des Ereignisses, das Ereignisargument als Parameter übergeben und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methode gibt das Ergebnis des Rückrufs zurück.  
  
 Steuerelemente, die Daten aus einem Datenquellen-Steuerelement während des Rückrufs abrufen können synchron oder asynchron tun. ASP.NET-Steuerelemente wie <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, und <xref:System.Web.UI.WebControls.TreeView> synchron implementiert werden. Synchrone Rückrufe werden nicht verhindert, dass den Benutzer im Browser verwenden. Im synchronen Modus kann nur ein Rückruf zu einem Zeitpunkt ausführen, mit dem letzten Rückruf vor. Wenn ein Steuerelement implementiert wird, um asynchrones Verhalten zu unterstützen, können gleichzeitig mehrere Rückrufe ausgelöst werden. Weitere Informationen zur asynchronen Programmierung finden Sie unter [das ereignisbasierte asynchrone Muster (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).  
  
 Können Sie angeben, ob Rückrufereignisse über die Benutzeroberfläche durch ein Steuerelement implementieren gerendert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle werden überprüft. Validierung von Ereignissen ist aus Sicherheitsgründen empfiehlt. Allerdings können zur Verbesserung der Leistung Sie es deaktivieren. Steuern, ob die ereignisvalidierung für Rückrufereignisse ausgeführt wird, legen Sie die `enableEventValidation` Attribut der [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) Richtlinie oder die `enableEventValidation` Attribut der [pages-Element ((ASP.NET Einstellungsschema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) der Datei "Web.config". Setzen Sie die <xref:System.Web.UI.Page.EnableEventValidation%2A> Eigenschaft im Code, legen Sie es in der `Page_Init` Phase der Verarbeitung der Seite. Weitere Informationen zum Ausgleichen der Sicherheitsvorteil von ereignisvalidierung mit der Kosten der Leistung finden Sie unter [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ergebnisse eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Das Ergebnis des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmen in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> wird nicht verhindert, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen wird und ein Ergebnis zurückgegeben. Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag, wenn eine Ausnahme, im ausgelöst wird <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> und zurückgeben eine leere Zeichenfolge aus <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Verarbeitet ein Rückrufereignis, das ein Steuerelement als Ziel hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `null` dient als Parameter für das Argument, die Zeichenfolge "null" und gesendete wieder zu dem Server serialisiert wird. Da es keine Möglichkeit zur Unterscheidung zwischen `null` und "null", vermeiden Sie die Verwendung `null` argumentparametern mit Rückrufen.  
  
 Ausnahmen in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> wird nicht verhindert, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen wird und ein Ergebnis zurückgegeben. Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag, wenn eine Ausnahme, im ausgelöst wird <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> und zurückgeben eine leere Zeichenfolge aus <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>