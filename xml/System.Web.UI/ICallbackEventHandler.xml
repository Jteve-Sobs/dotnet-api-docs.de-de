<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47d99e02fed19cb8c444b298b6279eaab32b9d30" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83908266" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Wird verwendet, um anzugeben, dass ein Steuerelement Ziel eines Rückrufereignisses auf dem Server sein kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie die <xref:System.Web.UI.ICallbackEventHandler>-Schnittstelle für alle benutzerdefinierten Steuerelemente, die Rückruf Ereignisse empfangen müssen. Weitere Informationen finden Sie unter [Implementieren von Client Rückrufen ohne Postbacks](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100)).  
  
 Beispiele für Steuerelemente, die die <xref:System.Web.UI.ICallbackEventHandler>-Schnittstelle implementieren, sind die Steuerelemente <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>und <xref:System.Web.UI.WebControls.TreeView>. Wenn ein Rückruf Ereignis ein Steuerelement als Ziel hat, das die <xref:System.Web.UI.ICallbackEventHandler>-Schnittstelle implementiert, wird die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>-Methode aufgerufen, um das Ereignis zu behandeln, wobei das Ereignis Argument als Parameter übergeben wird und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methode das Ergebnis des Rückrufs zurückgibt.  
  
 Steuerelemente, die während des Rückrufs Daten aus einem Datenquellen-Steuerelement abrufen, können dies synchron oder asynchron ausführen. ASP.NET-Steuerelemente wie <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>und <xref:System.Web.UI.WebControls.TreeView> werden synchron implementiert. Synchrone Rückrufe verhindern nicht, dass der Benutzer im Browser arbeitet. Im synchronen Modus kann nur jeweils ein Rückruf ausgeführt werden, wobei der letzte Rückruf Vorrang hat. Wenn ein websteuer Element implementiert wird, um asynchrones Verhalten zu unterstützen, können gleichzeitig mehrere Rückrufe ausgelöst werden. Ausführliche Informationen zur asynchronen Programmierung finden Sie unter [Ereignis basiertes asynchrones Muster (EAP)](/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap).  
  
 Sie können angeben, ob Rückruf Ereignisse aus der Benutzeroberfläche, die von einem Steuerelement, das die <xref:System.Web.UI.ICallbackEventHandler>-Schnittstelle implementiert, überprüfen werden. Die Überprüfung von Ereignissen ist eine gute Sicherheitsmaßnahme. Aus Leistungsgründen können Sie Sie jedoch deaktivieren. Legen Sie das `enableEventValidation`-Attribut der [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) -Direktive oder das `enableEventValidation`-Attribut des [pages-Elements (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) der Datei "Web. config" fest, um zu steuern, ob die Ereignis Validierung für Rückruf Ereignisse ausgeführt wird. Wenn Sie die <xref:System.Web.UI.Page.EnableEventValidation%2A>-Eigenschaft im Code festlegen, legen Sie Sie in der `Page_Init` Phase der Seiten Verarbeitung fest. Weitere Informationen zum Ausgleichen des Sicherheits Vorteils der Ereignis Überprüfung durch die Leistungskosten finden Sie unter [ASP.NET Performance Overview](https://docs.microsoft.com/previous-versions/aspnet/cc668225(v=vs.100)).
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ergebnisse eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Das Ergebnis des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmen, die in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> ausgelöst werden, verhindern nicht, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen und ein Ergebnis zurückgegeben wird. Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag fest, wenn eine Ausnahme in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> ausgelöst wird, und geben Sie eine leere Zeichenfolge von <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>zurück  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Verarbeitet ein Rückrufereignis, das ein Steuerelement als Ziel hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `null` als Ereignis Argument Parameter verwendet wird, wird die Zeichenfolge in NULL serialisiert und an den Server zurückgesendet. Da es keine Möglichkeit gibt, zwischen `null` und "Null" zu unterscheiden, sollten Sie die Verwendung `null` Argument Parameter mit Rückrufen vermeiden.  
  
 Ausnahmen, die in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> ausgelöst werden, verhindern nicht, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen und ein Ergebnis zurückgegeben wird. Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag fest, wenn eine Ausnahme in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> ausgelöst wird, und geben Sie eine leere Zeichenfolge von <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>zurück  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>
