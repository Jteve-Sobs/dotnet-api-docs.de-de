<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c825a3f80dfb1fd33e27c2eb4f80d07877ee835" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="887d1-101">Wird verwendet, um anzugeben, dass ein Steuerelement Ziel eines Rückrufereignisses auf dem Server sein kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="887d1-101">Used to indicate that a control can be the target of a callback event on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887d1-102">Implementieren der <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle für ein beliebiges benutzerdefiniertes Steuerelement, das Rückrufereignisse empfangen muss.</span><span class="sxs-lookup"><span data-stu-id="887d1-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="887d1-103">Weitere Informationen finden Sie unter [Implementing Client Rückrufe ohne Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="887d1-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="887d1-104">Beispiele für Steuerelemente, implementieren die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle enthalten die <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, und <xref:System.Web.UI.WebControls.TreeView> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="887d1-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="887d1-105">Wenn ein Rückrufereignis als Ziel verwendet ein Steuerelement, implementiert die <xref:System.Web.UI.ICallbackEventHandler> -Schnittstelle, die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Methode wird aufgerufen, um die Behandlung des Ereignisses, das Ereignisargument als Parameter übergeben und die <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Methode gibt das Ergebnis des Rückrufs.</span><span class="sxs-lookup"><span data-stu-id="887d1-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="887d1-106">Steuerelemente, die Abrufen von Daten aus einem Datenquellensteuerelement während eines Rückrufs können synchron oder asynchron tun.</span><span class="sxs-lookup"><span data-stu-id="887d1-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="887d1-107">ASP.NET-Steuerelemente wie <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, und <xref:System.Web.UI.WebControls.TreeView> synchron implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="887d1-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="887d1-108">Synchrone Rückrufe werden nicht verhindert, dass den Benutzer im Browser arbeiten.</span><span class="sxs-lookup"><span data-stu-id="887d1-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="887d1-109">Im synchronen Modus kann jeweils nur ein Rückruf, mit der letzte Rückruf Vorrang ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="887d1-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="887d1-110">Wenn ein Websteuerelement implementiert wird, um asynchrones Verhalten zu unterstützen, können mehrere Rückrufe gleichzeitig ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="887d1-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="887d1-111">Weitere Informationen zur asynchronen Programmierung finden Sie unter [das ereignisbasierte asynchrone Muster (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="887d1-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="887d1-112">Sie können angeben, ob Rückrufereignisse über die Benutzeroberfläche von einem Steuerelement implementieren gerendert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle werden überprüft.</span><span class="sxs-lookup"><span data-stu-id="887d1-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="887d1-113">Validierung von Ereignissen ist eine gute Sicherheitsmethode.</span><span class="sxs-lookup"><span data-stu-id="887d1-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="887d1-114">Allerdings können zur Verbesserung der Leistung Sie es deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="887d1-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="887d1-115">Um zu steuern, ob Ereignis Validierung Rückrufereignisse, legen Sie die `enableEventValidation` Attribut des der [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) Richtlinie oder die `enableEventValidation` Attribut des der [pages ((ASP.NET Settings Schema)-Element](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) der Datei "Web.config".</span><span class="sxs-lookup"><span data-stu-id="887d1-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="887d1-116">Wenn Sie festlegen, die <xref:System.Web.UI.Page.EnableEventValidation%2A> -Eigenschaft im Code, legen Sie sie der `Page_Init` Phase der Verarbeitung der Seite.</span><span class="sxs-lookup"><span data-stu-id="887d1-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="887d1-117">Weitere Informationen zu den Sicherheitsvorteil Ereignis Validierung mit seiner Leistungskosten Netzwerklastenausgleich, finden Sie unter [Übersicht über die Leistung von ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="887d1-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="887d1-118">Gibt die Ergebnisse eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="887d1-118">Returns the results of a callback event that targets a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="887d1-119">Das Ergebnis des Rückrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="887d1-119">The result of the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887d1-120">Ausnahmen in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> hat keine Auswirkung <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen wird und ein Ergebnis zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="887d1-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="887d1-121">Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag beim Auftreten einer in Ausnahme <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> und zurückgeben eine leere Zeichenfolge aus <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="887d1-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="887d1-122">Eine Zeichenfolge, die ein Ereignisargument für die Übergabe an den Ereignishandler darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="887d1-122">A string that represents an event argument to pass to the event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="887d1-123">Verarbeitet ein Rückrufereignis, das ein Steuerelement als Ziel hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="887d1-123">Processes a callback event that targets a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887d1-124">Wenn `null` dient als Parameter für das Ereignisargument, die Zeichenfolge "null" oder gesendeten zurück an den Server serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="887d1-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="887d1-125">Da es keine Möglichkeit zur Unterscheidung gibt `null` und "null", vermeiden Sie `null` argumentparametern mit Rückrufen.</span><span class="sxs-lookup"><span data-stu-id="887d1-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="887d1-126">Ausnahmen in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> hat keine Auswirkung <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> aufgerufen wird und ein Ergebnis zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="887d1-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="887d1-127">Um zu verhindern, dass <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> ein Ergebnis zurückgibt, legen Sie ein Flag beim Auftreten einer in Ausnahme <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> und zurückgeben eine leere Zeichenfolge aus <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="887d1-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>