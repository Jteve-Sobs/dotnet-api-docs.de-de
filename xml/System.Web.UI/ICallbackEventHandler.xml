<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7b1b41a1d7ac8730ff15ee9421d471cd5ace43" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70447096" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69759-101">Wird verwendet, um anzugeben, dass ein Steuerelement Ziel eines Rückrufereignisses auf dem Server sein kann.</span><span class="sxs-lookup"><span data-stu-id="69759-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69759-102">Implementieren Sie <xref:System.Web.UI.ICallbackEventHandler> die-Schnittstelle für alle benutzerdefinierten Steuerelemente, die Rückruf Ereignisse empfangen müssen.</span><span class="sxs-lookup"><span data-stu-id="69759-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="69759-103">Weitere Informationen finden Sie unter [Implementieren von Client Rückrufen ohne Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="69759-103">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="69759-104">Beispiele für Steuerelemente, die <xref:System.Web.UI.ICallbackEventHandler> die-Schnitt <xref:System.Web.UI.WebControls.GridView>Stelle implementieren, <xref:System.Web.UI.WebControls.TreeView> sind die Steuerelemente, <xref:System.Web.UI.WebControls.DetailsView>und.</span><span class="sxs-lookup"><span data-stu-id="69759-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="69759-105">Wenn ein Rückruf Ereignis ein Steuerelement als Ziel hat <xref:System.Web.UI.ICallbackEventHandler> , das die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> -Schnittstelle implementiert, wird die-Methode aufgerufen, um das-Ereignis zu behandeln <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> , wobei das Ereignis Argument als Parameter übergeben wird und die Methode das Ergebnis des Rückrufs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="69759-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="69759-106">Steuerelemente, die während des Rückrufs Daten aus einem Datenquellen-Steuerelement abrufen, können dies synchron oder asynchron ausführen.</span><span class="sxs-lookup"><span data-stu-id="69759-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="69759-107">ASP.net-Steuer <xref:System.Web.UI.WebControls.GridView>Elemente <xref:System.Web.UI.WebControls.DetailsView>wie, <xref:System.Web.UI.WebControls.TreeView> und werden synchron implementiert.</span><span class="sxs-lookup"><span data-stu-id="69759-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="69759-108">Synchrone Rückrufe verhindern nicht, dass der Benutzer im Browser arbeitet.</span><span class="sxs-lookup"><span data-stu-id="69759-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="69759-109">Im synchronen Modus kann nur jeweils ein Rückruf ausgeführt werden, wobei der letzte Rückruf Vorrang hat.</span><span class="sxs-lookup"><span data-stu-id="69759-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="69759-110">Wenn ein websteuer Element implementiert wird, um asynchrones Verhalten zu unterstützen, können gleichzeitig mehrere Rückrufe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="69759-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="69759-111">Ausführliche Informationen zur asynchronen Programmierung finden Sie unter [Ereignis basiertes asynchrones Muster (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="69759-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="69759-112">Sie können angeben, ob Rückruf Ereignisse von der Benutzeroberfläche, die von einem Steuerelement <xref:System.Web.UI.ICallbackEventHandler> , das die-Schnittstelle implementiert, ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="69759-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="69759-113">Die Überprüfung von Ereignissen ist eine gute Sicherheitsmaßnahme.</span><span class="sxs-lookup"><span data-stu-id="69759-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="69759-114">Aus Leistungsgründen können Sie Sie jedoch deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="69759-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="69759-115">Legen Sie das `enableEventValidation` -Attribut der [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) -Direktive oder das `enableEventValidation` -Attribut des pages- [Elements (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) der Datei "Web. config" fest, um zu steuern, ob die Ereignis Validierung für Rückruf Ereignisse ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="69759-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="69759-116">Wenn Sie die <xref:System.Web.UI.Page.EnableEventValidation%2A> -Eigenschaft im Code festlegen, legen Sie Sie `Page_Init` in der Phase der Seiten Verarbeitung fest.</span><span class="sxs-lookup"><span data-stu-id="69759-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="69759-117">Weitere Informationen zum Ausgleichen des Sicherheits Vorteils der Ereignis Überprüfung durch die Leistungskosten finden Sie unter [ASP.NET Performance Overview](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="69759-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69759-118">Gibt die Ergebnisse eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</span><span class="sxs-lookup"><span data-stu-id="69759-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="69759-119">Das Ergebnis des Rückrufs.</span><span class="sxs-lookup"><span data-stu-id="69759-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69759-120">Ausnahmen, die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> in ausgelöst werden <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> , verhindern nicht, dass aufgerufen wird und ein Ergebnis zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="69759-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="69759-121">Wenn Sie <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> verhindern möchten, dass ein Ergebnis zurückgegeben wird, legen Sie ein Flag <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> fest, wenn eine Ausnahme in <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>ausgelöst wird und eine leere Zeichenfolge von zurückgibt</span><span class="sxs-lookup"><span data-stu-id="69759-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="69759-122">Eine Zeichenfolge, die ein Ereignisargument für die Übergabe an den Ereignishandler darstellt.</span><span class="sxs-lookup"><span data-stu-id="69759-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="69759-123">Verarbeitet ein Rückrufereignis, das ein Steuerelement als Ziel hat.</span><span class="sxs-lookup"><span data-stu-id="69759-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69759-124">Wenn `null` als Ereignis Argument Parameter verwendet wird, wird die Zeichenfolge in NULL serialisiert und an den Server zurückgesendet.</span><span class="sxs-lookup"><span data-stu-id="69759-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="69759-125">Da es keine Möglichkeit gibt, zwischen und `null` NULL zu unterscheiden, sollten Sie die Verwendung `null` von Argument Parametern mit Rückrufen vermeiden.</span><span class="sxs-lookup"><span data-stu-id="69759-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="69759-126">Ausnahmen, die <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> in ausgelöst werden <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> , verhindern nicht, dass aufgerufen wird und ein Ergebnis zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="69759-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="69759-127">Wenn Sie <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> verhindern möchten, dass ein Ergebnis zurückgegeben wird, legen Sie ein Flag <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> fest, wenn eine Ausnahme in <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>ausgelöst wird und eine leere Zeichenfolge von zurückgibt</span><span class="sxs-lookup"><span data-stu-id="69759-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>
