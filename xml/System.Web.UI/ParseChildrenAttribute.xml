<Type Name="ParseChildrenAttribute" FullName="System.Web.UI.ParseChildrenAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ec6efec0d8cd87c1f803f7d1e8c9ce7a9ffc602" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70627832" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParseChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParseChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParseChildrenAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParseChildrenAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParseChildrenAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert ein Metadatenattribut, das bei der Entwicklung von ASP.NET-Serversteuerelementen verwendet werden kann. Mit der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse können Sie angeben, wie der Seitenparser mit Inhalten verfahren soll, die in einem auf einer Seite deklarierten Serversteuerelementtag geschachtelt sind. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Web.UI.ParseChildrenAttribute> der-Klasse können Sie die Logik für ein benutzerdefiniertes Server Steuerelement angeben, indem Sie das <xref:System.Web.UI.ParseChildrenAttribute> -Server Steuerelement mit dem Metadata-Attribut markieren.  
  
 Wenn Sie das-Server Steuerelement mit `ParseChildren(true)` dem Metadata-Attribut markieren, weist den Parser an, die Elemente, die in den Tags des Server Steuer Elements enthalten sind, als Eigenschaften zu interpretieren. In diesem Szenario ist <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> `true`die-Eigenschaft.  
  
 Wenn Sie das Server Steuerelement mit dem `ParseChildren(true,"<Default Property>")` Metadata- <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Attribut markieren, wird die-Eigenschaft auf den Namen der Eigenschaft festgelegt, die an das Attribut übermittelt wird.  
  
 Wenn das Server Steuerelement mit dem Metadatenattribut `ParseChildren(false)`markiert wird, weist der Standardwert den Parser an, die Elemente, die in den Tags des Server Steuer Elements enthalten sind, als Inhalt zu interpretieren, der mit einem zugeordneten <xref:System.Web.UI.ControlBuilder> analysiert wird, das ist. als Steuerelemente. In diesem Szenario ist <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> `false`die-Eigenschaft.  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt enthält zwei Teile. Im ersten Codebeispiel wird veranschaulicht, wie Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse festgelegt werden. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen auf einer ASP.NET-Seite verwendet werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.ParseChildrenAttribute> -Objekt eines benutzerdefinierten Server Steuer `CollectionPropertyControl`Elements namensfest gelegt wird. Der <xref:System.Web.UI.ParseChildrenAttribute> `true` <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> legt die- `Employee` Eigenschaft auf und die-Eigenschaft auf die-Klasse fest. <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A>  
  
 [!code-csharp[ParseChildrenAttribute_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` - `Employee` Klasse und die-Klasse auf einer ASP.NET-Seite verwendet werden. Instanzen der `Employee` -Klasse werden deklarativ hinzugefügt.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">Erweitern von Metadaten mithilfe von Attributen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es wird eine neue Instanz <xref:System.Web.UI.ParseChildrenAttribute> der-Klasse erstellt, <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> bei der die `false`-Eigenschaft auf festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childrenAsProperties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties"><see langword="true" />, wenn die Elemente des Serversteuerelements als Eigenschaften analysiert werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse, wobei mithilfe der <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />-Eigenschaft bestimmt wird, ob die in einem Serversteuerelement enthaltenen Elemente als Eigenschaften des Serversteuerelements analysiert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn  `childrenAsProperties` den Wert hat, werden die Elemente, die im Server Steuerelement enthalten sind, als Steuerelement analysiert. `false` `false`ist der Standardwert <xref:System.Web.UI.ParseChildrenAttribute>für.  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt enthält zwei Teile. Im ersten Codebeispiel wird veranschaulicht, wie Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse festgelegt werden. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen auf einer ASP.NET-Seite verwendet werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.ParseChildrenAttribute> -Objekt für ein benutzerdefiniertes `CollectionPropertyControl`Server Steuerelement namensfest gelegt wird. Wenn der <xref:System.Web.UI.ParseChildrenAttribute> vor der-Klasse deklariert wird `CollectionPropertyControl`, <xref:System.Web.UI.ParseChildrenAttribute> wird die- <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft von `true`auf festgelegt.  
  
 [!code-csharp[ParseChildrenAttribute_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` - `Employee` Klasse und die-Klasse auf einer ASP.NET-Seite verwendet werden. Eine Instanz der `Employee` -Klasse wird deklarativ hinzugefügt, und eine andere Instanz wird Programm gesteuert hinzugefügt.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (Type childControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type childControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childControlType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(Type ^ childControlType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : Type -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childControlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childControlType" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="childControlType">Der Steuerelementtyp, der als Eigenschaft analysiert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse, wobei mithilfe der <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />-Eigenschaft bestimmt wird, welche der in einem Serversteuerelement enthaltenen Elemente als Steuerelemente analysiert werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="childControlType" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties, string defaultProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties, string defaultProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean, defaultProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties, System::String ^ defaultProperty);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool * string -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute (childrenAsProperties, defaultProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
        <Parameter Name="defaultProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties"><see langword="true" />, wenn die Elemente des Serversteuerelements als Eigenschaften analysiert werden sollen, andernfalls <see langword="false" />.</param>
        <param name="defaultProperty">Eine Zeichenfolge, die eine Auflistungseigenschaft des Serversteuerelements definiert, in dem geschachtelter Inhalt standardmäßig analysiert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse mithilfe des <paramref name="childrenAsProperties" />-Parameters und des <paramref name="defaultProperty" />-Parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn  `childrenAsProperties` den Wert hat, werden die Elemente als Steuerelemente analysiert. `false`  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt enthält zwei Teile. Im ersten Codebeispiel wird veranschaulicht, wie Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse festgelegt werden. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen auf einer ASP.NET-Seite verwendet werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.ParseChildrenAttribute> -Objekt eines benutzerdefinierten Server Steuer `CollectionPropertyControl`Elements namensfest gelegt wird. Der <xref:System.Web.UI.ParseChildrenAttribute> `true` <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> legt die- `Employee` Eigenschaft auf und die-Eigenschaft auf die-Klasse fest. <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A>  
  
 [!code-csharp[ParseChildrenAttribute_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#2)]
 [!code-vb[ParseChildrenAttribute_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#2)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` - `Employee` Klasse und die-Klasse auf einer ASP.NET-Seite verwendet werden.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ChildControlType">
      <MemberSignature Language="C#" Value="public Type ChildControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ChildControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ChildControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlType : Type" Usage="System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den zulässigen Typ eines Steuerelements angibt.</summary>
        <value>Der Steuerelementtyp. Die Standardeinstellung ist <see cref="T:System.Web.UI.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der zulässige Steuer Steuerungstyp ist `null`, d. h., dass er nicht angegeben wurde, wird der Standardtyp, der ein <xref:System.Web.UI.Control?displayProperty=nameWithType> Steuerelement ist, zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.ParseChildrenAttribute.ChildControlType%2A> -Eigenschaft abgefragt wird. Definitionen der-Klasse `CollectionPropertyControl` und `Employee` der-Klasse, die in diesem Codebeispiel verwendet <xref:System.Web.UI.ParseChildrenAttribute.%23ctor%2A>werden, finden Sie unter.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsProperties">
      <MemberSignature Language="C#" Value="public bool ChildrenAsProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsProperties : bool with get, set" Usage="System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die in einem Serversteuerelement enthaltenen Elemente als Eigenschaften analysiert werden sollen, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Elemente als Eigenschaften analysiert werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> -Eigenschaft auf `false`festgelegt ist, werden die Elemente, die in einem Server Steuerelement enthalten sind, als Steuerelement analysiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> -Eigenschaft abgefragt wird. Definitionen der-Klasse `CollectionPropertyControl` und `Employee` der-Klasse, die in diesem Codebeispiel verwendet <xref:System.Web.UI.ParseChildrenAttribute>werden, finden Sie unter.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" /> wurde aufgerufen, wobei <paramref name="childrenAsProperties" /> auf <see langword="false" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert den Standardwert für die <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für das <xref:System.Web.UI.ParseChildrenAttribute.Default> Feld ist `false`. Dies bedeutet, dass Elemente nicht als Eigenschaften des Server Steuer Elements analysiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultProperty">
      <MemberSignature Language="C#" Value="public string DefaultProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProperty As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProperty { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProperty : string with get, set" Usage="System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardeigenschaft des Serversteuerelements ab, in dem Elemente analysiert werden, oder legt diese fest.</summary>
        <value>Der Name der Standardauflistungseigenschaft des Serversteuerelements, in dem die Elemente analysiert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> -Eigenschaft wird nur verwendet, wenn eine Zeichenfolge an <xref:System.Web.UI.ParseChildrenAttribute> den Konstruktor übergeben wird. Wenn die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse erstellt wird, <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> definiert die-Eigenschaft die Standard Eigenschaft für das Server Steuerelement, das analysiert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> -Eigenschaft abgefragt wird. Definitionen der-Klasse `CollectionPropertyControl` und `Employee` der-Klasse, die in diesem Codebeispiel verwendet <xref:System.Web.UI.ParseChildrenAttribute>werden, finden Sie unter.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" /> wurde aufgerufen, wobei <paramref name="childrenAsProperties" /> auf <see langword="false" /> festgelegt ist.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="parseChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene Objekt mit dem aktuellen Objekt identisch ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="parseChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als Hashfunktion für das <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Objekt.</summary>
        <returns>Ein Hashcode für das aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="parseChildrenAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob der Wert der aktuellen Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse der Standardwert der abgeleiteten Klasse ist.</summary>
        <returns><see langword="true" />, wenn der aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Wert die Standardinstanz ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse ist <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> das-Feld.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute%2A> -Eigenschaft abgefragt wird. Definitionen der-Klasse `CollectionPropertyControl` und `Employee` der-Klasse, die in diesem Codebeispiel verwendet <xref:System.Web.UI.ParseChildrenAttribute>werden, finden Sie unter.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsChildren">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsChildren" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsChildren As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsChildren;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsChildren : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass die in einem Serversteuerelement enthaltenen geschachtelten Inhalte als Steuerelemente analysiert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> Feld aufgerufen wird, werden die in dem Server Steuerelement enthaltenen geschachtelten Inhalte nicht als Eigenschaften analysiert, sondern als Steuerelement analysiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsProperties">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsProperties" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsProperties As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsProperties;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsProperties : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass die in einem Serversteuerelement enthaltenen geschachtelten Inhalte als Eigenschaften des Steuerelements analysiert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Web.UI.ParseChildrenAttribute.ParseAsProperties> Feld aufgerufen wird, werden die in einem Server Steuerelement enthaltenen geschachtelten Inhalte als Eigenschaften analysiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      </Docs>
    </Member>
  </Members>
</Type>
