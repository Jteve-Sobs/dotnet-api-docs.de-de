<Type Name="Html32TextWriter" FullName="System.Web.UI.Html32TextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1aae36e7e161194739a5d26d91bea02a0643447c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39965051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Html32TextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Html32TextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class Html32TextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Html32TextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type Html32TextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Schreibt eine Reihe von HTML 3.2-spezifischen Zeichen und Text in den Ausgabestream für ein ASP.NET-Serversteuerelement. Die <see cref="T:System.Web.UI.Html32TextWriter" />-Klasse stellt Formatierungsfunktionen bereit, die von ASP.NET-Serversteuerelementen beim Wiedergeben von HTML 3.2-Inhalten auf Clients verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Html32TextWriter> Klasse ist eine Alternative zu den <xref:System.Web.UI.HtmlTextWriter> Klasse. Formatattribute HTML 4.0 wird in die entsprechende HTML 3.2-Tags und Attribute konvertiert. Die Verteilung der Attribute, z. B. Farben und Schriftarten, die mithilfe von HTML-Tabellen standardisiert. ASP.NET verwendet automatisch diese Klasse für HTML 3.2 und ältere Browser durch Überprüfen der <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> Eigenschaft der <xref:System.Web.HttpBrowserCapabilities> Klasse. Es sei denn, Sie erstellen eine benutzerdefinierte Seite oder den Steuerelementadapter, die Geräte ausgerichtet ist, die HTML 3.2-Markup zu verwenden, müssen Sie keine Instanz erstellen die <xref:System.Web.UI.Html32TextWriter> -Klasse explizit.  
  
 Weitere Informationen zum Anpassen von Seiten und Steuerelemente finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, mit dem Namen `CustomHtml32TextWriter`, abgeleitet, die die <xref:System.Web.UI.Html32TextWriter> Klasse. `CustomHtml32TextWriter` erstellt zwei Konstruktoren, die dem Muster folgen, die von eingerichtet ist die <xref:System.Web.UI.HtmlTextWriter> -Klasse und überschreibt die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A>, und <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> Methoden.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Html32TextWriter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.IO.TextWriter" />, der HTML-Inhalte rendert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Html32TextWriter" />-Klasse, die den im <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />-Feld angegebenen Zeileneinzug verwendet, wenn ein anfordernder Browser einen Zeileneinzug benötigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Html32TextWriter.%23ctor%2A> Konstruktor übergibt die <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Feldwert an eine zweite Version, die über die folgenden zwei Parameter verfügt:  
  
-   `writer`, die akzeptiert eine Instanz der <xref:System.IO.TextWriter> Klasse.  
  
-   `tabString`, der akzeptiert einer Zeichenfolge, die Zeileneinzug definiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse zu verwenden, die von abgeleitet ist die <xref:System.Web.UI.Html32TextWriter> Klasse. Es hat zwei Konstruktoren, der standard für alle Klassen, die direkt oder indirekt von abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.IO.TextWriter" />, der HMTL 3.2-Inhalte rendert.</param>
        <param name="tabString">Eine Zeichenfolge, die die Anzahl der von <see cref="P:System.Web.UI.HtmlTextWriter.Indent" /> definierten Leerzeichen darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Html32TextWriter" />-Klasse, die den angegebenen Zeileneinzug verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse zu verwenden, die von abgeleitet ist die <xref:System.Web.UI.Html32TextWriter> Klasse. Es hat zwei Konstruktoren, der standard für alle Klassen, die direkt oder indirekt von abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
      </Docs>
    </Member>
    <Member MemberName="FontStack">
      <MemberSignature Language="C#" Value="protected System.Collections.Stack FontStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack FontStack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.FontStack" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Stack ^ FontStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontStack : System.Collections.Stack" Usage="System.Web.UI.Html32TextWriter.FontStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Schriftartinformationen für HTML ab, die gerendert werden soll.</summary>
        <value>Die Auflistung der Schriftartinformationen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected override string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="html32TextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert, für den das HTML-Element abgerufen werden soll.</param>
        <summary>Gibt das HTML-Element zurück, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert zugeordnet ist.</summary>
        <returns>Das HTML-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.HtmlTextWriterTag.Div?displayProperty=nameWithType> Feld übergeben `tagKey` und <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> -Eigenschaft ist `true`, <xref:System.Web.UI.Html32TextWriter.GetTagName%2A> Methode gibt die `table` Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="html32TextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Das HTML-Formatattribut, das in den Ausgabestream geschrieben werden soll.</param>
        <param name="value">Der dem HTML-Formatvorlagenattribut zugeordnete Wert.</param>
        <param name="key">Der dem HTML-Formatvorlagenattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert.</param>
        <summary>Bestimmt, ob das angegebene HTML-Formatvorlagenattribut und dessen Wert in den Ausgabestream geschrieben werden.</summary>
        <returns>
          <see langword="true" />, wenn das HTML-Formatvorlagenattribut und dessen Wert im Ausgabestream dargestellt werden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> -Methode unterstützt eine kleinere Anzahl von HTML-Stilattribute, als die <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> Methode, die sie überschreibt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="html32TextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Das HTML-Element, das in den Ausgabestream geschrieben werden soll.</param>
        <param name="key">Der dem HTML-Element zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert.</param>
        <summary>Bestimmt, ob das angegebene HTML-Element in den Ausgabestream geschrieben wird.</summary>
        <returns>
          <see langword="true" />, wenn das HTML-Element in den Ausgabestream geschrieben wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> Eigenschaft `true`, <xref:System.Web.UI.Html32TextWriter.OnTagRender%2A> Methode ersetzt alle `div` Elemente, die von einem Steuerelement mit gerendert werden `table` Elemente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected override string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterContent : unit -&gt; string" Usage="html32TextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt jeglichen Text oder Abstand, der dem Inhalt des HTML-Elements folgt.</summary>
        <returns>Der Abstand oder Text, der nach dem Inhalt des HTML-Elements geschrieben werden soll. Wenn keine Informationen dieser Art zum Rendern vorhanden sind, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode. Jeder überschriebenen Methode wird zunächst geprüft, ob eine `th` Element gerendert wird, und verwendet dann die <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> -Methode überprüft, ob das anfordernde Gerät fett formatiert anzeigen kann. Wenn das Gerät unterstützt werden fett formatiert, die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag des eine `b` Element. Wenn das Gerät nicht fett formatiert unterstützt wird, die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag des eine `font` Element.  
  
 Als Nächstes der Code überprüft, ob ein `h4` Element gerendert wird, und verwendet dann die <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> Eigenschaft zu überprüfen, ob das anfordernde Gerät kursiv formatierten anzeigen kann. Wenn das Gerät kursiv zu formatieren unterstützt, die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag ein `i` Element. Wenn das Gerät nicht unterstützt, kursiv zu formatieren, die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag des eine `font` Element.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#4)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected override string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterTag : unit -&gt; string" Usage="html32TextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt Abstände oder Text, die sich hinter dem schließenden Tag eines HTML-Elements befinden.</summary>
        <returns>Der Abstand oder Text, der nach dem schließenden Tag des HTML-Elements geschrieben werden soll. Wenn keine Informationen dieser Art zum Rendern vorhanden sind, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> Methode. Der Code wird überprüft, ob ein `a` -Element gerendert wird. Wenn dies der Fall ist, die <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> Methode schreibt das Endtag des eine `small` Element. Im Beispiel für die <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> Methode führt die gleiche Überprüfung für die `a` -Element, und schreibt das öffnende Tag das `small` Element.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#5)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeContent : unit -&gt; string" Usage="html32TextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt Tabstoppabstände oder Schriftartinformationen, die sich vor dem Inhalt eines HTML-Elements befinden.</summary>
        <returns>Die Schriftartinformationen oder Abstände, die vor dem Rendern des Inhalts des HTML-Elements geschrieben werden sollen. Wenn keine Informationen dieser Art zum Rendern vorhanden sind, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode. Im Code wird überprüft, ob eine `th` Element gerendert wird, und klicken Sie dann verwendet der <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> -Methode überprüft, ob das anfordernde Gerät fett formatiert anzeigen kann. Wenn das Gerät unterstützt werden fett formatiert, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eine `b` Element. Wenn das Gerät nicht fett formatiert unterstützt wird, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eine `font` -Element mit einer `color` -Attributsatz auf den hexadezimalen Wert für Rot.  
  
 Als Nächstes auf jede Methode überprüft, ob ein `h4` Element gerendert wird, und verwendet dann die <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> Eigenschaft zu überprüfen, ob das anfordernde Gerät kursiv formatierten anzeigen kann. Wenn das Gerät kursiv zu formatieren unterstützt, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag ein `i` Element. Wenn das Gerät nicht unterstützt, kursiv zu formatieren, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eines eine `font` -Element mit einer `color` -Attributsatz auf den hexadezimalen Wert für die individuelle.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeTag : unit -&gt; string" Usage="html32TextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt Text oder Tabstopps, die sich vor dem öffnenden Tag eines HTML-Elements befinden, in den HTML 3.2-Ausgabestream.</summary>
        <returns>Alle HTML-Informationen zu Schriftarten und Abständen, die vor dem Tag gerendert werden sollen. Wenn keine Informationen dieser Art darzustellen sind, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> Methode. Der Code wird überprüft, ob ein `a` -Element gerendert wird. Wenn dies der Fall ist, der außer Kraft gesetzte <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> Methode schreibt das öffnende Tag eine `small` Element. Das Beispiel für die <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> führt dieselbe Überprüfung für die `a` -Element, und schreibt das Endtag des der `small` Element.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#3)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="html32TextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert, der das zu schreibende HTML-Element angibt.</param>
        <summary>Schreibt das öffnende Tag des angegebenen Elements in den HTML 3.2-Ausgabestream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine `div` -Element angegeben ist und die <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> Eigenschaftswert ist `true`, <xref:System.Web.UI.Html32TextWriter.RenderBeginTag%2A> Methode führt grundlegende `table` elementformatierung, um den Inhalt zu präsentieren, die in enthalten ist die `div` Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag();" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : unit -&gt; unit" Usage="html32TextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt das Endtag eines HTML-Elements zusammen mit allen dem Element zugeordneten Schriftartinformationen in den <see cref="T:System.Web.UI.Html32TextWriter" />-Ausgabestream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPerformDivTableSubstitution">
      <MemberSignature Language="C#" Value="public bool ShouldPerformDivTableSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPerformDivTableSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPerformDivTableSubstitution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPerformDivTableSubstitution : bool with get, set" Usage="System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob ein <see langword="Table" />-Element durch ein <see langword="Div" />-Element ersetzt werden soll, um die zum Wiedergeben eines HTML-Blocks benötigte Zeit zu reduzieren, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um <see langword="Table" /> durch <see langword="Div" /> zu ersetzen, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public bool SupportsBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsBold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob das anfordernde Gerät fett formatierten HTML-Text unterstützt, oder legt diesen fest. Verwenden Sie die <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />-Eigenschaft zum bedingten Rendern von fett formatiertem Text im <see cref="T:System.Web.UI.Html32TextWriter" />-Ausgabestream.</summary>
        <value>
          <see langword="true" />, wenn das anfordernde Gerät fett formatierten Text unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> und <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methoden. Jedem Überschreiben wird geprüft, ob eine `Label` Element gerendert wird, und verwendet dann die <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> -Methode überprüft, ob das anfordernde Gerät fett formatiert anzeigen kann. Wenn das Gerät unterstützt werden fett formatiert, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eine `b` Element und die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag. Wenn das Gerät nicht fett formatiert unterstützt wird, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eine `Font` -Element mit einer `color` -Attributsatz auf den hexadezimalen Wert für Rot, und die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public bool SupportsItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsItalic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob das anfordernde Gerät kursiv formatierten HTML-Text unterstützt, oder legt diesen fest. Verwenden Sie die <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />-Eigenschaft zum bedingten Rendern von kursiv formatiertem Text im <see cref="T:System.Web.UI.Html32TextWriter" />-Ausgabestream.</summary>
        <value>
          <see langword="true" />, wenn das anfordernde Gerät kursiv formatierten Text unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> und <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methoden. Jedem Überschreiben wird geprüft, ob eine `span` Element gerendert wird, und verwendet dann die <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> Eigenschaft zu überprüfen, ob das anfordernde Gerät kursiv formatierten anzeigen kann. Wenn das Gerät kursiv zu formatieren unterstützt, die <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag ein `i` Element und die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag. Wenn das Gerät nicht unterstützt, kursiv zu formatieren, der <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> Methode schreibt das öffnende Tag eines eine `Font` -Element mit einer `color` -Attributsatz auf den hexadezimalen Wert für Navy Blau, und die <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> Methode schreibt das Endtag.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Html32TextWriter> Klasse.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      </Docs>
    </Member>
  </Members>
</Type>