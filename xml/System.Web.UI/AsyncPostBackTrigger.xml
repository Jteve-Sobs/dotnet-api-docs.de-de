<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9b2b6a2f8c6ccfeaea2ec0d9768dbb48b0576a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Steuerelement und ein optionales Ereignis des Steuerelements als asynchronen Steuerelement-Postbacktrigger, der eine Aktualisierung des <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements bewirkt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.AsyncPostBackTrigger> Steuerelement als Trigger für Steuerelemente ermöglichen eine <xref:System.Web.UI.UpdatePanel> Steuerelement. Steuerelemente, die Trigger für Update-Panels sind dazu führen, dass eine Aktualisierung des Inhalts des Bereichs nach eines asynchronen Postbacks. Definieren eine asynchrone Trigger-Steuerelement ist in den folgenden Szenarien nützlich:  
  
-   Für Steuerelemente, die sich außerhalb eines Bereichs befinden.  
  
-   Für Steuerelemente, die in einem Bereich werden bei der <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Eigenschaft ist `false`.  
  
-   Für Steuerelemente, die innerhalb von geschachtelten Bereichen, um eine Aktualisierung von übergeordneten Bereichen verursachen.  
  
 Das Steuerelement, das die <xref:System.Web.UI.AsyncPostBackTrigger> in den gleichen Benennungscontainer als des Update-Panels Steuerelementverweise werden müssen, für welche It ein Trigger ist. Trigger, die abhängig von Steuerelementen in andere Benennen von Containern werden nicht unterstützt.  
  
 Hinzufügen <xref:System.Web.UI.AsyncPostBackTrigger> steuert, indem Sie entweder die **UpdatePanelTrigger-Auflistungs-Editor** Dialogfeld im Designer oder durch Erstellen einer `Triggers` Element deklarativ in der <xref:System.Web.UI.UpdatePanel> Steuerelement. Die <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> Eigenschaft ist erforderlich, aber die <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> Eigenschaft ist optional. Wenn die <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> Eigenschaft nicht angegeben wird, die <xref:System.ComponentModel.DefaultEventAttribute> Attribut des Steuerelements wird verwendet, um das Standardereignis zu bestimmen. Z. B. das Standardereignis für die <xref:System.Web.UI.WebControls.Button> -Steuerelement ist die <xref:System.Web.UI.WebControls.Button.Click> Ereignis. Die <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> Eigenschaft ist Groß-/Kleinschreibung.  
  
 Sie können auch einen Benennungscontainer als Trigger verweisen. In diesem Fall gelten alle untergeordneten Steuerelemente im Container, die dazu führen, einen Postback dass Trigger für die <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Programmgesteuertes Hinzufügen von <xref:System.Web.UI.AsyncPostBackTrigger> Steuerelemente wird nicht unterstützt. Verwenden, um ein postback-Steuerelement programmgesteuert zu registrieren, die <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Methode der <xref:System.Web.UI.ScriptManager> Steuerelement. Rufen Sie anschließend die <xref:System.Web.UI.UpdatePanel.Update%2A> Methode der <xref:System.Web.UI.UpdatePanel> steuern, wenn das Steuerelement Daten zurücksendet.  
  
 Wenn Sie ein Steuerelement mit definieren <xref:System.Web.UI.PostBackTrigger> und <xref:System.Web.UI.AsyncPostBackTrigger>, wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Hinzufügen einer <xref:System.Web.UI.AsyncPostBackTrigger> deklarativ zu steuern. Ein <xref:System.Web.UI.WebControls.Button> Steuerelement, das außerhalb einer <xref:System.Web.UI.UpdatePanel> -Steuerelement ermöglicht Benutzern, geben Sie einen Suchbegriff in finden Sie die `Products` Tabelle der Northwind-Datenbank. Ein <xref:System.Web.UI.WebControls.GridView> Steuerelement, das innerhalb der <xref:System.Web.UI.UpdatePanel> Steuerelement zeigt die Ergebnisse. Die <xref:System.Web.UI.WebControls.Button> Steuerelement wird angegeben, als asynchrone Trigger für die <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Web.UI.AsyncPostBackTrigger" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hinzufügen <xref:System.Web.UI.AsyncPostBackTrigger> steuert, indem Sie entweder die **UpdatePanelTrigger-Auflistungs-Editor** Dialogfeld im Designer oder durch Erstellen einer `Triggers` Element deklarativ in der <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Hinzufügen von <xref:System.Web.UI.AsyncPostBackTrigger> programmgesteuert Steuerelemente wird nicht unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Steuerelements ab, das ein asynchrones Postback für ein <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelement auslöst, oder legt ihn fest.</summary>
        <value>Eine Serversteuerelement-ID.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement-Postbackereignis ab, das die Aktualisierung eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements auslöst, oder legt dieses fest.</summary>
        <value>Der Name des Ereignisses. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> Eigenschaft ist optional. Wenn sie nicht angegeben ist, die <xref:System.ComponentModel.DefaultEventAttribute> Attribut des Steuerelements wird verwendet, um das Standardereignis zu bestimmen. Die folgende Tabelle enthält die Standardereignisse für einige häufig verwendete ASP.NET 2.0-Steuerelemente.  
  
|Steuerelement|Standardereignis|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob der Trigger aufgerufen wurde.</summary>
        <returns>
          <see langword="true" />, wenn der Trigger aufgerufen wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwickler von Steuerelementen können außer Kraft setzen die <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> Methode, um benutzerdefinierte Logik bereitstellen, um zu bestimmen, ob der Trigger aufgerufen wurde. Eine benutzerdefinierte Trigger in der `Triggers` Element von der <xref:System.Web.UI.UpdatePanel> -Steuerelement, können Sie eine Richtlinie hinzufügen, auf der Seite oder auf das Element der Datei "Web.config".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert das <see cref="T:System.Web.UI.AsyncPostBackTrigger" />-Steuerelement und bestimmt, ob das im Trigger benannte Ereignis vorhanden und gültig ist.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde kein <see cref="T:System.Web.UI.ScriptManager" />-Steuerelement auf der Seite gefunden.  
  
 \- oder –  
  
 Das in der <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />-Eigenschaft benannte Ereignis wurde nicht für das Steuerelement gefunden, das in der <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />-Eigenschaft benannt ist.  
  
 \- oder –  
  
 Das Ereignis, das in der <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />-Eigenschaft für das Steuerelement benannt ist, das in der <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />-Eigenschaft benannt ist, entspricht keiner Standardsignatur eines Ereignishandlers.</exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Der Absender des Ereignisses.</param>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das Ereignis aus, das ein Postback und eine Aktualisierung eines <see cref="T:System.Web.UI.UpdatePanel" />-Steuerelements auslöst.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung des aktuellen <see cref="T:System.Web.UI.AsyncPostBackTrigger" />-Steuerelements zurück.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle <see cref="T:System.Web.UI.AsyncPostBackTrigger" />-Steuerelement darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>