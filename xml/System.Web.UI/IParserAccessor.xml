<Type Name="IParserAccessor" FullName="System.Web.UI.IParserAccessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae57054750ec6a3a2527f4f03cbb9a7c48d5e837" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36377271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IParserAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParserAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IParserAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParserAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IParserAccessor" />
  <TypeSignature Language="F#" Value="type IParserAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert die Methode, die ASP.NET-Serversteuerelemente implementieren müssen, um das Analysieren von HTML-Elementen oder XML-Elementen erkennen zu können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Elemente nicht analysiert werden, werden sie als untergeordnete Steuerelemente des Serversteuerelements erkannt, die diese Schnittstelle implementiert. Diese Elemente werden in Objekte konvertiert. Wenn Sie diese Schnittstelle implementieren, definiert das Steuerelement, das Sie erstellen, welche Verarbeitung erfolgt, sobald es, dass ein Element analysiert wurde benachrichtigt wurde.  
  
 Da die <xref:System.Web.UI.Control> -Klasse implementiert diese Schnittstelle, es ist einfacher, diese Klasse erweitern und seiner Implementierung von überschreiben die <xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A> Methode als diese Schnittstelle selbst zu implementieren.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.ControlCollection" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
  </Docs>
  <Members>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="public void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member AddParsedSubObject : obj -&gt; unit" Usage="iParserAccessor.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das analysierte <see cref="T:System.Object" />.</param>
        <summary>Benachrichtigt bei Implementierung durch ein ASP.NET-Serversteuerelement das Serversteuerelement über die Analyse eines XML-Elements oder eines HTML-Elements.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>