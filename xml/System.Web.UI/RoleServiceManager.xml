<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afc4ed173416efb51717d0cb2baf2d3744f29c40" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <TypeSignature Language="F#" Value="type RoleServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Konfiguriert den Speicherort einer benutzerdefinierten Implementierung des Rollendiensts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.RoleServiceManager> Klasse entspricht dem <xref:System.Web.UI.ScriptManager.RoleService%2A> Eigenschaft der <xref:System.Web.UI.ScriptManager> oder <xref:System.Web.UI.ScriptManagerProxy> Steuerelement.  
  
 Die Rolle "Webdienst" wird von AJAX-fähigen Anwendungen verwendet, um Rolleninformationen für den aktuellen authentifizierten Benutzer abrufen, indem Sie mit einem asynchronen Aufruf des Webdiensts. Sie können <xref:System.Web.UI.RoleServiceManager> angeben des Pfads einer alternativen Implementierung der Rolle "Webdienst anstelle des integrierten Webdiensts".  
  
 Um den Rollendienst in Ihrer Anwendung verwenden zu können, müssen Sie es in der Konfigurationsdatei aktivieren, und deklarieren Sie sie auf der Seite. Wenn Sie die integrierte Rolle Webdienst verwenden, müssen Sie es aktivieren, aber Sie müssen nicht explizit deklarieren, die Rolle auf der Seite-Dienst-Manager.  
  
 Um einen Dienst für die benutzerdefinierte Rolle erstellen, müssen Sie einen Webdienst, der über zwei Methoden implementieren: `GetRolesForCurrentUser` und `IsCurrentUserInRole`. Diese Methoden müssen die gleiche Signatur wie die entsprechenden Methoden für die integrierte Rolle Webdienst haben.  
  
 Das folgende Beispiel zeigt die grundlegende Klasse-Struktur, die in einer benutzerdefinierten Rolle Web Service-Klasse implementiert werden muss.  
  
  
  
 Um eine benutzerdefinierte Rolle Webdienst zu verwenden, können Sie den Dienst deklarativ im Markup hinzufügen, indem Sie platzieren einen `RoleService` Element innerhalb der <xref:System.Web.UI.ScriptManager> zu steuern, wie im folgenden Beispiel gezeigt.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 Sie können auch programmgesteuert festlegen. die <xref:System.Web.UI.RoleServiceManager.Path%2A> Eigenschaft, die eine benutzerdefinierte Rolle Webdienst verwendet.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.RoleServiceManager" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadRoles : bool with get, set" Usage="System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Liste der Rollen für den derzeit angemeldeten Benutzer abgerufen werden soll, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn die Liste von Rollen abgerufen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> -Eigenschaftensatz auf `true`, die Liste der Rollen wird abgerufen, indem die <xref:System.Web.UI.RoleServiceManager> Klasse, indem die <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType> Methode. Die Liste wird dann in Markup der Seite serialisiert.  
  
> [!NOTE]
>  Wenn <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> ist `true`, aller Rollen, die der aktuelle authentifizierte Benutzer gehört, die an den Browser gesendet werden. Da Benutzer möglicherweise die Rolleninformationen sehen können, kann dies ein Sicherheitsproblem sein.  
  
 Die <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> Eigenschaft kann angegeben werden, der <xref:System.Web.UI.ScriptManager> Steuerelement oder einem zugeordneten <xref:System.Web.UI.ScriptManagerProxy> Steuerelement. Wenn <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> nastaven NA hodnotu `true` für eine Proxyinstanz, die Liste der Rollen abgerufen und zur Seite hinzugefügt. Wenn <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> ist `false`, die Rollen werden nicht im Markup Seite hinzugefügt. In diesem Fall können Sie die Methode zum Speichern von Informationen im Arbeitsspeicher im Browser aus.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad des Rollendiensts ab oder legt diesen fest.</summary>
        <value>Der Pfad des Webdiensts für benutzerdefinierte Rollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.RoleServiceManager.Path%2A> Eigenschaft nicht festgelegt ist, ist des Rückgabewerts <xref:System.String.Empty?displayProperty=nameWithType>. In diesem Fall ASP.NET verwendet die integrierte Authentifizierung Webdienst, der die folgenden internen Standardpfad entspricht: ~ / RolesService.svc. Das gleiche Verhalten tritt auf, wenn Sie festlegen, <xref:System.Web.UI.RoleServiceManager.Path%2A> auf eine leere Zeichenfolge oder `null`.  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> kann angegeben werden, der <xref:System.Web.UI.ScriptManager> Steuerelement oder einem zugeordneten <xref:System.Web.UI.ScriptManagerProxy> Steuerelement. Wenn <xref:System.Web.UI.RoleServiceManager.Path%2A> festgelegt ist, auf die <xref:System.Web.UI.ScriptManagerProxy> Ebene, die folgenden Bedingungen erfüllt sind:  
  
-   Wenn mehrere Proxyobjekte vorhanden, in der Steuerelementhierarchie sind <xref:System.Web.UI.RoleServiceManager.Path%2A> muss nicht für jede Proxyinstanz festgelegt werden.  
  
-   Wenn <xref:System.Web.UI.RoleServiceManager.Path%2A> explizit für ein Proxyobjekt festlegen, der Wert muss identisch sein, für alle anderen Proxy-Objekten, die für diese Eigenschaft festgelegt ist. Wenn Sie unterschiedliche Pfade für unterschiedliche Proxyobjekte in der Hierarchie der Steuerelemente festlegen einer <xref:System.ArgumentException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In der Steuerelementhierarchie wurden mehrere eindeutige Pfade festgelegt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>