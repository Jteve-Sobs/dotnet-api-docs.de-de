<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ca159e5a341c1b346d2197e61bb430712b170c5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78758949" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registriert eine ECMAScript-Datei (JavaScript) für die Verwendung auf einer ASP.NET-Webseite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine JavaScript-Datei auf eine ASP.NET-Webseite einschließen, indem Sie Sie über ein <xref:System.Web.UI.ScriptReference> Objekt registrieren. Sie können eine Skriptdatei registrieren, die sich als JS-Datei (eine statische Skriptdatei) auf der-Website befindet. Sie können auch eine Skriptdatei registrieren, die als Ressource in einer Assembly eingebettet ist. Nachdem Sie die Skriptdatei registriert haben, können Sie Ihre Funktionen in Client Skripts auf der Webseite verwenden.  
  
 Um eine statische Skriptdatei zu registrieren, legen Sie die <xref:System.Web.UI.ScriptReferenceBase.Path%2A>-Eigenschaft des <xref:System.Web.UI.ScriptReference>-Objekts auf den relativen Speicherort der Datei fest.  
  
 Um eine Skriptdatei zu registrieren, die als Ressource in einer Assembly eingebettet ist, legen Sie die <xref:System.Web.UI.ScriptReference.Assembly%2A>-Eigenschaft auf den Namen der Assembly fest, die die Datei enthält. Legen Sie dann die <xref:System.Web.UI.ScriptReference.Name%2A>-Eigenschaft auf den Namen der JS-Datei fest, die in die Assembly eingebettet ist. In diesem Fall muss die Skriptdatei eingebettet und nicht verknüpft sein.  
  
 Legen Sie die <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>-Eigenschaft fest, um anzugeben, ob die Debug-oder Releaseversion des Skripts verwendet werden soll.  
  
 Der <xref:System.Web.UI.ScriptMode.Auto> Wert führt zu unterschiedlichen Ergebnissen, abhängig davon, ob er auf eine eigenständige Skriptdatei oder auf eine Skriptdatei verweist, die als Ressource in einer Assembly eingebettet ist. Eine eigenständige Skriptdatei wird mit der <xref:System.Web.UI.ScriptReferenceBase.Path%2A>-Eigenschaft definiert. Auf einen Assemblyverweis muss über die Eigenschaften <xref:System.Web.UI.ScriptReference.Name%2A> und <xref:System.Web.UI.ScriptReference.Assembly%2A> zugegriffen werden. Die Ergebnisse für den <xref:System.Web.UI.ScriptMode.Auto> Wert lauten wie folgt:  
  
-   Wenn Sie auf eine eigenständige Skriptdatei angewendet wird, in der die <xref:System.Web.UI.ScriptReferenceBase.Path%2A>-Eigenschaft angegeben ist, entspricht der <xref:System.Web.UI.ScriptMode.Auto> Wert <xref:System.Web.UI.ScriptMode.Release>.  
  
-   Wenn es auf einen Skript Verweis in einer Assembly angewendet wird, entspricht <xref:System.Web.UI.ScriptMode.Auto> <xref:System.Web.UI.ScriptMode.Inherit>. Wenn nur <xref:System.Web.UI.ScriptReference.Name%2A> angegeben ist, wird es verwendet, um auf das Skript zu verweisen. Wenn <xref:System.Web.UI.ScriptReference.Name%2A> und die <xref:System.Web.UI.ScriptReferenceBase.Path%2A>-Eigenschaft angegeben sind, wird die Eigenschaft <xref:System.Web.UI.ScriptReferenceBase.Path%2A> anstelle von <xref:System.Web.UI.ScriptReference.Name%2A>verwendet, aber der <xref:System.Web.UI.ScriptMode.Auto> Wert entspricht weiterhin <xref:System.Web.UI.ScriptMode.Inherit>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie auf ein benutzerdefiniertes Steuerelement und eine JavaScript-Datei verwiesen wird, die in der steuerungsassembly eingebettet ist. Es wird davon ausgegangen, dass sich die Assembly im Ordner "bin" der Website befindet. Das benutzerdefinierte Steuerelement animiert <xref:System.Web.UI.UpdatePanel>-Steuerelemente. Die JavaScript-Datei wird als eingebettete Ressource mit dem Namen samplecontrol. UpdatePanelAnimation. js kompiliert. Sie registrieren die eingebettete JavaScript-Datei mithilfe der Eigenschaften <xref:System.Web.UI.ScriptReference.Assembly%2A> und <xref:System.Web.UI.ScriptReference.Name%2A>.  
  
 Um dieses Beispiel zu verwenden, kompilieren Sie die JavaScript-Datei, die im Beispiel dargestellt ist, als eingebettete Ressource mit dem benutzerdefinierten-Steuerelement. Fügen Sie die resultierende Assembly in den Ordner "bin" der Website ein. Ein Beispiel zum Einbetten einer JavaScript-Datei in eine Assembly finden Sie unter Exemplarische Vorgehensweise [: Einbetten einer JavaScript-Datei als Ressource in einer Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Das folgende Beispiel zeigt eine Seite, die das benutzerdefinierte Steuerelement verwendet.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Das folgende Beispiel zeigt die Definition der benutzerdefinierten Steuerelement Klasse.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Das folgende Beispiel zeigt die unterstützende JavaScript-Datei.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Das folgende Beispiel zeigt Code, den Sie der AssemblyInfo-Datei des Projekts hinzufügen müssen, das das benutzerdefinierte Steuerelement und die JavaScript-Datei enthält.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.ScriptReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.ScriptReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad der Clientskriptdatei relativ zur Webseite.</param>
        <summary>Initialisiert unter Verwendung eines angegebenen Pfads eine neue Instanz der <see cref="T:System.Web.UI.ScriptReference" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Skriptdatei, die in der Assembly eingebettet ist.</param>
        <param name="assembly">Der Name der Assembly, in der die Clientskriptdatei als Ressource eingebettet ist.</param>
        <summary>Initialisiert unter Verwendung eines angegebenen Namens und einer angegebenen Assembly eine neue Instanz der <see cref="T:System.Web.UI.ScriptReference" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Assembly ab, die die Clientskriptdatei als eingebettete Ressource enthält, oder legt diesen fest.</summary>
        <value>Der vollqualifizierte oder teilweise qualifizierte Name der Assembly, die eine Clientskriptdatei als eingebettete Ressource enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie legen die <xref:System.Web.UI.ScriptReference.Assembly%2A>-Eigenschaft fest, wenn Sie auf eine Client Skriptdatei verweisen, die als eingebettete Ressource in einer Assembly enthalten ist. Legen Sie <xref:System.Web.UI.ScriptReference.Assembly%2A> auf den voll qualifizierten oder teilweise qualifizierten Assemblynamen fest. Ein voll qualifizierter Assemblyname enthält einen Namen, eine Kultur, einen öffentlichen Schlüssel und eine Versionsnummer. Ein teilweise qualifizierter Assemblyname enthält nur einen Namen.  
  
 Wenn Sie für <xref:System.Web.UI.ScriptReference.Assembly%2A>einen Wert angeben, müssen Sie auch den Namen der eingebetteten Ressource in der <xref:System.Web.UI.ScriptReference.Name%2A>-Eigenschaft angeben. Andernfalls wird eine <xref:System.InvalidOperationException> ausgelöst.  
  
 Die Assembly, auf die verwiesen wird, muss sich entweder im Ordner "bin" der Website oder im globalen Assemblycache befinden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie auf ein benutzerdefiniertes Steuerelement und eine JavaScript-Datei verwiesen wird, die in der steuerungsassembly eingebettet ist. Es wird davon ausgegangen, dass sich die Assembly im Ordner "bin" der Website befindet. Das benutzerdefinierte Steuerelement animiert <xref:System.Web.UI.UpdatePanel>-Steuerelemente. Die JavaScript-Datei wird als eingebettete Ressource mit dem Namen samplecontrol. UpdatePanelAnimation. js kompiliert. Sie registrieren die eingebettete JavaScript-Datei mithilfe der Eigenschaften <xref:System.Web.UI.ScriptReference.Assembly%2A> und <xref:System.Web.UI.ScriptReference.Name%2A>.  
  
 Um dieses Beispiel zu verwenden, kompilieren Sie die JavaScript-Datei, die im Beispiel dargestellt ist, als eingebettete Ressource mit dem benutzerdefinierten-Steuerelement. Fügen Sie die resultierende Assembly in den Ordner "bin" der Website ein. Ein Beispiel zum Einbetten einer JavaScript-Datei in eine Assembly finden Sie unter Exemplarische Vorgehensweise [: Einbetten einer JavaScript-Datei als Ressource in einer Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Das folgende Beispiel zeigt eine Seite, die das benutzerdefinierte Steuerelement verwendet.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Das folgende Beispiel zeigt die Definition der benutzerdefinierten Steuerelement Klasse.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Das folgende Beispiel zeigt die unterstützende JavaScript-Datei.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Das folgende Beispiel zeigt Code, den Sie der AssemblyInfo-Datei des Projekts hinzufügen müssen, das das benutzerdefinierte Steuerelement und die JavaScript-Datei enthält.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUrl (scriptManager As ScriptManager, zip As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Das <see langword="ScriptManager" />-Steuerelement auf der Zielwebseite</param>
        <param name="zip"><see langword="true" />, wenn das Skript komprimiert werden soll, andernfalls <see langword="false" />.</param>
        <summary>Ruft die URL zurück, die als Wert für das <see langword="src" />-Attribut des <see langword="script" />-Elements gerendert wird.</summary>
        <returns>Eine Zeichenfolge, die die URL enthält, die als Wert des <see langword="src" />-Attributs des <see langword="script" />-Elements gerendert wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Registrieren einer Clientskriptdatei von einer Ressource einen Wert ab, der angibt, ob in der URL die <see cref="P:System.Web.UI.ScriptManager.ScriptPath" />-Eigenschaft enthalten ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Registrieren des Clientskripts der Skriptpfad nicht verwendet wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie legen <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> auf `true` fest, wenn Sie eine Client Skriptdatei registrieren möchten, ohne den <xref:System.Web.UI.ScriptManager.ScriptPath%2A> Wert in die URL der Skriptdatei einzubeziehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsAjaxFrameworkScript (scriptManager As ScriptManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Ein <see cref="T:System.Web.UI.ScriptManager" /> -Objekt.</param>
        <summary>Bestimmt, ob der Skriptverweis ein AJAX-Skript ist.</summary>
        <returns><see langword="true" />, wenn der Skriptverweis ein ASP.NET AJAX-Skript ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob das zusammengesetzte Skript einen Verweis auf ein ASP.NET-AJAX-Frameworkskript enthält</summary>
        <returns><see langword="true" />, wenn das zusammengesetzte Skript einen Verweis auf ein ASP.NET-AJAX-Frameworkskript enthält, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der eingebetteten Ressource mit der Clientskriptdatei ab oder legt diesen fest.</summary>
        <value>Der Name der Clientskriptdatei, die in einer Assembly als Ressource eingebettet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie legen die <xref:System.Web.UI.ScriptReference.Name%2A>-Eigenschaft so fest, dass Sie auf eine Client Skriptdatei verweist, die als Ressource in einer Assembly eingebettet ist.  
  
 Wenn Sie Werte für die Eigenschaften <xref:System.Web.UI.ScriptReferenceBase.Path%2A> und <xref:System.Web.UI.ScriptReference.Name%2A> im gleichen Skript Verweis definieren, hat die Eigenschaft <xref:System.Web.UI.ScriptReferenceBase.Path%2A> Vorrang.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie auf ein benutzerdefiniertes Steuerelement und eine JavaScript-Datei verwiesen wird, die in der steuerungsassembly eingebettet ist. Es wird davon ausgegangen, dass sich die Assembly im Ordner "bin" der Website befindet. Das benutzerdefinierte Steuerelement animiert <xref:System.Web.UI.UpdatePanel>-Steuerelemente. Die JavaScript-Datei wird als eingebettete Ressource mit dem Namen samplecontrol. UpdatePanelAnimation. js kompiliert. Sie registrieren die eingebettete JavaScript-Datei mithilfe der Eigenschaften <xref:System.Web.UI.ScriptReference.Assembly%2A> und <xref:System.Web.UI.ScriptReference.Name%2A>.  
  
 Um dieses Beispiel zu verwenden, kompilieren Sie die JavaScript-Datei, die im Beispiel dargestellt ist, als eingebettete Ressource mit dem benutzerdefinierten-Steuerelement. Fügen Sie die resultierende Assembly in den Ordner "bin" der Website ein. Ein Beispiel zum Einbetten einer JavaScript-Datei in eine Assembly finden Sie unter Exemplarische Vorgehensweise [: Einbetten einer JavaScript-Datei als Ressource in einer Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Das folgende Beispiel zeigt eine Seite, die das benutzerdefinierte Steuerelement verwendet.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Das folgende Beispiel zeigt die Definition der benutzerdefinierten Steuerelement Klasse.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Das folgende Beispiel zeigt die unterstützende JavaScript-Datei.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Das folgende Beispiel zeigt Code, den Sie der AssemblyInfo-Datei des Projekts hinzufügen müssen, das das benutzerdefinierte Steuerelement und die JavaScript-Datei enthält.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die den Wert der <see cref="P:System.Web.UI.ScriptReference.Name" />-Eigenschaft, der <see cref="P:System.Web.UI.ScriptReferenceBase.Path" />-Eigenschaft oder den Typnamen darstellt.</summary>
        <returns>Der Wert der <see cref="P:System.Web.UI.ScriptReference.Name" />-Eigenschaft (falls definiert) oder der Wert der <see cref="P:System.Web.UI.ScriptReferenceBase.Path" />-Eigenschaft (falls definiert), andernfalls der Wert der <see cref="P:System.Reflection.MemberInfo.Name" />-Eigenschaft.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
