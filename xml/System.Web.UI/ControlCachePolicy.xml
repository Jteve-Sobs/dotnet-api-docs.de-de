<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea8d2371f50f6473b6c1b91043495834215c8ab3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51916059" /></Metadata><TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type ControlCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht programmgesteuerten Zugriff auf die Ausgabecacheeinstellungen der Ausgabe für ein ASP.NET-Benutzersteuerelement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ControlCachePolicy> Klasse wird von Entwicklern programmatische von Szenarios verwendet, um Einstellungen für Benutzersteuerelemente (ASCX-Dateien) für die ausgabezwischenspeicherung anzugeben. ASP.NET bettet Benutzersteuerelemente in einer <xref:System.Web.UI.BasePartialCachingControl> Instanz. Die <xref:System.Web.UI.BasePartialCachingControl> Klasse stellt ein Steuerelement, das eine Ausgabe hat Zwischenspeichern aktiviert worden sein. Beim Zugriff auf die <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType> Eigenschaft eine <xref:System.Web.UI.PartialCachingControl> -Steuerelement, erhalten Sie immer einen gültigen <xref:System.Web.UI.ControlCachePolicy> Objekt. Allerdings, wenn Sie Zugriff auf die <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType> Eigenschaft eine <xref:System.Web.UI.UserControl> -Steuerelement, erhalten Sie einen gültigen <xref:System.Web.UI.ControlCachePolicy> -Objekt nur, wenn das Benutzersteuerelement von bereits umschlossen wird eine <xref:System.Web.UI.BasePartialCachingControl> Steuerelement. Wenn es nicht umschlossen ist, die <xref:System.Web.UI.ControlCachePolicy> von der Eigenschaft zurückgegebene Objekt löst Ausnahmen aus, wenn Sie versuchen, die sie bearbeiten, da sie nicht über eine zugeordnete verfügt <xref:System.Web.UI.BasePartialCachingControl>. Um zu bestimmen, ob eine <xref:System.Web.UI.UserControl> Instanz unterstützt das Zwischenspeichern von ohne Generierung von Ausnahmen, überprüfen Sie die <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> Eigenschaft.  
  
 Mithilfe der <xref:System.Web.UI.ControlCachePolicy> Klasse ist eine von mehreren Möglichkeiten, Sie können die Zwischenspeicherung der Ausgabe aktivieren. Die folgende Liste beschreibt die Methoden, die Sie zum Aktivieren der ausgabezwischenspeicherung verwenden können:  
  
-   Verwenden Sie die Direktive zum Aktivieren der ausgabezwischenspeicherung in deklarativen Szenarios.  
  
-   Verwenden der <xref:System.Web.UI.PartialCachingAttribute> Attribut zum Aktivieren der Zwischenspeicherung für ein Benutzersteuerelement in einer CodeBehind-Datei.  
  
-   Verwenden der <xref:System.Web.UI.ControlCachePolicy> Klasse, um die cacheeinstellungen in programmgesteuerte Szenarien angegeben, in dem Sie arbeiten mit <xref:System.Web.UI.BasePartialCachingControl> Instanzen, die mit dynamisch geladen und wurden cacheaktivierte mithilfe einer der vorherigen Methoden der <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType> Methode. Ein <xref:System.Web.UI.ControlCachePolicy> Instanz kann bearbeitet werden nur zwischen den `Init` und `PreRender` Phasen des Lebenszyklus des Steuerelements. Wenn Sie ändern eine <xref:System.Web.UI.ControlCachePolicy> Objekts, nachdem die `PreRender` Phase ASP.NET löst eine Ausnahme, da Änderungen vorgenommen, nachdem das Steuerelement gerendert wird, kann nicht keinen Einfluss auf cacheeinstellungen (ein Steuerelements zwischengespeichert wird, während die `Render` Phase). Zum Schluss eine Instanz eines Benutzersteuerelements (und somit auch seiner <xref:System.Web.UI.ControlCachePolicy> Objekt) ist nur für die programmgesteuerte Bearbeitung verfügbar, wenn es tatsächlich dargestellt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Steuerelement dynamisch geladen und programmgesteuert zur Laufzeit geändert werden kann. Die <xref:System.Web.UI.PartialCachingAttribute> Attribut angewendet wird, auf ein Benutzersteuerelement mit dem Namen `SimpleControl`, was bedeutet, dass das Benutzersteuerelement von umschlossen ist eine <xref:System.Web.UI.PartialCachingControl> Steuerelement zur Laufzeit. Die `SimpleControl` Einstellungen für das Zwischenspeichern des Objekts programmgesteuert möglich über die zugehörigen bearbeitet <xref:System.Web.UI.ControlCachePolicy> -Objekt, das über einen Verweis auf verfügbar ist die <xref:System.Web.UI.PartialCachingControl> -Steuerelement, das es dient als Wrapper für. In diesem Beispiel die <xref:System.Web.UI.ControlCachePolicy.Duration%2A> -Eigenschaft geprüft, während der seiteninitialisierung und geänderte mithilfe der <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> und <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> Methoden auf, wenn bestimmte Bedingungen erfüllt sind.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 Das folgende Codebeispiel veranschaulicht die Verwendung der `SimpleControl` Benutzersteuerelement von einer Web Forms-Seite. In diesem Beispiel wird erfolgreich ausgeführt wird, sicher, dass die Benutzersteuerelement-Datei (.ascx), Code-Behind-Datei (cs- oder VB) und Web Forms-Seite, die das Benutzersteuerelement (ASPX) hostet, im gleichen Verzeichnis sind.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
    <related type="Article" href="https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e">Zwischenspeichern von Teilen einer ASP.NET-Seite</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cached : bool with get, set" Usage="System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert fest ab, der angibt, ob das Zwischenspeichern von Fragmenten für das Benutzersteuerelement aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ausgabe des Benutzersteuerelements zwischengespeichert wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.  
  
\- oder – 
Die <see cref="P:System.Web.UI.ControlCachePolicy.Cached" />-Eigenschaft wird außerhalb der Initialisierungs- und Darstellungsphasen des Steuerelements festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz der <see cref="T:System.Web.Caching.CacheDependency" />-Klasse ab, die der zwischengespeicherten Ausgabe des Benutzersteuerelements zugeordnet ist, oder legt diese fest.</summary>
        <value>Die dem Steuerelement zugeordnete <see cref="T:System.Web.Caching.CacheDependency" />. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> Eigenschaft der <xref:System.Web.UI.BasePartialCachingControl> -Steuerelement, das das Benutzersteuerelement umschließt. Wenn die <xref:System.Web.Caching.CacheDependency> ungültig gemacht, die das Benutzersteuerelement aus dem Cache entfernt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.  
  
\- oder – 
Die <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" />-Eigenschaft wird außerhalb der Initialisierungs- und Darstellungsphasen des Steuerelements festgelegt.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan with get, set" Usage="System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne ab, die zwischengespeicherte Elemente im Ausgabecache verbleiben, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.TimeSpan" />, die die Zeitspanne darstellt, für die ein Benutzersteuerelement im Ausgabecache verbleibt. Der Standardwert ist <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine absolute Ablaufrichtlinie festgelegt wird, wobei die <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> -Methode, die <xref:System.Web.UI.ControlCachePolicy.Duration%2A> Eigenschaft gibt die verbleibende Zeit bis zur Ablaufzeit für den Cache-Eintrag zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Steuerelement dynamisch geladen und programmgesteuert zur Laufzeit geändert werden kann. Die <xref:System.Web.UI.PartialCachingAttribute> Attribut angewendet wird, auf ein Benutzersteuerelement mit dem Namen `SimpleControl`, was bedeutet, dass von umschlossen ist eine <xref:System.Web.UI.PartialCachingControl> Steuerelement zur Laufzeit. Die `SimpleControl` Einstellungen für das Zwischenspeichern des Objekts programmgesteuert möglich über die zugehörigen bearbeitet <xref:System.Web.UI.ControlCachePolicy> -Objekt, das über einen Verweis auf verfügbar ist die <xref:System.Web.UI.PartialCachingControl> -Steuerelement, das es dient als Wrapper für. In diesem Beispiel die <xref:System.Web.UI.ControlCachePolicy.Duration%2A> -Eigenschaft geprüft, während der seiteninitialisierung und Ablaufen des Caches geändert wird, wenn bestimmte Bedingungen erfüllt sind. In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.ControlCachePolicy> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.  
  
\- oder – 
Die <see cref="P:System.Web.UI.ControlCachePolicy.Duration" />-Eigenschaft wird außerhalb der Initialisierungs- und Darstellungsphasen des Steuerelements festgelegt.</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Ausgabecacheanbieters ab, der einer Steuerelementinstanz zugeordnet ist, oder legt diesen fest.</summary>
        <value>Der Name des Anbieters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> Eigenschaft können Sie den aktuellen Ausgabecache-Anbieter an, die mit einem Steuerelement zugeordnet ist die <xref:System.Web.UI.ControlCachePolicy> Instanz. Diese Eigenschaft kann nur vor festgelegt, so dass die <xref:System.Web.UI.Control.PreRender> Ereignis tritt auf, im Lebenszyklus Steuerelements.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der Anbietername wurde nicht gefunden.</exception>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, die <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" />-Eigenschaft während oder nach dem <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="controlCachePolicy.SetExpires expirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">Ein <see cref="T:System.DateTime" />, nach dem der zwischengespeicherte Eintrag abläuft.</param>
        <summary>Weist das <see cref="T:System.Web.UI.BasePartialCachingControl" />-Steuerelement an, das das Benutzersteuerelement umschließt, den Cacheeintrag zum angegebenen Zeitpunkt (Datum und Uhrzeit) ablaufen zu lassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> und <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> Methoden (übergeben `true`) angewiesen, die <xref:System.Web.UI.BasePartialCachingControl> -Steuerelement, das das Benutzersteuerelement zur Verwendung von einer gleitenden Ablaufzeit Cacherichtlinie, anstatt eine absolute Ablaufrichtlinie umschließt. Verwenden der <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> Methode und die <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> Methode (übergeben von `false`) an eine absolute Ablaufrichtlinie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Steuerelement dynamisch geladen und programmgesteuert zur Laufzeit geändert werden kann. Die <xref:System.Web.UI.PartialCachingAttribute> Attribut angewendet wird, auf ein Benutzersteuerelement mit dem Namen `SimpleControl`, was bedeutet, dass das Benutzersteuerelement von umschlossen ist eine <xref:System.Web.UI.PartialCachingControl> Steuerelement zur Laufzeit. Die `SimpleControl` Einstellungen für das Zwischenspeichern des Objekts programmgesteuert möglich über die zugehörigen bearbeitet <xref:System.Web.UI.ControlCachePolicy> -Objekt, das über einen Verweis auf verfügbar ist die <xref:System.Web.UI.PartialCachingControl> -Steuerelement, das es dient als Wrapper für. In diesem Beispiel die <xref:System.Web.UI.ControlCachePolicy.Duration%2A> -Eigenschaft geprüft, während der seiteninitialisierung und geänderte mithilfe der <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> und <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> Methoden auf, wenn bestimmte Bedingungen erfüllt sind. In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.ControlCachePolicy> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="controlCachePolicy.SetSlidingExpiration useSlidingExpiration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration"><see langword="true" />, um anstelle absoluter Ablaufzeit gleitende Cacheablaufzeit zu verwenden, andernfalls <see langword="false" />.</param>
        <summary>Weist das <see cref="T:System.Web.UI.BasePartialCachingControl" />-Steuerelement an, das das Benutzersteuerelement umschließt, für den Cacheeintrag des Benutzersteuerelements gleitende oder absolute Ablaufzeit festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> und <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> Methoden (übergeben `true`) angewiesen, die <xref:System.Web.UI.BasePartialCachingControl> -Steuerelement, das das Benutzersteuerelement zur Verwendung von einer gleitenden Ablaufzeit Cacherichtlinie, anstatt eine absolute Ablaufrichtlinie umschließt. Verwenden der <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> Methode und die <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> Methode (übergeben von `false`) an eine absolute Ablaufrichtlinie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Steuerelement dynamisch geladen und programmgesteuert zur Laufzeit geändert werden kann. Ein Benutzersteuerelement mit dem Namen `SimpleControl` ergänzt wird, mit einer <xref:System.Web.UI.PartialCachingAttribute> Attribut, was bedeutet, dass von umschlossen ist eine <xref:System.Web.UI.PartialCachingControl> Steuerelement zur Laufzeit. Die `SimpleControl` Einstellungen für das Zwischenspeichern des Objekts programmgesteuert möglich über die zugehörigen bearbeitet <xref:System.Web.UI.ControlCachePolicy> -Objekt, das über einen Verweis auf verfügbar ist die <xref:System.Web.UI.PartialCachingControl> -Steuerelement, das es dient als Wrapper für. In diesem Beispiel werden Einstellungen für das Zwischenspeichern während der seiteninitialisierung untersucht und geändert werden, wenn bestimmte Bedingungen erfüllt sind. In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.ControlCachePolicy> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="controlCachePolicy.SetVaryByCustom varyByCustom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">Die Liste der benutzerdefinierten Zeichenfolgen.</param>
        <summary>Legt eine Liste der benutzerdefinierten Zeichenfolgen fest, die vom Ausgabecache zum Variieren des Benutzersteuerelements verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie "Browser" als übergeben die `varyByCustom` -Parameter des Benutzersteuerelements variiert nach Browsertyp und Nummer der Hauptversion. Wenn eine andere benutzerdefinierte Zeichenfolge eingegeben wird, müssen Sie Sie überschreiben die <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> -Methode in der Datei Global.asax der Anwendung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCaching : bool" Usage="System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzersteuerelement Zwischenspeicherung unterstützt.</summary>
        <value><see langword="true" />, wenn das Benutzersteuerelement Zwischenspeicherung unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Benutzersteuerelement unterstützt das Zwischenspeichern, wenn er zugeordnet ist eine <xref:System.Web.UI.BasePartialCachingControl> -Instanz, die signalisiert, dass eine Richtlinie mit der ASP.NET-Parser analysiert wurde, oder das Benutzersteuerelement mit versehen wurde eine <xref:System.Web.UI.PartialCachingAttribute> Attribut.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste mit Steuerelementbezeichnern ab, anhand derer die zwischengespeicherte Ausgabe variiert werden kann, oder legt diese fest.</summary>
        <value>Eine durch Semikolon getrennte Liste von Zeichenfolgen, anhand derer der Ausgabecache eines Benutzersteuerelements variiert werden kann. Diese Zeichenfolgen stellen die <see cref="P:System.Web.UI.Control.ID" />-Eigenschaftswerte der ASP.NET-Serversteuerelemente dar, die im Benutzersteuerelement deklariert wurden.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.  
  
\- oder – 
Die <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" />-Eigenschaft wird außerhalb der Initialisierungs- und Darstellungsphasen des Steuerelements festgelegt.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste mit <see langword="GET" />-Parameternamen oder <see langword="POST" />-Parameternamen ab, anhand derer die zwischengespeicherte Ausgabe variiert werden kann, oder legt diese fest.</summary>
        <value>Eine durch Semikolon getrennte Liste von Zeichenfolgen, die zum Ändern des Ausgabecaches verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung entsprechen diese Zeichenfolgen an, mit der GET-Methode gesendete Wert einer Abfragezeichenfolge oder einem Parameter mit der POST-Methode gesendet. Wenn die <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> -Eigenschaftensatz auf mehrere Parameter, die für jeden Parameter angegeben, enthält der Ausgabecache eine andere Version des angeforderten Dokuments. Mögliche Werte sind "none", "*" sowie alle gültigen Abfragezeichenfolgen oder POST-Parameternamen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Benutzersteuerelement ist keinem <see cref="T:System.Web.UI.BasePartialCachingControl" /> zugeordnet und kann nicht zwischengespeichert werden.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>