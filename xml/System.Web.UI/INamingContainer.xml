<Type Name="INamingContainer" FullName="System.Web.UI.INamingContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ed95f69149ec12f11774d7db98b4f32f64826ab" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53231143" /></Metadata><TypeSignature Language="C#" Value="public interface INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.INamingContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class INamingContainer" />
  <TypeSignature Language="F#" Value="type INamingContainer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Gibt ein Containersteuerelement an, das einen neuen ID-Namespace innerhalb der Steuerelementhierarchie eines <see cref="T:System.Web.UI.Page" />-Objekts erstellt. Hierbei handelt es sich nur um eine Markierungsschnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Steuerelement, das diese Schnittstelle implementiert wird, erstellt einen neuen Namespace, in dem alle untergeordneten Steuerelement-ID-Attribute garantiert innerhalb einer gesamten Anwendung eindeutig sein. Der Marker, die von dieser Schnittstelle bereitgestellt ermöglicht die eindeutige Benennung der dynamisch generierte Steuerelement Serverinstanzen innerhalb der Webserver-Steuerelemente, die die Datenbindung zu unterstützen. Diese Steuerelemente umfassen die <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.ChangePassword>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.Menu>, <xref:System.Web.UI.WebControls.SiteMapNodeItem>, und <xref:System.Web.UI.WebControls.RadioButtonList> Steuerelemente.  
  
 Wenn Sie die Steuerelemente mit Vorlagen entwickeln, sollten Sie diese Schnittstelle, um Namenskonflikte auf einer Seite zu vermeiden implementieren. Weitere Informationen finden Sie unter [Übersicht über ASP.NET-Steuerelement-Designer](https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, ein benutzerdefiniertes Serversteuerelement mit Vorlagen, die implementiert die <xref:System.Web.UI.INamingContainer> Schnittstelle. Wenn dieses benutzerdefinierte Steuerelement in einer ASPX-Datei verwendet wird, stellt es einen eindeutigen Namespace für alle Steuerelemente bereit, die sie enthält.  
  
 [!code-csharp[TemplatedDataBoundControl -- RepeaterItem to compile with#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl -- RepeaterItem to compile with/CS/repeateritem.cs#1)]
 [!code-vb[TemplatedDataBoundControl -- RepeaterItem to compile with#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl -- RepeaterItem to compile with/VB/repeateritem.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">Übersicht über ASP.NET-Steuerelement-Designer</related>
  </Docs>
  <Members />
</Type>