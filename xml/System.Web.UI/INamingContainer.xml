<Type Name="INamingContainer" FullName="System.Web.UI.INamingContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ecc5e224047c82a576a28a7a8661ea2e41b74eea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36376994" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.INamingContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class INamingContainer" />
  <TypeSignature Language="F#" Value="type INamingContainer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Gibt ein Containersteuerelement an, das einen neuen ID-Namespace innerhalb der Steuerelementhierarchie eines <see cref="T:System.Web.UI.Page" />-Objekts erstellt. Hierbei handelt es sich nur um eine Markierungsschnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Steuerelement, das diese Schnittstelle implementiert, erstellt einen neuen Namespace, in dem alle untergeordneten Steuerelement-ID-Attribute garantiert innerhalb einer vollständigen Anwendung eindeutig sein. Die Markierung, die von dieser Schnittstelle bereitgestellt ermöglicht eindeutig benennen der dynamisch generierte Steuerelement Serverinstanzen innerhalb der Webserversteuerelemente, die die Datenbindung zu unterstützen. Dazu gehören die <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.ChangePassword>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.Menu>, <xref:System.Web.UI.WebControls.SiteMapNodeItem>, und <xref:System.Web.UI.WebControls.RadioButtonList> Steuerelemente.  
  
 Wenn Sie aus einer Vorlage gebildete Steuerelemente entwickeln, sollten Sie diese Schnittstelle, um Namenskonflikte auf einer Seite zu vermeiden implementieren. Weitere Informationen finden Sie unter [Übersicht über ASP.NET Steuerelement-Designer](http://msdn.microsoft.com/library/1d5a99d7-0a72-403e-812e-2c1ab595c810).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, ein auf Vorlagen basierende benutzerdefinierte Serversteuerelement, implementiert die <xref:System.Web.UI.INamingContainer> Schnittstelle. Wenn dieses benutzerdefinierte Serversteuerelement in einer ASPX-Datei verwendet wird, stellt es einen eindeutigen Namespace für alle Steuerelemente bereit, die es enthält.  
  
 [!code-csharp[TemplatedDataBoundControl -- RepeaterItem to compile with#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl -- RepeaterItem to compile with/CS/repeateritem.cs#1)]
 [!code-vb[TemplatedDataBoundControl -- RepeaterItem to compile with#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl -- RepeaterItem to compile with/VB/repeateritem.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
  </Docs>
  <Members />
</Type>