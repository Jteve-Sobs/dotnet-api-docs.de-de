<Type Name="Control" FullName="System.Web.UI.Control">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="459678692f62f81a4967d99624b72239e1e6849b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.UI.IControlBuilderAccessor, class System.Web.UI.IControlDesignerAccessor, class System.Web.UI.IDataBindingsAccessor, class System.Web.UI.IExpressionsAccessor, class System.Web.UI.IParserAccessor, class System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Implements IComponent, IControlBuilderAccessor, IControlDesignerAccessor, IDataBindingsAccessor, IDisposable, IExpressionsAccessor, IParserAccessor, IUrlResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : IDisposable, System::ComponentModel::IComponent, System::Web::UI::IControlBuilderAccessor, System::Web::UI::IControlDesignerAccessor, System::Web::UI::IDataBindingsAccessor, System::Web::UI::IExpressionsAccessor, System::Web::UI::IParserAccessor, System::Web::UI::IUrlResolutionService" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IParserAccessor&#xA;    interface IUrlResolutionService&#xA;    interface IDataBindingsAccessor&#xA;    interface IControlBuilderAccessor&#xA;    interface IControlDesignerAccessor&#xA;    interface IExpressionsAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlBuilderAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlDesignerAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataBindingsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IExpressionsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUrlResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the properties, methods, and events that are shared by all ASP.NET server controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die primäre Klasse, der Sie beim Entwickeln von benutzerdefinierter ASP.NET-Serversteuerelementen ableiten. <xref:System.Web.UI.Control> Es muss keine spezifischen Features der Benutzeroberfläche (UI). Wenn Sie ein Steuerelement, die verfügt nicht über eine Benutzeroberfläche oder andere Steuerelemente, die ihre eigenen Benutzeroberfläche Rendern kombiniert erstellen, leiten Sie von <xref:System.Web.UI.Control>. Wenn Sie ein Steuerelement, die eine Benutzeroberfläche verfügt erstellen, leiten Sie von <xref:System.Web.UI.WebControls.WebControl> oder jedes Steuerelement, das der <xref:System.Web.UI.WebControls> Namespace, der einen geeigneten Anfangspunkt für das benutzerdefinierte Steuerelement zeigen.  
  
 Die <xref:System.Web.UI.Control> Klasse ist die Basisklasse für alle ASP.NET-Serversteuerelementen, einschließlich Seiten, benutzerdefinierte Steuerelemente und Benutzersteuerelemente. ASP.NET-Seiten sind Instanzen von der <xref:System.Web.UI.Page> -Klasse, die erbt die <xref:System.Web.UI.Control> -Klasse, und dass Anforderungen für Dateien mit einer ASPX-Erweiterung verarbeitet werden.  
  
 Die <xref:System.Web.UI.Control> Klasse direkt oder indirekt genutzt werden als Teil der Benutzeroberfläche für Ihre Web-Anwendung, und als solche geprüft werden soll, um Stellen Sie sicher, dass bewährte Methoden Schreiben von sicherem Code, und Sichern von Clientanwendungen eingehalten werden.  
  
 Allgemeine Informationen zu diesen Themen finden Sie unter [Overview of Web Application Security Threats](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), und [Key Security Concepts](~/docs/standard/security/key-security-concepts.md). Weitere Informationen finden Sie unter [Standardsteuerelemente schützen](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [wie: sichere Fehlermeldungen anzeigen](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [wie: schützen gegen Script Exploits in einer Web-Anwendung durch Anwenden von HTML Codierung in Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Einführung in die Validierungssteuerelemente](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein benutzerdefiniertes Steuerelement, das von abgeleitet ist die <xref:System.Web.UI.Control> Klasse. Die `InnerContent` -Klasse überschreibt die <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> -Methode, um festzustellen, ob die Klasse verfügt über alle untergeordneten Steuerelemente auf der Seite und bestimmt, ob das erste untergeordnete Element des Steuerelements ein literal-Steuerelement wird überprüft. Wenn beide Bedingungen erfüllt sind, schreibt die überschriebene Methode HTML-Zeichenfolge \<H2 > Ihrer Nachricht:, den Inhalt der literal-Steuerelement, und eine schließende \</H2 >-Tag in die Web Forms-Seite.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Classic Control Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control Example/CS/source.cs#1)]
 [!code-vb[Classic Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.TemplateControl" />
    <altmember cref="T:System.Web.UI.LiteralControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Control" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.ControlAdapter Adapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Adapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Adapter As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::ControlAdapter ^ Adapter { System::Web::UI::Adapters::ControlAdapter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapter : System.Web.UI.Adapters.ControlAdapter" Usage="System.Web.UI.Control.Adapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the browser-specific adapter for the control.</summary>
        <value>Ein <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> für dieses Steuerelement. Gibt zurück, wenn die Zielbrowser keinen Adapter erfordert, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Web Pages können über eine Breite Palette von Geräten und Browsern, die Informationen aus dem Internet anfordern können verwendet werden. Die <xref:System.Web.UI.Control.Adapter%2A> -Eigenschaft gibt die <xref:System.Web.UI.Adapters.ControlAdapter> -Objekt, das das Steuerelement auf das anfordernde Gerät oder im Browserfenster gerendert wird.  
  
 Weitere Informationen zu Adaptern finden Sie unter [architektonische Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="AddedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void AddedControl (System.Web.UI.Control control, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddedControl(class System.Web.UI.Control control, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddedControl(System::Web::UI::Control ^ control, int index);" />
      <MemberSignature Language="F#" Value="abstract member AddedControl : System.Web.UI.Control * int -&gt; unit&#xA;override this.AddedControl : System.Web.UI.Control * int -&gt; unit" Usage="control.AddedControl (control, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">The <see cref="T:System.Web.UI.Control" /> that has been added.</param>
        <param name="index">The index of the control in the <see cref="P:System.Web.UI.Control.Controls" /> collection.</param>
        <summary>Called after a child control is added to the <see cref="P:System.Web.UI.Control.Controls" /> collection of the <see cref="T:System.Web.UI.Control" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.AddedControl%2A> Methode wird aufgerufen, unmittelbar nachdem ein Steuerelement hinzugefügt wird die <xref:System.Web.UI.Control.Controls%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="control" /> is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected virtual void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member AddParsedSubObject : obj -&gt; unit&#xA;override this.AddParsedSubObject : obj -&gt; unit" Usage="control.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element.</param>
        <summary>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie sie außer Kraft setzen, fügt diese Methode automatisch <xref:System.Web.UI.LiteralControl> Objekte des Serversteuerelements <xref:System.Web.UI.ControlCollection> Objekt. Diese Auflistung wird über <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird ein benutzerdefiniertes Steuerelement, das verwendet die <xref:System.Web.UI.Control.AddParsedSubObject%2A> Methode, um zu bestimmen, ob Elemente zwischen den Start- und Endtag des Steuerelements deklariert sind <xref:System.Web.UI.WebControls.TextBox> -Webserversteuerelementen. Wenn dies der Fall, werden sie hinzugefügt ein <xref:System.Collections.ArrayList> Objekt `items`. Wenn die überschriebene <xref:System.Web.UI.Control.CreateChildControls%2A> -Methode aufgerufen wird, durchläuft es die <xref:System.Collections.ArrayList> und jedes Objekt und fügt die <xref:System.Web.UI.ControlCollection> des benutzerdefinierten Steuerelements.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Control_AddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_AddParsedSubObject/CS/control_addparsedsubobject.cs#1)]
 [!code-vb[Control_AddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_AddParsedSubObject/VB/control_addparsedsubobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="abstract member ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit&#xA;override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="control.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
        <summary>Applies the style properties defined in the page style sheet to the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> -Methode Stileigenschaften für das Steuerelement basierend auf in einem Designverzeichnis definierten Designeigenschaften fest. Das Design angewendet wird, entweder das Standarddesign für das Steuerelement oder das Design angegeben wird, der <xref:System.Web.UI.Control.SkinID%2A> Eigenschaft. Die <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Methode wird von ASP.NET aufgerufen, für die deklarative Steuerelemente auf einer Seite eingefügt. Rufen Sie die <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Methode für alle Steuerelemente programmgesteuert zur erstellt Laufzeit für Style Sheet Designs auf das Steuerelement angewendet. Designs werden automatisch übernommen. Weitere Informationen zu den Unterschieden zwischen Designs und cascading Stylesheets finden Sie unter [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The style sheet is already applied.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeTemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public string AppRelativeTemplateSourceDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRelativeTemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeTemplateSourceDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeTemplateSourceDirectory : string with get, set" Usage="System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the application-relative virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> object that contains this control.</summary>
        <value>Das anwendungsrelativen virtuelle Verzeichnis für die Seite oder das Benutzersteuerelement, die diesem Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> Eigenschaft enthält die Anwendung relativen Pfad auf die Seite oder das Benutzersteuerelement, das das aktuelle Steuerelement enthält. Wenn auf der Webseite befindet sich z. B. http://www.contoso.com/application/subdirectorydie <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> Eigenschaft gibt "~ / Unterverzeichnis".  
  
 Um den virtuellen Pfad ("Application/Unterverzeichnis") zurückzugeben, verwenden die <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenderTracing">
      <MemberSignature Language="C#" Value="protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberSignature Language="F#" Value="member this.BeginRenderTracing : System.IO.TextWriter * obj -&gt; unit" Usage="control.BeginRenderTracing (writer, traceObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">The object that writes trace data.</param>
        <param name="traceObject">The trace object.</param>
        <summary>Begins design-time tracing of rendering data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control BindingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control BindingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.BindingContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ BindingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.BindingContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control that contains this control's data binding.</summary>
        <value>Die <see cref="T:System.Web.UI.Control" /> , die Datenbindung für dieses Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.BindingContainer%2A> Eigenschaft enthält einen Verweis auf die <xref:System.Web.UI.Control> -Objekt, das die Datenbindung für das aktuelle Steuerelement enthält.  
  
 Die <xref:System.Web.UI.Control.BindingContainer%2A> Eigenschaft ist identisch mit der <xref:System.Web.UI.Control.NamingContainer%2A> -Eigenschaft, außer wenn das Steuerelement eine Vorlage gehört. In diesem Fall die <xref:System.Web.UI.Control.BindingContainer%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.Control> , die die Vorlage definiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildProfileTree">
      <MemberSignature Language="C#" Value="protected void BuildProfileTree (string parentId, bool calcViewState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BuildProfileTree(string parentId, bool calcViewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BuildProfileTree (parentId As String, calcViewState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BuildProfileTree(System::String ^ parentId, bool calcViewState);" />
      <MemberSignature Language="F#" Value="member this.BuildProfileTree : string * bool -&gt; unit" Usage="control.BuildProfileTree (parentId, calcViewState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="calcViewState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentId">The identifier of the control's parent.</param>
        <param name="calcViewState">A Boolean that indicates whether the view-state size is calculated.</param>
        <summary>Gathers information about the server control and delivers it to the <see cref="P:System.Web.UI.Page.Trace" /> property to be displayed when tracing is enabled for the page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft sammelt die notwendigen Informationen zur Hierarchie der Benutzeroberfläche einer Seite und übergibt sie an der Seite [ &lt;Ablaufverfolgung&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/trace-element.md) Eigenschaft. Wenn Sie die Ablaufverfolgung für eine Seite oder für die Anwendung aktiviert wird diese Informationen angezeigt, der `Control Tree` Abschnitt der Ablaufverfolgungsausgabe. Die Ausgabe der Ablaufverfolgung für eine Seite wird bis zum Ende der Seite angefügt; während der Ablaufverfolgungsausgabe für eine Anwendung von Trace Viewer (trace.axd-Datei) angezeigt werden kann die in das Stammverzeichnis der Anwendung gespeichert ist. Weitere Informationen zur Ablaufverfolgung finden Sie unter [Übersicht über die ASP.NET-Ablaufverfolgung](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControlsCreated">
      <MemberSignature Language="C#" Value="protected bool ChildControlsCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildControlsCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ChildControlsCreated" />
      <MemberSignature Language="VB.NET" Value="Protected Property ChildControlsCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ChildControlsCreated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlsCreated : bool with get, set" Usage="System.Web.UI.Control.ChildControlsCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the server control's child controls have been created.</summary>
        <value>
          <see langword="true" /> Wenn untergeordnete Steuerelemente erstellt wurden; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht eine Überschreibung der <xref:System.Web.UI.Control.OnDataBinding%2A> Methode eines benutzerdefinierten <xref:System.Web.UI.WebControls.Repeater> Steuerelement. Um sicherzustellen, dass die untergeordneten Steuerelemente nicht erstellt werden, bis Sie erneut, die Datenbindung tritt auf der <xref:System.Web.UI.Control.ChildControlsCreated%2A> -Eigenschaftensatz auf `true` nach der <xref:System.Web.UI.WebControls.RepeaterItem> -Objekte erstellt und dem Steuerelement hinzugefügt <xref:System.Web.UI.ControlCollection> Objekt.  
  
 [!code-csharp[TemplatedDataBoundControl3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/customrepeater.cs#1)]
 [!code-vb[TemplatedDataBoundControl3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/customrepeater.vb#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie benutzerdefinierte wiederholungsmodul-Steuerelement auf einer Webseite verwendet wird.  
  
 [!code-aspx-csharp[TemplatedDataBoundControl3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/default.aspx#2)]
 [!code-aspx-vb[TemplatedDataBoundControl3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/default.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedClientID">
      <MemberSignature Language="C#" Value="protected void ClearCachedClientID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearCachedClientID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearCachedClientID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearCachedClientID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearCachedClientID();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedClientID : unit -&gt; unit" Usage="control.ClearCachedClientID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the cached <see cref="P:System.Web.UI.Control.ClientID" /> value to <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearChildControlState">
      <MemberSignature Language="C#" Value="protected void ClearChildControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildControlState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildControlState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildControlState : unit -&gt; unit" Usage="control.ClearChildControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the control-state information for the server control's child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.ClearChildControlState%2A> Methode wird verwendet, wenn untergeordnete Steuerelement-Statusinformationen des übergeordneten Steuerelements Steuerelementzustand geschrieben als neuer untergeordneter Steuerelemente erstellt werden, z. B. bei der Datenbindung untergeordnete in einem Steuerelement auf Vorlagen basierenden datengebundenen Steuerelemente, außer Kraft gesetzt wird. Aufrufen der <xref:System.Web.UI.Control.ClearChildControlState%2A> Methode, um leere untergeordnete Steuerelemente vor dem Aufruf der <xref:System.Web.UI.Control.SaveControlState%2A> Methode reduziert die Größe der Steuerelementzustand Informationen, die gespeichert oder übertragen werden muss.  
  
 Beim erneuten Erstellen der untergeordnete Steuerelemente von einem <xref:System.Web.UI.Control> -Objekts die <xref:System.Web.UI.Control.ClearChildControlState%2A> Methode, um den Zustand des untergeordneten Steuerelements zu löschen, sodass er nicht versehentlich auf die neuen Steuerelemente angewendet wird.  
  
 Das untergeordnete Steuerelement sowie Anzeigezustand, verwenden Sie zum Deaktivieren der <xref:System.Web.UI.Control.ClearChildState%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildState">
      <MemberSignature Language="C#" Value="protected void ClearChildState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildState : unit -&gt; unit" Usage="control.ClearChildState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the view-state and control-state information for all the server control's child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.ClearChildState%2A> Methode löscht alle Ansichtszustand und Steuerelementzustand Informationen für die untergeordneten Steuerelemente. Dies ist äquivalent zum Aufruf der <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode und die <xref:System.Web.UI.Control.ClearChildControlState%2A> Methode.  
  
 Beim erneuten Erstellen der untergeordnete Steuerelemente von einem <xref:System.Web.UI.Control> -Objekts die <xref:System.Web.UI.Control.ClearChildState%2A> Methode, um die untergeordneten Zustand zu löschen, sodass er nicht versehentlich auf die neuen Steuerelemente angewendet wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.Control.OnDataBinding%2A> Methode für ein auf Vorlagen basierenden datengebundenen Steuerelement. Wenn die Datenquelle, die das Steuerelement bindet aufgefüllt wird, des Steuerelements <xref:System.Web.UI.ControlCollection> Auflistung wird geleert mithilfe der <xref:System.Web.UI.ControlCollection.Clear%2A> -Methode, und die <xref:System.Web.UI.Control.ClearChildState%2A> Methode wird verwendet, um alle Zustandsinformationen zu entfernen, die für die untergeordneten Steuerelemente gespeichert wurde.  
  
 [!code-csharp[TemplatedDataBoundControl2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl2/cs/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl2/vb/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildViewState">
      <MemberSignature Language="C#" Value="protected void ClearChildViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildViewState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildViewState : unit -&gt; unit" Usage="control.ClearChildViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the view-state information for all the server control's child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird häufig verwendet, wenn Sie überschreiben die <xref:System.Web.UI.Control.DataBind%2A> Methode, wenn der für auf Vorlagen basierenden datengebundenen Serversteuerelementen entwickeln. Wenn Sie diese Methode nicht aufrufen, kann untergeordnete Steuerelement Ansichtszustand – Informationen zu einem übergeordneten Serversteuerelement nur für die außer Kraft gesetzt werden, wenn die Daten gebunden werden geschrieben werden.  
  
 Beim erneuten Erstellen der untergeordnete Steuerelemente von einem <xref:System.Web.UI.Control>, verwenden die <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode, um untergeordnete Ansichtszustand deaktivieren, damit sie nicht versehentlich auf die neuen Steuerelemente angewendet wird.  
  
 Weitere Informationen zum Verwenden dieser Methode finden Sie unter [wie: Erstellen Sie aus einer Vorlage gebildete ASP.NET-Benutzersteuerelemente](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
      </Docs>
    </Member>
    <Member MemberName="ClearEffectiveClientIDMode">
      <MemberSignature Language="C#" Value="protected void ClearEffectiveClientIDMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearEffectiveClientIDMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearEffectiveClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearEffectiveClientIDMode ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearEffectiveClientIDMode();" />
      <MemberSignature Language="F#" Value="member this.ClearEffectiveClientIDMode : unit -&gt; unit" Usage="control.ClearEffectiveClientIDMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see cref="P:System.Web.UI.Control.ClientIDMode" /> property of the current control instance and of any child controls to <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.Control.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control ID for HTML markup that is generated by ASP.NET.</summary>
        <value>Die Steuerelement-ID für HTML-Markup, das von ASP.NET generiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Webserversteuerelement als ein HTML-Element gerendert wird die `id` -Attribut des HTML-Elements auf den Wert des festgelegt ist die <xref:System.Web.UI.Control.ClientID%2A> Eigenschaft. Die <xref:System.Web.UI.Control.ClientID%2A> Wert wird häufig verwendet, auf das HTML-Element im Clientskript mithilfe der `document.getElementById` Methode. Die ID wird auch häufig in CSS-Regeln verwendet, um Elemente in das Format anzugeben. Die folgende CSS-Stilregel wählt z. B. alle `span` Elemente mit der `id` -Attributwert `ProductIDLabel` und legt ihre `background-color` -Attribut auf `white`:  
  
```  
span#ProductIDLabel { background-color: white; }  
```  
  
 ASP.NET stellt mehrere Algorithmen zum Generieren der <xref:System.Web.UI.Control.ClientID%2A> Eigenschaftswert. Auswahl, welcher Algorithmus für ein Steuerelement durch Festlegen seiner <xref:System.Web.UI.Control.ClientIDMode%2A> Eigenschaft. Die Algorithmen werden identifiziert, indem die <xref:System.Web.UI.ClientIDMode> Enumerationswerte, die in der folgenden Tabelle aufgeführt sind.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird generiert, indem die <xref:System.Web.UI.Control.ID%2A>-Werte der einzelnen übergeordneten Benennungscontainer mit dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements verkettet werden In Datenbindungsszenarios, in denen mehrere Instanzen eines Steuerelements gerendert werden, wird vor dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements ein inkrementierender Wert eingefügt. Die einzelnen Segmente werden durch einen Unterstrich (_) getrennt. Dieser Algorithmus wurde in früheren Versionen von ASP.NET als ASP.NET 4 verwendet.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird auf den Wert der <xref:System.Web.UI.Control.ID%2A>-Eigenschaft festgelegt. Wenn es sich bei dem Steuerelement um einen Benennungscontainer handelt, ist das Steuerelement für alle enthaltenen Steuerelemente das oberste Element in der Hierarchie von Benennungscontainern.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Dieser Algorithmus wird für Steuerelemente in datengebundenen Steuerelementen verwendet. Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird generiert, indem der <xref:System.Web.UI.Control.ClientID%2A>-Wert des übergeordneten Benennungscontainers mit dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements verkettet wird. Wenn es sich bei dem Steuerelement um ein datengebundenes Steuerelement handelt, das mehrere Zeilen generiert, wird der Wert des in der <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>-Eigenschaft angegebenen Datenfelds am Ende hinzugefügt. Für das <xref:System.Web.UI.WebControls.GridView>-Steuerelement können mehrere Datenfelder angegeben werden. Wenn die <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> -Eigenschaft leer ist, wird eine laufende Nummer am Ende statt eines Werts Feld "Daten" hinzugefügt. Die einzelnen Segmente werden durch einen Unterstrich (_) getrennt.|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Das Steuerelement erbt die <xref:System.Web.UI.ClientIDMode>-Einstellung seines <xref:System.Web.UI.Control.NamingContainer%2A>-Steuerelements.|  
  
 Der Standardwert von <xref:System.Web.UI.Control.ClientIDMode%2A> für eine Seite ist <xref:System.Web.UI.ClientIDMode.Predictable>. Der Standardwert von <xref:System.Web.UI.Control.ClientIDMode%2A> für ein Steuerelement ist <xref:System.Web.UI.ClientIDMode.Inherit>. Da der Standardwert für Steuerelemente ist <xref:System.Web.UI.ClientIDMode.Inherit>, die standardmäßige Generation Modus ist <xref:System.Web.UI.ClientIDMode.Predictable>. (Jedoch, wenn Sie Visual Studio verwenden, um ein Webprojekt in ASP.NET 4 aus einer früheren Version zu konvertieren, legt Visual Studio automatisch die Websitestandardeinstellung zu <xref:System.Web.UI.ClientIDMode.AutoID> in der Datei "Web.config".)  
  
 Weitere Informationen finden Sie unter [Steuerelementidentifikation in Web Forms](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 Die folgenden Beispiele zeigen ein Web-Benutzersteuerelement, die innerhalb einer Inhaltsseite für eine Gestaltungsvorlage liegt. Das Benutzersteuerelement enthält eine <xref:System.Web.UI.WebControls.DropDownList> Steuerelement und ein <xref:System.Web.UI.WebControls.Label> Steuerelement. Der Text, der angezeigt wird der <xref:System.Web.UI.WebControls.Label> Steuerelement richtet sich nach der Wert, der aus der Benutzer wählt die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Der Textwert wird über Clientskript festgelegt, damit die Webseite nicht zurück an den Server zu senden, um diesen Wert festzulegen. Abrufen eines Verweises auf das HTML-Element, das für gerendert wird die <xref:System.Web.UI.WebControls.Label> Steuerelement im Clientskript, benötigen Sie den Wert des Steuerelements <xref:System.Web.UI.Control.ClientID%2A> Eigenschaft. Jedoch, da das Benutzersteuerelement an einer beliebigen Stelle in einer Webseite verwendet werden kann, ist es unmöglich, im Voraus wissen, welche Benennen von Containern die Steuerelemente enthalten. Um sicherzustellen, dass die <xref:System.Web.UI.Control.ClientID%2A> Wert ist identisch mit der <xref:System.Web.UI.Control.ID%2A> -Wert, der Code legt die <xref:System.Web.UI.Control.ClientIDMode%2A> Wert <xref:System.Web.UI.WebControls.ValidatorDisplay.Static>.  
  
 Das folgende Beispiel zeigt das Benutzersteuerelement.  
  
  
  
 Das folgende Beispiel zeigt die Inhaltsseite, die das Benutzersteuerelement enthält.  
  
  
  
 Das folgende Beispiel zeigt die Gestaltungsvorlage, die die Seite Inhalte enthält.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.Control.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the algorithm that is used to generate the value of the <see cref="P:System.Web.UI.Control.ClientID" /> property.</summary>
        <value>Ein Wert, der gibt an, wie die <see cref="P:System.Web.UI.Control.ClientID" /> Eigenschaft generiert wird. Die Standardeinstellung ist <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET stellt mehrere Algorithmen zum Generieren der <xref:System.Web.UI.Control.ClientID%2A> Eigenschaftswert. Auswahl, welcher Algorithmus für ein Steuerelement durch Festlegen seiner <xref:System.Web.UI.Control.ClientIDMode%2A> Eigenschaft. Die Algorithmen werden identifiziert, indem die <xref:System.Web.UI.ClientIDMode> Enumerationswerte, die in der folgenden Tabelle aufgeführt sind.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird generiert, indem die <xref:System.Web.UI.Control.ID%2A>-Werte der einzelnen übergeordneten Benennungscontainer mit dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements verkettet werden In Datenbindungsszenarios, in denen mehrere Instanzen eines Steuerelements gerendert werden, wird vor dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements ein inkrementierender Wert eingefügt. Die einzelnen Segmente werden durch einen Unterstrich (_) getrennt. Dieser Algorithmus wurde in früheren Versionen von ASP.NET als ASP.NET 4 verwendet.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird auf den Wert der <xref:System.Web.UI.Control.ID%2A>-Eigenschaft festgelegt. Wenn es sich bei dem Steuerelement um einen Benennungscontainer handelt, ist das Steuerelement für alle enthaltenen Steuerelemente das oberste Element in der Hierarchie von Benennungscontainern.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Dieser Algorithmus wird für Steuerelemente in datengebundenen Steuerelementen verwendet. Der <xref:System.Web.UI.Control.ClientID%2A>-Wert wird generiert, indem der <xref:System.Web.UI.Control.ClientID%2A>-Wert des übergeordneten Benennungscontainers mit dem <xref:System.Web.UI.Control.ID%2A>-Wert des Steuerelements verkettet wird. Wenn es sich bei dem Steuerelement um ein datengebundenes Steuerelement handelt, das mehrere Zeilen generiert, wird der Wert des in der <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>-Eigenschaft angegebenen Datenfelds am Ende hinzugefügt. Für das <xref:System.Web.UI.WebControls.GridView>-Steuerelement können mehrere Datenfelder angegeben werden. Wenn die <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> -Eigenschaft leer ist, wird eine laufende Nummer am Ende statt eines Werts Feld "Daten" hinzugefügt. Diese Nummer beginnt bei 0 (null) und 1 für jede Zeile inkrementiert wird. Die einzelnen Segmente werden durch einen Unterstrich (_) getrennt.|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Das Steuerelement erbt die <xref:System.Web.UI.ClientIDMode>-Einstellung seines <xref:System.Web.UI.Control.NamingContainer%2A>-Steuerelements.|  
  
 Der Standardwert von <xref:System.Web.UI.Control.ClientIDMode%2A> für eine Seite ist <xref:System.Web.UI.ClientIDMode.Predictable>. Der Standardwert von <xref:System.Web.UI.Control.ClientIDMode%2A> für ein Steuerelement ist <xref:System.Web.UI.ClientIDMode.Inherit>. Da der Standardwert für Steuerelemente ist <xref:System.Web.UI.ClientIDMode.Inherit>, die standardmäßige Generation Modus ist <xref:System.Web.UI.ClientIDMode.Predictable>. (Jedoch, wenn Sie Visual Studio verwenden, um ein Webprojekt in ASP.NET 4 aus einer früheren Version zu konvertieren, legt Visual Studio automatisch die Websitestandardeinstellung zu <xref:System.Web.UI.ClientIDMode.AutoID> in der Datei "Web.config".)  
  
 Weitere Informationen finden Sie unter [Steuerelementidentifikation in Web Forms](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt <xref:System.Web.UI.WebControls.Label> Steuerelementen in einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Auf der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, das <xref:System.Web.UI.Control.ClientIDMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.ClientIDMode.Predictable> und die <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> -Eigenschaftensatz auf `ProductID`. In der gerenderten HTML-Code erstellt diese drei `span` Elemente, die auf drei entsprechen `ProductIDLabel` Steuerelemente. Wenn die Seite ausgeführt wird, wird die `id` Attribute für die `span` Elemente werden auf die folgenden Werte festgelegt:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDSeparator">
      <MemberSignature Language="C#" Value="protected char ClientIDSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char ClientIDSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientIDSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char ClientIDSeparator { char get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDSeparator : char" Usage="System.Web.UI.Control.ClientIDSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a character value representing the separator character used in the <see cref="P:System.Web.UI.Control.ClientID" /> property.</summary>
        <value>Gibt immer den Unterstrich (_) zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.ClientID%2A> Wert generiert, durch die Aneinanderreihung der <xref:System.Web.UI.Control.ID%2A> Wert des Steuerelements und der <xref:System.Web.UI.Control.UniqueID%2A> Wert des übergeordneten Steuerelements. Jeder Teil der generierten <xref:System.Web.UI.Control.ID%2A> Eigenschaft getrennt, durch die <xref:System.Web.UI.Control.ClientIDSeparator%2A> Eigenschaftswert. Der Wert gibt immer einen Unterstrich (_) zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.ClientID" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.UI.Control.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.HttpContext" /> object associated with the server control for the current Web request.</summary>
        <value>Das angegebene <see cref="T:System.Web.HttpContext" /> Objekt mit der aktuellen Anforderung verknüpft sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den Zugriff auf die <xref:System.Web.HttpContext> Objekt der aktuellen webanforderung. Das Objekt enthält Eigenschaften, die Zugriff auf die <xref:System.Web.HttpContext.Application%2A>, <xref:System.Web.HttpContext.Session%2A>, <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A> und andere Objekte, die Informationen zur aktuellen HTTP-Anforderung enthalten. Darüber hinaus Methoden, die Ihnen das Abrufen von Konfigurationsinformationen und aktivieren oder deaktivieren Fehler für die Anforderung zu ermöglichen.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#1)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Web.HttpApplication" />
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</summary>
        <value>Die Auflistung der untergeordneten Steuerelemente für das angegebene Serversteuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auf einer ASP.NET-Seite Steuerelemente deklarativ zwischen dem Start- und Endtag eines Steuerelements Server hinzugefügt wurden ASP.NET automatisch fügt die Steuerelemente hinzu, der mit dem Serversteuerelement <xref:System.Web.UI.ControlCollection>. Alle HTML-Tags oder Textzeichenfolgen, die auf dem Server nicht verarbeitet werden, werden als behandelt <xref:System.Web.UI.LiteralControl> Objekte. Diese werden auf die Auflistung wie andere Serversteuerelemente hinzugefügt.  
  
 Die <xref:System.Web.UI.Control.Controls%2A> Eigenschaft ermöglicht den programmgesteuerten Zugriff auf die Instanz von der <xref:System.Web.UI.ControlCollection> Klasse für alle Serversteuerelement. Sie können Steuerelemente zur Auflistung hinzufügen, entfernen Sie Steuerelemente aus der Auflistung oder die Serversteuerelemente in der Auflistung durchlaufen.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Hinzufügen von untergeordneten Steuerelemente des Serversteuerelements <xref:System.Web.UI.ControlCollection> -Objekt über seine <xref:System.Web.UI.Control.Controls%2A> Eigenschaft.  
  
 [!code-csharp[Classic Control.Controls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Controls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Controls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Controls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="P:System.Web.UI.Control.Controls" /> -Eigenschaft, achten Sie darauf, dass Sie zum Aufrufen der <see cref="M:System.Web.UI.Control.EnsureChildControls" /> Methode. Darüber hinaus, wenn Sie beabsichtigen, das der steuerelementeauflistung programmgesteuert Steuerelemente hinzufügen, sollten Sie die Steuerelemente in eine überschriebene hinzufügen <see cref="M:System.Web.UI.Control.CreateChildControls" /> Methode.</para>
        </block>
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="control.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein zusammengesetztes oder aus einer Vorlage gebildete Serversteuerelement entwickeln, müssen Sie diese Methode überschreiben. Steuert die Außerkraftsetzung der <xref:System.Web.UI.Control.CreateChildControls%2A> Methode implementieren sollten die <xref:System.Web.UI.INamingContainer> Schnittstelle, um Namenskonflikte zu vermeiden.  
  
 Weitere Informationen finden Sie unter [Web Server Controls Templates](http://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae) und [Entwickeln von benutzerdefinierten ASP.NET-Serversteuerelementen](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine überschriebene Version von den <xref:System.Web.UI.Control.CreateChildControls%2A> Methode. In dieser Implementierung zusammengesetzte Steuerelement zeigt ein <xref:System.Web.UI.WebControls.TextBox> eingeschlossen in zwei literal-Steuerelementen, das Rendering von HTML-Steuerelement.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#2)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="control.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object to hold the child controls (both literal and server) of the server control.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object to contain the current server control's child server controls.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode in einem benutzerdefinierten Serversteuerelement aus, wenn Sie ein Auflistungsobjekt erstellt haben, die abgeleitet ist die <xref:System.Web.UI.ControlCollection> Klasse. Sie können dann diese Auflistungsklasse überschreiben diese Methode instanziieren.  
  
   
  
## Examples  
 Das folgende Codebeispiel setzt die <xref:System.Web.UI.Control.CreateControlCollection%2A> Methode zum Erstellen einer Instanz von einer `CustomControlCollection` -Klasse, die erbt die <xref:System.Web.UI.ControlCollection> Klasse.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#2)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#2)]  
  
 Im folgenden Codebeispiel wird mit der <xref:System.Web.UI.Control.CreateControlCollection%2A> -methodenüberschreibung in ein benutzerdefiniertes Steuerelement, der die <xref:System.Web.UI.Control.CreateChildControls%2A> Methode. Die neue Sammlung erstellt, und klicken Sie dann mit zwei untergeordneten Steuerelementen gefüllt `firstControl` und `secondControl`.  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBind">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Binds a data source to the invoked server control and all its child controls.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public virtual void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DataBind();" />
      <MemberSignature Language="F#" Value="abstract member DataBind : unit -&gt; unit&#xA;override this.DataBind : unit -&gt; unit" Usage="control.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Binds a data source to the invoked server control and all its child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um Daten aus einer Quelle an ein Steuerelement zu binden. Diese Methode wird häufig verwendet, nach dem Abrufen eines Datasets mithilfe einer Datenbankabfrage. Die meisten Steuerelemente ausführen Datenbindung automatisch, was bedeutet, dass Sie nicht in der Regel diese Methode explizit aufrufen müssen.  
  
 Diese Methode wird häufig überschrieben, wenn Sie ein benutzerdefiniertes auf Vorlagen basierenden datengebundenen Steuerelement erstellen. Weitere Informationen finden Sie unter [wie: Erstellen Sie aus einer Vorlage gebildete ASP.NET-Benutzersteuerelemente](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2) und [Entwickeln benutzerdefinierter datengebundene Webserversteuerelemente](http://msdn.microsoft.com/library/88fe02a3-957f-4ff7-84f5-2d7ab78db4c1). Bei einem Aufruf in einem Serversteuerelement, löst diese Methode alle Datenbindungsausdrücke in das Serversteuerelement und alle untergeordneten Steuerelemente.  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.DataBind%2A> Methode in einer benutzerdefinierten ASP.NET-Serversteuerelement. Er beginnt, durch Aufrufen der Basis <xref:System.Web.UI.Control.OnDataBinding%2A> -Methode, und klicken Sie dann mithilfe der <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> Methode, um alle untergeordneten Steuerelemente löschen und die <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode, um delete-Ansichtszustand-Einstellungen für die untergeordneten Steuerelemente gespeichert. Schließlich die <xref:System.Web.UI.Control.ChildControlsCreated%2A> -Eigenschaftensatz auf `true` und das Steuerelement wird angewiesen, zum Nachverfolgen von Änderungen am Ansichtszustand der neu erstellte Steuerelemente an die <xref:System.Web.UI.Control.TrackViewState%2A> Methode. Dies ist ein gängiges Verfahren beim Binden von Daten an ein Steuerelement, um sicherzustellen, dass neuen Daten nicht mit den Daten von einer früheren in Konflikt geraten <xref:System.Web.UI.Control.DataBind%2A> -Methodenaufruf.  
  
 [!code-csharp[Control_StateManagement#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#6)]
 [!code-vb[Control_StateManagement#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected virtual void DataBind (bool raiseOnDataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBind(bool raiseOnDataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBind (raiseOnDataBinding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBind(bool raiseOnDataBinding);" />
      <MemberSignature Language="F#" Value="abstract member DataBind : bool -&gt; unit&#xA;override this.DataBind : bool -&gt; unit" Usage="control.DataBind raiseOnDataBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raiseOnDataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="raiseOnDataBinding">
          <see langword="true" /> if the <see cref="E:System.Web.UI.Control.DataBinding" /> event is raised; otherwise, <see langword="false" />.</param>
        <summary>Binds a data source to the invoked server control and all its child controls with an option to raise the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> Methode in einem Szenario, wenn das benutzerdefinierte Steuerelement überschreibt die <xref:System.Web.UI.Control.DataBind%2A> -Methode und implementiert die <xref:System.Web.UI.IDataItemContainer> Schnittstelle. In diesem Szenario ruft das benutzerdefinierte Steuerelement die <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> Methode mit `raiseOnDataBinding` festgelegt `false` um sicherzustellen, dass der Basisklasse <xref:System.Web.UI.Control.DataBind%2A> Methode aufgerufen.  
  
 Die <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> Methode ruft die <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> Methode mit `raiseOnDataBinding` festgelegt `true`.  
  
> [!NOTE]
>  Aufrufen der <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> Methode mit `raiseOnDataBinding` festgelegt `false` bewirkt, dass alle untergeordneten Steuerelemente an Daten gebunden ist und die <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBindChildren">
      <MemberSignature Language="C#" Value="protected virtual void DataBindChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBindChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBindChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBindChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBindChildren();" />
      <MemberSignature Language="F#" Value="abstract member DataBindChildren : unit -&gt; unit&#xA;override this.DataBindChildren : unit -&gt; unit" Usage="control.DataBindChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Binds a data source to the server control's child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Control.DataBindChildren%2A> Methode, um eine Datenquelle für die untergeordneten Steuerelemente des Steuerelements binden.  
  
> [!NOTE]
>  Bei einem Aufruf in einem Serversteuerelement, ist diese Methode keine Daten an das Steuerelement binden. Um ein Serversteuerelement und alle untergeordneten Steuerelemente binden möchten, rufen Sie die <xref:System.Web.UI.Control.DataBind%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public event EventHandler DataBinding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBinding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBinding As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataBinding;" />
      <MemberSignature Language="F#" Value="member this.DataBinding : EventHandler " Usage="member this.DataBinding : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the server control binds to a data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis benachrichtigt das Serversteuerelement an jede Datenbindungsfunktionen Logik ausführen, die dafür geschrieben wurde.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#1)]
 [!code-vb[ITemplate_Interface#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DataItemContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataItemContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataItemContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataItemContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataItemContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.DataItemContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the naming container if the naming container implements <see cref="T:System.Web.UI.IDataItemContainer" />.</summary>
        <value>Namenscontainer. In einer Hierarchie von Benennen von Containern, die implementieren <see cref="T:System.Web.UI.IDataItemContainer" />, diese Eigenschaft gibt den Benennungscontainer am Anfang der Hierarchie oder <see langword="null" /> Wenn das aktuelle <see cref="T:System.Web.UI.Control" /> Objekt ist nicht in einem Benennungscontainer, die implementiert <see cref="T:System.Web.UI.IDataItemContainer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeysContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataKeysContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataKeysContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataKeysContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeysContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataKeysContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeysContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.DataKeysContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the naming container if the naming container implements <see cref="T:System.Web.UI.IDataKeysControl" />.</summary>
        <value>Namenscontainer. In einer Hierarchie von Benennen von Containern, die implementieren <see cref="T:System.Web.UI.IDataKeysControl" />, die Eigenschaft der Namenscontainer am Anfang der Hierarchie zurückgegeben oder <see langword="null" /> Wenn das aktuelle <see cref="T:System.Web.UI.Control" /> Objekt ist nicht in einem Benennungscontainer, die implementiert <see cref="T:System.Web.UI.IDataKeysControl" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignMode : bool" Usage="System.Web.UI.Control.DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether a control is being used on a design surface.</summary>
        <value>
          <see langword="true" /> Wenn das Steuerelement in einem Designer verwendet wird; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.DesignMode%2A> -Eigenschaft gibt `true` um anzugeben, dass das Steuerelement im Kontext eines Designers verwendet wird. Benutzerdefinierte Steuerelemente können diese Eigenschaft verwenden, wenn Entwurfszeitverhalten Laufzeitverhalten unterscheidet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="control.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables a server control to perform final clean up before it is released from memory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Web.UI.Control.Dispose%2A> auf, wenn Sie <xref:System.Web.UI.Control> nicht mehr benötigen. Die <xref:System.Web.UI.Control.Dispose%2A>-Methode bewirkt, dass <xref:System.Web.UI.Control> nicht mehr verwendet werden kann. Nach dem Aufrufen dieser Methode müssen Sie alle Verweise auf das Steuerelement freigeben, damit der belegte Arbeitsspeicher von der Garbagecollection wieder zugänglich gemacht werden kann.  
  
   
  
## Examples  
 Das folgende Codebeispiel setzt die <xref:System.Web.UI.Control.Dispose%2A> Methode zum Schließen der <xref:System.Web.UI.HtmlTextWriter> mit einem Steuerelement, und rufen die <xref:System.Web.UI.Control.Dispose%2A> Methode auf eine <xref:System.Web.UI.WebControls.Button> Steuerelement, mit dem Namen `myButton`. Wenn ein <xref:System.Exception> wird ausgelöst, wenn diese Version von den <xref:System.Web.UI.Control.Dispose%2A> -Methode aufgerufen wird, das Steuerelement schreibt eine Meldung mit dem aktuellen <xref:System.Web.HttpResponse> Objekt.  
  
 [!code-csharp[Control_Dispose#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Dispose/CS/control_disposemethod.cs#1)]
 [!code-vb[Control_Dispose#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Dispose/VB/control_disposemethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcen, die sehr viel Prozessorzeit, z. B. Datenbankverbindungen, erfordern, sollten mit diesem Ereignis freigegeben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public virtual bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.Control.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> Designs zu verwenden; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.EnableTheming%2A> Eigenschaft gibt an, ob Designs für ein angegebenes Steuerelement aktiviert sind. Wenn die <xref:System.Web.UI.Control.EnableTheming%2A> Eigenschaft ist `true`, Design-Verzeichnis der Anwendung wird gesucht Steuerelementdesigns angewendet. Wenn kein Design für das jeweilige Steuerelement im Designverzeichnis vorhanden ist, werden die Designs nicht angewendet.  
  
 Wenn die <xref:System.Web.UI.Control.EnableTheming%2A> Eigenschaft ist `false`, Designverzeichnis nicht durchsucht und den Inhalt der <xref:System.Web.UI.Control.SkinID%2A> Eigenschaft wird nicht verwendet.  
  
 Designs können auf der Seite, die Container oder die Steuerungsebene aktiviert werden. Ein Steuerelement kann überschreiben die <xref:System.Web.UI.Control.EnableTheming%2A> Wert festgelegt, indem Sie das übergeordnete Steuerelement oder der Seite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see langword="Page_PreInit" /> event has already occurred.  \- or -  The control has already been added to the <see langword="Controls" /> collection.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public virtual bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.UI.Control.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.</summary>
        <value>
          <see langword="true" />, wenn das Serversteuerelement seinen Ansichtszustand beibehält, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ansichtszustand ermöglicht ein Serversteuerelement seinen Status über HTTP-Anforderungen zu verwalten. Anzeigen des Status für ein Steuerelement aktiviert ist, wenn alle der folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft für die Seite wird festgelegt, um `true`.  
  
-   Die <xref:System.Web.UI.Control.EnableViewState%2A> für das Steuerelement ist-Eigenschaftensatz auf `true`.  
  
-   Die <xref:System.Web.UI.Control.ViewStateMode%2A> für das Steuerelement ist-Eigenschaftensatz auf <xref:System.Web.UI.ViewStateMode.Enabled> oder erbt die <xref:System.Web.UI.ViewStateMode.Enabled> Einstellung.  
  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.Control.ViewStateMode%2A>-Eigenschaft.  
  
 Ansichtszustand eines Serversteuerelements besteht in der Ansammlung der alle Eigenschaftswerte. Um diese Werte über HTTP-Anforderungen beizubehalten, ASP.NET verwendet, eine Instanz von der <xref:System.Web.UI.StateBag> Klasse, um die Eigenschaftswerte zu speichern. Die Werte werden dann als Variable an ein ausgeblendetes Feld übergeben, wenn nachfolgende Anforderungen verarbeitet werden. Weitere Informationen zum Ansichtszustand finden Sie unter [ASP.NET View State Overview](http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818).  
  
 Es gibt Situationen, wenn angebracht ist, deaktivieren Sie den Ansichtszustand, vor allem um die Anwendung zu verbessern. Beispielsweise, wenn Sie eine Datenbank-Anforderung in ein Serversteuerelement laden, legen Sie diese Eigenschaft auf `false`. Wenn Sie nicht der Fall ist, wird Prozessorzeit beansprucht, Laden von Ansichtszustand in das Serversteuerelement, das nur von der Datenbankabfrage überschrieben werden. Wenn <xref:System.Web.UI.Control.EnableViewState%2A> ist `false`, können Sie Eigenschafteninformationen beibehalten, bezieht sich auf ein Steuerelement, und kann nicht deaktiviert werden, wie die Zustandseigenschaft der Ansicht, Zustand des Steuerelements. Weitere Informationen zu den Unterschieden zwischen Steuerelementzustand und Ansichtszustand finden Sie unter [Steuerelementzustand Vs. Beispiel für Ansichtszustand](http://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681).  
  
 Informationen zum Aktivieren oder Deaktivieren des Ansichtszustands für eine ASP.NET-Seite finden Sie unter.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft `false`.  
  
 [!code-csharp[Control_StateManagement#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_statemanagement.cs.aspx#7)]
 [!code-vb[Control_StateManagement#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_statemanagement.vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EndRenderTracing">
      <MemberSignature Language="C#" Value="protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberSignature Language="F#" Value="member this.EndRenderTracing : System.IO.TextWriter * obj -&gt; unit" Usage="control.EndRenderTracing (writer, traceObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">The object that writes trace data.</param>
        <param name="traceObject">The trace object.</param>
        <summary>Ends design-time tracing of rendering data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureChildControls">
      <MemberSignature Language="C#" Value="protected virtual void EnsureChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureChildControls();" />
      <MemberSignature Language="F#" Value="abstract member EnsureChildControls : unit -&gt; unit&#xA;override this.EnsureChildControls : unit -&gt; unit" Usage="control.EnsureChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the server control contains child controls. If it does not, it creates child controls.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft zuerst den aktuellen Wert der <xref:System.Web.UI.Control.ChildControlsCreated%2A> Eigenschaft. Wenn dieser Wert ist `false`die <xref:System.Web.UI.Control.CreateChildControls%2A> -Methode aufgerufen wird.  
  
 Die <xref:System.Web.UI.Control.EnsureChildControls%2A> -Methode werden in der Regel in zusammengesetzten Steuerelementen, Steuerelemente, die auch für untergeordnete Steuerelemente verwenden oder alle ihrer Funktionalität. Die <xref:System.Web.UI.Control.EnsureChildControls%2A> Methode wird aufgerufen, um sicherzustellen, dass untergeordnete Steuerelemente erstellt wurden, und beim Verarbeiten der Eingabe, die zum Binden von Daten ausführen oder andere Aufgaben ausführen können.  
  
 Die <xref:System.Web.UI.WebControls.GridView> Steuerelement ist ein Beispiel für ein zusammengesetztes Steuerelement. Es erstellt untergeordnete Steuerelemente wie z. B. <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell>, <xref:System.Web.UI.WebControls.Label>, und <xref:System.Web.UI.WebControls.TextBox> Tabelle von Steuerelementen, die zum Rendern des HTML-Codes verwendet werden, die die <xref:System.Web.UI.WebControls.GridView> generiert.  
  
 In den meisten Fällen müssen Entwickler von benutzerdefinierten Steuerelementen nicht diese Methode überschreiben. Wenn Sie diese Methode überschreiben, verwenden sie ähnlich wie das Standardverhalten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.EnsureChildControls%2A> Methode, um sicherzustellen, dass das aktuelle Steuerelement untergeordnete Steuerelemente verfügt. Anschließend ruft ab oder legt ihn fest ein <xref:System.Web.UI.WebControls.TextBox.Text%2A> -Eigenschaft für ein untergeordnetes Element <xref:System.Web.UI.WebControls.TextBox> Webserver-Steuerelement in der aktuellen Serversteuerelements <xref:System.Web.UI.ControlCollection> Objekt.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#1)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="EnsureID">
      <MemberSignature Language="C#" Value="protected void EnsureID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureID();" />
      <MemberSignature Language="F#" Value="member this.EnsureID : unit -&gt; unit" Usage="control.EnsureID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an identifier for controls that do not have an identifier assigned.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.EnsureID%2A> Methode generiert einen Bezeichner für die enthaltenen Steuerelemente in einem anderen Steuerelement. Bezeichner werden nur für Steuerelemente, die keinen Wert generiert die <xref:System.Web.UI.Control.ID%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.Control.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of event handler delegates for the control. This property is read-only.</summary>
        <value>Die Liste der Ereignishandlerdelegaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist vom Typ <xref:System.ComponentModel.EventHandlerList>, die einen lineare Suche-Algorithmus verwendet, um Einträge in der Liste der Delegaten finden. Ein lineare Suche-Algorithmus ist ineffizient, bei der Arbeit mit einer großen Anzahl von Einträgen. Aus diesem Grund bei Verwendung einer langen Liste findet, dass Einträge mit dieser Eigenschaft langsam ist.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein Ereignis, das mit dem Namen `Click`, die hinzugefügt bzw. daraus entfernt Handler des Steuerelements <xref:System.ComponentModel.EventHandlerList> Auflistung, wenn das Ereignis von einer Seite aufgerufen wird.  
  
 **Hinweis** in diesem Beispiel wird wie ein Steuerelement hinzugefügt und entfernt Ereignisse aus der Liste, die das Steuerelement verwaltet. Wenn Sie benutzerdefiniertes Steuerelement zu erstellen und ein Ereignis definieren möchten, verwenden Sie Code ähnelt. Diese Technik kann in c#, aber nicht in Visual Basic verwendet werden.  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Searches the current naming container for the specified server control.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member FindControl : string -&gt; System.Web.UI.Control&#xA;override this.FindControl : string -&gt; System.Web.UI.Control" Usage="control.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The identifier for the control to be found.</param>
        <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.</summary>
        <returns>The specified control, or <see langword="null" /> if the specified control does not exist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Web.UI.Control.FindControl%2A> auf ein Steuerelement aus einer Funktion in einer Code-Behind-Seite, auf ein Steuerelement zuzugreifen, die in einem anderen Container oder in anderen Fällen das Zielsteuerelement ist, in denen kein direkter Zugriff an den Aufrufer. Suchen Sie diese Methode wird ein Steuerelement nur dann, wenn das Steuerelement direkt im angegebenen Container; enthalten ist d. h., sucht die Methode nicht in der gesamten Hierarchie von Steuerelementen innerhalb der Steuerelemente. Informationen dazu, wie Sie ein Steuerelement zu suchen, wenn Sie nicht, dass die sofortigen Container wissen finden Sie unter [Vorgehensweise: Zugriff Serversteuerelemente nach ID](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3).  
  
   
  
## Examples  
 Das folgende Beispiel definiert eine `Button1_Click` -Ereignishandler. Dieser Handler wird verwendet, wenn aufgerufen, die <xref:System.Web.UI.Control.FindControl%2A> Methode zum Suchen eines Steuerelements mit einem <xref:System.Web.UI.Control.ID%2A> Eigenschaft `TextBox2` auf der Seite. Wenn das Steuerelement gefunden wird, die das übergeordnete Element wird anhand der <xref:System.Web.UI.Control.Parent%2A> Eigenschaft und des übergeordnete Steuerelements <xref:System.Web.UI.Control.ID%2A> wird auf der Seite geschrieben. Wenn `TextBox2` nicht gefunden wird, wird "Steuerelement Nichtgefunden" auf die Seite geschrieben wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id, int32 pathOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindControl (id As String, pathOffset As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id, int pathOffset);" />
      <MemberSignature Language="F#" Value="abstract member FindControl : string * int -&gt; System.Web.UI.Control&#xA;override this.FindControl : string * int -&gt; System.Web.UI.Control" Usage="control.FindControl (id, pathOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="pathOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The identifier for the control to be found.</param>
        <param name="pathOffset">The number of controls up the page control hierarchy needed to reach a naming container.</param>
        <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> and an integer, specified in the <paramref name="pathOffset" /> parameter, which aids in the search. You should not override this version of the <see cref="Overload:System.Web.UI.Control.FindControl" /> method.</summary>
        <returns>The specified control, or <see langword="null" /> if the specified control does not exist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public virtual void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; unit&#xA;override this.Focus : unit -&gt; unit" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets input focus to a control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Control.Focus%2A> Methode, um den primären Einsatz der Webseite auf das Steuerelement gesetzt. Die Seite wird mit des ausgewählten Steuerelements im Browser geöffnet werden.  
  
 Die <xref:System.Web.UI.Control.Focus%2A> Methode bewirkt, dass einen Aufruf des Skripts der Seite den Fokus auf der gerenderten Seite ausgegeben werden. Wenn die Seite ein Steuerelement mit einem HTML keinen enthält `ID` -Attribut, das Steuerelement entspricht, die die <xref:System.Web.UI.Control.Focus%2A> Methode wurde aufgerufen, und klicken Sie dann Seitenfokus kann nicht festgelegt werden. Ein Beispiel, in denen dies auftreten kann, ist beim Festlegen des Fokus auf ein benutzerdefiniertes Steuerelement, statt den Fokus auf ein untergeordnetes Steuerelement des Benutzersteuerelements festzulegen. In diesem Szenario können Sie die <xref:System.Web.UI.Control.FindControl%2A> Methode, um das untergeordnete Steuerelement des Benutzersteuerelements suchen, und rufen die <xref:System.Web.UI.Control.Focus%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.FindControl(System.String)" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignModeState : unit -&gt; System.Collections.IDictionary&#xA;override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="control.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets design-time data for a control.</summary>
        <returns>An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.GetDesignModeState%2A> Methodenrückgabe Entwurfszeitdaten für ein Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.UI.Control.GetDesignModeState" /> -Methode zurückkehrt <see langword="null" /> standardmäßig. Überschreiben Sie diese Methode, um die Daten zur Entwurfszeit bereitstellen, die das Steuerelement erfordert.</para>
        </block>
        <altmember cref="T:System.Web.UI.IControlDesignerAccessor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRouteUrl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the URL that corresponds to a set of route parameters, and optionally to a route name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Codierung der Einfachheit halber bereitgestellt. Dies entspricht dem Aufrufen der <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Object ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : obj -&gt; string" Usage="control.GetRouteUrl routeParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeParameters">The route parameters.</param>
        <summary>Gets the URL that corresponds to a set of route parameters.</summary>
        <returns>The URL that corresponds to the specified route parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Codierung der Einfachheit halber bereitgestellt. Dies entspricht dem Aufrufen der <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> Methode. Diese Methode konvertiert das Objekt, das übergeben wird `routeParameters` zu einem <xref:System.Web.Routing.RouteValueDictionary> Objekt mithilfe der <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> Konstruktor.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <xref:System.Web.UI.Control.GetRouteUrl%2A?displayProperty=nameWithType> Methode, um die URL einer Route abzurufen, die über Parameter verfügt, die mit dem Namen sind `productid` und `category`. In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Web.UI.WebControls.HyperLink> Steuerelement mit dem Namen `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : System.Web.Routing.RouteValueDictionary -&gt; string" Usage="control.GetRouteUrl routeParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeParameters">The route parameters.</param>
        <summary>Gets the URL that corresponds to a set of route parameters.</summary>
        <returns>The URL that corresponds to the specified route parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Codierung der Einfachheit halber bereitgestellt. Dies entspricht dem Aufrufen der <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode, um die URL einer Route abzurufen, die über Parameter verfügt, die mit dem Namen sind aufgerufen `productid` und `category`. In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Web.UI.WebControls.HyperLink> Steuerelement mit dem Namen `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Object ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : string * obj -&gt; string" Usage="control.GetRouteUrl (routeName, routeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeParameters">The route parameters.</param>
        <summary>Gets the URL that corresponds to a set of route parameters and a route name.</summary>
        <returns>The URL that corresponds to the specified route parameters and route name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Codierung der Einfachheit halber bereitgestellt. Dies entspricht dem Aufrufen der <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> Methode. Diese Methode konvertiert das Objekt, das übergeben wird `routeParameters` zu einem <xref:System.Web.Routing.RouteValueDictionary> Objekt mithilfe der <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode, um die URL einer Route erhalten, mit dem Namen aufgerufen `Product` und verfügt über Parameter mit dem Namen sind `productid` und `category`. In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Web.UI.WebControls.HyperLink> Steuerelement mit dem Namen `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="control.GetRouteUrl (routeName, routeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeParameters">The route parameters.</param>
        <summary>Gets the URL that corresponds to a set of route parameters and a route name.</summary>
        <returns>The URL that corresponds to the specified route parameters and route name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Codierung der Einfachheit halber bereitgestellt. Dies entspricht dem Aufrufen der <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode, um die URL einer Route erhalten, mit dem Namen aufgerufen `Product` und verfügt über Parameter mit dem Namen sind `productid` und `category`. In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Web.UI.WebControls.HyperLink> Steuerelement mit dem Namen `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueIDRelativeTo">
      <MemberSignature Language="C#" Value="public string GetUniqueIDRelativeTo (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUniqueIDRelativeTo(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUniqueIDRelativeTo(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueIDRelativeTo : System.Web.UI.Control -&gt; string" Usage="control.GetUniqueIDRelativeTo control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A control that is within a naming container.</param>
        <summary>Returns the prefixed portion of the <see cref="P:System.Web.UI.Control.UniqueID" /> property of the specified control.</summary>
        <returns>The prefixed portion of the <see cref="P:System.Web.UI.Control.UniqueID" /> property of the specified control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaft eines Steuerelements wird generiert, indem Sie ein Präfix des Steuerelements hinzufügen <xref:System.Web.UI.Control.ID%2A> Eigenschaft. Das Präfix besteht aus den <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaft des Steuerelements des Namenscontainer mit Trennzeichen verkettet. Wenn der Benennungscontainer die Seite ist, sollten Sie die kein Präfix vorhanden ist. Diese Methode gibt die Präfixzeichenfolge. Wenn kein Präfixzeichenfolge vorhanden ist, gibt die <xref:System.Web.UI.Control.UniqueID%2A> Wert des Steuerelements.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Control.NamingContainer" /> property of <paramref name="control" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChildViewState">
      <MemberSignature Language="C#" Value="protected bool HasChildViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.HasChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HasChildViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool HasChildViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildViewState : bool" Usage="System.Web.UI.Control.HasChildViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current server control's child controls have any saved view-state settings.</summary>
        <value>
          <see langword="true" /> Wenn alle untergeordneten Steuerelemente Ansichtszustandsinformationen gespeichert haben. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können vermeiden, dass unnötige Aufrufe der <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode diese Eigenschaft verwenden, um sicherzustellen, dass alle untergeordneten Steuerelemente des Serversteuerelements Ansichtszustandsinformationen gespeichert sind.  
  
   
  
## Examples  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public virtual bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasControls();" />
      <MemberSignature Language="F#" Value="abstract member HasControls : unit -&gt; bool&#xA;override this.HasControls : unit -&gt; bool" Usage="control.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if the server control contains any child controls.</summary>
        <returns>
          <see langword="true" /> if the control contains other controls; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da diese Methode einfach ermittelt, wenn alle untergeordneten Steuerelemente vorhanden sind, kann es die Leistung verbessert, können Sie unnötig zu vermeiden <xref:System.Web.UI.ControlCollection.Count%2A> Eigenschaft aufrufen. Aufrufe dieser Eigenschaft muss ein <xref:System.Web.UI.ControlCollection> -Objekt instanziiert werden. Wenn keine untergeordneten Elemente vorhanden sind, verschwendet dieser objekterstellung Serverressourcen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.HasControls%2A> Methode, um zu bestimmen, ob Steuerelemente vorhanden sind, bevor Sie mit der <xref:System.Web.UI.ControlCollection.Count%2A> Eigenschaft zum Durchlaufen einer <xref:System.Web.UI.ControlCollection> Objekt.  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.UI.Control.HasControls" /> Methode muss überschrieben werden, nur, um z. B. Ändern von Metadatenattributen <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />. Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attributes](~/docs/standard/attributes/index.md).</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="HasEvents">
      <MemberSignature Language="C#" Value="protected bool HasEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasEvents () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasEvents();" />
      <MemberSignature Language="F#" Value="member this.HasEvents : unit -&gt; bool" Usage="control.HasEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value indicating whether events are registered for the control or any child controls.</summary>
        <returns>
          <see langword="true" /> if events are registered; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Control.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>Der programmgesteuerte Bezeichner, der dem Steuerelement zugewiesen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft auf ein Webserversteuerelement bietet programmgesteuerten Zugriff auf Eigenschaften, Ereignisse und Methoden des Serversteuerelements. Diese Eigenschaft kann von Webentwicklern festgelegt werden, durch deklarieren eine <xref:System.Web.UI.Control.ID%2A> Attribut im öffnenden Tag eines ASP.NET-Serversteuerelements.  
  
 Wenn diese Eigenschaft nicht nach einem Serversteuerelement programmgesteuert oder deklarativ angegeben wird, erhalten Sie einen Verweis auf das Steuerelement über des übergeordneten Steuerelements <xref:System.Web.UI.Control.Controls%2A> Eigenschaft.  
  
> [!NOTE]
>  Nur Kombinationen aus alphanumerischen Zeichen und den Unterstrich (_) sind gültige Werte für diese Eigenschaft. Einschließlich Leerzeichen oder andere ungültige Zeichen bewirkt eine ASP.NET Seite Parserfehler.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs.aspx#2)]
 [!code-vb[Control_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="protected char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char IdSeparator { char get(); };" />
      <MemberSignature Language="F#" Value="member this.IdSeparator : char" Usage="System.Web.UI.Control.IdSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character used to separate control identifiers.</summary>
        <value>Das Trennzeichen. Der Standardwert ist "$".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Zeichen enthalten, die der <xref:System.Web.UI.Control.IdSeparator%2A> Eigenschaft wird verwendet, um das Steuerelement-IDs für die untergeordneten Steuerelemente zu trennen. Das ID-Trennzeichen wird angefügt, um die <xref:System.Web.UI.Control.ID%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public event EventHandler Init;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Init" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Init" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Init As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Init;" />
      <MemberSignature Language="F#" Value="member this.Init : EventHandler " Usage="member this.Init : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the server control is initialized, which is the first step in its lifecycle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serversteuerelemente sollten alle Initialisierungsschritte auszuführen, die zum Erstellen und Einrichten einer Instanz erforderlich sind. Sie können keine Ansichtszustandsinformationen innerhalb dieses Ereignisses; Es wird noch nicht aufgefüllt. Sie sollten ein anderes Steuerelement nicht zugreifen, während dieses Ereignisses, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes Steuerelement handelt. Andere Steuerelemente sind nicht bestimmten erstellt und für den Zugriff bereit ist. Weitere Informationen zu Server-Steuerelementereignisse, finden Sie unter [ASP.NET Web Forms-Steuerelement Ereignis Servermodell](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
   
  
## Examples  
 Im folgende Beispiel weist einen benutzerdefinierten Ereignishandler `Calendar_Init`, zu der `Init` -Ereignis für ein <xref:System.Web.UI.WebControls.Calendar> Steuerelement.  
  
 [!code-aspx-csharp[Control_Sample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples2.cs.aspx#4)]
 [!code-aspx-vb[Control_Sample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples2.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChildControlStateCleared">
      <MemberSignature Language="C#" Value="protected internal bool IsChildControlStateCleared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChildControlStateCleared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsChildControlStateCleared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsChildControlStateCleared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsChildControlStateCleared : bool" Usage="System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether controls contained within this control have control state.</summary>
        <value>
          <see langword="true" /> Wenn die untergeordneten Elemente dieses Steuerelements Steuerelementzustand nicht verwenden; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralContent">
      <MemberSignature Language="C#" Value="protected bool IsLiteralContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsLiteralContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.IsLiteralContent" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsLiteralContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsLiteralContent();" />
      <MemberSignature Language="F#" Value="member this.IsLiteralContent : unit -&gt; bool" Usage="control.IsLiteralContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if the server control holds only literal content.</summary>
        <returns>
          <see langword="true" /> if the server control contains solely literal content; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt `true`, das Webserversteuerelement Auflistung enthält ein einzelnes literal-Steuerelement.  
  
   
  
## Examples  
 Das folgende Beispiel überprüft, ob die Seite, die Serversteuerelemente enthält, zurückgesendet wurde. Wenn dies der Fall, ruft die <xref:System.Web.UI.Control.IsLiteralContent%2A> Methode, um zu bestimmen, ob das Steuerelement nur literalen Inhalt enthält, oder auf den anderen Serversteuerelementen übergeordnet ist. Wenn sie nur literalen Inhalt enthält die <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaft von der <xref:System.Web.UI.LiteralControl> , darstellt, die Inhalt an die Antwort geschrieben wird.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#1)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.Control.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the server control is saving changes to its view state.</summary>
        <value>
          <see langword="true" /> Wenn das Steuerelement zum Speichern ihres Zustands markiert ist; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Beispiel für benutzerdefinierte Serversteuerelement, die diese Eigenschaft verwendet, finden Sie unter [auf Vorlagen basierenden Server Steuerelement-Beispiel](http://msdn.microsoft.com/library/986f63b8-6b50-42b9-a62d-a2f13cafa88b)  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.DataBind%2A> Methode in einer benutzerdefinierten ASP.NET-Serversteuerelement. Er beginnt, durch Aufrufen der Basis <xref:System.Web.UI.Control.OnDataBinding%2A> -Methode, und klicken Sie dann mithilfe der `ControlCollection` Objekt. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> Methode, um alle untergeordneten Steuerelemente löschen und die <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode, um delete-Ansichtszustand-Einstellungen für die untergeordneten Steuerelemente gespeichert. Schließlich die <xref:System.Web.UI.Control.ChildControlsCreated%2A> -Eigenschaftensatz auf `true`. Vom Steuerelement verwendet, klicken Sie dann die <xref:System.Web.UI.Control.IsTrackingViewState%2A> Eigenschaft, um zu bestimmen, ob die änderungsnachverfolgung Ansichtszustand für das Steuerelement aktiviert ist. Wenn sie nicht aktiviert ist, die <xref:System.Web.UI.Control.TrackViewState%2A> -Methode aufgerufen wird.  
  
 [!code-csharp[Control_StateManagement#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#4)]
 [!code-vb[Control_StateManagement#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="IsViewStateEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsViewStateEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsViewStateEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsViewStateEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsViewStateEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsViewStateEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsViewStateEnabled : bool" Usage="System.Web.UI.Control.IsViewStateEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether view state is enabled for this control.</summary>
        <value>
          <see langword="true" /> Wenn der Ansichtszustand für das Steuerelement aktiviert ist; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ansichtszustand kann auf der Seite, die Container oder die Steuerungsebene aktiviert werden. Wenn der Ansichtszustand auf der Seite oder Containerebene deaktiviert ist, ist für alle Steuerelemente auf der Seite oder den Container Ansichtszustand deaktiviert. Die <xref:System.Web.UI.Control.IsViewStateEnabled%2A> Eigenschaft gibt an, ob Ansichtszustand in Seiten, Containern oder Steuerelementen aktiviert ist.  
  
 Es ist möglich, dass die <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft und die <xref:System.Web.UI.Control.IsViewStateEnabled%2A> Eigenschaft unterscheiden. Z. B. wenn die <xref:System.Web.UI.Page> Ansichtszustand deaktiviert ist, hat das Steuerelement enthält die <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft kann `true` während der <xref:System.Web.UI.Control.IsViewStateEnabled%2A> Eigenschaft ist `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Entwickler von Seiten werden festgelegt, die <see cref="P:System.Web.UI.Control.EnableViewState" /> Eigenschaft und die <see cref="P:System.Web.UI.Control.ViewStateMode" /> Eigenschaft, um anzugeben, ob der Ansichtszustand mit dem Steuerelement verwendet werden. Verwenden der <see cref="P:System.Web.UI.Control.IsViewStateEnabled" /> Eigenschaft und die <see cref="P:System.Web.UI.Control.ViewStateMode" /> Eigenschaft im Code, um zu bestimmen, ob der Ansichtszustand für das Steuerelement und für alle Container aktiviert ist.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the server control is loaded into the <see cref="T:System.Web.UI.Page" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benachrichtigt das Serversteuerelement an alle Verarbeitungsschritte ausführen, die für jede Seitenanforderung Ausführung festgelegt werden. Sie können dieses Ereignis Ansichtszustandsinformationen und Web-Formular-POST-Daten zugreifen. Sie können auch den anderen Serversteuerelementen innerhalb der Hierarchie der Seite zugreifen.  
  
> [!NOTE]
>  Wenn Sie eine benutzerdefinierte Vorlage in einem Steuerelement beim Festlegen der `Page_Load` Ereignis die Textwerten der untergeordneten Steuerelemente in der benutzerdefinierten Vorlage gehen verloren. Dies tritt auf, weil die Formularwerte bereits geladen wurden.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Load#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Load/CS/control_load.cs#2)]
 [!code-vb[System.Web.UI.Control_Load#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Load/VB/control_load.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadControlState : obj -&gt; unit&#xA;override this.LoadControlState : obj -&gt; unit" Usage="control.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
        <summary>Restores control-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.Control.SaveControlState" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode, wenn müssen Sie angeben, wie ein benutzerdefiniertes Steuerelement seine Steuerelementzustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Das folgende Codebeispiel setzt die <xref:System.Web.UI.Control.LoadControlState%2A> -Methode in ein benutzerdefiniertes ASP.NET-Steuerelement. Wenn diese Methode aufgerufen wird, stellen sie bestimmt, ob der Steuerelementzustand für das Steuerelement bereits gespeichert wurde, und wenn dies der Fall ist, die interne Eigenschaft wird `currentIndex` mit dem gespeicherten Wert.  
  
 Die <xref:System.Web.UI.Control.OnInit%2A> Methode wird überschrieben, um das Aufrufen der <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Methode für die <xref:System.Web.UI.Control.Page%2A> um anzugeben, dass das benutzerdefinierte Steuerelement Steuerelementzustand verwendet.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="control.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.Control.SaveViewState" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient in erster Linie durch die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden. Allerdings können Entwickler von Steuerelementen überschreiben Sie diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.LoadViewState%2A> Methode für eine benutzerdefinierte ASP.NET-Serversteuerelement. Erstellt ein <xref:System.Object> Array übergeben Ansichtszustandsinformationen enthalten die `savedState` Parameter, und ruft dann die grundlegende Implementierung des der <xref:System.Web.UI.Control.LoadViewState%2A> Methode für die erste Indexposition des Arrays. Weist die Werte, die an den nächsten beiden Indexpositionen Variablen mit dem Namen gespeichert `UserText` und `PasswordText`zugeordnet.  
  
 [!code-csharp[Control_StateManagement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#1)]
 [!code-vb[Control_StateManagement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewStateByID">
      <MemberSignature Language="C#" Value="protected bool LoadViewStateByID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadViewStateByID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.LoadViewStateByID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoadViewStateByID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool LoadViewStateByID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadViewStateByID : bool" Usage="System.Web.UI.Control.LoadViewStateByID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control participates in loading its view state by <see cref="P:System.Web.UI.Control.ID" /> instead of index.</summary>
        <value>
          <see langword="true" /> Wenn das Steuerelement seinen Ansichtszustand von lädt <see cref="P:System.Web.UI.Control.ID" />ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig lädt ein übergeordnetes Steuerelement Ansichtszustand in untergeordneten Steuerelementen erstellt, wird dies durch die Position der einzelnen untergeordneten Steuerelemente in der übergeordneten Steuerelement <xref:System.Web.UI.Control.Controls%2A> Auflistung. Wenn der Ansichtszustand anfänglich angewendet wird, können alle untergeordneten Steuerelemente nicht erstellt wurden. Der Ansichtszustand für Steuerelemente, die noch nicht erstellt wird in diesem Fall gespeichert und angewendet, wenn die untergeordneten Steuerelemente später erstellt werden.  
  
 Für ein übergeordnetes Steuerelement Ansichtszustand für seine untergeordneten Steuerelemente angewendet werden soll müssen zwei Bedingungen erfüllt sein:  
  
-   Beim Postback muss das übergeordnete Steuerelement die untergeordneten erstellen Steuerelemente in derselben Reihenfolge wie die vorherige Anforderung, damit die Reihenfolge der Steuerelemente konsistent bleibt.  
  
-   Nach dem Postback müssen alle untergeordneten Steuerelemente erstellt am Ende des übergeordneten Steuerelements hinzugefügt werden <xref:System.Web.UI.Control.Controls%2A> Auflistung.  
  
 Wenn beide Bedingungen, im Fall der verzögerten Erstellung eines untergeordneten Steuerelements nicht erfüllt werden, kann das übergeordnete Steuerelement mit Ansichtszustand laden <xref:System.Web.UI.Control.ID%2A>. Festlegen der <xref:System.Web.UI.Control.LoadViewStateByID%2A> Eigenschaft `true`, verwenden die <xref:System.Web.UI.ViewStateModeByIdAttribute> Metadatenattribut für das übergeordnete Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.ViewStateModeByIdAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MapPathSecure">
      <MemberSignature Language="C#" Value="protected internal string MapPathSecure (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance string MapPathSecure(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.MapPathSecure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function MapPathSecure (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::String ^ MapPathSecure(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPathSecure : string -&gt; string" Usage="control.MapPathSecure virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">A relative or root relative URL.</param>
        <summary>Retrieves the physical path that a virtual path, either absolute or relative, maps to.</summary>
        <returns>The physical path to the requested file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann nur von Steuerelementen verwendet, die über Berechtigungen zum Lesen von Dateien verfügen, und beide sind Bestandteil der vollständig vertrauenswürdigen DLL-Dateien, beispielsweise System.Web.dll. Dadurch können Sicherheitslücken verhindert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.MapPathSecure%2A> Methode, um den physischen Pfad eines virtuellen Verzeichnisses des enthaltenden abzurufen <xref:System.Web.UI.Page> oder <xref:System.Web.UI.UserControl> Objekt.  
  
 [!code-csharp[Control_MapPathSecure#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_MapPathSecure/CS/control_templatesourcedirectory.cs#1)]
 [!code-vb[Control_MapPathSecure#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_MapPathSecure/VB/control_templatesourcedirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> is <see langword="null" /> or an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingContainer">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control NamingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control NamingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.NamingContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ NamingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.NamingContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same <see cref="P:System.Web.UI.Control.ID" /> property value.</summary>
        <value>Der Benennungscontainer des Serversteuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Seite in einer ASP.NET Web-Anwendung enthält eine Hierarchie von Steuerelementen. Diese Hierarchie ist nicht abhängig davon, ob ein Steuerelement für den Benutzer sichtbare Benutzeroberfläche generiert. Der Benennungscontainer für ein bestimmtes Steuerelement ist das übergeordnete Steuerelement darüber liegenden in der Hierarchie, die implementiert die <xref:System.Web.UI.INamingContainer> Schnittstelle. Ein Serversteuerelement, das diese Schnittstelle implementiert, erstellt einen eindeutigen Namespace für die <xref:System.Web.UI.Control.ID%2A> Eigenschaftswerte seiner untergeordneten Serversteuerelemente. Sie können die <xref:System.Web.UI.Control.NamingContainer%2A> Eigenschaft einem Benennungscontainer untergeordneten Steuerelements zum Abrufen eines Verweises auf den übergeordneten Container.  
  
 Erstellen einen eindeutigen Namespace für Webserversteuerelemente ist besonders wichtig, wenn Sie Webserversteuerelemente an Daten, z. B. binden die <xref:System.Web.UI.WebControls.Repeater> und <xref:System.Web.UI.WebControls.DataList> Serversteuerelemente. Wenn mehrere Einträge in der Datenquelle mehrere Instanzen eines Serversteuerelements, das ein untergeordnetes Element des sich wiederholenden Steuerelements ist erstellen, der Benennungscontainer wird sichergestellt, dass jede Instanz dieser untergeordneten Steuerelemente <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaftswerte, die nicht in Konflikt stehen. Der Standard-Benennungscontainer für eine Seite ist die Instanz von der <xref:System.Web.UI.Page> -Klasse, die generiert wird, wenn diese Seite angefordert wird.  
  
 Die <xref:System.Web.UI.Control.ClientID%2A> -Eigenschaft enthält den Wert, der als des Elements gerendert wird `id` -Attribut in das HTML-Markup. Je nach dem Wert, den Sie zum Zuweisen der <xref:System.Web.UI.Control.ClientIDMode%2A> -Eigenschaft, der Wert, der generiert wird, für die <xref:System.Web.UI.Control.ClientID%2A> -Eigenschaft kann die ID des enthalten die <xref:System.Web.UI.Control.NamingContainer%2A> Objekt. Bei Festlegung <xref:System.Web.UI.Control.ClientIDMode%2A> auf <xref:System.Web.UI.ClientIDMode.Static>, <xref:System.Web.UI.Control.ClientID%2A> Wert schließt nicht die ID des der <xref:System.Web.UI.Control.NamingContainer%2A> Objekt. Bei Festlegung <xref:System.Web.UI.Control.ClientIDMode%2A> entweder <xref:System.Web.UI.ClientIDMode.AutoID> oder <xref:System.Web.UI.ClientIDMode.Predictable>, <xref:System.Web.UI.Control.ClientID%2A> Wert schließt die ID aus der <xref:System.Web.UI.Control.NamingContainer%2A> Objekt. Weitere Informationen finden Sie unter [Steuerelementidentifikation in Web Forms](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Web.UI.Control.NamingContainer%2A> Eigenschaft.  
  
 [!code-aspx-csharp[Control_NamingContainer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_NamingContainer/CS/control_namingcontainer.cs.aspx#1)]
 [!code-aspx-vb[Control_NamingContainer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_NamingContainer/VB/control_namingcontainer.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBubbleEvent (source As Object, args As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnBubbleEvent : obj * EventArgs -&gt; bool&#xA;override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="control.OnBubbleEvent (source, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">The source of the event.</param>
        <param name="args">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</summary>
        <returns>
          <see langword="true" /> if the event has been canceled; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Serversteuerelemente wie z. B. die <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> und <xref:System.Web.UI.WebControls.GridView> Websteuerelemente darf die untergeordnete Steuerelemente, die Ereignisse auslösen. Beispielsweise jede Zeile in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement kann eine oder mehrere Schaltflächen, die dynamisch erstellt, durch Vorlagen enthalten. Statt jede Schaltfläche, durch das Auslösen eines Ereignisses einzeln, Ereignisse aus den geschachtelten Steuerelementen sind "protokolliert" – d. h. sie werden an den Benennungscontainer gesendet. Der Benennungscontainer wiederum löst ein generischen Ereignisses aufgerufen <xref:System.Web.UI.WebControls.GridView.RowCommand> mit Parameterwerten. Diese Werte können Sie einzelne festzulegen, welche, die das ursprüngliche Ereignis ausgelöst hat. Indem Sie auf dieses einzelne Ereignis reagieren, können Sie vermeiden, einzelne Ereignisbehandlungsmethoden für die untergeordneten Steuerelemente zu schreiben.  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.OnBubbleEvent%2A> Methode in einer benutzerdefinierten ASP.NET-Serversteuerelement `ParentControl`. Diese Methode wird aufgerufen, wenn ein untergeordnetes Steuerelement von `ParentControl` Aufrufe der <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> Methode. In diesem Fall die `ParentControl` Klasse schreibt zwei Zeichenfolgen in der ersten besagt enthaltenden ASP.NET-Seite, seine <xref:System.Web.UI.Control.OnBubbleEvent%2A> -Methode aufgerufen wurde, der zweite Identifizieren der Datenquellen-Steuerelement von der <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> Methode.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#1)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBinding : EventArgs -&gt; unit&#xA;override this.OnDataBinding : EventArgs -&gt; unit" Usage="control.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode weist ein Serversteuerelement auszuführenden keine Logik zum Binden von Daten, die mit ihr verbunden ist.  
  
 Wenn Sie behandeln möchten die <xref:System.Web.UI.Control.DataBinding> Ereignis, Sie sollten diese Ereignisbehandlungsmethode überschreiben. Dadurch wird sichergestellt, dass alle Delegaten angefügt der <xref:System.Web.UI.Control.DataBinding> Ereignis aufgerufen werden.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.Control.OnDataBinding%2A> Methode, um das übergeordnete Steuerelement untergeordnete Steuerelemente aus einer Datenquelle hinzuzufügen.  
  
 [!code-csharp[TemplatedDataBoundControl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="control.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft diese Methode zum Auslösen der <xref:System.Web.UI.Control.Init> Ereignis. Wenn Sie ein benutzerdefiniertes Steuerelement entwickeln, können Sie diese Methode überschreiben, um zusätzliche Verarbeitung bereitzustellen. Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement <xref:System.Web.UI.Control.OnInit%2A> Methode, um auf das Ereignis Abonnenten darüber zu informieren.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#3)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="control.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft diese Methode zum Auslösen der <xref:System.Web.UI.Control.Load> Ereignis. Wenn Sie ein benutzerdefiniertes Steuerelement entwickeln, können Sie diese Methode überschreiben, um zusätzliche Verarbeitung bereitzustellen. Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement <xref:System.Web.UI.Control.OnLoad%2A> Methode, um auf das Ereignis Abonnenten darüber zu informieren.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#3)]
 [!code-vb[Control_OnUnload#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="control.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft diese Methode zum Auslösen der <xref:System.Web.UI.Control.PreRender> Ereignis. Wenn Sie ein benutzerdefiniertes Steuerelement entwickeln, können Sie diese Methode überschreiben, um zusätzliche Verarbeitung bereitzustellen. Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement <xref:System.Web.UI.Control.OnPreRender%2A> Methode, um auf das Ereignis Abonnenten darüber zu informieren.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample_1_snipper#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1_snipper/CS/control_sample_1.cs#1)]
 [!code-vb[Control_Sample_1_snipper#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1_snipper/VB/control_sample_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="control.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft diese Methode zum Auslösen der <xref:System.Web.UI.Control.Unload> Ereignis. Wenn Sie ein benutzerdefiniertes Steuerelement entwickeln, können Sie diese Methode überschreiben, um zusätzliche Verarbeitung bereitzustellen. Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement <xref:System.Web.UI.Control.OnUnload%2A> Methode, um auf das Ereignis Abonnenten darüber zu informieren.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#2)]
 [!code-vb[Control_OnUnload#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.Unload" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="protected internal System.IO.Stream OpenFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.IO.Stream OpenFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function OpenFile (path As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::IO::Stream ^ OpenFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.OpenFile : string -&gt; System.IO.Stream" Usage="control.OpenFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path to the desired file.</param>
        <summary>Gets a <see cref="T:System.IO.Stream" /> used to read a file.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> that references the desired file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.OpenFile%2A> Methode gibt ein <xref:System.IO.Stream> -Objekt, das verwendet werden kann, um den Inhalt der Datei im angegebenen Lesen der `path` Parameter. Der Path-Parameter kann entweder eine Monatsintervall werden oder Stamm-URL ohne ein Protokoll (z. B. "~ / mySite/myFile.txt), oder einem physischen Pfad entweder lokal ("c:\mySite\myFile.txt") oder ein UNC-("\\\myServer\myFile.txt ").  
  
 Die <xref:System.Web.UI.Control.OpenFile%2A> Methode dateizugriffssicherheit zum Steuern des Zugriffs auf die angegebene Datei verwendet. Wenn der aktuelle Benutzer von ASP.NET in der Datei keinen Zugriff hat und dann die Datei nicht geöffnet ist, und eine <xref:System.Web.HttpException> Ausnahme wird ausgelöst, um anzugeben, dass der Zugriff verweigert wurde. Wenn die `path` Parameter einen relativen Pfad angegeben, die Ausnahme schließt Informationen zu den physischen Pfad auf die angeforderte Datei nicht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Access to the specified file was denied.</exception>
        <altmember cref="T:System.IO.FileStream" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Page" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.Control.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:System.Web.UI.Page" /> instance that contains the server control.</summary>
        <value>Die <see cref="T:System.Web.UI.Page" /> Instanz, die das Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft Auskunft über die ASPX-Datei, die das Steuerelement enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType>-Methode überschrieben. Er verwendet die <xref:System.Web.UI.Page> aufzurufende Eigenschaft der <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=nameWithType> Eigenschaft und bestimmen, ob die Seite, die dieses Steuerelement enthält, zum ersten Mal geladen wurde, oder ist das Ergebnis ein Postback.  
  
 [!code-csharp[Control_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs#1)]
 [!code-vb[Control_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ Parent { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.Control" Usage="System.Web.UI.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the server control's parent control in the page control hierarchy.</summary>
        <value>Ein Verweis auf das Serversteuerelement übergeordneten Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Seite angefordert wird, wird eine Hierarchie von Serversteuerelementen auf dieser Seite erstellt. Diese Eigenschaft können Sie das übergeordnete Steuerelement des aktuellen Serversteuerelements in dieser Hierarchie, und damit Programmieren zu bestimmen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein neues <xref:System.Web.UI.Control> Objekt auf einer Seite `myControl1`, an das Steuerelement im angegebenen eine <xref:System.Web.UI.Control.FindControl%2A> -Methodenaufruf. Wenn der Aufruf ein Steuerelements zurückgibt, verwendet der Code die <xref:System.Web.UI.Control.Parent%2A> Eigenschaft, um das Steuerelement zu identifizieren, die enthält `myControl1`. Wenn das übergeordnete Steuerelement vorhanden ist, wird die Zeichenfolge "das übergeordnete Element des Textfelds ist" verkettet ist, mit der <xref:System.Web.UI.Control.ID%2A> Eigenschaft des übergeordneten Steuerelements und geschrieben werden die <xref:System.Web.UI.Control.Page%2A>. Wenn kein übergeordnetes Steuerelement gefunden wird, die Zeichenfolge "Steuerelement nicht gefunden" geschrieben.  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreRender">
      <MemberSignature Language="C#" Value="public event EventHandler PreRender;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRender" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.PreRender" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRender As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRender;" />
      <MemberSignature Language="F#" Value="member this.PreRender : EventHandler " Usage="member this.PreRender : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the <see cref="T:System.Web.UI.Control" /> object is loaded but prior to rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Ereignis, um alle Updates ausführen, bevor das Serversteuerelement auf der Seite gerendert wird. Alle Änderungen im Ansichtszustand des Serversteuerelements können während dieses Ereignisses gespeichert werden. Solche Änderungen in der Renderingphase werden nicht gespeichert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseBubbleEvent">
      <MemberSignature Language="C#" Value="protected void RaiseBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseBubbleEvent (source As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.RaiseBubbleEvent : obj * EventArgs -&gt; unit" Usage="control.RaiseBubbleEvent (source, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">The source of the event.</param>
        <param name="args">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Assigns any sources of the event and its information to the control's parent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Serversteuerelemente wie z. B. die <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> und <xref:System.Web.UI.WebControls.GridView> Websteuerelemente darf die untergeordnete Steuerelemente, die Ereignisse auslösen. Beispielsweise jede Zeile in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement kann eine oder mehrere Schaltflächen, die dynamisch erstellt, durch Vorlagen enthalten. Statt jede Schaltfläche, durch das Auslösen eines Ereignisses einzeln, Ereignisse aus den geschachtelten Steuerelementen sind "protokolliert" – d. h. sie übergeordnete Element des Steuerelements gesendet werden. Das übergeordnete Element löst wiederum ein generischen Ereignisses aufgerufen <xref:System.Web.UI.WebControls.GridView.RowCommand> mit Parameterwerten. Diese Werte können Sie einzelne festzulegen, welche, die das ursprüngliche Ereignis ausgelöst hat. Indem Sie auf dieses einzelne Ereignis reagieren, können Sie vermeiden, einzelne Ereignisbehandlungsmethoden für die untergeordneten Steuerelemente zu schreiben.  
  
 Während Sie diese Methode außer Kraft setzen, Steuerelemente, die Sie erstellen können behandelt oder bubbled Ereignisse auslösen, durch Überschreiben der <xref:System.Web.UI.Control.OnBubbleEvent%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie eine benutzerdefinierte Klasse erstellen `ChildControl`, das Überschreiben der <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=nameWithType> aufzurufenden Methode der <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> -Methode, die sendet die <xref:System.Web.UI.WebControls.Button.Click?displayProperty=nameWithType> Ereignis an die übergeordnete ASP.NET-Serversteuerelement. Wenn klickt der Benutzer eine Schaltfläche auf einer ASP.NET-Seite, die eine Instanz von `ChildControl`, löst die <xref:System.Web.UI.Control.OnBubbleEvent%2A> Methode des übergeordneten Steuerelements, das die Instanz enthält `ChildControl` und schreibt die Zeichenfolge "ChildControl's OnClick-Methode "auf der Seite aufgerufen.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#2)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void RemovedControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RemovedControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RemovedControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RemovedControl : System.Web.UI.Control -&gt; unit&#xA;override this.RemovedControl : System.Web.UI.Control -&gt; unit" Usage="control.RemovedControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">The <see cref="T:System.Web.UI.Control" /> that has been removed.</param>
        <summary>Called after a child control is removed from the <see cref="P:System.Web.UI.Control.Controls" /> collection of the <see cref="T:System.Web.UI.Control" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.RemovedControl%2A> Methode wird aufgerufen, unmittelbar nach dem Entfernen des Steuerelements aus der <xref:System.Web.UI.Control.Controls%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
        <summary>Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Entwicklung von benutzerdefinierten Steuerelementen können Sie diese Methode zum Generieren von Inhalt für eine ASP.NET-Seite überschreiben.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.Control.Render%2A> Methode. Die <xref:System.Web.UI.Control.HasControls%2A> Methode wird verwendet, um zu bestimmen, ob das Serversteuerelement alle untergeordneten Steuerelemente in gespeichert hat seine <xref:System.Web.UI.ControlCollection> -Objekt, das über den möglich ist die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Eigenschaft. Wenn <xref:System.Web.UI.Control.HasControls%2A> gibt "true" und dem ersten Serversteuerelement in der Auflistung ist Literaltext und dann die wörtlichen Text wird in eine HTML-Zeichenfolge angefügt.  
  
 [!code-csharp[Classic Control.Render Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Render Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Render Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Render Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the rendered content.</param>
        <summary>Outputs the content of a server control's children to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode benachrichtigt ASP.NET Code Active Server Pages (ASP) auf der Seite gerendert. Wenn kein ASP-Code auf der Seite vorhanden ist, rendert diese Methode alle untergeordneten Steuerelemente für das Serversteuerelement. Diese Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.Control.Render%2A> Methode.  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.RenderChildren%2A> -Methode in ein benutzerdefiniertes Steuerelement. Sie bestimmt, ob das aktuelle Steuerelement untergeordnete Steuerelemente, in enthält dessen <xref:System.Web.UI.ControlCollection> Objekt. Wenn dies der Fall ist, verwendet die <xref:System.Web.UI.ControlCollection.Count%2A> Eigenschaft zum Durchlaufen der Auflistung. Da jedes untergeordnete Steuerelement gefunden wird, verwendet die <xref:System.Web.UI.Control.RenderControl%2A> Methode, um das übergeordnete Steuerelement und alle untergeordneten Steuerelemente auf der Seite gerendert.  
  
 Die überschriebene <xref:System.Web.UI.Control.Render%2A> -Methode ruft dann die überschriebene <xref:System.Web.UI.Control.RenderChildren%2A> Methode.  
  
 [!code-csharp[Control_Sample_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#4)]
 [!code-vb[Control_Sample_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Outputs server control content and stores tracing information about the control if tracing is enabled.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
        <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Serversteuerelement <xref:System.Web.UI.Control.Visible%2A> -Eigenschaftensatz auf `true`, diese Methode bestimmt, ob die Ablaufverfolgung für die Seite aktiviert ist. Wenn dies der Fall ist, speichert Ablaufverfolgungsinformationen, die dem Steuerelement zugeordnete und rendert den Inhalt des Serversteuerelements auf der Seite.  
  
 Diese Methode wird bei der Wiedergabe automatisch von der Seite aufgerufen, aber durch Entwickler von benutzerdefinierten Steuerelementen überschrieben werden kann.  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.RenderChildren%2A> -Methode in ein benutzerdefiniertes Steuerelement. Sie bestimmt, ob das aktuelle Steuerelement untergeordnete Steuerelemente, in enthält dessen <xref:System.Web.UI.ControlCollection> Objekt. Wenn dies der Fall ist, verwendet die <xref:System.Web.UI.ControlCollection.Count%2A> Eigenschaft zum Durchlaufen der Auflistung. Da jedes untergeordnete Steuerelement gefunden wird, verwendet die <xref:System.Web.UI.Control.RenderControl%2A> Methode, um das untergeordnete Steuerelement und alle untergeordneten Steuerelemente auf der Seite gerendert. Die <xref:System.Web.UI.XhtmlTextWriter> -Objekt, das an diese Methode übergeben wird instanziiert, indem die <xref:System.Web.UI.Page.Render%2A> Methode.  
  
 [!code-csharp[Control_Sample_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#3)]
 [!code-vb[Control_Sample_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderControl(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.Adapters.ControlAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderControl (writer As HtmlTextWriter, adapter As ControlAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderControl(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::Adapters::ControlAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="member this.RenderControl : System.Web.UI.HtmlTextWriter * System.Web.UI.Adapters.ControlAdapter -&gt; unit" Usage="control.RenderControl (writer, adapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="adapter" Type="System.Web.UI.Adapters.ControlAdapter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the control content.</param>
        <param name="adapter">The <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> that defines the rendering.</param>
        <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object using a provided <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Web Pages können über eine Breite Palette von Geräten und Browsern, die Informationen aus dem Internet anfordern können verwendet werden. Die <xref:System.Web.UI.Control.Adapter%2A> -Eigenschaft gibt die <xref:System.Web.UI.Adapters.ControlAdapter> -Objekt, das das Steuerelement auf das anfordernde Gerät oder im Browserfenster gerendert wird.  
  
 Weitere Informationen zu Adaptern finden Sie unter [architektonische Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 Wenn ein Serversteuerelement <xref:System.Web.UI.Control.Visible%2A> -Eigenschaftensatz auf `true` Ablaufverfolgung für die Seite aktiviert ist, und mit dem Steuerelement verknüpfte Ablaufverfolgungsinformationen aufgezeichnet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" /> Methodenaufruf in benutzerdefinierten Steuerelementen die Basisklassenmethode, um sicherzustellen, dass Ablaufverfolgungsinformationen ordnungsgemäß aufgezeichnet wird.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="P:System.Web.HttpContext.Trace" />
      </Docs>
    </Member>
    <Member MemberName="RenderingCompatibility">
      <MemberSignature Language="C#" Value="public virtual Version RenderingCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RenderingCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.RenderingCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderingCompatibility As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ RenderingCompatibility { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingCompatibility : Version with get, set" Usage="System.Web.UI.Control.RenderingCompatibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with.</summary>
        <value>Die Version von ASP.NET, die HTML gerendert wird mit kompatibel sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET legt diese Eigenschaft auf den Wert von der `controlRenderingCompatibilityVersion` Attribut des der `pages` Element in der Datei "Web.config". Wenn die `controlRenderingCompatibilityVersion` Attribut in der Datei "Web.config" nicht festgelegt ist, der Standardwert ist die aktuelle Version von ASP.NET.  
  
> [!CAUTION]
>  Es ist ein öffentliche Set-Accessor für diese Eigenschaft, aber der Set-Accessor unterstützt die .NET Framework-Infrastruktur und ist nicht direkt aus Ihrem Code verwendet werden soll. Wenn Sie diesen Wert im Code festlegen, ist die Wirkung nicht vorhersehbar.  
  
 Jede Version von ASP.NET möglicherweise anders aus früheren Versionen Rendern von HTML. Z. B. in ASP.NET 3.5 verwendet wird Wenn die <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.Label> Steuerelement ist `false`, standardmäßig, rendert ASP.NET ein `span` Element, dessen `disabled` -Attribut auf "Disabled" festgelegt ist. In ASP.NET 4 hat standardmäßig die `span` Element wird mit einem cascading Stylesheet (CSS) gerendert `class` -Attribut anstelle der `disabled` Attribut. Dadurch können Sie die deaktivierte Darstellung des Steuerelements angeben und ungültige HTML-Datei gerendert. (In HTML 4.0 und XHTML 1.1 kann die `span` Element unterstützt nicht die `disabled` Attribut.)  
  
 Eine Webanwendung kann Code enthalten, die nicht ordnungsgemäß ausgeführt würde, wenn HTML-Rendering ändert. Um dieses Problem zu vermeiden, legen Sie die `controlRenderingCompatibilityVersion` Attribut des der `pages` Element in der Datei "Web.config", um die frühere Version anzugeben, um Kompatibilität mit zu verwalten. Wenn Sie festlegen, z. B. die <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft, um `3.5`, einen deaktivierten <xref:System.Web.UI.WebControls.Label> Steuerelement gerendert wird ein `disabled` Attribut und keine CSS-Klasse.  
  
> [!NOTE]
>  Wird die früheste Version, die Sie für diese Eigenschaft festlegen können `3.5`.  
  
 Um die Abwärtskompatibilität aufrechtzuerhalten, wenn Sie Visual Studio verwenden, um ein Webprojekt auf ASP.NET 4 aus einer früheren Version zu aktualisieren, legt Visual Studio automatisch die `controlRenderingCompatibilityVersion` -Attribut in der Datei "Web.config" `3.5`. Wenn Sie möchten eine aktualisierte Website zum Rendern von HTML mithilfe des Algorithmus, der in ASP.NET 4 eingeführt wurde, können Sie ändern oder Entfernen der `controlRenderingCompatibilityVersion` Attribut.  
  
 In den meisten Fällen, das Verhalten von dieser Eigenschaft gesteuert automatisch, und Sie müssen keine überprüfen Sie die <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft im Code. Jedoch, wenn Sie ein benutzerdefiniertes Steuerelement programmieren, müssen Sie möglicherweise Code einschließen möchten, die das Verhalten des Steuerelements auf Grundlage der Einstellung dieser Eigenschaft ändert. Beispielsweise kann ein benutzerdefiniertes Steuerelement für ASP.NET 4 zusammengesetzt werden, der <xref:System.Web.UI.WebControls.Label> Steuerelemente und das benutzerdefinierte Steuerelement könnte die deaktivierte Darstellung des Steuerelements angeben, indem Sie JavaScript-Code ändert generiert die `aspNetDisabled` Klasse. Dies funktioniert wie erwartet, wenn <xref:System.Web.UI.Control.RenderingCompatibility%2A> ist `4.0` oder höher. Jedoch abzurufenden dieselbe Wirkung, wenn <xref:System.Web.UI.Control.RenderingCompatibility%2A> ist `3.5`, Code für das benutzerdefinierte Steuerelement muss des Steuerelements festgelegt `CssClass` -Eigenschaft auf "AspNetDisabled" bei der <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> Eigenschaft ist `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      </Docs>
    </Member>
    <Member MemberName="ResolveAdapter">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Adapters.ControlAdapter ResolveAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveAdapter () As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Adapters::ControlAdapter ^ ResolveAdapter();" />
      <MemberSignature Language="F#" Value="abstract member ResolveAdapter : unit -&gt; System.Web.UI.Adapters.ControlAdapter&#xA;override this.ResolveAdapter : unit -&gt; System.Web.UI.Adapters.ControlAdapter" Usage="control.ResolveAdapter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the control adapter responsible for rendering the specified control.</summary>
        <returns>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> that will render the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Web Pages können über eine Breite Palette von Geräten, für das Anfordern von Seiten aus dem Internet werden, angezeigt werden. Die <xref:System.Web.UI.Control.ResolveAdapter%2A> Methodenrückgabe den Steuerelementadapter verantwortlich für das Rendern des Steuerelements auf den bestimmten Browser oder das Gerät, das die ASP.NET-Seite angefordert hat.  
  
 Der spezifische Adaptertyp zurückgegeben, hängt vom Typ des untergeordneten der <xref:System.Web.UI.Control> Klasse, die gerendert wird.  
  
 Weitere Informationen zu Adaptern finden Sie unter [architektonische Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClientUrl">
      <MemberSignature Language="C#" Value="public string ResolveClientUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveClientUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveClientUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ResolveClientUrl(System::String ^ relativeUrl);" />
      <MemberSignature Language="F#" Value="abstract member ResolveClientUrl : string -&gt; string&#xA;override this.ResolveClientUrl : string -&gt; string" Usage="control.ResolveClientUrl relativeUrl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">A URL relative to the current page.</param>
        <summary>Gets a URL that can be used by the browser.</summary>
        <returns>A fully qualified URL to the specified resource suitable for use on the browser.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.Control.ResolveClientUrl%2A> Methode, um eine URL-Zeichenfolge für die Verwendung geeignet vom Client zum Zugriff auf Ressourcen auf dem Webserver, wie Bilddateien, zurückzugeben enthält links zu zusätzlichen Seiten und So weiter.  
  
> [!NOTE]
>  Die von dieser Methode zurückgegebene URL wird relativ zum Ordner mit der Quelldatei, in der das Steuerelement instanziiert wird. Steuerelemente, wie diese Eigenschaft erben <xref:System.Web.UI.UserControl> und <xref:System.Web.UI.MasterPage>, eine vollqualifizierte URL relativ zum Steuerelement zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeUrl" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveUrl">
      <MemberSignature Language="C#" Value="public string ResolveUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUrl(System::String ^ relativeUrl);" />
      <MemberSignature Language="F#" Value="member this.ResolveUrl : string -&gt; string" Usage="control.ResolveUrl relativeUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">The URL associated with the <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> property.</param>
        <summary>Converts a URL into one that is usable on the requesting client.</summary>
        <returns>The converted URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `relativeUrl` -Parameter enthält eine absolute URL, die URL wird unverändert zurückgegeben. Wenn die `relativeUrl` -Parameter enthält eine relative URL, die diese URL eine relative URL geändert wird, die für den aktuellen Anforderungspfad richtig ist, damit der Browser die URL auflösen kann.  
  
 Betrachten Sie beispielsweise das folgende Szenario:  
  
-   Ein Client hat eine ASP.NET-Seite angefordert, die ein Benutzersteuerelement enthält, die ein Bild zugeordnet ist.  
  
-   Die ASP.NET-Seite befindet sich unter/Store/Page1.aspx.  
  
-   Das Benutzersteuerelement befindet sich unter /Store/UserControls/UC1.ascx.  
  
-   Die Datei befindet sich unter /UserControls/Images/Image1.jpg.  
  
 Wenn das Benutzersteuerelement an den relativen Pfad zu dem Bild (d. h. /Store/UserControls/Images/Image1.jpg) übergibt die <xref:System.Web.UI.Control.ResolveUrl%2A> -Methode, die Methode den Wert /Images/Image1.jpg zurück.  
  
 Diese Methode verwendet die <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Eigenschaft in die absolute URL aufgelöst. Die zurückgegebene URL wird für die Clientverwendung.  
  
 Weitere Informationen zu Ressourcenpfaden in einer Website finden Sie unter [ASP.NET Web Projektpfade](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
> [!NOTE]
>  Für mobile Webseiten nur, wenn Ihre Anwendung Sitzungen ohne Cookies verwendet oder möglicherweise Anfragen von mobilen Browsern, die Sitzungen ohne Cookies erfordern, mithilfe einer Tilde ("~") in einem Pfad kann dazu führen, versehentlich eine neue Sitzung erstellen, und gehen möglicherweise verloren Sitzungsdaten. Festlegen von Eigenschaften mit einem Pfad wie z. B. "~ /*Pfad"*, lösen Sie den Pfad durch Aufrufen der <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> mit einem Argument z. B. "~ /*Pfad"* vor der Zuweisung der Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Web.UI.WebControls.Image> Web Serversteuerelementobjekt und verwendet die <xref:System.Web.UI.Control.ResolveUrl%2A> Methode, um den Pfad zu dem Bild festgelegt, der vom gespeichert ist die <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> Eigenschaft.  
  
 [!code-csharp[Control_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_ResolveUrl/CS/control_resolveurl.cs#1)]
 [!code-vb[Control_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_ResolveUrl/VB/control_resolveurl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="relativeUrl" /> parameter contains <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Control.TemplateSourceDirectory" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="abstract member SaveControlState : unit -&gt; obj&#xA;override this.SaveControlState : unit -&gt; obj" Usage="control.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves any server control state changes that have occurred since the time the page was posted back to the server.</summary>
        <returns>Returns the server control's current state. If there is no state associated with the control, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Control.SaveControlState%2A> Methode zum Speichern von Zustandsinformationen, die für die Verwendung eines bestimmten Steuerelements erforderlich. Dieses Steuerelement Zustandsdaten werden getrennt von den Steuerelementdaten Ansichtszustand gespeichert.  
  
 Benutzerdefinierte Steuerelemente, die mithilfe der Steuerelementzustand aufrufen, müssen die <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Methode für die <xref:System.Web.UI.Control.Page%2A> vor dem Speichern der Steuerelementzustand.  
  
   
  
## Examples  
 Das folgende Codebeispiel setzt die <xref:System.Web.UI.Control.SaveControlState%2A> -Methode in ein benutzerdefiniertes ASP.NET-Steuerelement. Wenn diese Methode aufgerufen wird, bestimmt, ob die interne Eigenschaft `currentIndex` auf einen nicht standardmäßigen Wert festgelegt ist, und wenn dies der Fall ist, speichert den Wert Steuerelementzustand.  
  
 Die <xref:System.Web.UI.Control.OnInit%2A> Methode wird überschrieben, um das Aufrufen der <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Methode für die <xref:System.Web.UI.Control.Page%2A> um anzugeben, dass das benutzerdefinierte Steuerelement Steuerelementzustand verwendet.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Steuerelementzustand gespeichert wird, wird ein String-Objekt an den Client als eine Variable, die in einem HTML-gespeichert sind zurückgegeben <see langword="HIDDEN" /> Element. Überschreiben Sie diese Methode, um die Statusinformationen zur Verwendung in Ihrer Kontrolle zu extrahieren.  Steuerelementzustand ist für kleine Mengen von kritischen Daten, z. B. eine Seitenindex oder ein Schlüsselwort vorgesehen. Mithilfe der Steuerelementzustand für große Mengen von Daten kann seitenleistung negativ beeinflussen. Weitere Informationen finden Sie unter [ASP.NET State Management Overview] (http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="control.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</summary>
        <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ansichtszustand besteht in der Ansammlung der Werte der Eigenschaften eines Serversteuerelements. Diese Werte werden automatisch in des Serversteuerelements platziert <xref:System.Web.UI.Control.ViewState%2A> -Eigenschaft, die eine Instanz von der <xref:System.Web.UI.StateBag> Klasse. Der Wert dieser Eigenschaft wird dann nach speichern Status, Phase des Lebenszyklus des Serversteuerelements an ein Zeichenfolgenobjekt beibehalten. Weitere Informationen finden Sie unter [ASP.NET Seite Übersicht über den Lebenszyklus](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Wenn der Ansichtszustand gespeichert wird, wird dieser String-Objekt an den Client als eine Variable, die in einem HTML-gespeichert sind zurückgegeben `HIDDEN` Element. Wenn Sie ein benutzerdefiniertes Steuerelement mit einem benutzerdefinierten Ansichtszustand erstellen, der Ansichtszustand verwaltet werden kann explizit mit der <xref:System.Web.UI.Control.SaveViewState%2A> und <xref:System.Web.UI.Control.LoadViewState%2A> Methoden. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce). Informationen zum Implementieren einer benutzerdefinierten Sitzungsstatusanbieter finden Sie unter [implementieren eine Store-Sitzungsstatusanbieter](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.SaveViewState%2A> Methode in einer benutzerdefinierten ASP.NET-Serversteuerelement. Wenn diese Methode aufgerufen wird, bestimmt, ob das Steuerelement alle untergeordneten Steuerelemente hat und ob das enthaltende <xref:System.Web.UI.Page> Objekt ist das Ergebnis ein Postback. Wenn beide wahr sind, ändert der <xref:System.Web.UI.WebControls.Label.Text%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.Label> -Webserversteuerelement lesen `Custom Control Has Saved State`. Anschließend speichert den Ansichtszustand des Steuerelements als Array von Objekten, die mit dem Namen `allStates`.  
  
 [!code-csharp[Control_StateManagement#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#2)]
 [!code-vb[Control_StateManagement#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetDesignModeState : System.Collections.IDictionary -&gt; unit&#xA;override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="control.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control.</param>
        <summary>Sets design-time data for a control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.SetDesignModeState%2A> Methode speichert die Entwurfszeitdaten für ein Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um die Daten zur Entwurfszeit zu speichern, die das Steuerelement erfordert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetRenderMethodDelegate">
      <MemberSignature Language="C#" Value="public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRenderMethodDelegate(class System.Web.UI.RenderMethod renderMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRenderMethodDelegate(System::Web::UI::RenderMethod ^ renderMethod);" />
      <MemberSignature Language="F#" Value="member this.SetRenderMethodDelegate : System.Web.UI.RenderMethod -&gt; unit" Usage="control.SetRenderMethodDelegate renderMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMethod" Type="System.Web.UI.RenderMethod" />
      </Parameters>
      <Docs>
        <param name="renderMethod">The information necessary to pass to the delegate so that it can render the server control.</param>
        <summary>Assigns an event handler delegate to render the server control and its content into its parent control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nur aus Gründen der Implementierung angegeben; Sie sollten es niemals direkt aufrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTraceData">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets trace data for design-time tracing of rendering data.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberSignature Language="F#" Value="member this.SetTraceData : obj * obj -&gt; unit" Usage="control.SetTraceData (traceDataKey, traceDataValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="traceDataKey">The trace data key.</param>
        <param name="traceDataValue">The trace data value.</param>
        <summary>Sets trace data for design-time tracing of rendering data, using the trace data key and the trace data value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (tracedObject As Object, traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ tracedObject, System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberSignature Language="F#" Value="member this.SetTraceData : obj * obj * obj -&gt; unit" Usage="control.SetTraceData (tracedObject, traceDataKey, traceDataValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracedObject" Type="System.Object" />
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tracedObject">The traced object.</param>
        <param name="traceDataKey">The trace data key.</param>
        <param name="traceDataValue">The trace data value.</param>
        <summary>Sets trace data for design-time tracing of rendering data, using the traced object, the trace data key, and the trace data value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Web.UI.Control.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the container that hosts the current control when rendered on a design surface.</summary>
        <value>Ein <see cref="T:System.ComponentModel.ISite" /> enthält Informationen über den Container, die in das Steuerelement gehostet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bindet ein Standort ein <xref:System.ComponentModel.Component> -Objekt an eine <xref:System.ComponentModel.Container> Objekt, und ermöglicht die Kommunikation zwischen den beiden. Darüber hinaus eine Möglichkeit für den Container, seine Komponenten zu verwalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The control is a <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</exception>
        <altmember cref="T:System.ComponentModel.ISite" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public virtual string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.Control.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the skin to apply to the control.</summary>
        <value>Der Name des Designs, das auf das Steuerelement angewendet werden soll. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für ein Steuerelement verfügbaren Designs sind in eine oder mehrere Skindateien in einem Designverzeichnis enthalten. Die <xref:System.Web.UI.Control.SkinID%2A> Eigenschaft gibt an, welche dieser Designs auf das Steuerelement angewendet. Ein Design bezieht sich auf einem bestimmten Steuerelement; Design-Einstellungen zwischen Steuerelementen verschiedener Typen können nicht freigegeben werden.  
  
 Wenn Sie nicht Festlegen der <xref:System.Web.UI.Control.SkinID%2A> -Eigenschaft, falls eine definiert ist, verwendet ein Steuerelement das Standarddesign. Z. B. wenn ein Design ohne ID definiert wurde für eine <xref:System.Web.UI.WebControls.Image> zu steuern, gilt dieses Design für alle <xref:System.Web.UI.WebControls.Image> Steuerelemente, die ein Design nach ID nicht explizit verweisen und für die nicht zum Deaktivieren des Designs. Wenn für ein Design mit der ID definiert ist ein <xref:System.Web.UI.WebControls.Image> zu steuern, und klicken Sie dann dieses Design, gilt nur für <xref:System.Web.UI.WebControls.Image> Steuerelemente, deren <xref:System.Web.UI.Control.SkinID%2A> Eigenschaftensatz zu dieser ID an.  
  
 Wenn keine Skin-Dateien in einem Designverzeichnis ein Design mit dem angegebenen enthalten <xref:System.Web.UI.Control.SkinID%2A> -Eigenschaft, ein <xref:System.ArgumentException> wird zur Laufzeit ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The style sheet has already been applied.  \- or -  The <see langword="Page_PreInit" /> event has already occurred.  \- or -  The control was already added to the <see langword="Controls" /> collection.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlBuilderAccessor.ControlBuilder">
      <MemberSignature Language="C#" Value="System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ControlBuilder As ControlBuilder Implements IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ControlBuilder ^ System.Web.UI.IControlBuilderAccessor.ControlBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlBuilderAccessor.ControlBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder" />.</summary>
        <value>Die <see cref="T:System.Web.UI.ControlBuilder" /> , das das Steuerelement erstellt, andernfalls <see langword="null" /> Wenn keine-Generator verwendet wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IControlBuilderAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.GetDesignModeState">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Function GetDesignModeState () As IDictionary Implements IControlDesignerAccessor.GetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.GetDesignModeState() = System::Web::UI::IControlDesignerAccessor::GetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />.</summary>
        <returns>An <see cref="T:System.Collections.IDictionary" /> of the control state.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IControlDesignerAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetDesignModeState">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub SetDesignModeState (data As IDictionary) Implements IControlDesignerAccessor.SetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System::Collections::IDictionary ^ data) = System::Web::UI::IControlDesignerAccessor::SetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the control.</param>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IControlDesignerAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetOwnerControl">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub SetOwnerControl (owner As Control) Implements IControlDesignerAccessor.SetOwnerControl" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System::Web::UI::Control ^ owner) = System::Web::UI::IControlDesignerAccessor::SetOwnerControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">The owner of the control.</param>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IControlDesignerAccessor>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Web.UI.IControlDesignerAccessor> Schnittstelle wird von einem Steuerelement-Designer verwendet, um für das Steuerelement zur Entwurfszeit Aktionen ausführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="owner" /> is set to the current control.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.UserData">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UserData As IDictionary Implements IControlDesignerAccessor.UserData" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlDesignerAccessor.UserData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IControlDesignerAccessor.UserData" />.</summary>
        <value>Ein <see cref="T:System.Collections.IDictionary" /> , das Informationen über das Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IControlDesignerAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.DataBindings">
      <MemberSignature Language="C#" Value="System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataBindings As DataBindingCollection Implements IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::DataBindingCollection ^ System.Web.UI.IDataBindingsAccessor.DataBindings { System::Web::UI::DataBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IDataBindingsAccessor.DataBindings" />.</summary>
        <value>Die Auflistung von datenbindungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IDataBindingsAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.HasDataBindings">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasDataBindings As Boolean Implements IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.HasDataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings" />.</summary>
        <value>
          <see langword="true" /> Wenn das Steuerelement, Datenbindung Logik enthält; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IDataBindingsAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.Expressions">
      <MemberSignature Language="C#" Value="System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expressions As ExpressionBindingCollection Implements IExpressionsAccessor.Expressions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ExpressionBindingCollection ^ System.Web.UI.IExpressionsAccessor.Expressions { System::Web::UI::ExpressionBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.Expressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ExpressionBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IExpressionsAccessor.Expressions" />.</summary>
        <value>Ein <see cref="T:System.Web.UI.ExpressionBindingCollection" /> mit <see cref="T:System.Web.UI.ExpressionBinding" /> Objekte, die die Eigenschaften und Ausdrücke für ein Steuerelement darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IExpressionsAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.HasExpressions">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasExpressions As Boolean Implements IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IExpressionsAccessor.HasExpressions { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.HasExpressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IExpressionsAccessor.HasExpressions" />.</summary>
        <value>
          <see langword="true" /> Wenn das Steuerelement Eigenschaften durch Ausdrücke festgelegt wurden; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IExpressionsAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IParserAccessor.AddParsedSubObject">
      <MemberSignature Language="C#" Value="void IParserAccessor.AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddParsedSubObject (obj As Object) Implements IParserAccessor.AddParsedSubObject" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IParserAccessor.AddParsedSubObject(System::Object ^ obj) = System::Web::UI::IParserAccessor::AddParsedSubObject;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to add.</param>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.Control>-Instanz in eine <xref:System.Web.UI.IParserAccessor>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.TemplateControl TemplateControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateControl TemplateControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateControl" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateControl As TemplateControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::TemplateControl ^ TemplateControl { System::Web::UI::TemplateControl ^ get(); void set(System::Web::UI::TemplateControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateControl : System.Web.UI.TemplateControl with get, set" Usage="System.Web.UI.Control.TemplateControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a reference to the template that contains this control.</summary>
        <value>Die <see cref="T:System.Web.UI.TemplateControl" /> -Instanz, die dieses Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Web.UI.Control> Instanz ist Teil einer Steuerelementvorlage die <xref:System.Web.UI.Control.TemplateControl%2A> Eigenschaft enthält einen Verweis auf das Steuerelement enthält. Weitere Informationen finden Sie unter der <xref:System.Web.UI.TemplateControl?displayProperty=nameWithType> Dokumentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public virtual string TemplateSourceDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TemplateSourceDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateSourceDirectory : string" Usage="System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> that contains the current server control.</summary>
        <value>Das virtuelle Verzeichnis für die Seite oder das Benutzersteuerelement, die das Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Eigenschaft gibt den Pfad zu der Seite oder das Benutzersteuerelement, das das aktuelle Steuerelement enthält. Wenn auf der Webseite befindet sich z. B. http://www.contoso.com/application/subdirectory, die <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Eigenschaft gibt "Application/Unterverzeichnis" zurück.  
  
 Um die Anwendung relativen virtuellen Pfad zurückzugeben ("~ / Unterverzeichnis"), verwenden Sie die <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Eigenschaft zweimal. Beim ersten verwendet eine <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=nameWithType> Methodenaufruf zum Abrufen des Pfads in das Verzeichnis, in dem sich das Steuerelement befindet. Befindet sich im zweiten Mal ein <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> -Methodenaufruf, um die Liste aller in diesem Verzeichnis enthaltenen Dateien abzurufen.  
  
 [!code-csharp[Control_TemplateSourceDirectory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_TemplateSourceDirectory/CS/control_templatesourcedirectory.cs#2)]
 [!code-vb[Control_TemplateSourceDirectory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_TemplateSourceDirectory/VB/control_templatesourcedirectory.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="control.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes tracking of view-state changes to the server control so they can be stored in the server control's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird automatisch aufgerufen, am Ende der <xref:System.Web.UI.Control.Init> Ereignis im Lebenszyklus des Serversteuerelements.  
  
 Aufgerufen Sie diese Methode wird, wenn Sie auf Vorlagen basierenden datengebundenen Steuerelementen entwickeln. Diese Methode weist ASP.NET zum Überwachen von Änderungen an den Ansichtszustand des Serversteuerelements, die erforderlich ist, wenn Sie außer Kraft setzen die <xref:System.Web.UI.Control.DataBind%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgende Beispiel überschreibt die <xref:System.Web.UI.Control.DataBind%2A> Methode in einer benutzerdefinierten ASP.NET-Serversteuerelement. Er beginnt, durch Aufrufen der Basis <xref:System.Web.UI.Control.OnDataBinding%2A> -Methode, und klicken Sie dann mithilfe der <xref:System.Web.UI.ControlCollection.Clear%2A> Methode, um alle untergeordneten Steuerelemente löschen und die <xref:System.Web.UI.Control.ClearChildViewState%2A> Methode, um delete-Ansichtszustand-Einstellungen für die untergeordneten Steuerelemente gespeichert. Schließlich die <xref:System.Web.UI.Control.ChildControlsCreated%2A> -Eigenschaftensatz auf `true`. Vom Steuerelement verwendet, klicken Sie dann die <xref:System.Web.UI.Control.IsTrackingViewState%2A> Eigenschaft, um zu bestimmen, ob die änderungsnachverfolgung Ansichtszustand für das Steuerelement aktiviert ist. Wenn sie nicht aktiviert ist, die <xref:System.Web.UI.Control.TrackViewState%2A> -Methode aufgerufen wird.  
  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public virtual string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.Control.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique, hierarchically qualified identifier for the server control.</summary>
        <value>Der vollqualifizierte Bezeichner für das Serversteuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft unterscheidet sich von der <xref:System.Web.UI.Control.ID%2A> , Eigenschaft, die die <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaft enthält den Bezeichner für das Webserversteuerelement Benennungscontainer. Dieser Bezeichner wird automatisch generiert, wenn eine Seitenanforderung verarbeitet wird.  
  
 Diese Eigenschaft ist besonders wichtig in Unterscheidung Serversteuerelemente enthaltenen Datenbindungsfunktionen Serversteuerelement, die wiederholt wird. Die wiederholten-Steuerelement <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, und <xref:System.Web.UI.WebControls.GridView> Webserversteuerelemente (oder alle benutzerdefinierten Serversteuerelemente, die Sie erstellen, die Funktionalität wiederholt wird, wenn die Daten gebunden sind), dient als die Namenscontainer für seine untergeordneten Steuerelemente. Dies bedeutet, dass es einen eindeutigen Namespace für seine untergeordneten Steuerelemente erstellt, damit ihre <xref:System.Web.UI.Control.ID%2A> Eigenschaftswerte keine Konflikte verursachen.  
  
 Z. B., wenn Sie eine ASP.NET einschließen <xref:System.Web.UI.WebControls.Label> -Webserversteuerelement in eine <xref:System.Web.UI.WebControls.Repeater> -Steuerelement, und weisen die <xref:System.Web.UI.WebControls.Label> Steuerelement ein <xref:System.Web.UI.Control.ID%2A> Eigenschaftswert `MyLabel`, und die <xref:System.Web.UI.WebControls.Repeater> ein <xref:System.Web.UI.Control.ID%2A> von `MyRepeater`. Wenn Sie zum Binden von Daten der <xref:System.Web.UI.WebControls.Repeater> auf eine <xref:System.Collections.ArrayList> Objekt mit drei Einträge, die den resultierenden <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaften für jede Instanz des der <xref:System.Web.UI.WebControls.Label> Serversteuerelemente sind `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, und `MyRepeater$ctl02$MyLabel`.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Collections.ArrayList> Objekt mit drei Textzeichenfolgen aufgefüllt, und bindet ein <xref:System.Web.UI.WebControls.Repeater> -Webserversteuerelement auf die Daten in der <xref:System.Collections.ArrayList> beim Laden der Seite. Der Code Ruft die <xref:System.Web.UI.Control.UniqueID%2A> -Eigenschaft für jedes untergeordnete Steuerelement generiert werden, während der Datenbindung. Der Code generiert drei Versionen von der <xref:System.Web.UI.WebControls.Label> Steuerelement und schreibt deren `UniqueID` Eigenschaftswerte zur Seite.  
  
 [!code-aspx-csharp[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/CS/WebFormsControlIdResolution12.aspx#2)]
 [!code-aspx-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/VB/WebFormsControlIdResolution12.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event EventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unload;" />
      <MemberSignature Language="F#" Value="member this.Unload : EventHandler " Usage="member this.Unload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the server control is unloaded from memory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serversteuerelemente müssen alle endgültigen Bereinigung, z. B. das Schließen von Dateien, Datenbankverbindungen und Verwerfen von Objekten in dieser Phase des Steuerelementlebenszyklus vor dem die Instanz entladen ausführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.Control.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the control checks client input from the browser for potentially dangerous values.</summary>
        <value>Ein Wert, der bestimmt, ob der Clienteingabe überprüft. Werte können umfassen <see cref="F:System.Web.UI.ValidateRequestMode.Disabled" />, <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />, und <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />. Die Standardeinstellung ist <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />, was bedeutet, dass das Steuerelement den Wert von dessen übergeordnetem Element abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur anforderungsüberprüfung finden Sie unter <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.Control.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</summary>
        <value>Eine Instanz von der <see cref="T:System.Web.UI.StateBag" /> Klasse, die Informationen zum Ansichtszustand des Serversteuerelements enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ansichtszustand eines Serversteuerelements besteht in der Ansammlung der alle Eigenschaftswerte. Um diese Werte über HTTP-Anforderungen beizubehalten, ASP.NET-Serversteuerelemente verwenden Sie diese Eigenschaft, die eine Instanz von der <xref:System.Web.UI.StateBag> -Klasse, um die Eigenschaftswerte zu speichern. Die Werte werden dann als Variable an ein ausgeblendetes HTML-Eingabeelement übergeben, wenn nachfolgende Anforderungen verarbeitet werden. Weitere Informationen zum Speichern von Server-steuerelementansichtzustand finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Ansichtszustand ist standardmäßig für alle Serversteuerelemente aktiviert, es gibt jedoch Situationen, in denen Sie deaktivieren möchten. Weitere Informationen finden Sie unter [Übersicht über die Leistung von ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 Informationen zu Wörterbüchern und deren Verwendung finden Sie unter [Auflistungen und Datenstrukturen](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Implementieren einer `Text` -Eigenschaft, die ihren Wert aus des Steuerelements abruft und speichert <xref:System.Web.UI.Control.ViewState%2A> Eigenschaft.  
  
 [!code-csharp[SysWebUIControlViewState#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SysWebUIControlViewState/CS/controlviewstate.cs#2)]
 [!code-vb[SysWebUIControlViewState#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SysWebUIControlViewState/VB/controlviewstate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateIgnoresCase">
      <MemberSignature Language="C#" Value="protected virtual bool ViewStateIgnoresCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewStateIgnoresCase" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewStateIgnoresCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ViewStateIgnoresCase { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateIgnoresCase : bool" Usage="System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.StateBag" /> object is case-insensitive.</summary>
        <value>
          <see langword="true" /> Wenn die <see cref="T:System.Web.UI.StateBag" /> Instanz wird Groß-/Kleinschreibung, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode, wenn Sie ein benutzerdefiniertes Steuerelement, das seinen Ansichtszustand speichert erstellen, ohne dass dabei Fall berücksichtigt. In Fall daher mehrere Objekte mit demselben Schlüssel, aber mit abweichender Groß-/Kleinschreibung gespeichert werden die <xref:System.Web.UI.StateBag> zugeordneten der <xref:System.Web.UI.Control.ViewState%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.Control.ViewStateIgnoresCase%2A> -Eigenschaft zum Zurückgeben von `true`.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#2)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateMode ViewStateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewStateMode As ViewStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ViewStateMode ViewStateMode { System::Web::UI::ViewStateMode get(); void set(System::Web::UI::ViewStateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateMode : System.Web.UI.ViewStateMode with get, set" Usage="System.Web.UI.Control.ViewStateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the view-state mode of this control.</summary>
        <value>Der Ansichtszustand Modus dieses Steuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Web.UI.Control.ViewStateMode%2A> Eigenschaft zum Anzeigen des Status für ein einzelnes Steuerelement zu aktivieren, selbst wenn der Ansichtszustand für die Seite deaktiviert ist. Weitere Informationen zum Ansichtszustand und Steuerelementzustand finden Sie unter der <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft.  
  
 Zum Anzeigen des Status für eine Seite zu deaktivieren und diese für ein bestimmtes Steuerelement auf der Seite zu aktivieren, legen die <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft der Seite und das Steuerelement `true`, legen die <xref:System.Web.UI.Control.ViewStateMode%2A> Eigenschaft der Seite, um <xref:System.Web.UI.ViewStateMode.Disabled>, und legen Sie die <xref:System.Web.UI.Control.ViewStateMode%2A> Eigenschaft der die Steuerung an <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 Der Standardwert der <xref:System.Web.UI.Control.ViewStateMode%2A> -Eigenschaft für eine Seite ist <xref:System.Web.UI.ViewStateMode.Enabled>. Der Standardwert der <xref:System.Web.UI.Control.ViewStateMode%2A> -Eigenschaft für ein Webserversteuerelement auf einer Seite ist <xref:System.Web.UI.ViewStateMode.Inherit>. Als Ergebnis, wenn Sie diese Eigenschaft nicht auf der Seite oder die Steuerungsebene, den Wert der Festlegen der <xref:System.Web.UI.Control.EnableViewState%2A> Eigenschaft Ansichtszustand das Verhalten bestimmt wird.  
  
 Die <xref:System.Web.UI.Control.ViewStateMode%2A> Eigenschaft einer Seite oder ein Steuerelement verfügt über ein nur wirksam, wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `true`. Wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`, Ansichtszustand ist jetzt deaktiviert werden, selbst wenn die <xref:System.Web.UI.Control.ViewStateMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to set this property to a value that is not in the <see cref="T:System.Web.UI.ViewStateMode" /> enumeration.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a server control is rendered as UI on the page.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement auf der Seite sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft ist `false`, das Webserversteuerelement wird nicht gerendert. Sie sollten dies berücksichtigen, wenn das Layout der Seite zu organisieren.  
  
> [!NOTE]
>  Wenn ein Container-Steuerelement nicht gerendert wird, alle Steuerelemente, die es enthält nicht gerendert werden, auch wenn Sie festlegen, die <xref:System.Web.UI.Control.Visible%2A> Eigenschaft für ein einzelnes Steuerelement zu `true`. In diesem Fall die einzelnen steuerelementrückgabe `false` für die <xref:System.Web.UI.Control.Visible%2A> Eigenschaft auch, wenn Sie sie explizit zum festgelegt haben `true`. (D. h., wenn die `Visible` Eigenschaft des übergeordneten Steuerelements festgelegt ist, um `false`, das untergeordnete Steuerelement erbt diese Einstellung und die Einstellung hat Vorrang vor einer lokalen Einstellung.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>