<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="404e57c4b8538315580af86b0c6bad658086f30b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388394" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Ermöglicht datengebundenen ASP.NET-Steuerelementen, z. B. <see cref="T:System.Web.UI.WebControls.DetailsView" /> und <see cref="T:System.Web.UI.WebControls.FormView" />, automatische Bindungen an ein ASP.NET-Datenquellensteuerelement in auf Vorlagen basierenden Inhaltsabschnitten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.IBindableTemplate> -Schnittstelle bietet eine Möglichkeit, Daten gebundene Steuerelemente, wie <xref:System.Web.UI.WebControls.DetailsView>z <xref:System.Web.UI.WebControls.GridView>. b <xref:System.Web.UI.WebControls.FormView>., und, an <xref:System.Web.UI.WebControls.ObjectDataSource> Daten zu binden, die von einem ASP.NET-Datenquellen <xref:System.Web.UI.WebControls.SqlDataSource>Steuerelement bereitgestellt werden, z. b. oder, wenn die das Daten gebundene Steuerelement enthält Vorlagen basierten Inhalt.  
  
> [!NOTE]
>  Seiten Entwickler implementieren die <xref:System.Web.UI.IBindableTemplate> -Schnittstelle nicht. Entwickler, die benutzerdefinierte Daten gebundene Steuerelemente <xref:System.Web.UI.IBindableTemplate> erstellen, können Objekte in Implementierungen <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> der-Methode und der <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> -Methode bearbeiten <xref:System.Web.UI.IBindableTemplate> , aber keine eigenen Objekte implementieren.  
  
 Daten gebundene Steuerelemente, wie <xref:System.Web.UI.WebControls.GridView> z. b. in der Regel, berücksichtigen Ihre untergeordneten Steuerelement Strukturen und können daher Werte an Sie binden, Werte daraus extrahieren und diese Werte zwischen dem Daten gebundenen Steuerelement und einem Datenquellen-Steuerelement übergeben, wenn die Datenbindung erfolgt. . Wenn ein Seiten Entwickler jedoch Vorlagen basierten Inhalt für ein Daten gebundenes Steuerelement definiert, sind die untergeordneten Steuerelemente in der Vorlage für das übergeordnete Daten gebundene Steuerelement nicht sichtbar: das übergeordnete Element kann den untergeordneten Inhalt Rendering (Da Steuerelemente effektiv selbst dargestellt werden). Sie kann jedoch nicht die Werte dieser untergeordneten Steuerelemente extrahieren, um Sie an den Update-, INSERT-oder DELETE-Vorgang eines zugeordneten Datenquellen-Steuer Elements zu übergeben In Daten Bindungs Szenarios ist der Inhalt der Vorlage für ein übergeordnetes Daten gebundenes Steuerelement nicht transparent. Die `Bind` -Syntax ermöglicht dem Daten gebundenen Steuerelement das Extrahieren der Werte aus einem Daten gebundenen Steuerelement innerhalb einer <xref:System.Web.UI.IBindableTemplate> -Instanz.  
  
 Die Datenbindung kann unidirektional oder bidirektional sein. (Diese Bindungs Richtungen werden durch die <xref:System.ComponentModel.BindingDirection> -Enumeration definiert.) Die unidirektionale Datenbindung ist eine beliebige Datenbindung, die in ausgehender Richtung ausgeführt wird, von einem Datenquellen-Steuerelement bis zur Daten gebundenen Steuerung. Beispielsweise umfasst jedes Daten Lese Szenario eine unidirektionale Datenbindung. Für eine unidirektionale Datenbindung können Sie eine unidirektionale Daten Bindungs`<%# Eval("fieldname") %>`Syntax () in Vorlagen basierten Inhalten verwenden und müssen keine bidirektionale ASP.NET-Daten Bindungs Syntax verwenden. Die bidirektionale Datenbindung beschreibt die Datenbindung in eingehender Richtung von dem Daten gebundenen Steuerelement an das Datenquellen-Steuerelement. Automatische Bearbeitungs-, Einfüge-und Lösch Szenarien mit ASP.NET-Daten gebundenen und Datenquellen-Steuerelementen sind bidirektionale Daten Bindungs Szenarien. In diesen Szenarien werden bidirektionale Daten Bindungs Ausdrücke`<%# Bind("fieldname") %>`() verwendet. Die <xref:System.Web.UI.IBindableTemplate> -Schnittstelle und die ASP.NET-Infrastruktur unterstützen die automatische, deklarative bidirektionale Datenbindung zwischen ASP.NET-Datenquellen-Steuerelementen und Vorlagen Inhalt. Weitere Informationen zu ASP.NET-Daten Bindungs Ausdrücken und-Syntax finden [Sie unterbinden an Datenbanken](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) und [Daten Bindungs Ausdrücke (Übersicht](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)).  
  
 Auf Vorlagen basierende Inhalte für Daten gebundene Steuerelemente werden am häufigsten deklarativ definiert. In der folgenden Tabelle werden die Prozesse beschrieben, die am häufigsten zum Binden von Vorlagen basierten Daten an Daten gebundene Steuerelemente verwendet werden.  
  
|Daten gebundenes Steuerelement|Prozess|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Das Daten gebundene Steuerelement wird mithilfe der `DataSourceID` -Eigenschaft des Datenquellen-Steuer Elements an Daten gebunden, und der Inhalt der Vorlage wird in einer <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>- <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> ,-oder-Eigenschaft definiert.|  
|<xref:System.Web.UI.WebControls.GridView>|Das Daten gebundene Steuerelement wird mithilfe der `DataSourceID` -Eigenschaft des Datenquellen-Steuer Elements an Daten gebunden, und der Inhalt der Vorlage wird in einer <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> -Eigenschaft oder-Eigenschaft definiert. Das <xref:System.Web.UI.WebControls.GridView> -Steuerelement unterstützt keinen Einfügevorgang.|  
|<xref:System.Web.UI.WebControls.FormView>|Das Daten gebundene Steuer `DataSourceID` Element wird mithilfe der-Eigenschaft an Daten gebunden, und der Inhalt der Vorlage wird in <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>einer <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>-,- <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> oder-Eigenschaft oder in <xref:System.Web.UI.WebControls.TemplateField> einem-Objekt definiert.|  
  
 Die <xref:System.Web.UI.WebControls.DataList> - <xref:System.Web.UI.WebControls.Repeater> und-Steuerelemente unterstützen keine automatischen bidirektionalen Daten Bindungs Szenarien.  
  
 ASP.NET erstellt implizit ein <xref:System.Web.UI.IBindableTemplate> Objekt, wenn vorlagenbasierte Inhalte, die an ein ASP.NET-Datenquellen Steuerelement innerhalb der Vorlage gebunden werden, analysiert werden. Insbesondere erstellt der ASP.NET-Parser eine Instanz der <xref:System.Web.UI.CompiledBindableTemplateBuilder> -Klasse, wenn er Vorlagen Inhalt analysiert, der die ASP.NET-Daten Bindungs Syntax verwendet, und ASP.NET-Webserver Steuerelemente enthält, die die Datenbindung unterstützen. Diese ASP.NET-Server Steuerelemente werden durch das <xref:System.ComponentModel.BindableAttribute> -Attribut gekennzeichnet.  
  
 Die <xref:System.Web.UI.IBindableTemplate> -Schnittstelle definiert eine <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>Methode,. Diese Methode ist für die bidirektionale Datenbindung definiert, sodass ein Daten gebundenes Steuerelement automatisch Name/Wert-Paare aus Vorlagen basierten Inhalten extrahieren und die Paare zur Laufzeit an ein Datenquellen Steuerelement übergeben kann. Damit die automatische Datenbindung erfolgreich ist, müssen die Feldnamen, die aus dem Vorlagen Inhalt <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> der-Methode extrahiert wurden, mit den Parameternamen in einem zugeordneten Datenquellen-Steuerelement identisch sein. Steuerelement Entwickler nennen <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> die-Methode explizit nur innerhalb Ihrer <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Implementierungen von oder einer anderen ähnlichen Methode eines benutzerdefinierten Daten gebundenen Steuer Elements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, <xref:System.Web.UI.WebControls.FormView> wie ein Steuerelement auf Vorlagen basierende Inhalte deklarativ definieren, an die von <xref:System.Web.UI.WebControls.SqlDataSource> einem-Steuerelement bereitgestellten Daten binden und vorhandene Datensätze anzeigen und bearbeiten kann. Der ASP.NET-Parser analysiert den Vorlagen Inhalt und erstellt zur Laufzeit <xref:System.Web.UI.IBindableTemplate> ein Objekt, das die Werte aus dem <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement an die Daten Bindungs Bereiche binden kann, die in der Vorlage durch die unidirektionale ASP.NET-Daten Bindungs Syntax`<%# Eval("fieldname") %>`definiertsind.) und bidirektionale Daten Bindungs Syntax (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Dieses Steuerelement verfügt über ein Textfeld, das Benutzereingaben akzeptiert. Dies stellt ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Das <see cref="T:System.Web.UI.Control" />, aus dem die Name-Wert-Paare extrahiert werden, die in Szenarios mit bidirektionaler Datenbindung vom datengebundenen Steuerelement an ein zugeordnetes Datenquellensteuerelement übergeben werden</param>
        <summary>Ruft beim Implementieren durch eine Klasse eine Gruppe von Name-Wert-Paaren für Werte ab, die im auf Vorlagen basierenden Inhalt mithilfe der Syntax für bidirektionale ASP.NET-Datenbindung gebunden wurden.</summary>
        <returns>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> von Name-Wert-Paaren. Der Name stellt den Namen eines Steuerelements in dem auf Vorlagen basierenden Inhalt dar, und der Wert ist der aktuelle Wert eines Eigenschaftswerts, der mithilfe der Syntax für bidirektionale ASP.NET-Datenbindung gebunden wurde.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Eine <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> -Methode muss den folgenden Regeln entsprechen: 
Wenn für ein bestimmtes Feld mehr als eine Bindung vorhanden ist, wird die letzte gefundene Bindung verwendet.  
  
Um in der <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> -Methode auf den Bezeichner eines Steuer Elements zu verweisen, muss das Steuerelement zur Analysezeit auch über eine benutzerdefinierte ID-Eigenschaft verfügen. Wenn keine ID vorhanden ist, führt dies zu einem Analysefehler.  
  
-Bidirektional ASP.net die Daten Bindungs Syntax ist nur in einer <see cref="T:System.Web.UI.ITemplate" /> -Eigenschaft oder <see cref="T:System.Web.UI.IBindableTemplate" /> -Eigenschaft eines Daten gebundenen Steuer Elements gültig.</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>
