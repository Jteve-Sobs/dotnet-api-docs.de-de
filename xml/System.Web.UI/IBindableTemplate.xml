<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9a6dbfe48dcaff93c88cfbf3ef377466040ef32" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37531414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Ermöglicht datengebundenen ASP.NET-Steuerelementen, z. B. <see cref="T:System.Web.UI.WebControls.DetailsView" /> und <see cref="T:System.Web.UI.WebControls.FormView" />, automatische Bindungen an ein ASP.NET-Datenquellensteuerelement in auf Vorlagen basierenden Inhaltsabschnitten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.IBindableTemplate> Schnittstelle bietet eine Möglichkeit für ASP.NET von datengebundenen Steuerelementen, z. B. <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, und <xref:System.Web.UI.WebControls.FormView>, zum Binden an Daten, die vom Datenquellen-Steuerelement, ein ASP.NET wie z. B. <xref:System.Web.UI.WebControls.ObjectDataSource> oder <xref:System.Web.UI.WebControls.SqlDataSource>, wenn die vom datengebundenen Steuerelement enthält, auf Vorlagen basierenden Inhalten.  
  
> [!NOTE]
>  Seitenentwickler implementiert nicht die <xref:System.Web.UI.IBindableTemplate> Schnittstelle. Entwickler, die Erstellung benutzerdefinierter datengebundene Steuerelemente bearbeiten können <xref:System.Web.UI.IBindableTemplate> Objekte in den Implementierungen der <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> und <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> Methoden, aber nicht implementieren ihre eigenen <xref:System.Web.UI.IBindableTemplate> Objekte.  
  
 Datengebundene Steuerelemente wie z. B. <xref:System.Web.UI.WebControls.GridView> in der Regel kennen ihre untergeordneten Steuerelement-Strukturen, und können daher binden Werte darauf, Werte aus ihnen zu extrahieren und diese Werte zwischen dem vom datengebundenen Steuerelement und ein Datenquellen-Steuerelement übergeben werden, wenn die Datenbindung tritt auf, . Wenn ein Entwickler auf Vorlagen basierenden Inhalt für ein vom datengebundenen Steuerelement definiert, die untergeordneten Steuerelemente in der Vorlage sind jedoch nicht für das übergeordnete Element vom datengebundenen Steuerelement sichtbar: Rendern des übergeordneten untergeordneten Inhalt (da tatsächlich selbst Rendern von Steuerelementen), aber es kann nicht extrahiert werden die Werte dieser untergeordneten Steuerelemente an eine zugeordnete Datenquellen-Steuerelements Update, Insert oder Delete-Vorgang übergeben. In Szenarios mit Datenbindung ist auf Vorlagen basierenden Inhalten für eine übergeordnete vom datengebundenen Steuerelement nicht transparent ist. Die `Bind` Syntax ermöglicht es dem vom datengebundenen Steuerelement zum Extrahieren der Werte von einem Steuerelement Datenbindung in einem <xref:System.Web.UI.IBindableTemplate> Instanz.  
  
 Die Datenbindung kann uni- oder bidirektional sein. (Diese Anweisungen für die Bindung definieren, indem die <xref:System.ComponentModel.BindingDirection> Enumeration.) Datenbindung ist, dass eine Datenbindung in eine ausgehende Richtung, die vom Datenquellen-Steuerelement vom datengebundenen Steuerelement ausgeführt. alle Daten vom Lesen aus einer Szenario umfasst z. B. unidirektionale Datenbindung. Für die unidirektionale Datenbindung, können Sie unidirektionale Datenbindungssyntax (`<%# Eval("fieldname") %>`) in auf Vorlagen basierenden Inhalten und müssen nicht mit der Syntax für bidirektionale Datenbindung. Bidirektionale Datenbindung wird die Datenbindung in eingehender Richtung, aus dem datengebundenen Steuerelement, das Datenquellen-Steuerelement beschrieben. Automatische bearbeiten, INSERT- und Delete-Szenarien, die mit ASP.NET Datenbindung und Datenquellen-Steuerelemente sind bidirektionale Datenbindung-Szenarien. Diese Szenarien verwenden, bidirektionale Datenbindungsausdrücke (`<%# Bind("fieldname") %>`). Die <xref:System.Web.UI.IBindableTemplate> Schnittstelle und die Infrastruktur von ASP.NET automatisch, deklarative, bidirektionale Datenbindung zwischen ASP.NET Datenquellen-Steuerelemente sowie auf Vorlagen basierenden Inhalten zu unterstützen. Weitere Informationen zur Syntax von Datenbindungsausdrücken ASP.NET und finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) und [Ausdrücke Übersicht über die Datenbindung](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Auf Vorlagen basierenden Inhalten für datengebundene Steuerelemente wird am häufigsten deklarativ definiert werden. Die folgende Tabelle beschreibt die Prozesse, die am häufigsten verwendet, um auf Vorlagen basierenden Daten an datengebundene Steuerelemente binden.  
  
|Vom datengebundenen Steuerelement|Prozess|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Das datengebundene Steuerelement gebunden ist, Daten mithilfe der `DataSourceID` -Eigenschaft des Datenquellen-Steuerelement und den auf Vorlagen basierenden Inhalt wird definiert, eine <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> oder <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.GridView>|Das datengebundene Steuerelement gebunden ist, Daten mithilfe der `DataSourceID` -Eigenschaft des Datenquellen-Steuerelement und den auf Vorlagen basierenden Inhalt wird definiert, eine <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> oder <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.GridView> Steuerelement einen Einfügevorgang nicht unterstützt.|  
|<xref:System.Web.UI.WebControls.FormView>|Das datengebundene Steuerelement gebunden ist, Daten mithilfe der `DataSourceID` -Eigenschaft und den auf Vorlagen basierenden Inhalt wird definiert, eine <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, oder <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> -Eigenschaft oder in einer <xref:System.Web.UI.WebControls.TemplateField> Objekt.|  
  
 Die <xref:System.Web.UI.WebControls.DataList> und <xref:System.Web.UI.WebControls.Repeater> Steuerelemente unterstützen keine automatische bidirektionale Datenbindung-Szenarien.  
  
 ASP.NET erstellt implizit eine <xref:System.Web.UI.IBindableTemplate> Objekt bei der Analyse auf Vorlagen basierenden Inhalten, die an ein ASP.NET-Datenquellensteuerelement in der Vorlage gebunden wird. Insbesondere der ASP.NET-Parser erstellt eine Instanz der <xref:System.Web.UI.CompiledBindableTemplateBuilder> Klasse, wenn es auf Vorlagen basierenden Inhalt analysiert, die ASP.NET Datenbindung Syntax verwendet und enthält ASP.NET Webserver-Steuerelemente, die die Datenbindung zu unterstützen. Diese ASP.NET-Serversteuerelemente sind gekennzeichnet durch die <xref:System.ComponentModel.BindableAttribute> Attribut.  
  
 Die <xref:System.Web.UI.IBindableTemplate> Schnittstelle definiert eine Methode, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Diese Methode ist für die bidirektionale Datenbindung, definiert, sodass ein vom datengebundenen Steuerelement automatisch Name/Wert-Paare aus auf Vorlagen basierenden Inhalt extrahieren und übergeben die-Paare an ein Datenquellen-Steuerelement zur Laufzeit. Für die automatische Datenbindung erfolgreich ausgeführt werden kann, die Feldnamen, die aus den auf Vorlagen basierenden Inhalt von extrahiert die <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> Methode muss Parameternamen in einer zugeordneten Datenquellensteuerelements entsprechen. Steuern der Entwickler-Aufruf die <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> Methode explizit nur innerhalb ihrer Implementierungen von <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> oder eine andere ähnliche Methode eines benutzerdefinierten des datengebundenen Steuerelements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.FormView> Steuerelement deklarativ auf Vorlagen basierenden Inhalt definieren, binden Sie Daten können eine <xref:System.Web.UI.WebControls.SqlDataSource> zu steuern, anzeigen und Bearbeiten vorhandener Einträge. Der ASP.NET-Parser auf Vorlagen basierenden Inhalt analysiert und erstellt eine <xref:System.Web.UI.IBindableTemplate> Objekt zur Laufzeit, die zum Binden von Werten aus kann der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement die Datenbindung-Bereiche, die in der Vorlage definiert, durch die Syntax für sowohl unidirektionale Datenbindung (`<%# Eval("fieldname") %>`) und die Syntax für bidirektionale ASP.NET-Datenbindung (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Dieses Steuerelement verfügt über ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Das <see cref="T:System.Web.UI.Control" />, aus dem die Name-Wert-Paare extrahiert werden, die in Szenarios mit bidirektionaler Datenbindung vom datengebundenen Steuerelement an ein zugeordnetes Datenquellensteuerelement übergeben werden</param>
        <summary>Ruft beim Implementieren durch eine Klasse eine Gruppe von Name-Wert-Paaren für Werte ab, die im auf Vorlagen basierenden Inhalt mithilfe der Syntax für bidirektionale ASP.NET-Datenbindung gebunden wurden.</summary>
        <returns>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> von Name-Wert-Paaren. Der Name stellt den Namen eines Steuerelements in dem auf Vorlagen basierenden Inhalt dar, und der Wert ist der aktuelle Wert eines Eigenschaftswerts, der mithilfe der Syntax für bidirektionale ASP.NET-Datenbindung gebunden wurde.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Ein <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> Methode muss die folgenden Regeln entsprechen:: Wenn mehr als eine Bindung vorhanden ist, verwendet ein bestimmtes Feld, die letzte anzuwendende Bindung festgestellt.  – Um den Bezeichner eines Steuerelements in verweisen auf die <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> -Methode, muss das Steuerelement auch haben eine benutzerdefinierte ID-Eigenschaft zum Zeitpunkt der Analyse. Wenn keine ID vorhanden ist, führt dies zu einem Analysefehler.  – Syntax für bidirektionale Datenbindung ist nur gültig, in eine <see cref="T:System.Web.UI.ITemplate" /> oder <see cref="T:System.Web.UI.IBindableTemplate" /> Eigenschaft eines datengebundenen Steuerelements.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>