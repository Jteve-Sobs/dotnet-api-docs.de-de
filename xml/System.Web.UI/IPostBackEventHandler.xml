<Type Name="IPostBackEventHandler" FullName="System.Web.UI.IPostBackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5cf57208366a70be9b1f713033b6dec379ce52f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77246097" /></Metadata><TypeSignature Language="C#" Value="public interface IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type IPostBackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert die Methode, die ASP.NET-Serversteuerelemente beim Behandeln von Postbackereignissen implementieren müssen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Erstellen eines Server Steuer Elements, das Formular Übermittlungs Informationen aus dem Browser erfasst, müssen Sie diese Schnittstelle implementieren. Weitere Informationen zur Verwendung dieser Schnittstelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein benutzerdefiniertes Schaltflächen-Server Steuerelement definiert, das Postbacks auslöst, das Post Back Ereignis mithilfe der- <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> Methode erfasst und ein- `Click` Ereignis auf dem Server auslöst.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
  </Docs>
  <Members>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="public void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit" Usage="iPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein <see cref="T:System.String" />, der ein optionales Ereignisargument darstellt, das an den Ereignishandler übergeben wird.</param>
        <summary>Ermöglicht einem Serversteuerelement bei der Implementierung durch eine Klasse das Verarbeiten eines Ereignisses, das bei der Rücksendung eines Formulars an den Server ausgelöst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite übergibt den Wert des- `eventArgument` Parameters an die- `RaisePostBackEvent` Methode des Steuer Elements, das die- <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle implementiert. Dieses Steuerelement rendert außerdem das HTML-Element, das das Postback bewirkt. Wenn das-Steuerelement Client seitiges Skript für Postback rendert, wird das-Argument aus dem Skript in den- `eventArgument` Parameter übergeben. Wenn das Postback durch einen einfachen Sendevorgang verursacht wird, ist der- `eventArgument` Parameter `null` .  
  
 Diese Methode bietet die Funktionalität für viele Ereignisse, die von HTML-und Webserver-Steuerelementen implementiert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein benutzerdefiniertes Schaltflächen-Server Steuerelement definiert, das Postbacks auslöst, das Post Back Ereignis mithilfe der- <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> Methode erfasst und ein- `Click` Ereignis auf dem Server auslöst.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
      </Docs>
    </Member>
  </Members>
</Type>
