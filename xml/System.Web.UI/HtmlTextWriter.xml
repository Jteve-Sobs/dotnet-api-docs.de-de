<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7da547f5d372a4396dad80320a068d3c370e4d5a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70314300" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc93e-101">Schreibt Markupzeichen und Text in den Ausgabestream eines ASP.NET-Serversteuerelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-101">Writes markup characters and text to an ASP.NET server control output stream.</span></span> <span data-ttu-id="fc93e-102">Diese Klasse stellt Formatierungsfunktionen bereit, die von ASP.NET-Serversteuerelementen beim Rendern von Markup auf Clients verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-103">Die <xref:System.Web.UI.HtmlTextWriter> -Klasse wird verwendet, um HTML 4,0 in Desktop Browsern zu Rendering.</span><span class="sxs-lookup"><span data-stu-id="fc93e-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="fc93e-104"><xref:System.Web.UI.ChtmlTextWriter> <xref:System.Web.UI> <xref:System.Web.UI.XhtmlTextWriter> <xref:System.Web.UI.Html32TextWriter>Ist auch die Basisklasse für alle Markup Schreiber im-Namespace, einschließlich der Klassen, und. <xref:System.Web.UI.HtmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="fc93e-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="fc93e-105">Diese Klassen werden verwendet, um die Elemente, Attribute und Stil-und Layoutinformationen für verschiedene Markup Typen zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="fc93e-106">Außerdem werden diese Klassen von den Seiten-und Steuerelement Adapter Klassen verwendet, die mit den einzelnen Markup Sprachen verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="fc93e-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="fc93e-107">In den meisten Fällen verwendet ASP.NET automatisch den entsprechenden Writer für das anfordernde Gerät.</span><span class="sxs-lookup"><span data-stu-id="fc93e-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="fc93e-108">Wenn Sie jedoch einen benutzerdefinierten TextWriter erstellen oder einen bestimmten Writer zum Rendering einer Seite für ein bestimmtes Gerät angeben möchten, müssen Sie den Writer der Seite im `controlAdapters` Abschnitt der Datei "Application. Browser" zuordnen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-109">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.Control.Render%2A> -Methode eines benutzerdefinierten Steuer Elements überschrieben wird <xref:System.Web.UI.Control> , das von der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="fc93e-110">Das Codebeispiel veranschaulicht, wie verschiedene <xref:System.Web.UI.HtmlTextWriter> Methoden, Eigenschaften und Felder verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-111">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fc93e-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fc93e-112">Die <see cref="T:System.IO.TextWriter" />-Instanz, die den Inhalt des Markups rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span></span></param>
        <summary><span data-ttu-id="fc93e-113">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse, die eine Standard-Tabstoppzeichenfolge verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-114">Die <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> -<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> Überladung des Konstruktors verwendet die-Konstante, wenn ein Einzug einer Zeile erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="fc93e-115">Sie ruft die <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> -Überladung auf, um die neue Instanz zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-116">Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> -Konstruktor verwendet wird, <xref:System.Web.UI.HtmlTextWriter> um ein `StyledLabelHtmlWriter.` benutzerdefiniertes Objekt namens zu erstellen, wenn die <xref:System.Web.UI.Page> `MyPage` benutzerdefinierte Klasse, die von der-Klasse abgeleitet ist, von einem Client angefordert wird. der-Browser verwendet die `StyledLabelHtmlWriter` -Klasse, um seinen Inhalt in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="fc93e-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fc93e-117">Der <see cref="T:System.IO.TextWriter" />, der den Inhalt des Markups rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <param name="tabString"><span data-ttu-id="fc93e-118">Die Zeichenfolge, die für das Rendern eines Zeileneinzugs verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-118">The string to use to render a line indentation.</span></span></param>
        <summary><span data-ttu-id="fc93e-119">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse unter Verwendung des angegebenen Tabstoppzeichens.</span><span class="sxs-lookup"><span data-stu-id="fc93e-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-120">Die <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> `tabString` Überladung des Konstruktorsverwendet,wenneinEinzugeinerZeileerforderlichist.<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="fc93e-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="fc93e-121">Er ruft den <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> Basiskonstruktor auf, um die neue Instanz zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-122">Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> -Konstruktor verwendet wird, <xref:System.Web.UI.HtmlTextWriter> um ein `StyledLabelHtmlWriter.` benutzerdefiniertes Objekt namens zu erstellen, wenn die <xref:System.Web.UI.Page> `MyPage` benutzerdefinierte Klasse, die von der-Klasse abgeleitet ist, von einem Client angefordert wird. der-Browser verwendet die `StyledLabelHtmlWriter` -Klasse, um seinen Inhalt in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="fc93e-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-123">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-124">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-124">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-125">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-125">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-126">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-127">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> Überladung der-Methode, wenn das Attribut nicht einem <xref:System.Web.UI.HtmlTextWriterAttribute> der-Werte entspricht oder wenn das-Attribut bis zur Laufzeit unbekannt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="fc93e-128">Für eine Instanz eines beliebigen Markup Elements behält die <xref:System.Web.UI.HtmlTextWriter> -Klasse eine Liste von Attributen für dieses Element bei.</span><span class="sxs-lookup"><span data-stu-id="fc93e-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="fc93e-129">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode hinzugefügten Attribute am öffnenden Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-130">Die Liste der Attribute wird dann aus dem <xref:System.Web.UI.HtmlTextWriter> -Objekt gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="fc93e-131">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-132">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die-Methode, um dem-Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-133">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-134">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-135">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-136">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode aufgerufen wird <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> , bevor die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="fc93e-137">Der Code ruft zwei verschiedene über Ladungen von <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> und zwei unterschiedlichen über Ladungen <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> von auf, bevor <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> die-Methode aufgerufen `<span>` wird, um ein-Element in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="fc93e-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="fc93e-138">Die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> `CustomAttribute` -Methode`<span>` wird verwendet, um das benutzerdefinierte Attribut mit dem Namen und den benutzerdefinierten Wert fürdasElementzudefinieren,dasdieserCoderendert.`CustomAttributeValue`</span><span class="sxs-lookup"><span data-stu-id="fc93e-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-139">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt, das dem Ausgabestream hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-140">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-140">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-141">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das Markupattribut und den Attributwert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-142">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> Überladung der-Methode, um ein Standardmäßiges Markup Attribut zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="fc93e-143">Für eine Instanz eines beliebigen Markup Elements behält die <xref:System.Web.UI.HtmlTextWriter> -Klasse eine Liste von Attributen für dieses Element bei.</span><span class="sxs-lookup"><span data-stu-id="fc93e-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="fc93e-144">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode hinzugefügten Attribute am öffnenden Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-145">Die Liste der Attribute wird dann aus dem <xref:System.Web.UI.HtmlTextWriter>gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="fc93e-146">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-147">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die-Methode, um dem-Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-148">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-149">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-150">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-151">Im folgenden Codebeispiel wird gezeigt, wie Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> Überladung der-Methode `Onclick` verwenden, um einem Markup Element ein Attribut hinzuzufügen, und dann seinen Wert auf den folgenden ECMAScript-Code festlegen:</span><span class="sxs-lookup"><span data-stu-id="fc93e-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-152">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-152">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-153">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-153">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEndode"><span data-ttu-id="fc93e-154"><see langword="true" />, wenn das Attribut und sein Wert codiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-154"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-155">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert mit einer optionalen Codierung hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-156">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Überladung der-Methode, wenn das Attribut nicht <xref:System.Web.UI.HtmlTextWriterAttribute> einem der-Werte entspricht oder wenn das-Attribut erst bekannt ist, wenn die Laufzeit und die Codierung benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="fc93e-157">Für eine Instanz eines beliebigen Markup Elements behält die <xref:System.Web.UI.HtmlTextWriter> -Klasse eine Liste von Attributen für dieses Element bei.</span><span class="sxs-lookup"><span data-stu-id="fc93e-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="fc93e-158">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode hinzugefügten Attribute am öffnenden Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-159">Die Liste der Attribute wird dann aus dem <xref:System.Web.UI.HtmlTextWriter> -Objekt gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="fc93e-160">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> die- `fEncode` Methode, `true`bei der auf festgelegt ist, wenn das-Attribut möglicherweise ein Anführungszeichen ("), ein kleiner-als-Zeichen (<) oder ein kaufmännisches und-Zeichen (&) enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fc93e-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="fc93e-161">Der Methoden Befehl codiert das Attribut, um die Anforderungen des anfordernden Geräts zu erfüllen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="fc93e-162">Sie können auf `fEncode` `false`festlegen, wenn Sie wissen, dass keines dieser Zeichen generiert wird, oder wenn Sie wissen, dass das Attribut bereits codiert ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="fc93e-163">Wenn der Attributtyp `Style`ist, wird der Wert auch dann nicht `fEndode` codiert, wenn gleich ist `true`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-163">If the attribute type is `Style`, the value won't be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="fc93e-164">Stellen Sie sicher, dass der Stilwert CSS-kompatibel ist und keinen bösartigen Code enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-164">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>
  
 <span data-ttu-id="fc93e-165">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-166">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die-Methode, um dem-Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-167">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-168">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-169">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-170">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> - <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Überladung der-Methode verwendet wird, um sicherzustellen `myattribute`, dass ein benutzerdefiniertes Attribut mit dem `<img>` Namen und sein Wert für ein Element nicht codiert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-171">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-171">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-172">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-172">A string containing the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-173">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Attribut darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-174">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Objekt erstellt und anschließend die <see cref="T:System.Web.UI.HtmlTextWriter" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert sowie einen <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Enumerationswert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-175">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> Überladung der-Methode nur, wenn Sie <xref:System.Web.UI.HtmlTextWriter> von der-Klasse erben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-176">Damit können Sie neue `name` -und- `key` Paare für Attribute erstellen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-177">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt, das dem Ausgabestream hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-178">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-178">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="fc93e-179"><see langword="true" />, wenn das Attribut und sein Wert codiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-179"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-180">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das Markupattribut und den Attributwert mit einer optionalen Codierung hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-181">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> Überladung der-Methode, um ein Standardmäßiges Markup Attribut mit optionaler Codierung zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="fc93e-182">Für eine Instanz eines beliebigen Markup Elements behält die <xref:System.Web.UI.HtmlTextWriter> -Klasse eine Liste von Attributen für dieses Element bei.</span><span class="sxs-lookup"><span data-stu-id="fc93e-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="fc93e-183">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> werden alle von hinzugefügten Attribute am öffnenden Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-184">Die Liste der Attribute wird dann aus dem <xref:System.Web.UI.HtmlTextWriter> -Objekt gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="fc93e-185">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> die- `fEncode` Methode, `true`bei der auf festgelegt ist, wenn das-Attribut möglicherweise ein Anführungszeichen ("), ein kleiner-als-Zeichen (<) oder ein kaufmännisches und-Zeichen (&) enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fc93e-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="fc93e-186">Der Methoden Befehl codiert das Attribut, um die Anforderungen des anfordernden Geräts zu erfüllen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="fc93e-187">Sie können auf `fEncode` `false`festlegen, wenn Sie wissen, dass keines dieser Zeichen generiert wird, oder wenn Sie wissen, dass das Attribut bereits codiert ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="fc93e-188">Wenn der Attributtyp `Style`ist, wird der Wert auch dann nicht `fEncode` codiert, wenn gleich ist `true`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-188">If the attribute type is `Style`, the value won't be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="fc93e-189">Stellen Sie sicher, dass der Stilwert CSS-kompatibel ist und keinen bösartigen Code enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-189">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>

  
 <span data-ttu-id="fc93e-190">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-191">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die-Methode, um dem-Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-192">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-193">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-194">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-195">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> -Methode verwendet wird, um sicherzustellen, dass der Zeichen `Alt` folgen Wert, `<img>` der einem Attribut für ein Element zugewiesen ist, für das anfordernde Gerät codiert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-196">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, ein Markupformatattribut hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-197">Eine Zeichenfolge, die das hinzuzufügende Formatattribut enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-197">A string that contains the style attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-198">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-198">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-199">Fügt dem Markupstarttag, das durch einen nachfolgenden Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode erstellt wird, das angegebene Markupformatattribut und den Attributwert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-200">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> Überladung der-Methode, wenn der Stil <xref:System.Web.UI.HtmlTextWriterStyle> kein Member der-Enumeration ist oder bis zur Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="fc93e-201">Die <xref:System.Web.UI.HtmlTextWriter> -Klasse verwaltet eine Liste von Stilen für die Markup Elemente, die Sie rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="fc93e-202">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode hinzugefügten Stile in das öffnende Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-203">Die Liste der Stile wird dann gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="fc93e-204">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-205">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die-Methode, um dem-Element beliebige Stil Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-206">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-207">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-208">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-209">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> - <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> Überladung der-Methode `font-size` zum `color` Rendering und zum Formatieren von Attributen für ein `<p>` -Element verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="fc93e-210">In diesem Codebeispiel wird <xref:System.Web.UI.HtmlTextWriter> die-Klasse verwendet, um den Inhalt des-Steuer Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-211">Ein <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der das Formatattribut darstellt, das im Ausgabestream hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-212">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-212">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-213">Fügt dem Start-Markuptag, das durch einen nachfolgenden Aufruf der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Methode erstellt wird, das im <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Wert angegebene Markupformatattribut und den Attributwert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-214">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die- <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> Überladung der-Methode, wenn der Stil ein <xref:System.Web.UI.HtmlTextWriterStyle> Member der-Enumeration ist und vor der Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="fc93e-215">Die <xref:System.Web.UI.HtmlTextWriter> -Klasse verwaltet eine Liste von Stilen für die Markup Elemente, die Sie rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="fc93e-216">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode hinzugefügten Stile in das öffnende Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-217">Die Liste der Stile wird dann gelöscht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="fc93e-218">Das Codierungs Muster zum Rendern von Markup Elementen lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fc93e-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="fc93e-219">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die-Methode, um dem-Element beliebige Stil Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="fc93e-220">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="fc93e-221">Verwenden Sie bei Bedarf andere Methoden, um den Inhalt zwischen dem öffnenden und dem schließenden Tag des Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="fc93e-222">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-223">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Teil einer Überschreibung der-Methode in einer von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleiteten Klasse verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-224">Der Code überprüft, ob `<Label>` ein-Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="fc93e-225">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> ist, wird die-Methode aufgerufen `Color` , um zu überprüfen, ob `<Label>` ein Style-Attribut für das Element definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="fc93e-226">Wenn ein `Color` -Attribut nicht definiert wurde, ruft der Code diese <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Überladung der-Methode auf, `Color` um das-Attribut dem Style-Attribut hinzuzufügen, und `red`legt dann seinen Wert auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-227">Eine Zeichenfolge, die das hinzuzufügende Formatattribut enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-227">A string that contains the style attribute to be added.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-228">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-228">A string that contains the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-229">Ein <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der das hinzuzufügende Formatattribut darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span></span></param>
        <summary><span data-ttu-id="fc93e-230">Fügt dem Start-Markuptag, das durch einen nachfolgenden Aufruf der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Methode erstellt wird, das angegebene Markupformatattribut und den Attributwert sowie einen <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Enumerationswert hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-231">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> Überladung der-Methode nur, wenn Sie <xref:System.Web.UI.HtmlTextWriter> von der-Klasse erben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-232">Damit können Sie neue `name` -und- `value` Paare für <xref:System.Web.UI.HtmlTextWriterStyle> Attribute erstellen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-233">Benachrichtigt ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt oder ein Objekt einer abgeleiteten Klasse darüber, dass ein Steuerelement gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-234">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> der-Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="fc93e-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="fc93e-235">Sie müssen die <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> -Methode in einer von <xref:System.Web.UI.HtmlTextWriter> abgeleiteten Klasse überschreiben, um Ihre eigene Renderingfunktion bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="fc93e-236">Beispielsweise könnten Sie in einer Markup Sprache, die `<p>` möglicherweise erfordert, dass Elemente unmittelbar vor einem Steuerelement gerendert werden, `<p>` aber wenn die Notwendigkeit des-Elements zuvor fest <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> gelegt wird, die-Überschreibung verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-237">Schließt das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt und gibt alle zugeordneten Systemressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="fc93e-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-238">Diese Implementierung der- <xref:System.Web.UI.HtmlTextWriter.Close%2A> Methode ruft die <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="fc93e-239">Nach einem Rückruf der <xref:System.Web.UI.HtmlTextWriter.Close%2A> -Methode können alle Vorgänge für das <xref:System.Web.UI.HtmlTextWriter> -Objekt Ausnahmen auslösen, da alle zugehörigen Ressourcen freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-240">Stellt ein einzelnes Tabstoppzeichen dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-240">Represents a single tab character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-241">Die einzelne Registerkarte wird durch das ASCII 9-Zeichen dargestellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-242">Im folgenden Codebeispiel wird veranschaulicht, wie ein Konstruktor erstellt wird, <xref:System.IO.TextWriter> der ein-Objekt als Parameter annimmt <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> und das Feld als Parameter Argument an eine zweite Version des Konstruktors übergibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="fc93e-243">Wenn dieser Konstruktor vom Code aufgerufen wird, definiert <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> das Feld die Einzugs Richtlinie für die Instanz des Markup-Writers, die von einer Seite oder einem Adapter verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-244">Stellt das Anführungszeichenzeichen (") dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-244">Represents the quotation mark (") character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-245">Das <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode verwendet, um ein Attribut zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-246">Im folgenden Codebeispiel wird gezeigt, wie ein `border` -Attribut für `<table>` ein-Element dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="fc93e-247">Der Code Ruft die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode auf, um das Attribut und seinen Wert zu <xref:System.Web.UI.HtmlTextWriter.Write%2A> erzeugen, und verwendet <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> die <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> -Methode zum Rendering der Felder und.</span><span class="sxs-lookup"><span data-stu-id="fc93e-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="fc93e-248">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-249">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span><span class="sxs-lookup"><span data-stu-id="fc93e-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-250">Eine Zeichenfolge, die den zu codierenden Attributwert enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-250">A string containing the attribute value to encode.</span></span></param>
        <param name="fEncode"><span data-ttu-id="fc93e-251"><see langword="true" />, um den Attributwert zu codieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-251"><see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-252">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span><span class="sxs-lookup"><span data-stu-id="fc93e-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="fc93e-253">Eine Zeichenfolge, die den codierten Attributwert enthält. <see langword="null" />, wenn <paramref name="value" /> leer ist, oder der nicht codierte Attributwert, wenn <paramref name="fEncode" /> gleich <see langword="false" /> ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-254">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> die- <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> Überladung der-Methode, wenn <xref:System.Web.UI.HtmlTextWriterAttribute> das Attribut kein Enumerationswert ist oder bis zur Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="fc93e-255">Die <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> -Methode entfernt doppelte Anführungszeichen ("), kaufmännische und-Zeichen (&) und kleiner-als-Zeichen (<), sodass ungültige Tags unabhängig von der Eingabe nicht generiert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="fc93e-256">Die tatsächliche Codierung wird von der <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> -Methode durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-257">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> -Methode als Parameter in einem <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methoden aufrufaufgerufen wird, und anschließend `color:blue` wird ein Format Attribut Wert codiert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="fc93e-258">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-259">Eine Zeichenfolge, die den zu codierenden Attributwert enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-259">A string containing the attribute value to encode.</span></span></param>
        <summary><span data-ttu-id="fc93e-260">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span><span class="sxs-lookup"><span data-stu-id="fc93e-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="fc93e-261">Eine Zeichenfolge, die den codierten Attributwert enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-261">A string containing the encoded attribute value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-262">Die <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> -Methode entfernt doppelte Anführungszeichen ("), kaufmännische und-Zeichen (&) und kleiner-als-Zeichen (<), sodass ungültige Tags unabhängig von der Eingabe nicht generiert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="fc93e-263">Die tatsächliche Codierung wird von der <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> -Methode durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fc93e-264">Eine Zeichenfolge, die die zu codierende URL enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-264">A string containing the URL to encode.</span></span></param>
        <summary><span data-ttu-id="fc93e-265">Führt eine minimale URL-Codierung durch, indem Leerzeichen in der angegebenen URL in die Zeichenfolge "%20" konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span></span></summary>
        <returns><span data-ttu-id="fc93e-266">Eine Zeichenfolge, die die codierte URL enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-266">A string containing the encoded URL.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-267">Die URL-Codierung eines Zeichens besteht aus einem Prozentzeichen (%), gefolgt von der zweistelligen hexadezimalen Darstellung (ohne Beachtung der Groß-/Kleinschreibung) des ISO-Latin-Codepunkts für das Zeichen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="fc93e-268">Die hexadezimale Darstellung eines leer Zeichens ist 20.</span><span class="sxs-lookup"><span data-stu-id="fc93e-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-269">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> -Methode aufgerufen wird, um Leerzeichen in der URL zu konvertieren, die als <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Parameter in einem-Methoden Befehl übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-270">Ruft die Codierung ab, die das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt beim Schreiben von Inhalt in die Seite verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span></span></summary>
        <value><span data-ttu-id="fc93e-271">Die <see cref="T:System.Text.Encoding" />, mit der das Markup in die Seite geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-272">Die <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> -Eigenschaft erhält ihren Wert aus dem <xref:System.IO.TextWriter> Basisobjekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-273">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> -Eigenschaft verwendet wird, um den Codierungstyp zu schreiben, der von einem benutzerdefinierten Steuerelement zum Rendering von Text auf der Seite verwendet wird</span><span class="sxs-lookup"><span data-stu-id="fc93e-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-274">Benachrichtigt ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt oder ein Objekt einer abgeleiteten Klasse darüber, dass das Rendern eines Steuerelements beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span></span> <span data-ttu-id="fc93e-275">Sie können mit dieser Methode beliebige in der <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />-Methode geöffnete Markupelemente schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-276">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> der-Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="fc93e-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="fc93e-277">Sie müssen in <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> einer von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleiteten Klasse überschreiben, um Ihre eigene Renderingfunktion bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="fc93e-278">Sie können die <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> -Methode verwenden, um alle in der <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> -Methode geöffneten Markup Elemente zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-279">Stellt linke spitze Klammer und Schrägstrich (&lt;/) des Endtags eines Markupelements dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-280">Das <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode zum Erstellen von Markup Element-Endtags verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-281">Im folgenden Codebeispiel wird gezeigt, wie `<table>` das Endtag eines Markup Elements mithilfe der <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> <xref:System.Web.UI.HtmlTextWriter.TagRightChar> Felder und als Parameterwerte in Aufrufen der <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="fc93e-282">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-283">Schreibt das Starttag eines Markupelements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="fc93e-284">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der den Beginn für das Layout und die Formatierung des Markupblocks angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <summary><span data-ttu-id="fc93e-285">Schreibt das Starttag eines <see langword="&lt;span&gt;" />-Elements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-286">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> die-Methode, um Stile, z. b. Hintergrundfarbe oder Rahmenbreite, auf einen Markup Block anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="fc93e-287">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> - <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode und die-Methode ermöglichen einem Geräte Adapter oder-Steuerelement das Erstellen von Markup, das die Zeichen Formatierung des angegebenen Stils verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="fc93e-288">Verwenden Sie den gleichen Wert `style` für in <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> der-Methode, die Sie in <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> der entsprechenden-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="fc93e-289">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> `<span>` -<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> Überladung der-Methode rendert das öffnende Tag eines-Elements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="fc93e-290">Diese Methode fügt dann dem öffnenden Tag des `<span>` -Elements die erforderlichen Attribute und Stil Attribute hinzu, um die <xref:System.Web.UI.WebControls.Style> vom-Objekt angegebenen Einstellungen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="fc93e-291">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> -Überladung, wenn Sie ein anderes Markup Element zum enthalten der Attribute und Format Attribute verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-292">Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse, die mit dem Namen verwenden `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode zum Anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="fc93e-293">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="fc93e-294">Der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> -Methoden aufruter schließt das `<span>` -Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="fc93e-295">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der den Beginn für das Layout und die Formatierung des Markupblocks angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <param name="tag"><span data-ttu-id="fc93e-296">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, das das Starttag des Markupelements mit dem in <paramref name="style" /> angegebenen Formatobjekt angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <paramref name="style" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-297">Schreibt das Starttag eines Markupelements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-298">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> die-Methode, um Stile, z. b. Hintergrundfarbe oder Rahmenbreite, auf einen Markup Block anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="fc93e-299">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> - <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode und die-Methode ermöglichen einem Geräte Adapter oder-Steuerelement das Erstellen von Markup, das die Zeichen Formatierung des angegebenen Stils verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="fc93e-300">Verwenden Sie den gleichen Wert `style` für in <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> der-Methode, die Sie in <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> der entsprechenden-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="fc93e-301">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> `tag` -<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Überladung der-Methode rendert das öffnende Tag des Elements, das durch den-Parameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="fc93e-302">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> -Methode fügt dann dem öffnenden Tag des-Elements die erforderlichen Attribute und Stil Attribute hinzu, um die <xref:System.Web.UI.WebControls.Style> vom-Objekt angegebenen Einstellungen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="fc93e-303">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> die-Überladung, um das öffnende Tag `<span>` eines-Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-304">Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse, die mit dem Namen verwenden `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode zum Anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="fc93e-305">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> -Methode rendert`<span style="color:Navy;">`den HTML-Code.</span><span class="sxs-lookup"><span data-stu-id="fc93e-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="fc93e-306">Der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> -Methoden aufruter schließt das `<span>` -Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-307">Stellt das Gleichheitszeichen (<see langword="=" />) dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-307">Represents the equal sign (<see langword="=" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-308">Beim Erstellen des öffnenden Trenn <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> Zeichens eines Attribut Werts <xref:System.Web.UI.HtmlTextWriter.EqualsChar> sollten Sie das Feld anstelle des Felds verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-309">Im folgenden Codebeispiel wird gezeigt, wie das `src` -Attribut und ein Teil seines Werts für `<img>` ein Element dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="fc93e-310">Der Code verwendet das <xref:System.Web.UI.HtmlTextWriter.EqualsChar> -Feld in <xref:System.Web.UI.HtmlTextWriter.Write%2A> einem Methoden aufrufzeichen, um das Gleichheitszeichen ( `src` =) zwischen dem-Attribut und seinem Wert zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="fc93e-311">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-312">Stellt ein Gleichheitszeichen (=) und doppelte Anführungszeichen (") gemeinsam in einer Zeichenfolge (=") dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-313">Das <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> - <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode und der-Methode verwendet, um das öffnende Trennzeichen der Attributwerte zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-314">Im folgenden Codebeispiel wird gezeigt, wie ein `border` -Attribut für `<table>` ein-Element dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="fc93e-315">Der Code Ruft die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode auf, um das Attribut und seinen Wert zu <xref:System.Web.UI.HtmlTextWriter.Write%2A> erzeugen, und verwendet <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> die <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> -Methode zum Rendering der Felder und.</span><span class="sxs-lookup"><span data-stu-id="fc93e-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="fc93e-316">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-317">Schreibt das Endtag eines Markupelements zum Beenden des angegebenen Layouts und der Zeichenformatierung.</span><span class="sxs-lookup"><span data-stu-id="fc93e-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="fc93e-318">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der das zu beendende Layout und die Formatierung angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span></span></param>
        <summary><span data-ttu-id="fc93e-319">Schreibt das Endtag eines <see langword="&lt;span&gt;" />-Elements zum Beenden des angegebenen Layouts und der Zeichenformatierung.</span><span class="sxs-lookup"><span data-stu-id="fc93e-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-320">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> - `<span>` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Überladung der- MethoderendertdasschließendeTageines-ElementsnachdemEndtagdes-SteuerElements,wobeidasvomentsprechenden-BefehlgeöffneteElementgeschlossenwird.<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29></span><span class="sxs-lookup"><span data-stu-id="fc93e-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="fc93e-321">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> - <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode und die-Methode ermöglichen einem Geräte Adapter oder-Steuerelement das Erstellen von Markup, das einen Block startet und beendet, indem die Zeichen Formatierung des angegebenen Stils verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="fc93e-322">Verwenden Sie den gleichen Wert `style` für in <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> der-Methode, die Sie in <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> der entsprechenden-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-323">Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse, die mit dem Namen verwenden `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode zum Anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="fc93e-324">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="fc93e-325">Der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> -Methoden aufruter schließt das `<span>` -Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="fc93e-326">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der das Beenden der Anwendung von Layout und Formatierung auf den Ausgabetext angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span></span></param>
        <param name="tag"><span data-ttu-id="fc93e-327">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, dass das Endtag des Markupelements angibt, das die Attribute enthielt, die das angegebene Format angewendet haben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span></span> <span data-ttu-id="fc93e-328">Dies muss dem im <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />-Aufruf übergebenen Schlüssel entsprechen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span></span></param>
        <summary><span data-ttu-id="fc93e-329">Schreibt das Endtag des angegebenen Markupelements, um das angegebene Layout und Formatieren von Zeichen zu beenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-330">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> - `tag` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Überladung der- MethoderendertdasschließendeTagdesElements,dasdurchangegebenwird,nachdemEndtagdesSteuerElements,wobeidasElementgeschlossenwird,dasdurchdenentsprechendenMethodenaufzurufengeöffnetwurde.<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29></span><span class="sxs-lookup"><span data-stu-id="fc93e-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="fc93e-331">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> - <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode und die-Methode ermöglichen einem Geräte Adapter oder-Steuerelement das Erstellen von Markup, das einen Block startet und beendet, indem die Zeichen Formatierung des angegebenen Stils verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="fc93e-332">Verwenden Sie den gleichen Wert `style` für in <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> der-Methode, die Sie in <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> der entsprechenden-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-333">Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse, die mit dem Namen verwenden `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode zum Anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="fc93e-334">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="fc93e-335">Der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> -Methoden aufruter schließt das `<span>` -Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-336">Entfernt alle Markup- und Formatattribute aus allen Eigenschaften der Seite oder des Webserversteuerelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-337">Bevor Attribute in einem Markup Element gerendert werden <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , wird die-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="fc93e-338">Die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode ruft die-Methode <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> und <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> die-Methode für jedes Attribut und jede Art zum Rendering auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-339">Im folgenden Codebeispiel wird veranschaulicht, wie eine von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleitete benutzerdefinierte Klasse verwendet wird, die die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="fc93e-340">Wenn Sie aufgerufen wird <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , überprüft die Überschreibung, ob der `<label>` TextWriter beliebige-oder `<a>` -Elemente rendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="fc93e-341">Wenn ein `<label>` -Element gerendert wird <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , überprüft die- `style` Methode, ob ein-Attribut für das Element gerendert wird `style` , und erstellt, wenn `color: blue`nicht, ein-Attribut und legt es auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="fc93e-342">Wenn ein `<a>` Element gerendert wird, <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> bestimmt die Methode, `href` ob ein Attribut eingeschlossen ist, und fügt andernfalls der `href` URL http://www.cohowinery.comein hinzu.</span><span class="sxs-lookup"><span data-stu-id="fc93e-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-343">Löscht sämtliche Puffer für das aktuelle <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt und veranlasst, dass alle gepufferten Daten in den Ausgabestream geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-344">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.Flush%2A> der-Methode ruft nur die <xref:System.IO.TextWriter.Flush%2A> Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName"><span data-ttu-id="fc93e-345">Eine Zeichenfolge, die das Attribut enthält, für das das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-346">Ruft den entsprechenden <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Enumerationswert für das angegebene Attribut ab.</span><span class="sxs-lookup"><span data-stu-id="fc93e-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="fc93e-347">Der <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Enumerationswert für das angegebene Attribut, andernfalls ein ungültiger <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Wert, wenn das Attribut kein Member der Enumeration ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-348">Wenn `attrName` oder `null` eine leere Zeichenfolge ("") ist oder in der Tabelle mit Attributnamen nicht gefunden werden kann, wird der Wert-1 zurückgegeben <xref:System.Web.UI.HtmlTextWriterAttribute> , der für ein-Objekt eingegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-349">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleitete Klasse verwenden, die die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="fc93e-350">Die außer Kraft Setzung `tagKey` überprüft, ob gleich <xref:System.Web.UI.HtmlTextWriterTag.Font> dem Feld ist, das angibt `<font>` , dass ein Markup Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="fc93e-351">Wenn dies der Fall ist, ruft <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> die Überschreibung die-Methode `<font>` auf, um <xref:System.Web.UI.HtmlTextWriterAttribute.Size> herauszufinden, ob das Element ein-Attribut enthält</span><span class="sxs-lookup"><span data-stu-id="fc93e-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="fc93e-352"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> `30pt`Wenn zurück <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> `false`gegeben wird, ruft die -<xref:System.Web.UI.HtmlTextWriterAttribute.Size> Methode die-Methode auf, die definiert und den Wert auf festlegt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="fc93e-353">Das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, für das der Markupattributname abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span></span></param>
        <summary><span data-ttu-id="fc93e-354">Ruft den Namen des Markupattributs ab, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Wert zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span></span></summary>
        <returns><span data-ttu-id="fc93e-355">Eine Zeichenfolge, die den Namen des Markupattributs enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-355">A string containing the name of the markup attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-356">Die <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> -Methode gibt eine leere Zeichenfolge ("") `attrKey` zurück, wenn kein <xref:System.Web.UI.HtmlTextWriterAttribute> gültiger-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-357">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> -Methode verwendet wird <xref:System.Web.UI.HtmlTextWriterAttribute.Size> , um einen-Enumerationswert in seinen Zeichen folgen Namen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName"><span data-ttu-id="fc93e-358">Das Formatattribut, für das der <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-359">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert für das angegebene Format ab.</span><span class="sxs-lookup"><span data-stu-id="fc93e-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span></span></summary>
        <returns><span data-ttu-id="fc93e-360">Der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert, der <paramref name="styleName" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-361">Die <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> -Methode gibt den <xref:System.Web.UI.HtmlTextWriterStyle> als-Wert typisierten Wert-1 `styleName` zurück, wenn keinem <xref:System.Web.UI.HtmlTextWriterStyle> Enumerationswert entspricht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-362">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode in einer von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-363">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überschreibung bestimmt, `<label>` ob ein Markup gerendert wird, und überprüft, wenn dies der Fall <xref:System.Web.UI.HtmlTextWriterStyle.Color> ist, das-Element auf ein-Attribut.</span><span class="sxs-lookup"><span data-stu-id="fc93e-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="fc93e-364">Wenn ein <xref:System.Web.UI.HtmlTextWriterStyle.Color> -Attribut nicht definiert wurde, wird <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> die-Methode als erster Parameter in einem Aufrufen der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode verwendet, um einem <xref:System.Web.UI.HtmlTextWriterStyle.Color> `<label>` Markup Element ein-Attribut hinzuzufügen und <xref:System.Web.UI.HtmlTextWriterStyle.Color> das-Attribut auf festzulegen `red`.</span><span class="sxs-lookup"><span data-stu-id="fc93e-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey"><span data-ttu-id="fc93e-365">Das <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, für das der Formatattributname abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span></span></param>
        <summary><span data-ttu-id="fc93e-366">Ruft den Namen des dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert zugeordneten Markupformatattributs ab.</span><span class="sxs-lookup"><span data-stu-id="fc93e-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="fc93e-367">Der Formatattributname, der dem in <paramref name="styleKey" /> angegebenen <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-368">Wenn `styleKey` kein gültiges <xref:System.Web.UI.HtmlTextWriterStyle> Objekt ist, gibt die <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> Methode eine leere Zeichenfolge ("") zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-369">Im folgenden Codebeispiel wird gezeigt, wie Sie über `<label>` prüfen, ob ein-Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="fc93e-370">Wenn dies der Fall ist, wird <xref:System.Web.UI.HtmlTextWriterStyle.Color> überprüft, ob ein Style-Attribut für das Element definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="fc93e-371">Wenn das-Attribut nicht definiert wurde, wird <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die-Methode aufgerufen, <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> und die- <xref:System.Web.UI.HtmlTextWriterStyle.Color> Methode konvertiert den Enumerationsmember in seine Zeichen folgen <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Darstellung, um Sie an die-Methode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="fc93e-372">Das Markupelement, für das das <see cref="T:System.Web.UI.HtmlTextWriterTag" /> abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-373">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert ab, der dem angegebenen Markupelement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-374">Der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert, andernfalls <see cref="T:System.Web.UI.HtmlTextWriterTag" />, wenn <paramref name="tagName" /> keinem bestimmten <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />-Wert zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-375">`tagName` <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> Wenn den Wert <xref:System.Web.UI.HtmlTextWriterTag.Unknown> hat, eine leere Zeichenfolge ("") oder nicht in der Tabelle mit Markup-Tagnamen gefunden werden kann, gibt die Methode das Feld zurück. `null`</span><span class="sxs-lookup"><span data-stu-id="fc93e-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-376">Im folgenden Codebeispiel wird gezeigt, wie die Überladung der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode überschrieben wird, die eine Zeichenfolge als Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="fc93e-377">Die Zeichenfolge wird an die <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> -Methode übergeben, die Sie in den <xref:System.Web.UI.HtmlTextWriterTag> entsprechenden Enumerationsmember konvertiert, und übergibt diese <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> an die-über <xref:System.Web.UI.HtmlTextWriterTag> Ladung, die einen-Enumerationswert als Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="fc93e-378">Das <see cref="T:System.Web.UI.HtmlTextWriterTag" />, für das das Markupelement abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span></span></param>
        <summary><span data-ttu-id="fc93e-379">Ruft das Markupelement ab, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="fc93e-380">Eine Zeichenfolge, die das Markupelement darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-380">A string representing the markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-381">Wenn `tagKey` kein gültiger <xref:System.Web.UI.HtmlTextWriterTag> Wert ist, gibt die <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> Methode eine leere Zeichenfolge ("") zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-382">Im folgenden Codebeispiel wird veranschaulicht, wie ein `<font>` -Element mithilfe der <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="fc93e-383">Die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode ruft <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> die-Methode auf <xref:System.Web.UI.HtmlTextWriterTag.Font> , um den Wert in eine Zeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-384">Ruft die Anzahl von Tabstopps ab, um die der Anfang jeder Markupzeile eingerückt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span></span></summary>
        <value><span data-ttu-id="fc93e-385">Die Anzahl von Tabstopps, um die jede Zeile eingerückt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-385">The number of tab positions to indent each line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-386">Der Einzug wird ausgeführt, indem die durch den `tabString` -Parameter <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> des Konstruktors angegebene Zeichenfolge so oft geschrieben wird, wie von der <xref:System.Web.UI.HtmlTextWriter.Indent%2A> -Eigenschaft angegeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="fc93e-387">Wenn die <xref:System.Web.UI.HtmlTextWriter.Indent%2A> Eigenschaft auf einen negativen Wert festgelegt ist, wird Sie vor dem Speichern in 0 geändert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-388">Im folgenden Codebeispiel wird veranschaulicht, wie der Wert erhöht wird, der der <xref:System.Web.UI.HtmlTextWriter.Indent%2A> -Eigenschaft zugewiesen wird, wenn Attribute zum öffnenden Tag `<span>` eines-Elements hinzugefügt <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wurden und die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="fc93e-389">Dadurch wird der Einzug für jedes Markup vergrößert, das innerhalb des `<span>` Elements gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-390">Ruft den Textwriter ab, der den inneren Inhalt des Markupelements schreibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-390">Gets or sets the text writer that writes the inner content of the markup element.</span></span></summary>
        <value><span data-ttu-id="fc93e-391">Ein <see cref="T:System.IO.TextWriter" />, der den inneren Markupinhalt schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-392">Innerer Markup Inhalt ist der Text zwischen den öffnenden und schließenden Tags eines Markup sprach Elements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="fc93e-393">Wenn die <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> -Eigenschaft auf ein <xref:System.IO.TextWriter> -Objekt festgelegt ist, das eine <xref:System.Web.HttpWriter> Instanz der-Klasse ist, wird dieser Fakt notiert, und es wird ein separater Verweis gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-394">Im folgenden Codebeispiel wird gezeigt, wie ein von der <xref:System.Web.UI.WebControls.WebControl> -Klasse abgeleitetes benutzerdefiniertes Webserver Steuerelement verwendet wird, das die <xref:System.Web.UI.Control.Render%2A> -Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="fc93e-395">Er verwendet die <xref:System.Web.UI.HtmlTextWriter> -Klasse, um `<font>` ein-Element zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="fc93e-396">Nachdem das öffnende Tag des Elements geschrieben wurde, wird die- <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> Eigenschaft verwendet, um die `"<br> The time on the server:"` Zeichenfolge zu schreiben und diese Zeichenfolge <xref:System.DateTime.Now%2A?displayProperty=nameWithType> mit dem Wert der-Eigenschaft zu verketten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-397">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-398">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-399">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="fc93e-400"><see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-400"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-401">Um den Wert zu erhalten, der dem <xref:System.Web.UI.HtmlTextWriterAttribute> -Objekt zugewiesen werden soll, verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> -Überladung anstelle dieser.</span><span class="sxs-lookup"><span data-stu-id="fc93e-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-402">Im folgenden Codebeispiel wird gezeigt, wie Sie eine über <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Schreibung der-Methode in einer Klasse verwenden, die von der <xref:System.Web.UI.HtmlTextWriter> -Klasse erbt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-403">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> außer Kraft Setzung überprüft `<font>` , ob ein Markup Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="fc93e-404">Wenn dies der Fall ist, ruft <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> die-Überschreibung die `<font>` -Methode auf <xref:System.Web.UI.HtmlTextWriterAttribute.Size> , um zu überprüfen, ob das Element</span><span class="sxs-lookup"><span data-stu-id="fc93e-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="fc93e-405">Wenn dies nicht der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Wert ist, <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> Ruft die-Methode die <xref:System.Web.UI.HtmlTextWriterAttribute.Size> -Methode auf, die das `30pt`-Attribut definiert und den Wert auf festlegt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute * string -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-406">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-407">Der Wert, der dem Attribut zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-407">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-408">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="fc93e-409"><see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-409"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-410">Wenn die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> -Methode `true`zurückgibt, wird der Wert, der <xref:System.Web.UI.HtmlTextWriterAttribute> dem-Objekt zugewiesen werden `value` soll, im-Parameter zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-411">Bestimmt, ob ein Markupformatattribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-412">Das dem Attribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-413">Bestimmt, ob das angegebene Markupformatattribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="fc93e-414"><see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-414"><see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-415">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> - <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> Überladung der-Methode, um den Wert zu erhalten, der mit dem angegebenen Formatvorlagen Attribut gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-416">Im folgenden Codebeispiel wird gezeigt, wie Sie über `<label>` prüfen, ob ein-Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="fc93e-417">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> ist, überprüft die <xref:System.Web.UI.HtmlTextWriterStyle.Color> Methode, ob ein Format Attribut für das Element definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="fc93e-418">Wenn das <xref:System.Web.UI.HtmlTextWriterStyle.Color> -Attribut nicht definiert wurde, definiert <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die-Methode <xref:System.Web.UI.HtmlTextWriterStyle.Color> das-Attribut und legt dessen `red`Wert auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle * string -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fc93e-419">Das dem Attribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-420">Der dem Formatattribut zugewiesene Wert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-420">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-421">Bestimmt, ob das angegebene Markupformatattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="fc93e-422"><see langword="true" />, wenn das Attribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-422"><see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-423">Wenn die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> -Methode `true`zurückgibt, wird der Wert, der <xref:System.Web.UI.HtmlTextWriterStyle> dem-Attribut zugewiesen werden `value` soll, im-Parameter zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="fc93e-424">Eine Zeichenfolge, die den Namen des zu überprüfenden Attributs enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-424">A string that contains the name of the attribute to check.</span></span></param>
        <summary><span data-ttu-id="fc93e-425">Prüft ein Attribut darauf, ob es im Starttag eines <see langword="&lt;form&gt;" />-Markupelements gerendert werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc93e-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-426">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-426">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-427">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> der-Methode gibt `true` für alle Attribute zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="fc93e-428">Überschreiben Sie, um die Attribute einzuschränken, die im öffnenden Tag `<form>` eines-Elements gerendert werden können. <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="fc93e-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-429">Überschreiben <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> Sie die- <see langword="true" /> Methode, um nur für die Attribute zurückzugeben, <see langword="&lt;form&gt;" /> die in das-Element des Markups eingeschlossen werden können <see cref="T:System.Web.UI.HtmlTextWriter" /> , für das die von der-Klasse abgeleitete Klasse beabsichtigt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-429">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-430">Ruft die Zeichenfolge für den Zeilenabschluss ab, die vom <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt verwendet wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <value><span data-ttu-id="fc93e-431">Die vom aktuellen <see cref="T:System.Web.UI.HtmlTextWriter" /> verwendete Zeichenfolge für den Zeilenabschluss.</span><span class="sxs-lookup"><span data-stu-id="fc93e-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-432">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="fc93e-433">Die Zeichenfolge für den Zeilen Abschluss wird immer dann in den Ausgabestream geschrieben, wenn eine der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methoden aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="fc93e-434">Wenn die <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> -Eigenschaft auf fest `null`gelegt ist, wird das Standard Zeichen für neue Zeilen verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-435">Im folgenden Codebeispiel wird veranschaulicht, wie eine von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleitete benutzerdefinierte Klasse verwendet wird, die die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="fc93e-436">Wenn Sie aufgerufen wird <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , überprüft die Überschreibung, ob der `<label>` TextWriter beliebige-oder `<a>` -Elemente rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="fc93e-437">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> ist, bestimmt die Methode, ob ein Format Attribut für die Bezeichnung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="fc93e-438">Wenn kein Stil definiert ist, legt <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> die-Methode den Standardwert für `style:color` das-Attribut auf blau fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="fc93e-439">Die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode verwendet dann <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> die-Eigenschaft, um einen Zeilenumbruch in das Markup-Tag einzufügen und alle anderen definierten Attribute zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-440">Eine Zeichenfolge mit dem Namen des Attributs, das gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-440">A string containing the name of the attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-441">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-441">A string containing the value that is assigned to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-442">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-443">Bestimmt, ob das angegebene Markupattribut und sein Wert im aktuellen Markupelement gerendert werden können.</span><span class="sxs-lookup"><span data-stu-id="fc93e-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-444">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-444">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-445">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> der-Methode gibt immer `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="fc93e-446">Die <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> über schreibungen können bestimmen, ob ein Attribut auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-447">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> -Methode überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="fc93e-448">Wenn ein <xref:System.Web.UI.HtmlTextWriterAttribute.Size> -Attribut gerendert wird <xref:System.Web.UI.HtmlTextWriterAttribute.Size> , der Wert `30pt`jedoch nicht <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> ist, ruft <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> die Überschreibung die <xref:System.Web.UI.HtmlTextWriterAttribute.Size> -Methode auf, um ein `30pt`-Attribut hinzuzufügen und den Wert auf festzulegen</span><span class="sxs-lookup"><span data-stu-id="fc93e-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-449">Wenn Sie von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> -Methode <see langword="false" /> überschreiben, um zu verhindern, dass ein Attribut überhaupt gerendert wird, dass es für ein bestimmtes Element gerendert wird oder für ein bestimmtes Markup gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-449">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span></span> <span data-ttu-id="fc93e-450">Wenn Sie z. b. nicht möchten, dass das Objekt <see cref="T:System.Web.UI.HtmlTextWriter" /> , das von <see langword="bgcolor" /> abgeleitet wird <see langword="&lt;table&gt;" /> , das-Attribut an- <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> Elemente übergibt <see langword="false" /> <see langword="bgcolor" /> , <paramref name="name" /> können Sie die überschreiben und zurückgeben, wenn von und der der Eigenschafts Wert ist <see langword="table" />. <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /></span><span class="sxs-lookup"><span data-stu-id="fc93e-450">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-451">Eine Zeichenfolge mit dem Namen des Formatvorlagenattributs, der gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-451">A string containing the name of the style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-452">Eine Zeichenfolge mit dem Wert, der dem Formatattribut zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-452">A string containing the value that is assigned to the style attribute.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-453">Das dem Formatattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-453">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-454">Bestimmt, ob das angegebene Markupformatattribut und sein Wert im aktuellen Markupelement gerendert werden können.</span><span class="sxs-lookup"><span data-stu-id="fc93e-454">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-455">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-455">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-456">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> der-Methode gibt immer `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-456">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="fc93e-457">Die <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> über schreibungen können bestimmen, ob ein Format Attribut auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-457">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-458">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> -Methode überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-458">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="fc93e-459">Wenn ein <xref:System.Web.UI.HtmlTextWriterStyle.Color> Style-Attribut gerendert wird <xref:System.Web.UI.HtmlTextWriterStyle.Color> , der Wert `purple`jedoch nicht <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> ist, verwendet <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> die-Überschreibung <xref:System.Web.UI.HtmlTextWriterStyle.Color> die- `purple`Methode, um das-Attribut auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-459">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-460">Wenn Sie von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> -Methode <see langword="false" /> überschreiben, um zu verhindern, dass ein Format Attribut überhaupt gerendert wird, dass es für ein bestimmtes Element gerendert wird oder für eine bestimmte Markup Sprache gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-460">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span></span> <span data-ttu-id="fc93e-461">Wenn Sie z. b. nicht möchten, dass <see cref="T:System.Web.UI.HtmlTextWriter" /> das von abgeleitete Objekt das <see langword="color" /> Style-Attribut zu einem <see langword="&lt;p&gt;" /> -Element wieder gibt, können <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> Sie das <see langword="false" /> über <paramref name="name" /> schreiben und bei Durchläufen <see langword="color" />zurückgeben.und der <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> -Eigenschafts <see langword="p" />Wert ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-461">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-462">Eine Zeichenfolge mit dem Namen des Elements, das gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-462">A string containing the name of the element to render.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-463">Das dem Element zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Element.</span><span class="sxs-lookup"><span data-stu-id="fc93e-463">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span></span></param>
        <summary><span data-ttu-id="fc93e-464">Bestimmt, ob das angegebene Markupelement auf der anfordernden Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-464">Determines whether the specified markup element will be rendered to the requesting page.</span></span></summary>
        <returns><span data-ttu-id="fc93e-465">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-465">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-466">Die <xref:System.Web.UI.HtmlTextWriter> Klassen Implementierung <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> der-Methode gibt immer `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="fc93e-466">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="fc93e-467">Die <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> über schreibungen können bestimmen, ob ein Element auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-467">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-468">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> -Methode überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-468">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="fc93e-469">Wenn ein <xref:System.Web.UI.HtmlTextWriterTag.Font> -Element gerendert wird <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> , wird die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> -Methode verwendet, um <xref:System.Web.UI.HtmlTextWriterAttribute.Size> zu bestimmen, ob ein-Attribut gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-469">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="fc93e-470">Wenn nicht, wird die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode verwendet, um ein <xref:System.Web.UI.HtmlTextWriterAttribute.Size> -Attribut zu erstellen und `20pt`dessen Wert auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-470">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-471">Wenn Sie von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> -Methode über <see langword="false" /> schreiben, um zu verhindern, dass ein Markup Element überhaupt oder für eine bestimmte Markup Sprache gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-471">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span></span> <span data-ttu-id="fc93e-472">Wenn Sie z. b. nicht möchten, dass das Objekt, das <see cref="T:System.Web.UI.HtmlTextWriter" /> von abgeleitet wird <see langword="&lt;font&gt;" /> , das-Element Rendering, <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> können Sie die <see langword="false" /> -Methode überschreiben, um zurückzugeben <see langword="&lt;font&gt;" /> , wenn eine Seite angefordert wird, die ein-Element enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-472">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-473">Schreibt eine Reihe von Tabstoppzeichenfolgen, die die Einzugsebene für eine Zeile mit Markupzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-473">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-474">Die <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> -Methode verwendet <xref:System.Web.UI.HtmlTextWriter.Indent%2A> die-Eigenschaft, um zu bestimmen, wie viele Tab-Zeichen folgen geschrieben werden müssen, um den gewünschten Einzug zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="fc93e-475">Die Tabstopp Zeichenfolge wird <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> mit dem-Konstruktor angegeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-475">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="fc93e-476">Wenn keine Tabstopp Zeichenfolge angegeben <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> ist,`\t`wird die Konstante () verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-476">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-477">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> -Methode in einer Klasse überschrieben wird, <xref:System.Web.UI.HtmlTextWriter> die von der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-477">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-478">Die <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> außer Kraft Setzung verwendet <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> immer die Konstante, um den Einzug auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-478">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-479">Entfernt das zuletzt gespeicherte Markupelement aus der Liste der gerenderten Elementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-479">Removes the most recently saved markup element from the list of rendered elements.</span></span></summary>
        <returns><span data-ttu-id="fc93e-480">Ein <see cref="T:System.String" />, der das zuletzt gerenderte Markupelement enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-480">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-481">Elemente werden der Liste der gerenderten Markup Elemente von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-481">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="fc93e-482">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode entfernt Markup Elemente aus der Liste, indem <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-482">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fc93e-483">Die Liste der gerenderten Elemente ist leer.</span><span class="sxs-lookup"><span data-stu-id="fc93e-483">The list of rendered elements is empty.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag"><span data-ttu-id="fc93e-484">Das Endtag des Markupelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-484">The closing tag of the markup element.</span></span></param>
        <summary><span data-ttu-id="fc93e-485">Speichert das angegebene Markupelement für die spätere Verwendung, wenn das Endtag eines Markupelements generiert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-485">Saves the specified markup element for later use when generating the end tag for a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-486">Elemente werden der Liste der gerenderten Markup Elemente hinzugefügt <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> , wenn die <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> -Methode die-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="fc93e-486">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="fc93e-487">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode entfernt Markup Elemente aus der Liste, nachdem das Endtag für das Element gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-487">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-488">Eine Zeichenfolge, die den Namen des zu registrierenden Markupattributs enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-488">A string containing the name of the markup attribute to register.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-489">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das dem Attributnamen entspricht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-489">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span></span></param>
        <summary><span data-ttu-id="fc93e-490">Registriert Markupattribute (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span><span class="sxs-lookup"><span data-stu-id="fc93e-490">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-491">Die vordefinierten Attribute der HTML-Markup Sprache werden durch Aufrufe der <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> -Methode registriert, wenn das erste <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-491">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="fc93e-492">Dynamische Attribute können zu anderen Zeitpunkten mithilfe <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> der-Methode registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-492">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="fc93e-493">Die von der <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> -Methode verwendete Registrierungs Tabelle `static`lautet, sodass die Registrierung von Attributen für <xref:System.Web.UI.HtmlTextWriter> alle Objekte auf dem Host Computer gilt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-493">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-494">Die aus der Quelldatei übergebene Zeichenfolge, die den Formatnamen angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-494">The string passed from the source file specifying the style name.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-495">Der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der dem angegebenen Format entspricht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-495">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span></span></param>
        <summary><span data-ttu-id="fc93e-496">Registriert Markupformateigenschaften (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span><span class="sxs-lookup"><span data-stu-id="fc93e-496">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-497">Die vordefinierten Cascading Stylesheet (CSS)-Attribute der HTML-Markup Sprache werden durch Aufrufe der <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> -Methode registriert, wenn das erste <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-497">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="fc93e-498">Dynamische Stil Attribute können zu anderen Zeitpunkten mithilfe <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> der-Methode registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-498">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="fc93e-499">Die von der <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> -Methode verwendete Registrierungs Tabelle `static`lautet, sodass die Registrierung von Attributen für <xref:System.Web.UI.HtmlTextWriter> alle Objekte auf dem Host Computer gilt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-499">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-500">Eine Zeichenfolge, die das HTML-Tag enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-500">A string that contains the HTML tag.</span></span></param>
        <param name="key"><span data-ttu-id="fc93e-501">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, das das zu rendernde Element angibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-501">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span></span></param>
        <summary><span data-ttu-id="fc93e-502">Registriert Markuptags (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span><span class="sxs-lookup"><span data-stu-id="fc93e-502">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-503">Die vordefinierten Markup Tags der HTML-Sprache werden durch Aufrufe der <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> -Methode registriert, wenn das erste <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-503">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="fc93e-504">Dynamische Markup Tags können mithilfe der <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> -Methode zu anderen Zeitpunkten registriert werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-504">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="fc93e-505">Die von der <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> -Methode verwendete Registrierungs Tabelle `static`lautet, sodass die Registrierung von Tags für <xref:System.Web.UI.HtmlTextWriter> alle Objekte auf dem Host Computer gilt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-505">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-506">Schreibt Text oder Abstände, die sich hinter dem Inhalt und vor dem Endtag des zu rendernden Markupelements befinden, in den Markupausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-506">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span></span></summary>
        <returns><span data-ttu-id="fc93e-507">Eine Zeichenfolge, die die Abstände oder den Text enthält, der hinter dem Inhalt des Elements geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-507">A string that contains the spacing or text to write after the content of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-508">Die <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> -Methode kann nützlich sein, wenn Sie untergeordnete Elemente in das aktuelle Markup Element einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-508">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-509">Das folgende Codebeispiel zeigt, wie die <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> -Methode in einer von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleiteten Klasse überschrieben `<label>` wird, um zu bestimmen, ob ein-Element gerendert wird</span><span class="sxs-lookup"><span data-stu-id="fc93e-509">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="fc93e-510">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> ist, fügt die Überschreibung das `<font>` Endtag eines-Elements direkt vor `<label>` dem schließenden Tag des-Elements ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-510">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="fc93e-511">Wenn ein anderes Element als `<label>` gerendert wird, <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> wird die Basis Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-511">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-512">Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Klassen Implementierung <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> der Methode gibt zurück <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-512">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="fc93e-513">Über <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> schreiben Sie, wenn Sie Text oder einen Abstand nach dem Element Inhalt, jedoch vor dem schließenden Tag schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-513">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-514">Schreibt Abstände oder Text, der hinter dem Endtag eines Markupelements steht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-514">Writes any spacing or text that occurs after the closing tag for a markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-515">Der hinter dem Endtag des Elements zu schreibende Abstand oder Text.</span><span class="sxs-lookup"><span data-stu-id="fc93e-515">The spacing or text to write after the closing tag of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-516">Die <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> -Methode kann nützlich sein, wenn Sie zusätzliche schließende Tags nach dem Elementtag Rendering möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-516">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-517">Das folgende Codebeispiel zeigt, wie die <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> -Methode überschrieben wird, um zu bestimmen, ob eine von der `<label>` <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleitete Klasse ein-Element rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-517">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="fc93e-518">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> ist, fügt die Überschreibung das `<font>` schließende Tag eines `<label>` -Elements direkt nach dem-Element ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-518">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="fc93e-519">Wenn es sich nicht um `<label>` ein-Element <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> handelt, wird die Basis Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-519">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-520">Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Klassen Implementierung <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> der Methode gibt zurück <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-520">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="fc93e-521">Über <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> schreiben Sie, wenn Sie Text oder einen Abstand nach dem Endtag des Elements schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-521">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-522">Schreibt Text oder Abstände vor dem Inhalt und hinter dem Starttag eines Markupelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-522">Writes any text or spacing before the content and after the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-523">Der vor dem Inhalt des Elements zu schreibende Text oder Abstand.</span><span class="sxs-lookup"><span data-stu-id="fc93e-523">The text or spacing to write prior to the content of the element.</span></span> <span data-ttu-id="fc93e-524">Wenn <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> nicht überschrieben wurde, wird <see langword="null" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-524">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-525">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> -Methode kann nützlich sein, wenn Sie untergeordnete Elemente in das aktuelle Markup Element vor dem inneren Markup einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-525">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-526">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> -Methode überschrieben wird, um zu bestimmen <xref:System.Web.UI.HtmlTextWriter> , ob eine von der- `<label>` Klasse abgeleitete Klasse gerade ein-Element Rendering.</span><span class="sxs-lookup"><span data-stu-id="fc93e-526">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="fc93e-527">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> ist, fügt die Überschreibung das `<font>` öffnende Tag eines-Elements direkt nach `<label>` dem öffnenden Tag des-Elements ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-527">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="fc93e-528">Wenn es sich nicht um `<label>` ein-Element <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> handelt, wird die Basis Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-528">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-529">Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Klassen Implementierung <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> der Methode gibt zurück <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-529">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="fc93e-530">Über <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> schreiben Sie, wenn Sie Text oder einen Abstand nach dem öffnenden Tag, aber vor dem Element Inhalt schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-530">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-531">Schreibt Text oder Abstände vor dem Starttag eines Markupelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-531">Writes any text or spacing that occurs before the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="fc93e-532">Der Text oder Abstand, der vor dem Starttag des Markupelements geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-532">The text or spacing to write before the markup element opening tag.</span></span> <span data-ttu-id="fc93e-533"><see langword="null" />, wenn die Methode nicht überschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-533">If not overridden, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-534">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> -Methode kann nützlich sein, wenn Sie zusätzliche öffnende Tags vor dem öffnenden Tag des vorgesehenen Elements Rendering möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-534">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-535">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> -Methode überschrieben wird, um zu bestimmen, ob <xref:System.Web.UI.HtmlTextWriter> eine von der-Klasse abgeleitete Klasse im Begriff ist, ein `<label>` -Element zu Rendering.</span><span class="sxs-lookup"><span data-stu-id="fc93e-535">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="fc93e-536">Wenn dies der Fall <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> ist, fügt die Überschreibung das `<font>` öffnende Tag eines `<label>` -Elements direkt vor dem-Element ein.</span><span class="sxs-lookup"><span data-stu-id="fc93e-536">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="fc93e-537">Wenn kein- `<label>` Element gerendert wird, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> wird die Basis Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-537">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-538">Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Klassen Implementierung <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> der Methode gibt zurück <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-538">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="fc93e-539">Über <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> schreiben Sie, wenn Sie Text oder Abstände vor dem Starttag des Elements schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-539">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-540">Schreibt das Starttag eines Markupelements in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-540">Writes the opening tag of a markup element to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="fc93e-541">Eine Zeichenfolge mit dem Namen der Markupelements, für das das Starttag gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-541">A string containing the name of the markup element for which to render the opening tag.</span></span></param>
        <summary><span data-ttu-id="fc93e-542">Schreibt das Starttag des angegebenen Markupelements in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-542">Writes the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-543">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> Überschreibung der-Methode, wenn das Markup Element nicht einer der <xref:System.Web.UI.HtmlTextWriterTag> Enumerationswerte ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-543">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="fc93e-544">Um ein Markup Element mithilfe der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode zu generieren, rufen Sie zuerst die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode und die-Methode auf, um beliebige Element Attribute oder Stil Attribute anzugeben, die im öffnenden Tag des Elements angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-544">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="fc93e-545">Rufen Sie nach dem Generieren des inneren Markups die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode auf, um das schließende Tag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-545">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-546">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode in einem benutzerdefinierten-Steuerelement aufgerufen wird, um das öffnende Tag eines nicht standardmäßigen `MyTag` Elements zu Rendering.</span><span class="sxs-lookup"><span data-stu-id="fc93e-546">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="fc93e-547">Das Codebeispiel ruft dann die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode auf, um das innere Markup zu Rendering <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> , und ruft dann die-Methode auf, um das Element zu schließen</span><span class="sxs-lookup"><span data-stu-id="fc93e-547">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="fc93e-548">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-548">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="fc93e-549">Einer der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Werte, der das Starttag des zu rendernden Markupelements definiert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-549">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span></span></param>
        <summary><span data-ttu-id="fc93e-550">Schreibt das Starttag des Markupelements, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert zugeordnet ist, in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-550">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-551">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> die- <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> Überladung der-Methode <xref:System.Web.UI.HtmlTextWriterTag> , wenn das Markup Element einen bekannten Typ hat, der einer der Enumerationswerte ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-551">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="fc93e-552">Um ein Markup Element mithilfe der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode zu generieren, rufen Sie zuerst die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode und die-Methode auf, um beliebige Element Attribute oder Stil Attribute anzugeben, die im öffnenden Tag des Elements angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-552">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="fc93e-553">Rufen Sie nach dem Generieren des inneren Markups die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode auf, um das schließende Tag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-553">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-554">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode verwendet wird, um das öffnende Tag `<img>` eines-Elements auszugeben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-554">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="fc93e-555">Die Attribute, die dem-Element von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode hinzugefügt werden, befinden sich im öffnenden `<img>` Tag.</span><span class="sxs-lookup"><span data-stu-id="fc93e-555">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="fc93e-556">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode wird verwendet, um das Endtag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-556">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="fc93e-557">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-557">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-558">Schreibt das Endtag eines Markupelements in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-558">Writes the end tag of a markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-559">Aufrufen der <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode, <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> nachdem die-Überladung aufgerufen wurde, und nachdem der gesamte Inhalt zwischen dem öffnenden und dem schließenden Tag (inneren Markup) des-Elements gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-559">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-560">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode nach der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, die das öffnende Tag generiert, und mit der <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode, die das innere Markup zwischen dem öffnenden und dem schließenden Tag der benutzerdefinierten `MyTag` das Element wurde aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-560">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="fc93e-561">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-561">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-562">Stellt ein Leerzeichen und den Schrägstrich (/) eines selbstschließenden Markuptags dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-562">Represents a space and the self-closing slash mark (/) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-563">Das <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> -Feld wird in Markup Elementen verwendet, die selbst geschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="fc93e-563">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="fc93e-564">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="fc93e-564">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-565">Stellt schließenden Schrägstrich und schließende spitze Klammer (/&gt;) eines selbstschließenden Markupelements dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-565">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-566">Das <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode beim Erstellen von selbstschließenden Markup Elementen verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-566">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-567">Im folgenden Codebeispiel wird gezeigt, wie der Wert einer benutzerdefinierten `FileName` Eigenschaft, gefolgt von einem Anführungszeichen und den durch das <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> -Feld dargestellten Zeichen, dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-567">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="fc93e-568">Das Codebeispiel ruft die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode auf und <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> übergibt das-Feld als Parameter Argument, um das-Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-568">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="fc93e-569">In diesem Codebeispiel wird `FileName` der-Eigenschafts Wert und dann das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-569">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-570">Stellt das Semikolon (;) dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-570">Represents the semicolon (;).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-571">Übergeben Sie <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> das Feld als Parameter Argument in einem <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methoden aufzurufen, wenn Sie ein Semikolon von einem benutzerdefinierten Steuerelement oder Adapter renderingelement Rendering.</span><span class="sxs-lookup"><span data-stu-id="fc93e-571">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-572">Im folgenden Codebeispiel wird veranschaulicht, wie eine Reihe von Stilen in einem Markup Element manuell dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-572">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="fc93e-573">Das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode zum `font-size` Rendering `border-style` und zum Formatieren von Attributen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-573">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="fc93e-574">Das <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> -Feld wird als Parameter <xref:System.Web.UI.HtmlTextWriter.Write%2A> der-Methode verwendet, um den Wert des `font-size` Attributs vom Anfang des `border-style` Attributs zu trennen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-574">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="fc93e-575">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-575">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-576">Stellt einen Apostroph (') dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-576">Represents an apostrophe (').</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-577">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> das-Feld, wenn es erforderlich ist, einen Apostroph zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-577">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-578">Stellt den Schrägstrich (/) dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-578">Represents the slash mark (/).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-579">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.SlashChar> das-Feld, um die Schrägstriche beim Schreiben einer URL zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-579">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="fc93e-580">Die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode verwendet <xref:System.Web.UI.HtmlTextWriter.SlashChar> das-Feld, wenn das Endtag eines Markup Elements geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-580">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-581">Im folgenden Codebeispiel wird veranschaulicht, wie das `src` -Attribut `<img>` eines-Elements manuell dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-581">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="fc93e-582">Im Codebeispiel wird die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode mit <xref:System.Web.UI.HtmlTextWriter.SlashChar> dem-Feld als Parameter verwendet, um Schrägstriche in dem Pfad zu erzeugen, `src` der auf das Attribut angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-582">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="fc93e-583">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-583">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-584">Stellt ein Leerzeichen ( ) dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-584">Represents a space ( ) character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-585">Das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> - <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode und der-Methode verwendet, wenn Trennzeichen zwischen Elementen und Attributen geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-585">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-586">In diesem Abschnitt finden Sie zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-586">This section provides two code examples.</span></span> <span data-ttu-id="fc93e-587">Der erste veranschaulicht, wie ein Zeichen Array erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-587">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="fc93e-588">Der zweite veranschaulicht, wie das Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-588">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="fc93e-589">In diesen Codebeispielen wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-589">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="fc93e-590">Im folgenden Codebeispiel wird gezeigt, wie ein <xref:System.Char> -Array erstellt wird <xref:System.Web.UI.HtmlTextWriter.SpaceChar> , das das-Feld enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-590">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="fc93e-591">Im folgenden Codebeispiel wird gezeigt, wie das Array, das im vorangehenden Codebeispiel erstellt wurde, beim Aufrufen der <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode als Parameter verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-591">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-592">Stellt das Formatzuweisungszeichen (<see langword=":" />) dar, das zum Festlegen von Formatattributen auf Werte verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-592">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-593">Das <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> -Feld wird von der <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> -Methode verwendet, um Stil Namen und-Werte zu begrenzen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-593">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-594">Im folgenden Codebeispiel wird veranschaulicht, wie ein `FontWeight` -Attribut und der `bold` Wert von in das öffnende Tag eines-Elements dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-594">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="fc93e-595">Im Codebeispiel wird die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode mit <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> dem-Feld als-Parameter verwendet, um das Zeichen zu Rendering, das den Wert der einzelnen Formatvorlagen Attribute festlegt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-595">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="fc93e-596">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-596">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-597">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das angegebene Markupelement ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-597">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span></span></summary>
        <value><span data-ttu-id="fc93e-598">Das Markupelement, dessen Starttag gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-598">The markup element that is having its opening tag rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-599">Die <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> -Eigenschaft wird nur für Klassen verwendet, die von der <xref:System.Web.UI.HtmlTextWriter> -Klasse erben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-599">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-600">Die <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> -Eigenschaft sollte nur in einem Aufruf der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode gelesen oder festgelegt werden. Dies ist der einzige Zeitpunkt, an dem Sie auf einen konsistenten Wert festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-600">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-601">Im folgenden Codebeispiel wird eine überschriebene Version der <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> -Methode in einer Klasse veranschaulicht, die <xref:System.Web.UI.HtmlTextWriter> von der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-601">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-602">Er verwendet den Wert der <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> -Eigenschaft, um zu bestimmen, ob ein Server Steuerelement, das das benutzerdefinierte <xref:System.Web.UI.HtmlTextWriter> Objekt verwendet, ein `<label>` Markup Element rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-602">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="fc93e-603">Wenn dies der Fall ist `<font>` , `color` `red` wird ein-Element, dessen-Attribut auf festgelegt ist, zurückgegeben, um die Formatierung des ElementTextszuändern.`<label>`</span><span class="sxs-lookup"><span data-stu-id="fc93e-603">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc93e-604">Der Eigenschaftswert kann nicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-604">The property value cannot be set.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-605">Stellt die öffnende spitze Klammer (&lt;) eines Markuptags dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-605">Represents the opening angle bracket (&lt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-606">Das <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> -Feld wird von den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Methoden <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, und <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> beim Schreiben von Markup Tags verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-606">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-607">Im folgenden Codebeispiel wird das erste Zeichen des öffnenden Tags eines `<table>` -Elements mit dem Elementnamen gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-607">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="fc93e-608">Im Codebeispiel wird die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode mit <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> dem-Feld als Parameter verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-608">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="fc93e-609">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-609">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-610">Ruft den Tagnamen des gerenderten Markupelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-610">Gets or sets the tag name of the markup element being rendered.</span></span></summary>
        <value><span data-ttu-id="fc93e-611">Der Tagname des gerenderten Markupelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-611">The tag name of the markup element being rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-612">Die <xref:System.Web.UI.HtmlTextWriter.TagName%2A> -Eigenschaft wird nur für Klassen verwendet, die von der <xref:System.Web.UI.HtmlTextWriter> -Klasse erben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-612">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-613">Die <xref:System.Web.UI.HtmlTextWriter.TagName%2A> -Eigenschaft sollte nur in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methoden aufrufen gelesen oder festgelegt werden. Dies ist der einzige Zeitpunkt, an dem Sie auf einen konsistenten Wert festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-613">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-614">Im folgenden Codebeispiel wird eine überschriebene Version der <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> -Methode in einer Klasse veranschaulicht, die <xref:System.Web.UI.HtmlTextWriter> von der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-614">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="fc93e-615">Im Codebeispiel wird überprüft, ob das zu Rendering Ende `<label>` Element ein-Element <xref:System.String.Compare%2A?displayProperty=nameWithType> ist, indem die-Methode <xref:System.Web.UI.HtmlTextWriter.TagName%2A> aufgerufen und dann der-Eigenschafts Wert und eine Zeichenfolge `"label"`,, als Parameter Argumente übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-615">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="fc93e-616">Wenn ein `<label>` -Element gerendert wird, wird das öffnende Tag `<font>` eines-Elements, `color` dessen-Attribut `red`auf festgelegt ist, `<label>` vor dem öffnenden Tag des Elements gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-616">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="fc93e-617">Wenn das zu Rendering-Element kein `<label>` -Element ist, wird die Version <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> der-Methode der Basisklasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-617">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc93e-618">Stellt die schließende spitze Klammer (&gt;) eines Markuptags dar.</span><span class="sxs-lookup"><span data-stu-id="fc93e-618">Represents the closing angle bracket (&gt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-619">Das <xref:System.Web.UI.HtmlTextWriter.TagRightChar> -Feld wird von den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Methoden <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, und <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> beim Schreiben von Markup Tags verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc93e-619">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-620">Im folgenden Codebeispiel wird gezeigt, wie das Endtag eines `<table>` -Elements durch Aufrufe von über Ladungen <xref:System.Web.UI.HtmlTextWriter.Write%2A> der-Methode dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-620">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="fc93e-621">Zum Rendering des letzten Zeichens des Tags verwendet das Codebeispiel die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode mit dem <xref:System.Web.UI.HtmlTextWriter.TagRightChar> -Feld als Parameter.</span><span class="sxs-lookup"><span data-stu-id="fc93e-621">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="fc93e-622">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-622">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-623">Schreibt den angegebenen Datentyp zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-623">Writes the specified data type to the output stream, along with any pending tab spacing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-624">Der <see cref="T:System.Boolean" />, der in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-624">The <see cref="T:System.Boolean" /> to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-625">Schreibt die Textdarstellung eines booleschen Werts zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-625">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-626">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-626">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-627">Das in den Ausgabestream zu schreibende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-627">The Unicode character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-628">Schreibt die Textdarstellung eines Unicode-Zeichens zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-628">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-629">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-629">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-630">Im folgenden Codebeispiel wird die Verwendung <xref:System.Web.UI.HtmlTextWriter.Write%2A> der-Methode zum Beenden des öffnenden `<img>` Tags eines Elements mithilfe <xref:System.Web.UI.HtmlTextWriter.TagRightChar> der-Konstante veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-630">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="fc93e-631">In diesem Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-631">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fc93e-632">Das in den Ausgabestream zu schreibende Array von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-632">The array of Unicode characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-633">Schreibt die Textdarstellung eines Arrays von Unicode-Zeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-633">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-634">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-634">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-635">In diesem Abschnitt finden Sie zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-635">This section provides two code examples.</span></span> <span data-ttu-id="fc93e-636">Der erste veranschaulicht, wie ein Zeichen Array erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-636">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="fc93e-637">Der zweite veranschaulicht, wie das Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-637">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="fc93e-638">In diesen Codebeispielen wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-638">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="fc93e-639">Im folgenden Codebeispiel wird veranschaulicht, wie ein Zeichen Array erstellt wird, das `hello world`einen Ausdruck erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-639">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="fc93e-640">Im-Array ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> -Feld enthalten, das ein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-640">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="fc93e-641">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird `hello world` , um das im vorangehenden Codebeispiel erstellte Zeichen Array in eine Seite zu Rendering, wenn das-Steuerelement, das den Beispielcode enthält, in einer Seite enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-641">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-642">Die Gleitkommazahl mit doppelter Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-642">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-643">Schreibt die Textdarstellung einer Gleitkommazahl mit doppelter Genauigkeit zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-643">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-644">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-644">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-645">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um den <xref:System.Double.MaxValue?displayProperty=nameWithType> Wert des Felds zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-645">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="fc93e-646">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-646">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-647">Die 32-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-647">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-648">Schreibt die Textdarstellung einer ganze 32-Byte-Zahl mit Vorzeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-648">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-649">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-649">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-650">Die 64-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-650">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-651">Schreibt die Textdarstellung einer 64-Byte-Ganzzahl mit Vorzeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-651">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-652">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-652">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-653">Das Objekt, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-653">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-654">Schreibt die Textdarstellung eines Objekts zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-654">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-655">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-655">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-656">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um den <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Wert der-Eigenschaft zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-656">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="fc93e-657">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-657">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="fc93e-658">Der Wert <xref:System.Globalization.CultureInfo.CurrentCulture%2A> der Eigenschaft:</span><span class="sxs-lookup"><span data-stu-id="fc93e-658">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-659">Die Gleitkommazahl mit einfacher Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-659">The single-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-660">Schreibt die Textdarstellung einer Gleitkommazahl mit einfacher Genauigkeit zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-660">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-661">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-661">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-662">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um den <xref:System.Single.Epsilon?displayProperty=nameWithType> Wert des Felds zu erzeugen. Dies ist der <xref:System.Single> kleinste mögliche Wert der-Struktur.</span><span class="sxs-lookup"><span data-stu-id="fc93e-662">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="fc93e-663">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-663">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fc93e-664">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-664">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-665">Schreibt die angegebene Zeichenfolge zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-665">Writes the specified string to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-666">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-666">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-667">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um eine Zeichenfolge zwischen den öffnenden und schließenden Tags eines benutzerdefinierten Markup Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-667">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="fc93e-668">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-668">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-669">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-669">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="fc93e-670">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-670">An object to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-671">Schreibt eine Tabstoppzeichenfolge und eine formatierte Zeichenfolge zusammen mit allen ausstehenden Tabstopps und unter Verwendung derselben Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-671">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-672">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-672">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-673">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge <xref:System.Globalization.CultureInfo.CurrentCulture%2A> mit dem Wert der-Eigenschaft zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-673">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-674">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-674">A string that contains zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="fc93e-675">Ein zu formatierendes Objektarray.</span><span class="sxs-lookup"><span data-stu-id="fc93e-675">An object array to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-676">Schreibt eine formatierte Zeichenfolge, die die Textdarstellung eines Objektarrays enthält, zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-676">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="fc93e-677">Diese Methode verwendet die gleiche Semantik wie die <see cref="M:System.String.Format(System.String,System.Object[])" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-677">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-678">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-678">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-679">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-679">This section contains two code examples.</span></span> <span data-ttu-id="fc93e-680">Der erste veranschaulicht, wie eine formatierte Zeichenfolge und der Inhalt eines Arrays dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-680">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="fc93e-681">Der zweite veranschaulicht, wie das Array deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-681">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="fc93e-682">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge und den Inhalt eines `curPriceTime`Objekt Arrays mit dem Namen zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-682">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="fc93e-683">Der Methodenaufrufe rendert den zweiten Member des Arrays, bevor der erste Member gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-683">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="fc93e-684">Im folgenden Codebeispiel wird das Deklarieren des `curPriceTime` Objekt Arrays veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-684">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fc93e-685">Das Zeichenarray, aus dem Text in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-685">The array of characters from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="fc93e-686">Die Indexposition im Array, bei der mit dem Schreiben begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-686">The index location in the array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="fc93e-687">Die Anzahl der Zeichen, die in den Ausgabestream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-687">The number of characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-688">Schreibt die Textdarstellung eines Teilarrays von Unicode-Zeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-688">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-689">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-689">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-690">In diesem Abschnitt finden Sie zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-690">This section provides two code examples.</span></span> <span data-ttu-id="fc93e-691">Der erste veranschaulicht, wie ein Zeichen Array erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-691">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="fc93e-692">Der zweite veranschaulicht, wie das Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-692">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="fc93e-693">In diesen Codebeispielen wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-693">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="fc93e-694">Im folgenden Codebeispiel wird veranschaulicht, wie ein Zeichen Array erstellt wird, das `hello world`einen Ausdruck erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-694">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="fc93e-695">Im-Array ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> -Feld enthalten, das ein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-695">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="fc93e-696">Der folgende Teil des Code Beispiels verwendet den `index` -Parameter und den-Parameter der <xref:System.Web.UI.HtmlTextWriter.Write%2A> - `count` Methode, um die ersten fünf Zeichen des Arrays zu erzeugen, das im vorherigen Beispiel erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-696">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-697">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-697">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="fc93e-698">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-698">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="fc93e-699">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-699">An object to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-700">Schreibt eine formatierte Zeichenfolge, die die Textdarstellung zweier Objekte enthält, zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-700">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="fc93e-701">Diese Methode verwendet die gleiche Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-701">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-702">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode generiert alle ausstehenden Registerkarten und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basis Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fc93e-702">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-703">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> <xref:System.Globalization.CultureInfo.CurrentCulture%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge und <xref:System.DateTime.Today%2A> die Werte der Eigenschaften und zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-703">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-704">Schreibt ein Markupattribut und dessen Wert in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-704">Writes a markup attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-705">Das Attribut, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-705">The attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-706">Der Wert, der dem Attribut zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-706">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-707">Schreibt das angegebene Markupattribut und dessen Wert in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-707">Writes the specified markup attribute and value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-708">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> die-Methode, um Markup Attribute und deren Werte ohne Codierung zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-708">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="fc93e-709">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode schreibt den Attribut Wert in doppelte Anführungszeichen (").</span><span class="sxs-lookup"><span data-stu-id="fc93e-709">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="fc93e-710">Wenn `value` <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> ist `null`, schreibt die-Methode nur den Attributnamen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-710">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-711">Im folgenden Codebeispiel wird das Rendern eines `<img>` Elements veranschaulicht, in dem beide über Ladungen <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> der-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-711">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="fc93e-712">Das Codebeispiel verwendet den folgenden Prozess:</span><span class="sxs-lookup"><span data-stu-id="fc93e-712">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="fc93e-713">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode auf, die die öffnenden Zeichen des-Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-713">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="fc93e-714">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> -Überladung auf, `alt` die ein Attribut und seinen Wert `<img>` in das-Element schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-714">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="fc93e-715">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> -Überladung auf, `myattribute` um ein benutzerdefiniertes Attribut `No "encoding" required`mit dem Wert zu `fEncode` erzeugen `false`, und legt dann auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-715">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="fc93e-716">Schließt das öffnende Tag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode auf, um das `<img>` Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-716">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="fc93e-717">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-717">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-718">In abgeleiteten Klassen können Sie die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> -Methode überschreiben, um benutzerdefinierte Regeln zum Schreiben von Attributen und deren Werten zu definieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-718">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="fc93e-719">Beispielsweise können Sie Code schreiben, der es der <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> Methode ermöglicht, ein Attribut mit einem leeren Wert zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-719">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-720">Das Markupattribut, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-720">The markup attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-721">Der Wert, der dem Attribut zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="fc93e-721">The value assigned to the attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="fc93e-722"><see langword="true" />, um das Attribut und seinen zugewiesenen Wert zu codieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-722"><see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-723">Schreibt das angegebene Markupattribut und den Wert in den Ausgabestream und schreibt den codierten Wert (falls angegeben).</span><span class="sxs-lookup"><span data-stu-id="fc93e-723">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-724">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> die-Methode, um Markup Attribute und deren Werte mit oder ohne Codierung zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-724">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="fc93e-725">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode verwendet <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> die-Methode, um die Codierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-725">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="fc93e-726">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode schreibt den Attribut Wert in doppelte Anführungszeichen (").</span><span class="sxs-lookup"><span data-stu-id="fc93e-726">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="fc93e-727">Wenn `value` <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> ist `null`, schreibt die-Methode nur den Attributnamen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-727">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-728">Im folgenden Codebeispiel wird das Rendern eines `<img>` Elements veranschaulicht, in dem beide über Ladungen <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> der-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-728">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="fc93e-729">Das Codebeispiel verwendet den folgenden Prozess:</span><span class="sxs-lookup"><span data-stu-id="fc93e-729">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="fc93e-730">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode auf, die die öffnenden Zeichen des-Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-730">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="fc93e-731">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> -Überladung auf, `alt` die ein Attribut und seinen Wert `<img>` in das-Element schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-731">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="fc93e-732">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> -Überladung auf, `myattribute` um ein benutzerdefiniertes Attribut `No "encoding" required`mit dem Wert zu `fEncode` erzeugen `false`, und legt dann auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-732">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="fc93e-733">Schließt das öffnende Tag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode auf, um das `<img>` Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-733">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="fc93e-734">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-734">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fc93e-735">In abgeleiteten Klassen können Sie die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> -Methode überschreiben, um benutzerdefinierte Regeln zum Schreiben von Attributen und deren Werten zu definieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-735">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="fc93e-736">Beispielsweise können Sie Code schreiben, der es der <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> Methode ermöglicht, ein Attribut mit einem leeren Wert zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-736">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="fc93e-737">Das Markupelement, dessen Starttag geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-737">The markup element of which to write the opening tag.</span></span></param>
        <summary><span data-ttu-id="fc93e-738">Schreibt alle Tabstopps und das Starttag des angegebenen Markupelements in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-738">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-739">Die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode schreibt nicht die schließende spitze Klammer (>) des öffnenden Tags des Markup Elements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="fc93e-740">Dies ermöglicht das Schreiben von Markup Attributen in das öffnende Tag des Elements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-740">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="fc93e-741">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.TagRightChar> die Konstante, um das öffnende Tag zu <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> schließen, wenn Sie die Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-741">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="fc93e-742">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> die-Methode <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> mit der-Konstante, wenn Sie Markup Elemente schreiben, die sich selbst schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-742">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="fc93e-743">Die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode wird von benutzerdefinierten Server Steuerelementen verwendet, die keine Tags-oder Attribut Zuordnung und Rendering-Markup Elemente auf die gleiche Weise für jede Anforderung zulassen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-743">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-744">Im folgenden Codebeispiel wird das Rendern eines `<img>` Elements veranschaulicht, in dem beide über Ladungen <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> der-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-744">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="fc93e-745">Das Codebeispiel verwendet den folgenden Prozess:</span><span class="sxs-lookup"><span data-stu-id="fc93e-745">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="fc93e-746">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode auf, die die öffnenden Zeichen des-Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-746">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="fc93e-747">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> -Überladung auf, `alt` die ein Attribut und seinen Wert `<img>` in das-Element schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-747">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="fc93e-748">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> -Überladung auf, `myattribute` um ein benutzerdefiniertes Attribut `No "encoding" required`mit dem Wert zu `fEncode` erzeugen `false`, und legt dann auf fest.</span><span class="sxs-lookup"><span data-stu-id="fc93e-748">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="fc93e-749">Schließt das öffnende Tag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode auf, um das `<img>` Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-749">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="fc93e-750">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-750">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-751">Schreibt ein <see langword="&lt;br /&gt;" />-Markupelement in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-751">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-752">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> die-Methode, um Zeilenumbrüche in benutzerdefiniertem Steuerelement oder Adapter Markup zu</span><span class="sxs-lookup"><span data-stu-id="fc93e-752">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="fc93e-753">Die <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> -Methode schreibt ein Leerzeichen `br` zwischen `/` und, um die HTML-Kompatibilität zu verbessern.</span><span class="sxs-lookup"><span data-stu-id="fc93e-753">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-754">Das folgende Codebeispiel zeigt, wie <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> die-Methode aufgerufen wird, um ein `<br />` -Element in den anfordernden Browser zu schreiben `&lt;custID&gt; &amp; &lt;invoice#&gt;` , nachdem die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> -Methode das codierte Markup geschrieben hat</span><span class="sxs-lookup"><span data-stu-id="fc93e-754">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="fc93e-755">Die Textzeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-755">The text string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-756">Codiert den angegebenen Text für das anfordernde Gerät und schreibt ihn dann in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-756">Encodes the specified text for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-757">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> die-Methode, wenn eine Zeichenfolge\< eckige Klammern (oder >) oder ein kaufmännisches und-Zeichen (&) enthält.</span><span class="sxs-lookup"><span data-stu-id="fc93e-757">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="fc93e-758">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> -Methode verwendet <xref:System.Web.HttpUtility.HtmlEncode%2A> die-Methode, um die Codierung auszuführen, und `00A0` konvertiert `&nbsp;`auch Unicode-Zeichen in.</span><span class="sxs-lookup"><span data-stu-id="fc93e-758">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-759">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> -Methode verwendet wird, um `&lt;custID&gt; &amp; &lt;invoice#&gt;` das codierte Markup in den Ausgabestream zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-759">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="fc93e-760">Die <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> -Methode `<br />`schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-760">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc93e-761"><paramref name="text" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-761"><paramref name="text" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fc93e-762">Die URL-Zeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-762">The URL string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-763">Codiert die angegebene URL und schreibt sie dann in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-763">Encodes the specified URL, and then writes it to the output stream.</span></span> <span data-ttu-id="fc93e-764">Die URL kann Parameter enthalten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-764">The URL might include parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-765">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> -Methode codiert die Zeichenfolge `url` im-Parameter entsprechend der Spezifikation für die URL-Codierung.</span><span class="sxs-lookup"><span data-stu-id="fc93e-765">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="fc93e-766">Die Parameter, die dem Fragezeichen (?) folgen, werden nicht codiert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-766">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-767">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> -Methode veranschaulicht, die die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="urlText"><span data-ttu-id="fc93e-768">Die URL-Parameterzeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-768">The URL parameter string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-769">Codiert den angegebenen URL-Parameter für das anfordernde Gerät und schreibt diesen anschließend in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-769">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-770">Leerzeichen im Parameter Teil einer URL werden als Pluszeichen (+) codiert, und Gleichheitszeichen (=) werden als `%3d`codiert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-770">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-771">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> -Methode veranschaulicht, die die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-771">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="fc93e-772">Das Element, für das das Endtag geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-772">The element to write the closing tag for.</span></span></param>
        <summary><span data-ttu-id="fc93e-773">Schreibt alle Tabstopps und das Endtag des angegebenen Markupelements.</span><span class="sxs-lookup"><span data-stu-id="fc93e-773">Writes any tab spacing and the closing tag of the specified markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-774">Anders als <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> bei der- <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode hat die-Methode keine Logik, damit das Endtag des Elements mit dem entsprechenden öffnenden Tag übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-774">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-775">Im folgenden Codebeispiel wird das Rendern eines `<img>` -Elements veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-775">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="fc93e-776">Das Codebeispiel verwendet den folgenden Prozess:</span><span class="sxs-lookup"><span data-stu-id="fc93e-776">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="fc93e-777">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode auf, um die öffnenden Zeichen des-Elements zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-777">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="fc93e-778">Ruft die zwei über Ladungen der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode auf, um Attribute in das `<img>` -Element zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-778">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="fc93e-779">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode auf, `<img>` um das Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-779">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="fc93e-780">Das Element, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-780">The element to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-781">Schreibt alle Tabstopps und das Starttag des angegebenen Markupelements in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-781">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-782">Die <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> -Methode schreibt automatisch die schließende spitze Klammer (>) des öffnenden Tags des-Elements, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> im Gegensatz zur-Methode, die nicht die schließende spitze Klammer schreibt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-782">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="fc93e-783">Verwenden <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> Sie für Markup Elemente, die keine Attribute aufweisen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-784">Schreibt Daten, die durch die überladenen Parameter angegeben werden, gefolgt von einem Zeichen für den Zeilenabschluss, in einen <see cref="T:System.Web.UI.HtmlTextWriter" />-Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-784">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span></span> <span data-ttu-id="fc93e-785">Alle Versionen dieser Methode schreiben alle ausstehenden Tabstopps in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-785">All versions of this method write any pending tab spacing to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-786">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-786">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-787">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-787">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc93e-788">Schreibt eine Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-788">Writes a line terminator string to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-789">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-790">Weitere Informationen finden Sie unter <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc93e-790">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-791">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um eine `<img>` Zeile einzufügen, nachdem ein Element gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-791">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-792">Der boolesche Wert, der in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-792">The Boolean to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-793">Schreibt alle ausstehenden Tabstopps und die Textdarstellung eines booleschen Werts gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-793">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-794">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-795">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-796">Das Zeichen, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-796">The character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-797">Schreibt alle ausstehenden Tabstopps und ein Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-797">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-798">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-799">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fc93e-800">Das Zeichenarray, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-800">The character array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-801">Schreibt alle ausstehenden Tabstopps und ein Array von Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-801">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-802">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-802">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-803">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-803">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-804">In diesem Abschnitt finden Sie zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-804">This section provides two code examples.</span></span> <span data-ttu-id="fc93e-805">Der erste veranschaulicht, wie ein Array erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-805">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="fc93e-806">Im zweiten Beispiel wird die Verwendung dieses Arrays veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fc93e-806">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="fc93e-807">In diesen Codebeispielen wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-807">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="fc93e-808">Im folgenden Codebeispiel wird veranschaulicht, wie ein Zeichen Array erstellt wird, das `hello world`einen Ausdruck erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-808">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="fc93e-809">Im-Array ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> -Feld enthalten, das ein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-809">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="fc93e-810">Im folgenden Codebeispiel wird das `hello world` Zeichen Array, das im vorherigen Beispiel erstellt wurde, mithilfe der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode gerendert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-810">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-811">Die Gleitkommazahl mit doppelter Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-811">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-812">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer Gleitkommazahl mit doppelter Genauigkeit gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-812">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-813">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-813">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-814">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-814">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-815">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um den <xref:System.Double.MaxValue?displayProperty=nameWithType> Wert des Felds zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-815">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="fc93e-816">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-816">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-817">Die 32-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-817">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-818">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer ganzen 32-Byte-Zahl mit Vorzeichen, gefolgt von einer Zeichenfolge für den Zeilenabschluss, in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-818">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-819">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-820">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-821">Die 64-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-821">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-822">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer 64-Byte-Ganzzahl mit Vorzeichen, gefolgt von einer Zeichenfolge für den Zeilenabschluss, in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-822">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-823">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-824">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-825">Das Objekt, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-825">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-826">Schreibt alle ausstehenden Tabstopps und die Textdarstellung eines Objekts gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-826">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-827">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-827">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-828">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-828">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-829">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um den <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Wert der-Eigenschaft in einem-Steuerelement zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-829">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-830">Die Gleitkommazahl mit einfacher Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-830">The single-precision floating point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-831">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer Gleitkommazahl mit einfacher Genauigkeit gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-831">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-832">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-832">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-833">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-833">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-834">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um den <xref:System.Single.Epsilon?displayProperty=nameWithType> Wert des Felds zu erzeugen. Dies ist der <xref:System.Single> kleinste mögliche Wert der-Struktur.</span><span class="sxs-lookup"><span data-stu-id="fc93e-834">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="fc93e-835">In diesem Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-835">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fc93e-836">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-836">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-837">Schreibt alle ausstehenden Tabstopps und eine Textzeichenfolge gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-837">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-838">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-839">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc93e-840">Die 4-Byte-Ganzzahl ohne Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-840">The 4-byte unsigned integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-841">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-841">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-842">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-842">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-843">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-843">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-844">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-844">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="fc93e-845">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-845">An object to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-846">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung eines Objekts enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-846">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-847">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-847">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-848">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet die gleiche Semantik wie <xref:System.String.Format%28System.String%2CSystem.Object%29> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-848">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="fc93e-849">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-849">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-850">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge <xref:System.Globalization.CultureInfo.CurrentCulture%2A> mit dem Wert der-Eigenschaft zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-850">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-851">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-851">A string containing zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="fc93e-852">Ein zu formatierendes Objektarray.</span><span class="sxs-lookup"><span data-stu-id="fc93e-852">An object array to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-853">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung eines Objektarrays enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-853">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-854">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-854">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-855">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet die gleiche Semantik wie <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-855">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="fc93e-856">Die <xref:System.IO.TextWriter.WriteLine%2A> -Methode wird verwendet, um die `value` -Methode zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-856">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-857">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-857">This section contains two code examples.</span></span> <span data-ttu-id="fc93e-858">Der erste veranschaulicht, wie eine Zeichenfolge und ein Array in den Ausgabestream geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-858">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="fc93e-859">Im zweiten Beispiel wird gezeigt, wie das Array deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-859">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="fc93e-860">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge und den Inhalt eines Objekt Arrays in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="fc93e-860">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="fc93e-861">Im folgenden Codebeispiel wird veranschaulicht, wie das Objekt Array deklariert wird, das im vorangehenden Codebeispiel gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="fc93e-861">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fc93e-862">Das Zeichenarray, aus dem Text in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-862">The character array from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="fc93e-863">Die Position im Zeichenarray, an der mit dem Schreiben begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-863">The location in the character array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="fc93e-864">Die Anzahl der Zeichen im Array, die in den Ausgabestream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-864">The number of characters in the array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-865">Schreibt alle ausstehenden Tabstopps und ein Teilarray von Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-865">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-866">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-866">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-867">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-867">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-868">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fc93e-868">This section contains two code examples.</span></span> <span data-ttu-id="fc93e-869">Der erste veranschaulicht, wie ein Zeichen Array erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-869">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="fc93e-870">Der zweite veranschaulicht, wie das Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-870">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="fc93e-871">In diesen Codebeispielen wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="fc93e-871">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="fc93e-872">Im folgenden Codebeispiel wird veranschaulicht, wie ein Zeichen Array erstellt wird, das `hello world`einen Ausdruck erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-872">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="fc93e-873">Im-Array ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> -Feld enthalten, das ein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-873">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="fc93e-874">Im folgenden Codebeispiel werden der `index` - `count` Parameter und der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Parameter der-Methode verwendet, um die ersten fünf Zeichen des Arrays zu erzeugen, die im vorangehenden Codebeispiel erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="fc93e-874">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fc93e-875">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-875">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="fc93e-876">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-876">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="fc93e-877">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc93e-877">An object to format.</span></span></param>
        <summary><span data-ttu-id="fc93e-878">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung von zwei Objekten enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-878">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-879">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-879">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-880">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet die gleiche Semantik wie <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-880">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="fc93e-881">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-881">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc93e-882">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode verwendet wird, um eine formatierte Zeichenfolge <xref:System.Globalization.CultureInfo.CurrentCulture%2A> und die Werte <xref:System.DateTime.Today%2A> der-Eigenschaft und der-Eigenschaft zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-882">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fc93e-883">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-883">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="fc93e-884">Schreibt eine Zeichenfolge gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-884">Writes a string, followed by a line terminator string, to the output stream.</span></span> <span data-ttu-id="fc93e-885">Diese Methode ignoriert alle angegebenen Tabstopps.</span><span class="sxs-lookup"><span data-stu-id="fc93e-885">This method ignores any specified tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-886">Verwenden Sie <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> anstelle der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> -Methode die-Methode, wenn Sie keinen Tabstopp Abstand vor der gerenderten Zeichen `s`Folge rendern möchten.</span><span class="sxs-lookup"><span data-stu-id="fc93e-886">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="fc93e-887">Die Standard Zeichenfolge für den Zeilen Abschluss ist ein Wagen Rücklauf Zeichen, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="fc93e-887">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fc93e-888">Die <xref:System.IO.TextWriter.WriteLine%2A> Basis Methode wird verwendet, um den `value` -Parameter zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="fc93e-888">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc93e-889">Schreibt ein Formatattribut und dessen Wert in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-889">Writes a style attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-890">Das Formatattribut, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-890">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-891">Der dem Formatattribut zugewiesene Wert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-891">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="fc93e-892">Schreibt das angegebene Formatattribut in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="fc93e-892">Writes the specified style attribute to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-893">Die <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> -Methode schreibt das Style-Attribut in der folgenden Form:</span><span class="sxs-lookup"><span data-stu-id="fc93e-893">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="fc93e-894">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="fc93e-894">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc93e-895">Das Formatattribut, das in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-895">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="fc93e-896">Der dem Formatattribut zugewiesene Wert.</span><span class="sxs-lookup"><span data-stu-id="fc93e-896">The value assigned to the style attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="fc93e-897"><see langword="true" />, wenn das Formatattribut und sein zugeordneter Wert codiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc93e-897"><see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc93e-898">Schreibt das angegebene Formatattribut und dessen Wert in den Ausgabestream, wobei der Wert ggf. codiert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="fc93e-898">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-899">Die <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> -Methode schreibt das Style-Attribut in der folgenden Form:</span><span class="sxs-lookup"><span data-stu-id="fc93e-899">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="fc93e-900">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="fc93e-900">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="fc93e-901">Die <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> -Methode wird verwendet, um den `value` -Parameter zu codieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-901">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="fc93e-902">Die Zeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc93e-902">The string to encode and write to the output stream.</span></span></param>
        <param name="argument"><span data-ttu-id="fc93e-903"><see langword="true" />, um die Zeichenfolge als Teil des Parameterabschnitts der URL zu codieren, <see langword="false" />, um die Zeichenfolge als Teil des Pfadabschnitts der URL zu codieren.</span><span class="sxs-lookup"><span data-stu-id="fc93e-903"><see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span></span></param>
        <summary><span data-ttu-id="fc93e-904">Schreibt die angegebene Zeichenfolge und codiert sie entsprechend den URL-Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="fc93e-904">Writes the specified string, encoding it according to URL requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc93e-905">Die <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> -Methode codiert Zeichen, die als URL-Trennzeichen (abhängig von der- `argument`Einstellung) betrachtet werden können, in `%xx`Zeichen folgen der Form, wenn der ASCII- `%uxxxx`Code kleiner als 128 ist `x` ; andernfalls, wobei ein ist. hexadezimale Ziffer.</span><span class="sxs-lookup"><span data-stu-id="fc93e-905">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="fc93e-906">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> - <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> Methode und die <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> -Methode verwenden die-Methode als hilfsprogrammmethode.</span><span class="sxs-lookup"><span data-stu-id="fc93e-906">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
