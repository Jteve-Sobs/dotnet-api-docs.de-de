<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3a8fb2f7e2f68d7ac988952a27d646a631b2924" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34255042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="98ae6-101">Schreibt Markupzeichen und Text in den Ausgabestream eines ASP.NET-Serversteuerelements.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98ae6-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="98ae6-102">Diese Klasse stellt Formatierungsfunktionen bereit, die von ASP.NET-Serversteuerelementen beim Rendern von Markup auf Clients verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98ae6-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-103">Die <xref:System.Web.UI.HtmlTextWriter> Klasse wird zum Rendern von HTML 4.0 in Desktopbrowsern verwendet.</span><span class="sxs-lookup"><span data-stu-id="98ae6-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="98ae6-104">Die <xref:System.Web.UI.HtmlTextWriter> ist auch die Basisklasse für alle MarkupWriter in den <xref:System.Web.UI> Namespace, einschließlich der <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, und <xref:System.Web.UI.XhtmlTextWriter> Klassen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="98ae6-105">Diese Klassen werden verwendet, die Elemente, Attribute und Stil Layoutinformationen für verschiedene Arten von Markup zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="98ae6-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="98ae6-106">Darüber hinaus sind diese Klassen durch die Seiten- und Adapter-Klassen verwendet, die jede Markupsprache zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="98ae6-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="98ae6-107">In den meisten Fällen verwendet ASP.NET automatisch den entsprechenden Writer für das anfordernde Gerät.</span><span class="sxs-lookup"><span data-stu-id="98ae6-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="98ae6-108">Allerdings bei der Erstellung eines benutzerdefinierten Textverarbeitungsprogramms, oder wenn Sie einen bestimmten Writer zum Rendern einer Seite für ein bestimmtes Gerät angeben möchten, müssen Sie zuordnen den Writer die Seite in der `controlAdapters` Abschnitt der Datei der Anwendung-Browser.</span><span class="sxs-lookup"><span data-stu-id="98ae6-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-109">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.Control.Render%2A> Methode eines benutzerdefinierten Steuerelements, das von abgeleitet ist die <xref:System.Web.UI.Control> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="98ae6-110">Das Codebeispiel veranschaulicht die Verwendung verschiedener <xref:System.Web.UI.HtmlTextWriter> Methoden, Eigenschaften und Felder.</span><span class="sxs-lookup"><span data-stu-id="98ae6-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-111">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="98ae6-112">Die <see cref="T:System.IO.TextWriter" />-Instanz, die den Inhalt des Markups rendert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-113">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse, die eine Standard-Tabstoppzeichenfolge verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-114">Die <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> Konstruktor verwendet den <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Konstante beim Einzug einer Zeile erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="98ae6-115">Ruft die <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Überladung zum Initialisieren der neuen Instanz.</span><span class="sxs-lookup"><span data-stu-id="98ae6-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-116">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> Konstruktor zum Erstellen eines benutzerdefinierten <xref:System.Web.UI.HtmlTextWriter> Objekt mit dem Namen `StyledLabelHtmlWriter.` bei der `MyPage` benutzerdefinierte Klasse, die abgeleitet ist die <xref:System.Web.UI.Page> Klasse, die von einem Client angefordert wird Webbrowser, und er verwendet die `StyledLabelHtmlWriter` Klasse, um seinen Inhalt in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="98ae6-117">Der <see cref="T:System.IO.TextWriter" />, der den Inhalt des Markups rendert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="98ae6-118">Die Zeichenfolge, die für das Rendern eines Zeileneinzugs verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-119">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlTextWriter" />-Klasse unter Verwendung des angegebenen Tabstoppzeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-120">Die <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Konstruktor verwendet `tabString` beim Einzug einer Zeile ist erforderlich.</span><span class="sxs-lookup"><span data-stu-id="98ae6-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="98ae6-121">Ruft die <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> Basiskonstruktor zum Initialisieren der neuen Instanz.</span><span class="sxs-lookup"><span data-stu-id="98ae6-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-122">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> Konstruktor zum Erstellen eines benutzerdefinierten <xref:System.Web.UI.HtmlTextWriter> Objekt mit dem Namen `StyledLabelHtmlWriter.` bei der `MyPage` benutzerdefinierte Klasse, die abgeleitet ist die <xref:System.Web.UI.Page> Klasse, die von einem Client angefordert wird Webbrowser, und er verwendet die `StyledLabelHtmlWriter` Klasse, um seinen Inhalt in den Ausgabestream zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-123">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-124">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird. </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-125">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-126">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-127">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> Methode, wenn das Attribut nicht der ist die <xref:System.Web.UI.HtmlTextWriterAttribute> Werte, oder wenn das Attribut nicht erst zur Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="98ae6-128">Für eine Instanz eines beliebigen Markupelements angegebenen der <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="98ae6-129">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Attribute hinzugefügt, indem die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-130">Anschließend wird die Liste der Attribute aus gelöscht der <xref:System.Web.UI.HtmlTextWriter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="98ae6-131">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-132">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode, um das Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-133">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-134">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen Start- und Endtags des Elements gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-135">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-136">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode vor dem Aufruf der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="98ae6-137">Der Code ruft zwei verschiedene Überladungen der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> und zwei verschiedene Überladungen der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> vor dem Aufrufen der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode zum Rendern einer `<span>` Element in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="98ae6-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="98ae6-138">Die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> Methode dient zum Definieren des benutzerdefinierten Attributs mit dem Namen `CustomAttribute` und der benutzerdefinierte Wert mit dem Namen `CustomAttributeValue` für die `<span>` -Element, das dieser Code rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-139">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt, das dem Ausgabestream hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-140">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-141">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das Markupattribut und den Attributwert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-142">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> Methode, um ein Standardmarkup-Attribut zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="98ae6-143">Für eine Instanz eines beliebigen Markupelements angegebenen der <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="98ae6-144">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Attribute, die von hinzugefügt werden die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-145">Anschließend wird die Liste der Attribute aus gelöscht der <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="98ae6-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="98ae6-146">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-147">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode, um das Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-148">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-149">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen Start- und Endtags des Elements gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-150">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-151">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> -Methode zum Hinzufügen einer `Onclick` -Attribut auf ein Markupelement, und legen Sie als Wert in den folgenden ECMAScript-Code:</span><span class="sxs-lookup"><span data-stu-id="98ae6-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-152">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird. </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-153">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="98ae6-154">
            <see langword="true" />, wenn das Attribut und sein Wert codiert werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-155">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert mit einer optionalen Codierung hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-156">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Methode, wenn das Attribut nicht der ist die <xref:System.Web.UI.HtmlTextWriterAttribute> Werte oder ist erforderlich, wenn das Attribut erst zur Laufzeit und die Codierung nicht bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="98ae6-157">Für eine Instanz eines beliebigen Markupelements angegebenen der <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="98ae6-158">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Attribute hinzugefügt, indem die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-159">Anschließend wird die Liste der Attribute aus gelöscht der <xref:System.Web.UI.HtmlTextWriter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="98ae6-160">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Methode mit `fEncode` festgelegt `true`, wenn das Attribut ein Anführungszeichen ("), ein kleiner als-Zeichen (<), möglicherweise enthalten kann oder ein kaufmännisches und-Zeichen (&).</span><span class="sxs-lookup"><span data-stu-id="98ae6-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="98ae6-161">Der Methodenaufruf wird das Attribut, um den Anforderungen des anfordernden Geräts codieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="98ae6-162">Sie können festlegen, `fEncode` zu `false`, wenn Sie wissen, dass keines dieser Zeichen generiert wird oder wenn Sie wissen, dass das Attribut bereits codiert ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="98ae6-163">Wenn der Attributtyp ist `Style`, der Wert wird nicht codiert werden auch dann, wenn `fEndode` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-163">If the attribute type is `Style`, the value won’t be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="98ae6-164">Sicherstellen Sie, dass der Formatwert CSS-kompatibler und nicht bösartigen Code enthalten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-164">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>
  
 <span data-ttu-id="98ae6-165">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-166">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode, um das Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-167">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-168">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen Start- und Endtags des Elements gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-169">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-170">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Methode, um sicherzustellen, dass ein benutzerdefiniertes Attribut, mit dem Namen `myattribute`, und der Wert für nicht codiert werden ein `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-171">Eine Zeichenfolge mit dem Namen des Attributs, das hinzugefügt wird. </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-172">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-173">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Attribut darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-174">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Objekt erstellt und anschließend die <see cref="T:System.Web.UI.HtmlTextWriter" />-Methode aufruft, das festgelegte Markupattribut und den festgelegten Markupwert sowie einen <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Enumerationswert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-175">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> Methode nur beim erben von der <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-176">Sie können zum Erstellen neuer `name` und `key` -Paare für Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-177">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt, das dem Ausgabestream hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-178">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="98ae6-179">
            <see langword="true" />, wenn das Attribut und sein Wert codiert werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-180">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, das Markupattribut und den Attributwert mit einer optionalen Codierung hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-181">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> Methode, um ein Standardmarkup-Attribut, mit optionalen Codierung zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="98ae6-182">Für eine Instanz eines beliebigen Markupelements angegebenen der <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="98ae6-183">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Attribute hinzugefügt, indem die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-184">Anschließend wird die Liste der Attribute aus gelöscht der <xref:System.Web.UI.HtmlTextWriter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="98ae6-185">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> Methode mit `fEncode` festgelegt `true`, wenn das Attribut ein Anführungszeichen ("), ein kleiner als-Zeichen (<), möglicherweise enthalten kann oder ein kaufmännisches und-Zeichen (&).</span><span class="sxs-lookup"><span data-stu-id="98ae6-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="98ae6-186">Der Methodenaufruf wird das Attribut, um den Anforderungen des anfordernden Geräts codieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="98ae6-187">Sie können festlegen, `fEncode` zu `false`, wenn Sie wissen, dass keines dieser Zeichen generiert wird oder wenn Sie wissen, dass das Attribut bereits codiert ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="98ae6-188">Wenn der Attributtyp ist `Style`, der Wert wird nicht codiert werden auch dann, wenn `fEncode` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-188">If the attribute type is `Style`, the value won’t be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="98ae6-189">Sicherstellen Sie, dass der Formatwert CSS-kompatibler und nicht bösartigen Code enthalten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-189">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>

  
 <span data-ttu-id="98ae6-190">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-191">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode, um das Element Attribute hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-192">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-193">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen Start- und Endtags des Elements gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-194">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-195">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> Methode, um sicherzustellen, dass den Zeichenfolgenwert, der zugewiesen ist ein `Alt` -Attribut für ein `<img>` Element für das anfordernde Gerät codiert ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-196">Fügt dem Starttag des Elements, das das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt erstellt und anschließend die <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode aufruft, ein Markupformatattribut hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-197">Eine Zeichenfolge, die das hinzuzufügende Formatattribut enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-198">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-199">Fügt dem Markupstarttag, das durch einen nachfolgenden Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode erstellt wird, das angegebene Markupformatattribut und den Attributwert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-200">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> Methode, wenn das Format kein Mitglied wird die <xref:System.Web.UI.HtmlTextWriterStyle> Enumeration oder erst zur Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="98ae6-201">Die <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Formate für die Markupelemente, sondert rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="98ae6-202">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Formatvorlagen, die von hinzugefügt werden die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-203">Anschließend wird die Liste der Stile gelöscht.</span><span class="sxs-lookup"><span data-stu-id="98ae6-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="98ae6-204">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-205">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode, um jede Formatvorlage hinzuzufügen, der dem Element Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-206">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-207">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen dem Element öffnenden und schließenden Tags gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-208">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-209">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> Methode zum Rendern `font-size` und `color` Stilattribute auf eine `<p>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="98ae6-210">Dieses Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter> Klasse, um den Inhalt des Steuerelements zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-211">Ein <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der das Formatattribut darstellt, das im Ausgabestream hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-212">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-213">Fügt dem Start-Markuptag, das durch einen nachfolgenden Aufruf der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Methode erstellt wird, das im <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Wert angegebene Markupformatattribut und den Attributwert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-214">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> Methode, wenn das Format Mitglied ist die <xref:System.Web.UI.HtmlTextWriterStyle> Enumeration und vor der Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="98ae6-215">Die <xref:System.Web.UI.HtmlTextWriter> Klasse verwaltet eine Liste der Formate für die Markupelemente, sondert rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="98ae6-216">Wenn die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wird, werden alle Formatvorlagen hinzugefügt, indem die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode das Starttag des Elements gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-217">Anschließend wird die Liste der Stile gelöscht.</span><span class="sxs-lookup"><span data-stu-id="98ae6-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="98ae6-218">Die Codierungsmuster für das Rendern von Markupelemente lautet folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="98ae6-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="98ae6-219">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode, um jede Formatvorlage hinzuzufügen, der dem Element Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="98ae6-220">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="98ae6-221">Verwenden Sie andere Methoden nach Bedarf beim Rendern des Inhalts zwischen dem Element öffnenden und schließenden Tags gefunden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="98ae6-222">Verwenden Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-223">Im folgenden Codebeispiel wird veranschaulicht, wie Teil eine Überschreibung der Verwendung der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode in einer Klasse abgeleitet wurde. die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-224">Im Code wird überprüft, ob ein `<Label>` Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="98ae6-225">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> Methode wird aufgerufen, um zu überprüfen, ob eine `Color` Formatattributs definiert wurde, für die `<Label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="98ae6-226">Wenn eine `Color` Attribut nicht definiert wurde, ruft der Code dieser Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode zum Hinzufügen der `Color` -Attribut auf das Style-Attribut, und legen Sie dessen Wert auf `red`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-227">Eine Zeichenfolge, die das hinzuzufügende Formatattribut enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-228">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-229">Ein <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der das hinzuzufügende Formatattribut darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-230">Fügt dem Start-Markuptag, das durch einen nachfolgenden Aufruf der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Methode erstellt wird, das angegebene Markupformatattribut und den Attributwert sowie einen <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Enumerationswert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-231">Verwenden der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> Methode nur beim erben von der <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-232">Sie können zum Erstellen neuer `name` und `value` -Paare für <xref:System.Web.UI.HtmlTextWriterStyle> Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-233">Benachrichtigt ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt oder ein Objekt einer abgeleiteten Klasse darüber, dass ein Steuerelement gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-234">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="98ae6-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="98ae6-235">Müssen Sie überschreiben die <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> Methode in einer Klasse abgeleitet <xref:System.Web.UI.HtmlTextWriter> um Rendering-Funktionen bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="98ae6-236">Z. B. in einer Markupsprache, die möglicherweise `<p>` Elemente unmittelbar vor einem Steuerelement, aber wo gerendert werden die Notwendigkeit der `<p>` Element zuvor bestimmt ist, können Sie die <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-237">Schließt das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt und gibt alle zugeordneten Systemressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-238">Diese Implementierung der <xref:System.Web.UI.HtmlTextWriter.Close%2A> Methodenaufrufe der <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="98ae6-239">Nach einem Aufruf der <xref:System.Web.UI.HtmlTextWriter.Close%2A> -Methode, alle Vorgänge für die <xref:System.Web.UI.HtmlTextWriter> Objekt Ausnahmen auslösen, da alle zugehörigen Ressourcen freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-240">Stellt ein einzelnes Tabstoppzeichen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-241">Die einzige Registerkarte wird durch das 9 ASCII-Zeichen dargestellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-242">Im folgenden Codebeispiel wird veranschaulicht, wie einen Konstruktor erstellt wird, erfordert eine <xref:System.IO.TextWriter> Objekt als Parameter an und übergibt die <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Feld als Parameterargument an eine zweite Version des Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="98ae6-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="98ae6-243">Wenn dieser Konstruktor, aus dem Code aufgerufen wird die <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Feld definiert die Richtlinie Einzug für die Instanz des Markupwriters, das von einer Seite oder einem Adapter verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-244">Stellt das Anführungszeichenzeichen (") dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-245">Die <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode, um ein Attribut zu schließen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-246">Im folgenden Codebeispiel wird veranschaulicht, wie zum Rendern einer `border` -Attribut für ein `<table>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="98ae6-247">Der Code Ruft die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode rendert das Attribut und seinen Wert und verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern der <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> und <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> Felder.</span><span class="sxs-lookup"><span data-stu-id="98ae6-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="98ae6-248">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-249">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-250">Eine Zeichenfolge, die den zu codierenden Attributwert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="98ae6-251">
            <see langword="true" />, um den Attributwert zu codieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-252">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-253">Eine Zeichenfolge, die den codierten Attributwert enthält. <see langword="null" />, wenn <paramref name="value" /> leer ist, oder der nicht codierte Attributwert, wenn <paramref name="fEncode" /> gleich <see langword="false" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-254">Verwenden der <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> Methode, wenn das Attribut nicht ist ein <xref:System.Web.UI.HtmlTextWriterAttribute> Enumerationswert oder erst zur Laufzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="98ae6-255">Die <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> -Methode entfernt doppelte Anführungszeichen ("), kaufmännische und-Zeichen (&) und kleiner als ein Zeichen (<), damit diese ungültige tags nicht generiert werden, unabhängig von der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="98ae6-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="98ae6-256">Die eigentliche Codierung wird ausgeführt, indem die <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-257">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Methode als Parameter in eine <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methodenaufruf, und klicken Sie dann codiert eine `color:blue` Attributwert formatieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="98ae6-258">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das das Markupattribut darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-259">Eine Zeichenfolge, die den zu codierenden Attributwert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-260">Codiert den Wert des angegebenen Markupattributs basierend auf den Anforderungen des <see cref="T:System.Web.HttpRequest" />-Objekts des aktuellen Kontexts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-261">Eine Zeichenfolge, die den codierten Attributwert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-262">Die <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> -Methode entfernt doppelte Anführungszeichen ("), kaufmännische und-Zeichen (&) und kleiner als ein Zeichen (<), damit diese ungültige tags nicht generiert werden, unabhängig von der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="98ae6-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="98ae6-263">Die eigentliche Codierung wird ausgeführt, indem die <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="98ae6-264">Eine Zeichenfolge, die die zu codierende URL enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-265">Führt eine minimale URL-Codierung durch, indem Leerzeichen in der angegebenen URL in die Zeichenfolge "%20" konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-266">Eine Zeichenfolge, die die codierte URL enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-267">URL-Codierung eines Zeichens, besteht ein Prozentzeichen (%), gefolgt von der zweistellige hexadezimalen Darstellung (Groß-/Kleinschreibung) dem ISO-Latin-Codepunkt für das Zeichen ab.</span><span class="sxs-lookup"><span data-stu-id="98ae6-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="98ae6-268">Die hexadezimale Darstellung eines Leerzeichens ist 20.</span><span class="sxs-lookup"><span data-stu-id="98ae6-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-269">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> Methode, um alle Leerzeichen in der URL zu konvertieren, der als Parameter übergeben wird ein <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="98ae6-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-270">Ruft die Codierung ab, die das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt beim Schreiben von Inhalt in die Seite verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-271">Die <see cref="T:System.Text.Encoding" />, mit der das Markup in die Seite geschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-272">Die <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> Eigenschaft ruft den Wert ab, von der Basisklasse <xref:System.IO.TextWriter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-273">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> Eigenschaft schreiben Sie den Typ der Codierungstyp fest, der ein benutzerdefiniertes Steuerelement verwendet, um Text in die Seite zu rendern, die es enthält.</span><span class="sxs-lookup"><span data-stu-id="98ae6-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-274">Benachrichtigt ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt oder ein Objekt einer abgeleiteten Klasse darüber, dass das Rendern eines Steuerelements beendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="98ae6-275">Sie können mit dieser Methode beliebige in der <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />-Methode geöffnete Markupelemente schließen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-276">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="98ae6-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="98ae6-277">Sie überschreiben müssen <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in einer abgeleiteten Klasse die <xref:System.Web.UI.HtmlTextWriter> Klasse um Rendering-Funktionen bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="98ae6-278">Können Sie die <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> Methode, um beliebige Markupelemente schließen geöffnet wird, der <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-279">Stellt linke spitze Klammer und Schrägstrich (&lt;/) des Endtags eines Markupelements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-280">Die <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode zum Erstellen von Markup Endtags.</span><span class="sxs-lookup"><span data-stu-id="98ae6-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-281">Im folgenden Codebeispiel wird veranschaulicht, wie das Endtag des Rendern einer `<table>` Markupelement mithilfe der <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> und die <xref:System.Web.UI.HtmlTextWriter.TagRightChar> Felder als Parameterwerte in Aufrufen der <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="98ae6-282">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-283">Schreibt das Starttag eines Markupelements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="98ae6-284">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der den Beginn für das Layout und die Formatierung des Markupblocks angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-285">Schreibt das Starttag eines <see langword="&lt;span&gt;" />-Elements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-286">Verwenden der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, um zu einem Datenblock Markup Formate, wie Farbe oder Rahmen Breite Hintergrund anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="98ae6-287">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> und <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methoden ermöglichen es einem Geräteadapter oder das Steuerelement Markup zu erstellen, verwendet das Zeichenformat des angegebenen Formats.</span><span class="sxs-lookup"><span data-stu-id="98ae6-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="98ae6-288">Verwenden Sie den gleichen Wert für `style` in der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, mit denen Sie in der entsprechenden <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="98ae6-289">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> Methode rendert das Anfangstag des ein `<span>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="98ae6-290">Diese Methode fügt dann die erforderlichen Attribute und Stilattribute, des öffnenden Tags von der `<span>` Element zum Anzeigen der Einstellungen angegeben die <xref:System.Web.UI.WebControls.Style> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="98ae6-291">Wenn Sie ein anderes Markupelement enthalten die Attribute und Stilattribute, verwenden Sie rendern möchten die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-292">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Klasse, die mit dem Namen `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="98ae6-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="98ae6-293">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="98ae6-294">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methodenaufruf schließt die `<span>` Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="98ae6-295">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der den Beginn für das Layout und die Formatierung des Markupblocks angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="98ae6-296">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, das das Starttag des Markupelements mit dem in <c>style</c> angegebenen Formatobjekt angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-297">Schreibt das Starttag eines Markupelements mit Attributen, die die Layout- und Zeichenformatierung des angegebenen Formats implementieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-298">Verwenden der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, um zu einem Datenblock Markup Formate, wie Farbe oder Rahmen Breite Hintergrund anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="98ae6-299">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> und <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methoden ermöglichen es einem Geräteadapter oder das Steuerelement Markup zu erstellen, verwendet das Zeichenformat des angegebenen Formats.</span><span class="sxs-lookup"><span data-stu-id="98ae6-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="98ae6-300">Verwenden Sie den gleichen Wert für `style` in der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, mit denen Sie in der entsprechenden <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="98ae6-301">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Methode rendert das Starttag des Elements gemäß der `tag` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="98ae6-302">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Methode fügt dann die erforderlichen Attribute und Stilattribute dem Starttag des Elements, das die Einstellungen anzuzeigen, die vom angegebenen der <xref:System.Web.UI.WebControls.Style> Objekt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="98ae6-303">Verwenden der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> Überladung zum Rendern des öffnenden Tags von einem `<span>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-304">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Klasse, die mit dem Namen `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="98ae6-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="98ae6-305">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML`<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="98ae6-306">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methodenaufruf schließt die `<span>` Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-307">Stellt das Gleichheitszeichen (<see langword="=" />) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-308">Möglicherweise möchten Sie verwenden die <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> Feld statt der <xref:System.Web.UI.HtmlTextWriter.EqualsChar> Feld beim Erstellen des öffnenden Trennzeichens eines Attributwerts.</span><span class="sxs-lookup"><span data-stu-id="98ae6-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-309">Im folgenden Codebeispiel wird veranschaulicht, wie zum Rendern der `src` Attribut und ist Teil des Werts für ein `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="98ae6-310">Der Code verwendet die <xref:System.Web.UI.HtmlTextWriter.EqualsChar> Feld eine <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methodenaufruf, die das Gleichheitszeichen (=) zwischen dargestellt die `src` Attribut und seinen Wert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="98ae6-311">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-312">Stellt ein Gleichheitszeichen (=) und doppelte Anführungszeichen (") gemeinsam in einer Zeichenfolge (=") dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-313">Die <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> und <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methoden zum Erstellen des öffnenden Trennzeichens der Attributwerte enthalten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-314">Im folgenden Codebeispiel wird veranschaulicht, wie zum Rendern einer `border` -Attribut für ein `<table>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="98ae6-315">Der Code Ruft die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode rendert das Attribut und seinen Wert und verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern der <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> und <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> Felder.</span><span class="sxs-lookup"><span data-stu-id="98ae6-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="98ae6-316">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-317">Schreibt das Endtag eines Markupelements zum Beenden des angegebenen Layouts und der Zeichenformatierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="98ae6-318">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der das zu beendende Layout und die Formatierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-319">Schreibt das Endtag eines <see langword="&lt;span&gt;" />-Elements zum Beenden des angegebenen Layouts und der Zeichenformatierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-320">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> Methode rendert das schließende Tag eine `<span>` Element nach dem Endtag des Steuerelements, schließen das Element geöffnet, mit den entsprechenden <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="98ae6-321">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> und <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methoden ermöglichen es einem Geräteadapter oder Steuerelement, um Markup zu erstellen, startet und beendet einen Block durch Verwenden der Zeichen Formatierung des angegebenen Formats.</span><span class="sxs-lookup"><span data-stu-id="98ae6-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="98ae6-322">Verwenden Sie den gleichen Wert für `style` in der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, mit denen Sie in der entsprechenden <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-323">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Klasse, die mit dem Namen `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="98ae6-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="98ae6-324">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="98ae6-325">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methodenaufruf schließt die `<span>` Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="98ae6-326">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der das Beenden der Anwendung von Layout und Formatierung auf den Ausgabetext angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="98ae6-327">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, dass das Endtag des Markupelements angibt, das die Attribute enthielt, die das angegebene Format angewendet haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="98ae6-328">Dies muss dem im <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />-Aufruf übergebenen Schlüssel entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-329">Schreibt das Endtag des angegebenen Markupelements, um das angegebene Layout und Formatieren von Zeichen zu beenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-330">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Methode rendert das Endtag des Elements, das angegeben wird `tag` schließen Sie nach dem Endtag des Steuerelements, das Element, das mit den entsprechenden geöffnet wurde <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> -Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="98ae6-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="98ae6-331">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> und <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methoden ermöglichen es einem Geräteadapter oder Steuerelement, um Markup zu erstellen, startet und beendet einen Block durch Verwenden der Zeichen Formatierung des angegebenen Formats.</span><span class="sxs-lookup"><span data-stu-id="98ae6-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="98ae6-332">Verwenden Sie den gleichen Wert für `style` in der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode, mit denen Sie in der entsprechenden <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-333">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Klasse, die mit dem Namen `TextSample`, abgeleitet von der <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die verwendet der <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode anwenden einer <xref:System.Web.UI.WebControls.Style.ForeColor%2A> Formatvorlage, die eine Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="98ae6-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="98ae6-334">Die <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Methode rendert das HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="98ae6-335">Die <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Methodenaufruf schließt die `<span>` Element, nachdem der Text gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-336">Entfernt alle Markup- und Formatattribute aus allen Eigenschaften der Seite oder des Webserversteuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-337">Vor dem Rendern Attribute auf ein Markupelement die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="98ae6-338">Wiederum die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methodenaufrufe der <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> und <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> Methoden für jedes Attribut und den Stil zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-339">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe eine benutzerdefinierte Klasse abgeleitet wurde. die <xref:System.Web.UI.HtmlTextWriter> Klasse bereit, die überschreibt die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="98ae6-340">Beim Aufrufen der <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Überschreibung prüft, ob der TextWriter rendert `<label>` oder `<a>` Elemente:</span><span class="sxs-lookup"><span data-stu-id="98ae6-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="98ae6-341">Wenn eine `<label>` Element gerendert wird, die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> -Methode überprüft, ob eine `style` Attribut für das Element gerendert wird, und falls nicht, erstellt eine `style` Attribut, und wird auf `color: blue`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="98ae6-342">Wenn ein `<a>` Element gerendert wird, die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode bestimmt, ob ein `href` Attribut enthalten ist, und falls nicht, fügt ein `href` an die URL http://www.cohowinery.com.</span><span class="sxs-lookup"><span data-stu-id="98ae6-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-343">Löscht sämtliche Puffer für das aktuelle <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt und veranlasst, dass alle gepufferten Daten in den Ausgabestream geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-344">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.Flush%2A> Methode ruft nur die <xref:System.IO.TextWriter.Flush%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="98ae6-345">Eine Zeichenfolge, die das Attribut enthält, für das das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-346">Ruft den entsprechenden <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Enumerationswert für das angegebene Attribut ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-347">Der <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Enumerationswert für das angegebene Attribut, andernfalls ein ungültiger <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Wert, wenn das Attribut kein Member der Enumeration ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-348">Wenn `attrName` ist `null` oder eine leere Zeichenfolge (""), oder kann nicht gefunden werden, in der Tabelle von Attributnamen, den Wert 1, um ein <xref:System.Web.UI.HtmlTextWriterAttribute> Objekt, das zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-349">Im folgenden Codebeispiel wird veranschaulicht, wie mit einer von abgeleiteten Klasse die <xref:System.Web.UI.HtmlTextWriter> Klasse bereit, die überschreibt die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="98ae6-350">Die Überschreibung prüft, ob `tagKey` ist gleich der <xref:System.Web.UI.HtmlTextWriterTag.Font> Feld, der angibt, dass eine `<font>` Markupelement gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="98ae6-351">Wenn daher die Überschreibung ruft der <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> Methode, um herauszufinden, ob die `<font>` Element enthält eine <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut.</span><span class="sxs-lookup"><span data-stu-id="98ae6-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="98ae6-352">Wenn die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> gibt `false`, die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methodenaufrufe der <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> -Methode, die definiert die <xref:System.Web.UI.HtmlTextWriterAttribute.Size> und legt seinen Wert auf `30pt`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="98ae6-353">Das <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, für das der Markupattributname abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-354">Ruft den Namen des Markupattributs ab, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />-Wert zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-355">Eine Zeichenfolge, die den Namen des Markupattributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-356">Die <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> Methode gibt eine leere Zeichenfolge (""), wenn `attrKey` ist kein gültiger <xref:System.Web.UI.HtmlTextWriterAttribute> Wert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-357">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> -Methode zum Konvertieren einer <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Enumerationswert, auf seinem Zeichenfolgennamen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="98ae6-358">Das Formatattribut, für das der <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-359">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert für das angegebene Format ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-360">Der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert, der <paramref name="styleName" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-361">Die <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> -Methode gibt den Wert-1 als ein <xref:System.Web.UI.HtmlTextWriterStyle> Wert, wenn `styleName` entspricht einem beliebigen <xref:System.Web.UI.HtmlTextWriterStyle> -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-362">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode in einer Klasse abgeleitet wurde. die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-363">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Außerkraftsetzung bestimmt, ob eine `<label>` Markup gerendert werden, und wenn dies der Fall ist, überprüft das Element auf ein <xref:System.Web.UI.HtmlTextWriterStyle.Color> Attribut.</span><span class="sxs-lookup"><span data-stu-id="98ae6-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="98ae6-364">Wenn eine <xref:System.Web.UI.HtmlTextWriterStyle.Color> Attribut wurde nicht definiert, die <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> Methode dient als erster Parameter in einem Aufruf der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode zum Hinzufügen einer <xref:System.Web.UI.HtmlTextWriterStyle.Color> -Attribut auf eine `<label>` Markupelement, und legen die <xref:System.Web.UI.HtmlTextWriterStyle.Color> -Attribut`red`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="98ae6-365">Das <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, für das der Formatattributname abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-366">Ruft den Namen des dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert zugeordneten Markupformatattributs ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-367">Der Formatattributname, der dem in <paramref name="styleKey" /> angegebenen <see cref="T:System.Web.UI.HtmlTextWriterStyle" />-Enumerationswert zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-368">Wenn `styleKey` ist kein gültiger <xref:System.Web.UI.HtmlTextWriterStyle> -Objekt, das <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> Methode gibt eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="98ae6-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-369">Im folgenden Codebeispiel wird veranschaulicht, um zu überprüfen, ob ein `<label>` Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="98ae6-370">Wenn deshalb überprüft, ob eine <xref:System.Web.UI.HtmlTextWriterStyle.Color> Formatattributs für das Element definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="98ae6-371">Wenn das Attribut nicht definiert wurde, die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode wird aufgerufen, und die <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> -Methode konvertiert die <xref:System.Web.UI.HtmlTextWriterStyle.Color> Enumerationsmember in seine Zeichenfolgendarstellung Übergabe an die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="98ae6-372">Das Markupelement, für das das <see cref="T:System.Web.UI.HtmlTextWriterTag" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-373">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert ab, der dem angegebenen Markupelement zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-374">Der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert, andernfalls <see cref="T:System.Web.UI.HtmlTextWriterTag" />, wenn <paramref name="tagName" /> keinem bestimmten <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />-Wert zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-375">Wenn `tagName` ist `null`, eine leere Zeichenfolge (""), oder kann nicht gefunden werden, in der Tabelle der Markup-Tagnamen, die <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> Methode gibt die <xref:System.Web.UI.HtmlTextWriterTag.Unknown> Feld.</span><span class="sxs-lookup"><span data-stu-id="98ae6-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-376">Im folgenden Codebeispiel wird veranschaulicht, wie die Überladung der überschreiben die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode, eine Zeichenfolge als Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="98ae6-377">An übergebene Zeichenfolge die <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> -Methode, die es dem entsprechenden konvertiert <xref:System.Web.UI.HtmlTextWriterTag> Enumerationsmember, und klicken Sie dann übergibt dieses an die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überladung mit eine <xref:System.Web.UI.HtmlTextWriterTag> -Enumerationswert als Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="98ae6-378">Das <see cref="T:System.Web.UI.HtmlTextWriterTag" />, für das das Markupelement abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-379">Ruft das Markupelement ab, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-380">Eine Zeichenfolge, die das Markupelement darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-381">Wenn `tagKey` ist kein gültiger <xref:System.Web.UI.HtmlTextWriterTag> Wert, der <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> Methode gibt eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="98ae6-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-382">Im folgenden Codebeispiel wird veranschaulicht, wie zum Schließen einer `<font>` -Element mithilfe der <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="98ae6-383">Die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methodenaufrufe der <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> -Methode zum Konvertieren der <xref:System.Web.UI.HtmlTextWriterTag.Font> Wert in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="98ae6-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-384">Ruft die Anzahl von Tabstopps ab, um die der Anfang jeder Markupzeile eingerückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-385">Die Anzahl von Tabstopps, um die jede Zeile eingerückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-386">Einzug erfolgt durch Schreiben die Zeichenfolge, die von angegeben wird die `tabString` Parameter von der <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Konstruktor die Anzahl der Häufigkeit, mit der vom angegebenen die <xref:System.Web.UI.HtmlTextWriter.Indent%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="98ae6-387">Wenn die <xref:System.Web.UI.HtmlTextWriter.Indent%2A> Eigenschaft auf einen negativen Wert festgelegt ist, es vor dem Speichern in 0 geändert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-388">Im folgenden Codebeispiel wird veranschaulicht, wie den Wert zu erhöhen, die zugewiesen ist die <xref:System.Web.UI.HtmlTextWriter.Indent%2A> Eigenschaft, wenn das Anfangstag des Attribute hinzugefügt wurden eine `<span>` Element und die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="98ae6-389">Dies erhöht den Einzug für alle Markup, die in gerendert wird die `<span>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-390">Ruft den Textwriter ab, der den inneren Inhalt des Markupelements schreibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-391">Ein <see cref="T:System.IO.TextWriter" />, der den inneren Markupinhalt schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-392">Innere Markup-Inhalt ist der Text zwischen den Start- und Endtag eines Elements Markup Language.</span><span class="sxs-lookup"><span data-stu-id="98ae6-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="98ae6-393">Wenn die <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> -Eigenschaftensatz auf eine <xref:System.IO.TextWriter> -Objekt, das eine Instanz ist die <xref:System.Web.HttpWriter> Klasse, dieser Tatsache wird aufgeführt, sowie ein separater Verweis wird gespeichert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-394">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe ein benutzerdefiniertes Webserver-Steuerelement, abgeleitet wurde. die <xref:System.Web.UI.WebControls.WebControl> Klasse bereit, die überschreibt die <xref:System.Web.UI.Control.Render%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="98ae6-395">Er verwendet die <xref:System.Web.UI.HtmlTextWriter> Klasse zum Schreiben einer `<font>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="98ae6-396">Nachdem sie das Starttag des Elements geschrieben hat, verwendet die <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> Eigenschaft, um die Zeichenfolge zu schreiben `"<br> The time on the server:"` und verkettet diese Zeichenfolge mit dem Wert von der <xref:System.DateTime.Now%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-397">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-398">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-399">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-400">
            <see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-401">Zum Abrufen des Werts zuzuweisenden der <xref:System.Web.UI.HtmlTextWriterAttribute> -Objekts die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> Überladung.</span><span class="sxs-lookup"><span data-stu-id="98ae6-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-402">Im folgenden Codebeispiel wird veranschaulicht, wie eine Überschreibung der Verwendung der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode in einer Klasse, die von erben die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-403">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überschreiben wird geprüft, ob eine `<font>` Markupelement gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="98ae6-404">Wenn daher die Überschreibung ruft der <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> Methode, um zu überprüfen, ob die `<font>` Element enthält eine <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut.</span><span class="sxs-lookup"><span data-stu-id="98ae6-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="98ae6-405">Wenn nicht, wird die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methodenaufrufe der <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> -Methode, die definiert die <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut, und legt seinen Wert auf `30pt`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-406">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-407">Der Wert, der dem Attribut zugewiesen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-408">Bestimmt, ob das angegebene Markupattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-409">
            <see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-410">Wenn die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> -Methode zurückkehrt `true`, der Wert, der zugewiesen werden, die <xref:System.Web.UI.HtmlTextWriterAttribute> Objekt wird zurückgegeben, der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-411">Bestimmt, ob ein Markupformatattribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-412">Das dem Attribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-413">Bestimmt, ob das angegebene Markupformatattribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-414">
            <see langword="true" />, wenn das Attribut beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-415">Um den Wert abzurufen, die mit dem angegebenen Formatattribut gerendert werden, verwenden die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> Überladung von der <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-416">Im folgenden Codebeispiel wird veranschaulicht, um zu überprüfen, ob ein `<label>` Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="98ae6-417">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> -Methode überprüft, ob eine <xref:System.Web.UI.HtmlTextWriterStyle.Color> Formatattributs für das Element definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="98ae6-418">Wenn die <xref:System.Web.UI.HtmlTextWriterStyle.Color> Attribut wurde nicht definiert, die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methode definiert die <xref:System.Web.UI.HtmlTextWriterStyle.Color> Attribut, und legt seinen Wert auf `red`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="98ae6-419">Das dem Attribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-420">Der dem Formatattribut zugewiesene Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-421">Bestimmt, ob das angegebene Markupformatattribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-422">
            <see langword="true" />, wenn das Attribut und sein Wert beim nächsten Aufruf der <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />-Methode gerendert werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-423">Wenn die <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> -Methode zurückkehrt `true`, der Wert, der zugewiesen werden, die <xref:System.Web.UI.HtmlTextWriterStyle> Attribut ist, zurückgegeben, der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="98ae6-424">Eine Zeichenfolge, die den Namen des zu überprüfenden Attributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-425">Prüft ein Attribut darauf, ob es im Starttag eines <see langword="&lt;form&gt;" />-Markupelements gerendert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-426">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-427">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> -Methode zurückkehrt `true` für alle Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="98ae6-428">Überschreiben der <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> , die Attribute einzuschränken, die in das Anfangstag des gerendert werden kann ein `<form>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-429">
            <para>Überschreiben der <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> -Methode zurückgegeben <see langword="true" /> nur für die Attribute, die in aufgenommen werden können die <see langword="&lt;form&gt;" /> Element des Markups für die abgeleitete Klasse von der <see cref="T:System.Web.UI.HtmlTextWriter" /> Klasse dient.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-429">
              <para>Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-430">Ruft die Zeichenfolge für den Zeilenabschluss ab, die vom <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt verwendet wird, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-431">Die vom aktuellen <see cref="T:System.Web.UI.HtmlTextWriter" /> verwendete Zeichenfolge für den Zeilenabschluss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-432">Standardmäßige Zeichenfolge für den Zeilenabschluss ist ein Wagenrücklauf, gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="98ae6-433">Die Zeichenfolge für den Zeilenabschluss in den Ausgabestream, wenn eine geschrieben wird von der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methoden aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="98ae6-434">Wenn die <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> -Eigenschaftensatz auf `null`, das Standard-neue-Zeile-Zeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-435">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe eine benutzerdefinierte Klasse abgeleitet wurde. die <xref:System.Web.UI.HtmlTextWriter> Klasse bereit, die überschreibt die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="98ae6-436">Beim Aufrufen der <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Überschreibung prüft, ob der TextWriter rendert `<label>` oder `<a>` Elemente.</span><span class="sxs-lookup"><span data-stu-id="98ae6-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="98ae6-437">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode bestimmt, ob ein Formatattribut für die Bezeichnung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="98ae6-438">Wenn kein Format definiert ist, die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode legt fest, den Standardwert für die `style:color` Attribut Blau.</span><span class="sxs-lookup"><span data-stu-id="98ae6-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="98ae6-439">Die <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Methode verwendet dann die <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> Eigenschaft, um eine Linie einzufügen unterbrechen im Markuptag und schreibt Sie beliebige andere Attribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-440">Eine Zeichenfolge mit dem Namen des Attributs, das gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-441">Eine Zeichenfolge mit dem Wert, der dem Attribut zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-442">Das dem Markupattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-443">Bestimmt, ob das angegebene Markupattribut und sein Wert im aktuellen Markupelement gerendert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-444">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-445">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> immer Methodenrückgabe `true`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="98ae6-446">Die <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> Außerkraftsetzungen können bestimmen, ob ein Attribut auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-447">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="98ae6-448">Wenn eine <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut gerendert wird, aber die <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Wert ist nicht `30pt`, die <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> überschreiben Aufrufe der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> -Methode zum Hinzufügen einer <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut, und legen Sie dessen Wert auf `30pt`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-449">
            <para>Erben von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> Methode zurückzugebenden <see langword="false" /> zu verhindern, dass ein Attribut gerendert wird, auf ein bestimmtes Element gerendert wird, oder für ein bestimmtes Markup gerendert wird. Z. B., wenn Sie nicht möchten, dass das Objekt abgeleitet wurde. <see cref="T:System.Web.UI.HtmlTextWriter" /> zum Rendern der <see langword="bgcolor" /> -Attribut auf <see langword="&lt;table&gt;" /> Elemente, die Sie überschreiben die <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> und zurückgeben <see langword="false" /> Wenn <paramref name="name" /> übergibt <see langword="bgcolor" /> und die <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> Eigenschaftswert ist <see langword="table" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-449">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup. For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-450">Eine Zeichenfolge mit dem Namen des Formatvorlagenattributs, der gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-450">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-451">Eine Zeichenfolge mit dem Wert, der dem Formatattribut zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-451">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-452">Das dem Formatattribut zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-452">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-453">Bestimmt, ob das angegebene Markupformatattribut und sein Wert im aktuellen Markupelement gerendert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-453">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-454">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-454">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-455">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> immer Methodenrückgabe `true`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-455">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="98ae6-456">Die <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> Außerkraftsetzungen können bestimmen, ob ein Formatattribut auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-456">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-457">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-457">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="98ae6-458">Wenn eine <xref:System.Web.UI.HtmlTextWriterStyle.Color> Formatattributs gerendert wird, aber die <xref:System.Web.UI.HtmlTextWriterStyle.Color> Wert ist kein `purple`, die <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> überschreiben verwendet die <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> -Methode zum Festlegen der <xref:System.Web.UI.HtmlTextWriterStyle.Color> -Attribut auf `purple`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-458">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-459">
            <para>Erben von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> Methode zurückzugebenden <see langword="false" /> zu verhindern, dass ein Formatattribut gerendert wird, auf ein bestimmtes Element gerendert wird, oder für eine bestimmte Markupsprache gerendert wird. Z. B., wenn Sie das Objekt nicht möchten, die abgeleitet ist <see cref="T:System.Web.UI.HtmlTextWriter" /> zum Rendern der <see langword="color" /> Formatattribut eine <see langword="&lt;p&gt;" /> Element, überschreiben Sie die <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> und zurückgeben <see langword="false" /> beim <paramref name="name" /> übergibt <see langword="color" />und <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> Eigenschaftswert ist <see langword="p" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-459">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-460">Eine Zeichenfolge mit dem Namen des Elements, das gerendert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-460">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-461">Das dem Element zugeordnete <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-461">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-462">Bestimmt, ob das angegebene Markupelement auf der anfordernden Seite gerendert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-462">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-463">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-463">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-464">Die <xref:System.Web.UI.HtmlTextWriter> Implementierung der Klasse die <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> immer Methodenrückgabe `true`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-464">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="98ae6-465">Die <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> Außerkraftsetzungen können bestimmen, ob ein Element auf der Seite gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-465">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-466">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-466">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="98ae6-467">Wenn eine <xref:System.Web.UI.HtmlTextWriterTag.Font> Element gerendert wird, die <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> überschreiben verwendet die <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> Methode, um zu bestimmen, ob ein <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-467">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="98ae6-468">Falls nicht, verwendet der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode zum Erstellen einer <xref:System.Web.UI.HtmlTextWriterAttribute.Size> Attribut, und legen Sie dessen Wert auf `20pt`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-468">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-469">
            <para>Erben von der <see cref="T:System.Web.UI.HtmlTextWriter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> -Methode zur Rückgabe <see langword="false" /> um zu verhindern, dass ein Markupelement überhaupt oder für eine bestimmte Markupsprache gerendert wird. Z. B., wenn Sie das Objekt nicht möchten, die abgeleitet ist <see cref="T:System.Web.UI.HtmlTextWriter" /> zum Rendern der <see langword="&lt;font&gt;" /> Element, überschreiben Sie die <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> -Methode zur Rückgabe <see langword="false" /> Wenn eine Seite angefordert wird, die enthält eine <see langword="&lt;font&gt;" /> Element.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-469">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-470">Schreibt eine Reihe von Tabstoppzeichenfolgen, die die Einzugsebene für eine Zeile mit Markupzeichen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-470">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-471">Die <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> -Methode verwendet die <xref:System.Web.UI.HtmlTextWriter.Indent%2A> Eigenschaft, um zu bestimmen, wie viele Registerkarte Zeichenfolgen beim Schreiben in den gewünschten Einzug zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-471">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="98ae6-472">Die Registerkarte "-Zeichenfolge wird angegeben, mit der <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="98ae6-472">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="98ae6-473">Wenn keine Registerkarte Zeichenfolge angegeben wird, die <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Konstanten (`\t`) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-473">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-474">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> Methode in einer Klasse, die abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-474">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-475">Die <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> -Überschreibung verwendet immer die <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Konstante, um den Einzug auszuführen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-475">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-476">Entfernt das zuletzt gespeicherte Markupelement aus der Liste der gerenderten Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-476">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-477">Ein <see cref="T:System.String" />, der das zuletzt gerenderte Markupelement enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-477">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-478">Elemente werden hinzugefügt, um die Liste der gerenderten Markupelemente durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-478">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="98ae6-479">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode entfernt Markupelemente aus der Liste durch Aufrufen der <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-479">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="98ae6-480">Die Liste der gerenderten Elemente ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-480">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="98ae6-481">Das Endtag des Markupelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-481">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-482">Speichert das angegebene Markupelement für die spätere Verwendung, wenn das Endtag eines Markupelements generiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-482">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-483">Elemente werden hinzugefügt, um die Liste der Elemente des gerenderten Markups bei der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methodenaufrufe der <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-483">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="98ae6-484">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode Markupelemente aus der Liste entfernt, nachdem das Endtag für das Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-484">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-485">Eine Zeichenfolge, die den Namen des zu registrierenden Markupattributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-485">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-486">Ein <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, das dem Attributnamen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-486">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-487">Registriert Markupattribute (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-487">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-488">Durch Aufrufe von vordefinierten Attribute der HTML-Markup Language registriert sind die <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> Methode bei der ersten <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-488">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="98ae6-489">Dynamische Attribute können registriert werden, mithilfe der <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> Methode zu anderen Zeiten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-489">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="98ae6-490">Die verwendete Registrierungstabelle der <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> Methode ist `static`, damit die Registrierung der Attribute für alle gilt <xref:System.Web.UI.HtmlTextWriter> Objekte auf dem Hostcomputer.</span><span class="sxs-lookup"><span data-stu-id="98ae6-490">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-491">Die aus der Quelldatei übergebene Zeichenfolge, die den Formatnamen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-491">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-492">Der <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, der dem angegebenen Format entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-492">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-493">Registriert Markupformateigenschaften (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-493">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-494">Durch Aufrufe der vordefinierten Attribute cascading Stylesheet (CSS) der HTML-Markup Language registriert sind die <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> Methode bei der ersten <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-494">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="98ae6-495">Dynamische Formatattribute können registriert werden, mithilfe der <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> Methode zu anderen Zeiten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-495">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="98ae6-496">Die verwendete Registrierungstabelle der <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> Methode ist `static`, damit die Registrierung der Attribute für alle gilt <xref:System.Web.UI.HtmlTextWriter> Objekte auf dem Hostcomputer.</span><span class="sxs-lookup"><span data-stu-id="98ae6-496">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-497">Eine Zeichenfolge, die das HTML-Tag enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-497">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="98ae6-498">Ein <see cref="T:System.Web.UI.HtmlTextWriterTag" />, das das zu rendernde Element angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-498">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-499">Registriert Markuptags (die Literale oder dynamisch generiert sein können) aus der Quelldatei, sodass sie auf dem anfordernden Client richtig gerendert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-499">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-500">Die vordefinierten Markuptags der HTML-Sprache werden durch Aufrufe von registriert die <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> Methode bei der ersten <xref:System.Web.UI.HtmlTextWriter> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-500">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="98ae6-501">Dynamische Markuptags können registriert werden, mithilfe der <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> Methode zu anderen Zeiten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-501">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="98ae6-502">Die verwendete Registrierungstabelle der <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> Methode ist `static`, sodass die Registrierung von Tags für alle gilt <xref:System.Web.UI.HtmlTextWriter> Objekte auf dem Hostcomputer.</span><span class="sxs-lookup"><span data-stu-id="98ae6-502">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-503">Schreibt Text oder Abstände, die sich hinter dem Inhalt und vor dem Endtag des zu rendernden Markupelements befinden, in den Markupausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-503">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-504">Eine Zeichenfolge, die die Abstände oder den Text enthält, der hinter dem Inhalt des Elements geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-504">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-505">Die <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> Methode ist hilfreich, wenn Sie untergeordnete Elemente in der aktuellen Markupelement einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-505">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-506">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> Methode in einer Klasse abgeleitet wurde. die <xref:System.Web.UI.HtmlTextWriter> Klasse, um zu bestimmen, ob ein `<label>` Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-506">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="98ae6-507">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> Außerkraftsetzung fügt das Endtag ein `<font>` unmittelbar vor dem Endtag eines Elements der `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-507">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="98ae6-508">Wenn ein anderes Element als `<label>` gerendert wird, die <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base-Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-508">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-509">
            <para>Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementierung der Klasse die <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> -Methode zurückkehrt <see langword="null" />. Überschreiben Sie <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> , wenn Sie nach den Elementinhalt und vor dem Endtag Abstände oder Text schreiben möchten.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-509">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-510">Schreibt Abstände oder Text, der hinter dem Endtag eines Markupelements steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-511">Der hinter dem Endtag des Elements zu schreibende Abstand oder Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-511">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-512">Die <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> Methode ist hilfreich, wenn Sie zusätzliche schließende Tags nach der Element-Tag rendern möchten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-513">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> Methode, um zu bestimmen, ob eine Klasse abgeleitet der <xref:System.Web.UI.HtmlTextWriter> Klasse rendern ist ein `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="98ae6-514">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> Außerkraftsetzung fügt das Endtag ein `<font>` Element unmittelbar nach der `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="98ae6-515">Ist er kein `<label>` Element, das <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base-Methode wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="98ae6-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-516">
            <para>Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementierung der Klasse die <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> -Methode zurückkehrt <see langword="null" />. Überschreiben Sie <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> Wenn Text oder den Abstand nach dem Element ein schließendes Tag geschrieben werden soll.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-516">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-517">Schreibt Text oder Abstände vor dem Inhalt und hinter dem Starttag eines Markupelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-517">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-518">Der vor dem Inhalt des Elements zu schreibende Text oder Abstand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-518">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="98ae6-519">Wenn <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> nicht überschrieben wurde, wird <see langword="null" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-519">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-520">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Methode ist hilfreich, wenn Sie untergeordnete Elemente in der aktuellen Markupelement vor dem inneren Markup einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-520">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-521">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Methode, um zu bestimmen, ob eine Klasse abgeleitet der <xref:System.Web.UI.HtmlTextWriter> Klasse wird zum Rendern einer `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-521">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="98ae6-522">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Überschreibung fügt das Starttag des eine `<font>` unmittelbar nach dem Starttag des Elements der `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-522">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="98ae6-523">Ist er kein `<label>` Element, das <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base-Methode wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="98ae6-523">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-524">
            <para>Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementierung der Klasse die <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> -Methode zurückkehrt <see langword="null" />. Überschreiben Sie <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> Wenn Text oder den Abstand nach dem Starttag, jedoch vor der Inhalt des Elements geschrieben werden soll.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-524">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-525">Schreibt Text oder Abstände vor dem Starttag eines Markupelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-525">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98ae6-526">Der Text oder Abstand, der vor dem Starttag des Markupelements geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-526">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="98ae6-527">
            <see langword="null" />, wenn die Methode nicht überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-527">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-528">Die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> Methode ist hilfreich, wenn Sie vor dem Starttag des gewünschten Elements Weitere Starttags rendern möchten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-528">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-529">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> Methode bestimmen Sie, ob eine Klasse, die abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse wird zum Rendern einer `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-529">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="98ae6-530">Wenn dies der Fall ist, die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> Überschreibung fügt das Starttag des eine `<font>` Element unmittelbar vor dem `<label>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-530">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="98ae6-531">Wenn es nicht wiedergegeben wird eine `<label>` Element, die <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base-Methode wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="98ae6-531">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-532">
            <para>Die <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementierung der Klasse die <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> -Methode zurückkehrt <see langword="null" />. Überschreiben Sie <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> Wenn Text oder den Abstand vor dem Starttag des Elements geschrieben werden soll.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-532">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-533">Schreibt das Starttag eines Markupelements in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-533">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="98ae6-534">Eine Zeichenfolge mit dem Namen der Markupelements, für das das Starttag gerendert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-534">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-535">Schreibt das Starttag des angegebenen Markupelements in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-535">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-536">Verwenden der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> außer Kraft setzen, der die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> -Methode, wenn eine der nicht das Markupelement ist das <xref:System.Web.UI.HtmlTextWriterTag> Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="98ae6-536">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="98ae6-537">Generieren Sie ein Markupelement mithilfe von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode, rufen Sie zuerst die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> und <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methoden bei Bedarf an alle Element- oder Stilattribute, die in das Starttag des Elements angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-537">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="98ae6-538">Rufen Sie nach dem Generieren des inneren Markups, die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode, um das Endtag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-538">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-539">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode in ein benutzerdefiniertes Steuerelement zum Rendern des öffnenden Tags von einer nicht standardmäßigen `MyTag` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-539">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="98ae6-540">Das Codebeispiel ruft dann die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern von inneren Markup, und ruft dann die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode, um das Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-540">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="98ae6-541">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-541">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="98ae6-542">Einer der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Werte, der das Starttag des zu rendernden Markupelements definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-542">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-543">Schreibt das Starttag des Markupelements, das dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswert zugeordnet ist, in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-543">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-544">Verwenden der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überladung von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> Methode, wenn das Markupelement ein bekannter Typ aufweist, der die <xref:System.Web.UI.HtmlTextWriterTag> Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="98ae6-544">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="98ae6-545">Generieren Sie ein Markupelement mithilfe von der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> -Methode, rufen Sie zuerst die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> und <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Methoden bei Bedarf an alle Element- oder Stilattribute, die in das Starttag des Elements angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-545">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="98ae6-546">Rufen Sie nach dem Generieren des inneren Markups, die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode, um das Endtag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-546">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-547">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode, um die Ausgabe des öffnenden Tags von einer `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-547">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="98ae6-548">Die Attribute, die auf das Element durch hinzugefügt werden die <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Methode werden in das öffnende `<img>` Tag.</span><span class="sxs-lookup"><span data-stu-id="98ae6-548">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="98ae6-549">Die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode wird verwendet, um das Endtag zu generieren.</span><span class="sxs-lookup"><span data-stu-id="98ae6-549">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="98ae6-550">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-550">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-551">Schreibt das Endtag eines Markupelements in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-551">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-552">Rufen Sie die <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode nach der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Überladung wird aufgerufen, und nach dem gesamten Inhalt zwischen dem Start- und Endtags (innere Markup) des Elements gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-552">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-553">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Methode nach sowohl die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode, die das öffnende Tag generiert und die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode, die das innere Markup zwischen dem Start- und Endtags des benutzerdefinierten rendert`MyTag` Element aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-553">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="98ae6-554">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-554">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-555">Stellt ein Leerzeichen und den Schrägstrich (/) eines selbstschließenden Markuptags dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-555">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-556">Die <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> Feld wird verwendet, im Markupelemente, die Self-geschlossene sind.</span><span class="sxs-lookup"><span data-stu-id="98ae6-556">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="98ae6-557">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="98ae6-557">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-558">Stellt schließenden Schrägstrich und schließende spitze Klammer (/&gt;) eines selbstschließenden Markupelements dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-558">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-559">Die <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode beim selbstschließende Markupelemente erstellen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-560">Im folgenden Codebeispiel wird veranschaulicht, wie den Wert einer benutzerdefinierten gerendert `FileName` gefolgt von einem Anführungszeichen-Eigenschaft und die Zeichen, dargestellt durch die <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> Feld.</span><span class="sxs-lookup"><span data-stu-id="98ae6-560">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="98ae6-561">Im Code-Beispiel wird die <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methode auf und übergibt die <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> Feld als Parameterargument für das Element zu schließen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-561">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="98ae6-562">Dieses Codebeispiel rendert die `FileName` Eigenschaftswert, und klicken Sie dann das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-562">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-563">Stellt das Semikolon (;) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-563">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-564">Übergeben Sie die <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> Feld als Parameterargument im eine <xref:System.Web.UI.HtmlTextWriter.Write%2A> -Methodenaufruf, wenn Sie ein Semikolon von ein benutzerdefiniertes Steuerelement oder einen Adapter rendern möchten.</span><span class="sxs-lookup"><span data-stu-id="98ae6-564">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-565">Im folgenden Codebeispiel wird veranschaulicht, wie eine Reihe von Formaten auf ein Markupelement manuell zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-565">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="98ae6-566">Das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern `font-size` und `border-style` Stilattribute.</span><span class="sxs-lookup"><span data-stu-id="98ae6-566">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="98ae6-567">Die <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> Feld wird als Parameter verwendet den <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Trennen des Werts des der `font-size` Attribut vom Anfang der `border-style` Attribut.</span><span class="sxs-lookup"><span data-stu-id="98ae6-567">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="98ae6-568">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-568">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-569">Stellt einen Apostroph (') dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-569">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-570">Verwenden der <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> Feld bei Bedarf einen Apostroph gerendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-570">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-571">Stellt den Schrägstrich (/) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-571">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-572">Verwenden der <xref:System.Web.UI.HtmlTextWriter.SlashChar> Feld zum Rendern des Schrägstrichs markiert beim Schreiben einer URL.</span><span class="sxs-lookup"><span data-stu-id="98ae6-572">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="98ae6-573">Die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> -Methode verwendet die <xref:System.Web.UI.HtmlTextWriter.SlashChar> Feld, wenn das Endtag eines Markupelements zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="98ae6-573">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-574">Im folgenden Codebeispiel wird veranschaulicht, wie manuelle Rendern der `src` Attribut von einem `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-574">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="98ae6-575">Das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode mit dem <xref:System.Web.UI.HtmlTextWriter.SlashChar> Feld als Parameter zum Rendern des Schrägstrichs markiert wird, in dem Pfad, der angewendet wird die `src` Attribut.</span><span class="sxs-lookup"><span data-stu-id="98ae6-575">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="98ae6-576">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-576">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-577">Stellt ein Leerzeichen ( ) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-577">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-578">Die <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> und <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methoden beim Schreiben von Trennzeichen zwischen Elementen und Attributen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-578">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-579">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-579">This section provides two code examples.</span></span> <span data-ttu-id="98ae6-580">Die erste Vorlage veranschaulicht, wie ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-580">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="98ae6-581">Im zweiten Beispiel veranschaulicht, wie das Array.</span><span class="sxs-lookup"><span data-stu-id="98ae6-581">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="98ae6-582">Diese Codebeispiele generieren Sie das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-582">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="98ae6-583">Das folgende Codebeispiel veranschaulicht das Erstellen einer <xref:System.Char> Array, enthält die <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld.</span><span class="sxs-lookup"><span data-stu-id="98ae6-583">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="98ae6-584">Im folgenden Codebeispiel wird veranschaulicht, wie das Array verwenden, die als Parameter im vorangehenden Codebeispiel, beim Aufrufen erstellt wurde der <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-584">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-585">Stellt das Formatzuweisungszeichen (<see langword=":" />) dar, das zum Festlegen von Formatattributen auf Werte verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-585">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-586">Die <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> Methode, um Namen und Werte zu begrenzen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-586">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-587">Im folgenden Codebeispiel wird veranschaulicht, wie zum Rendern einer `FontWeight` Attribut und Wert des `bold` im Starttag eines Elements.</span><span class="sxs-lookup"><span data-stu-id="98ae6-587">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="98ae6-588">Das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode mit dem <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> Feld als Parameter an das Zeichen zu rendern, die den Wert der einzelnen Formatattribute festlegt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-588">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="98ae6-589">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-589">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-590">Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das angegebene Markupelement ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-590">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-591">Das Markupelement, dessen Starttag gerendert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-591">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-592">Die <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> Eigenschaft wird nur von Klassen, die von erben die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-592">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-593">Gelesen oder festgelegt werden soll die <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> Eigenschaft nur in einem Aufruf der <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode; dies ist das einzige Mal, die sie auf einen konsistenten Wert festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-593">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-594">Das folgende Codebeispiel veranschaulicht eine überschriebene Version von den <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Methode in einer Klasse, die von abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-594">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-595">Er verwendet den Wert der <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> Eigenschaft, um zu bestimmen, ob ein Serversteuerelement mithilfe des benutzerdefinierten <xref:System.Web.UI.HtmlTextWriter> Rendern-Objekts eine `<label>` Markupelement.</span><span class="sxs-lookup"><span data-stu-id="98ae6-595">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="98ae6-596">Wenn dies der Fall, ein `<font>` Element mit einer `color` -Attributsatz zur `red` ist so ändern Sie die Formatierung der zurückgegebenen der `<label>` Text des Elements.</span><span class="sxs-lookup"><span data-stu-id="98ae6-596">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98ae6-597">Der Eigenschaftswert kann nicht festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-597">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-598">Stellt die öffnende spitze Klammer (&lt;) eines Markuptags dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-598">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-599">Die <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, und <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methoden beim Schreiben von Markuptags.</span><span class="sxs-lookup"><span data-stu-id="98ae6-599">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-600">Im folgenden Codebeispiel wird das erste Zeichen des öffnenden Tags von gerendert ein `<table>` Element mit dem Elementnamen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-600">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="98ae6-601">Das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode mit dem <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> Feld als Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-601">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="98ae6-602">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-602">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-603">Ruft den Tagnamen des gerenderten Markupelements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-603">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98ae6-604">Der Tagname des gerenderten Markupelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-604">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-605">Die <xref:System.Web.UI.HtmlTextWriter.TagName%2A> Eigenschaft wird nur von Klassen, die von erben die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-605">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-606">Sollten Sie lesen oder Festlegen der <xref:System.Web.UI.HtmlTextWriter.TagName%2A> Eigenschaft nur in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methodenaufrufe; Dies ist das einzige Mal, die sie auf einen konsistenten Wert festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-606">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-607">Das folgende Codebeispiel veranschaulicht eine überschriebene Version von den <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> Methode in einer Klasse, die von abgeleitet ist die <xref:System.Web.UI.HtmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="98ae6-607">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="98ae6-608">Im Codebeispiel wird überprüft, ob das Element zum Rendern einer `<label>` Element durch Aufrufen der <xref:System.String.Compare%2A?displayProperty=nameWithType> -Methode und übergeben der <xref:System.Web.UI.HtmlTextWriter.TagName%2A> Eigenschaftswert und eine Zeichenfolge `"label"`, als die Parameterargumente.</span><span class="sxs-lookup"><span data-stu-id="98ae6-608">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="98ae6-609">Wenn eine `<label>` Element gerendert werden, wird das Anfangstag des läuft ein `<font>` Element, mit einer `color` -Attributsatz zur `red`, gerendert wird, bevor die `<label>` Element des öffnenden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-609">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="98ae6-610">Wenn das Element zum Rendern keine `<label>` -Element stellt die Basisklasse-Version von der <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-610">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-611">Stellt die schließende spitze Klammer (&gt;) eines Markuptags dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-611">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-612">Die <xref:System.Web.UI.HtmlTextWriter.TagRightChar> Feld wird verwendet, durch die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, und <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methoden beim Schreiben von Markuptags.</span><span class="sxs-lookup"><span data-stu-id="98ae6-612">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-613">Im folgenden Codebeispiel wird veranschaulicht, wie das Endtag des rendern eine `<table>` Element über Aufrufe der Überladungen der <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-613">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="98ae6-614">Um das letzte Zeichen des Tags zu rendern, das Codebeispiel verwendet die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode mit dem <xref:System.Web.UI.HtmlTextWriter.TagRightChar> Feld als Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-614">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="98ae6-615">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-615">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-616">Schreibt den angegebenen Datentyp zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-616">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-617">Der <see cref="T:System.Boolean" />, der in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-617">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-618">Schreibt die Textdarstellung eines booleschen Werts zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-618">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-619">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-619">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-620">Das in den Ausgabestream zu schreibende Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-620">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-621">Schreibt die Textdarstellung eines Unicode-Zeichens zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-621">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-622">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-623">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Beenden des öffnenden Tags von einer `<img>` -Element mithilfe der <xref:System.Web.UI.HtmlTextWriter.TagRightChar> konstant.</span><span class="sxs-lookup"><span data-stu-id="98ae6-623">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="98ae6-624">Dieses Codebeispiel wird das folgende Markup gerendert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-624">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="98ae6-625">Das in den Ausgabestream zu schreibende Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-625">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-626">Schreibt die Textdarstellung eines Arrays von Unicode-Zeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-626">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-627">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-627">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-628">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-628">This section provides two code examples.</span></span> <span data-ttu-id="98ae6-629">Die erste Vorlage veranschaulicht, wie ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-629">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="98ae6-630">Im zweiten Beispiel veranschaulicht, wie das Array.</span><span class="sxs-lookup"><span data-stu-id="98ae6-630">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="98ae6-631">Diese Codebeispiele generieren Sie das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-631">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="98ae6-632">Im folgenden Codebeispiel wird veranschaulicht, wie ein Array von Zeichen zu erstellen, das ausgeschrieben `hello world`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-632">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="98ae6-633">Im Array enthalten ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld, das kein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-633">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="98ae6-634">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern der `hello world` Array von Zeichen im vorangehenden Codebeispiel wird zu einer Seite erstellt wird, wenn das Steuerelement, das diesen Beispielcode enthält, die auf einer Seite enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="98ae6-634">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-635">Die Gleitkommazahl mit doppelter Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-635">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-636">Schreibt die Textdarstellung einer Gleitkommazahl mit doppelter Genauigkeit zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-636">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-637">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-637">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-638">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um das Rendern des Werts der <xref:System.Double.MaxValue?displayProperty=nameWithType> Feld.</span><span class="sxs-lookup"><span data-stu-id="98ae6-638">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="98ae6-639">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-639">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-640">Die 32-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-640">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-641">Schreibt die Textdarstellung einer ganze 32-Byte-Zahl mit Vorzeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-641">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-642">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-642">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-643">Die 64-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-643">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-644">Schreibt die Textdarstellung einer 64-Byte-Ganzzahl mit Vorzeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-644">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-645">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-646">Das Objekt, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-646">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-647">Schreibt die Textdarstellung eines Objekts zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-647">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-648">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-649">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um das Rendern des Werts der <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-649">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="98ae6-650">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-650">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="98ae6-651">Der Wert, der die <xref:System.Globalization.CultureInfo.CurrentCulture%2A> Eigenschaft:</span><span class="sxs-lookup"><span data-stu-id="98ae6-651">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-652">Die Gleitkommazahl mit einfacher Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-652">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-653">Schreibt die Textdarstellung einer Gleitkommazahl mit einfacher Genauigkeit zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-653">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-654">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-654">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-655">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um das Rendern des Werts der <xref:System.Single.Epsilon?displayProperty=nameWithType> Feld, das den kleinstmöglichen Wert ist von der <xref:System.Single> Struktur.</span><span class="sxs-lookup"><span data-stu-id="98ae6-655">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="98ae6-656">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-656">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="98ae6-657">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-657">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-658">Schreibt die angegebene Zeichenfolge zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-658">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-659">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-659">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-660">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um eine Zeichenfolge zwischen dem Start- und Endtag eines Markupelements benutzerdefinierte gerendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-660">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="98ae6-661">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-661">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-662">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-662">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="98ae6-663">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-663">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-664">Schreibt eine Tabstoppzeichenfolge und eine formatierte Zeichenfolge zusammen mit allen ausstehenden Tabstopps und unter Verwendung derselben Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-664">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-665">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-665">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-666">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um eine formatierte Zeichenfolge mit dem Wert des Rendern der <xref:System.Globalization.CultureInfo.CurrentCulture%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-666">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-667">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-667">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="98ae6-668">Ein zu formatierendes Objektarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-668">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-669">Schreibt eine formatierte Zeichenfolge, die die Textdarstellung eines Objektarrays enthält, zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-669">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="98ae6-670">Diese Methode verwendet die gleiche Semantik wie die <see cref="M:System.String.Format(System.String,System.Object[])" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-670">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-671">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-671">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-672">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-672">This section contains two code examples.</span></span> <span data-ttu-id="98ae6-673">Die erste Vorlage veranschaulicht, wie eine formatierte Zeichenfolge und den Inhalt eines Arrays zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-673">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="98ae6-674">Im zweiten Beispiel wird das Deklarieren des Arrays veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="98ae6-674">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="98ae6-675">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um eine formatierte Zeichenfolge und den Inhalt eines Arrays von Objekten, mit dem Namen Rendern `curPriceTime`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-675">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="98ae6-676">Aufruf der Methode rendert das zweite Element des Arrays an, bevor das erste Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-676">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="98ae6-677">Im folgenden Codebeispiel wird das Deklarieren der `curPriceTime` Objektarray.</span><span class="sxs-lookup"><span data-stu-id="98ae6-677">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="98ae6-678">Das Zeichenarray, aus dem Text in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-678">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="98ae6-679">Die Indexposition im Array, bei der mit dem Schreiben begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-679">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98ae6-680">Die Anzahl der Zeichen, die in den Ausgabestream geschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-680">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-681">Schreibt die Textdarstellung eines Teilarrays von Unicode-Zeichen zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-681">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-682">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-682">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-683">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-683">This section provides two code examples.</span></span> <span data-ttu-id="98ae6-684">Die erste Vorlage veranschaulicht, wie ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-684">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="98ae6-685">Im zweiten Beispiel veranschaulicht, wie das Array.</span><span class="sxs-lookup"><span data-stu-id="98ae6-685">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="98ae6-686">Diese Codebeispiele generieren Sie das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-686">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="98ae6-687">Im folgenden Codebeispiel wird veranschaulicht, wie ein Array von Zeichen zu erstellen, das ausgeschrieben `hello world`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-687">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="98ae6-688">Im Array enthalten ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld, das kein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-688">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="98ae6-689">Der folgende Teil des Codebeispiels verwendet die `index` und `count` Parameter von der <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode zum Rendern der ersten fünf Zeichen im Array, das im vorherigen Beispiel erstellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-689">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-690">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-690">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="98ae6-691">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-691">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="98ae6-692">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-692">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-693">Schreibt eine formatierte Zeichenfolge, die die Textdarstellung zweier Objekte enthält, zusammen mit allen ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-693">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="98ae6-694">Diese Methode verwendet die gleiche Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-694">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-695">Die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode generiert alle ausstehenden Tabstopps und ruft dann die <xref:System.IO.TextWriter.Write%2A> -Basismethode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-695">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-696">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.Write%2A> Methode, um eine formatierte Zeichenfolge und die Werte der Rendern der <xref:System.Globalization.CultureInfo.CurrentCulture%2A> und <xref:System.DateTime.Today%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="98ae6-696">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-697">Schreibt ein Markupattribut und dessen Wert in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-697">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-698">Das Attribut, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-698">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-699">Der Wert, der dem Attribut zugewiesen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-699">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-700">Schreibt das angegebene Markupattribut und dessen Wert in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-700">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-701">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode, um Markupattribute und ihre Werte ohne Codierung zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="98ae6-701">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="98ae6-702">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode schreibt den Wert des Attributs, eingeschlossen in doppelte Anführungszeichen (").</span><span class="sxs-lookup"><span data-stu-id="98ae6-702">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="98ae6-703">Wenn `value` ist `null`die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode schreibt nur den Attributnamen an.</span><span class="sxs-lookup"><span data-stu-id="98ae6-703">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-704">Im folgenden Codebeispiel wird veranschaulicht, Rendern einer `<img>` Element in der beide Überladungen der der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-704">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="98ae6-705">Im Codebeispiel wird den folgenden Prozess verwendet:</span><span class="sxs-lookup"><span data-stu-id="98ae6-705">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="98ae6-706">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode, die die öffnenden Zeichen des Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-706">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="98ae6-707">Aufrufe der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> Überladung, welche Schreibvorgänge ein `alt` Attribut und seinen Wert auf die `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-707">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="98ae6-708">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Überladung zum Rendern einer benutzerdefiniertes `myattribute` -Attribut, mit dem Wert `No "encoding" required`, und legt dann `fEncode` auf `false`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-708">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="98ae6-709">Schließt das Starttag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode zum Schließen der `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-709">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="98ae6-710">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-710">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-711">
            <para>In abgeleiteten Klassen überschreiben Sie die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> Methode, um benutzerdefinierte Regeln für das Schreiben von Attributen und deren Werte zu definieren. Angenommen, Code, der zulässige geschrieben die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> Methode, um ein Attribut mit einem leeren Wert schreiben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-711">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-712">Das Markupattribut, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-712">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-713">Der Wert, der dem Attribut zugewiesen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-713">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="98ae6-714">
            <see langword="true" />, um das Attribut und seinen zugewiesenen Wert zu codieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-714">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-715">Schreibt das angegebene Markupattribut und den Wert in den Ausgabestream und schreibt den codierten Wert (falls angegeben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-715">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-716">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode, um Markupattribute und deren Werte mit oder ohne Codierung zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="98ae6-716">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="98ae6-717">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> -Methode verwendet die <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> Methode, um die Codierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-717">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="98ae6-718">Die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode schreibt den Wert des Attributs, eingeschlossen in doppelte Anführungszeichen (").</span><span class="sxs-lookup"><span data-stu-id="98ae6-718">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="98ae6-719">Wenn `value` ist `null`die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode schreibt nur den Attributnamen an.</span><span class="sxs-lookup"><span data-stu-id="98ae6-719">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-720">Im folgenden Codebeispiel wird veranschaulicht, Rendern einer `<img>` Element in der beide Überladungen der der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-720">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="98ae6-721">Im Codebeispiel wird den folgenden Prozess verwendet:</span><span class="sxs-lookup"><span data-stu-id="98ae6-721">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="98ae6-722">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode, die die öffnenden Zeichen des Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-722">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="98ae6-723">Aufrufe der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> Überladung, welche Schreibvorgänge ein `alt` Attribut und seinen Wert auf die `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-723">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="98ae6-724">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Überladung zum Rendern einer benutzerdefiniertes `myattribute` -Attribut, mit dem Wert `No "encoding" required`, und legt dann `fEncode` auf `false`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-724">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="98ae6-725">Schließt das Starttag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode zum Schließen der `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-725">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="98ae6-726">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-726">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98ae6-727">
            <para>In abgeleiteten Klassen überschreiben Sie die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> Methode, um benutzerdefinierte Regeln für das Schreiben von Attributen und deren Werte zu definieren. Angenommen, Code, der zulässige geschrieben die <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> Methode, um ein Attribut mit einem leeren Wert schreiben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-727">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="98ae6-728">Das Markupelement, dessen Starttag geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-728">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-729">Schreibt alle Tabstopps und das Starttag des angegebenen Markupelements in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-729">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-730">Die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode schreibt nicht die schließende spitze Klammer (>) von der Markupelement Starttag.</span><span class="sxs-lookup"><span data-stu-id="98ae6-730">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="98ae6-731">Dies ermöglicht das Schreiben von Markupattribute im Starttag des Elements.</span><span class="sxs-lookup"><span data-stu-id="98ae6-731">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="98ae6-732">Verwenden der <xref:System.Web.UI.HtmlTextWriter.TagRightChar> -Konstante, um das Starttag schließen, beim Aufrufen der <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-732">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="98ae6-733">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Methode mit dem <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> Konstante beim Schreiben von Markupelemente, die selbstschließende sind.</span><span class="sxs-lookup"><span data-stu-id="98ae6-733">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="98ae6-734">Die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Methode wird von benutzerdefinierten Steuerelementen, die nicht zulassen Tag oder Attribut Zuordnung und Rendern von Markupelemente auf die gleiche Weise wie für jede Anforderung verwendet.</span><span class="sxs-lookup"><span data-stu-id="98ae6-734">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-735">Im folgenden Codebeispiel wird veranschaulicht, Rendern einer `<img>` Element in der beide Überladungen der der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="98ae6-735">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="98ae6-736">Im Codebeispiel wird den folgenden Prozess verwendet:</span><span class="sxs-lookup"><span data-stu-id="98ae6-736">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="98ae6-737">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode, die die öffnenden Zeichen des Elements rendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-737">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="98ae6-738">Aufrufe der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> Überladung, welche Schreibvorgänge ein `alt` Attribut und seinen Wert auf die `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-738">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="98ae6-739">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> Überladung zum Rendern einer benutzerdefiniertes `myattribute` -Attribut, mit dem Wert `No "encoding" required`, und legt dann `fEncode` auf `false`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-739">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="98ae6-740">Schließt das Starttag des Elements und ruft dann die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode zum Schließen der `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-740">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="98ae6-741">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-741">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-742">Schreibt ein <see langword="&lt;br /&gt;" />-Markupelement in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-742">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-743">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> Methode zum Rendern der Zeile im benutzerdefinierten Steuerelement oder Adapter Markup unterbrochen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-743">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="98ae6-744">Die <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> -Methode schreibt ein Leerzeichen zwischen den `br` und `/` für verbesserte Kompatibilität mit HTML.</span><span class="sxs-lookup"><span data-stu-id="98ae6-744">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-745">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> Methode zum Schreiben einer `<br />` Element an den anfordernden Browser nach der <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> Methode schreibt den codierten `&lt;custID&gt; &amp; &lt;invoice#&gt;` Markup.</span><span class="sxs-lookup"><span data-stu-id="98ae6-745">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="98ae6-746">Die Textzeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-746">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-747">Codiert den angegebenen Text für das anfordernde Gerät und schreibt ihn dann in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-747">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-748">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> Methode, wenn eine Zeichenfolge spitze Klammern enthält (\< oder >) oder ein kaufmännisches und-Zeichen (&).</span><span class="sxs-lookup"><span data-stu-id="98ae6-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="98ae6-749">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> -Methode verwendet die <xref:System.Web.HttpUtility.HtmlEncode%2A> Methode zum Codieren und konvertiert außerdem das Unicode-Zeichen `00A0` auf `&nbsp;`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-749">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-750">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> Methode zum Schreiben des codierten Markups `&lt;custID&gt; &amp; &lt;invoice#&gt;` in den Ausgabestream.</span><span class="sxs-lookup"><span data-stu-id="98ae6-750">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="98ae6-751">Die <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> -Methode schreibt `<br />`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-751">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98ae6-752">
            <paramref name="text" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-752">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="98ae6-753">Die URL-Zeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-753">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-754">Codiert die angegebene URL und schreibt sie dann in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-754">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="98ae6-755">Die URL kann Parameter enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-755">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-756">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> Methode codiert die Zeichenfolge in der `url` Parameter gemäß der Spezifikation für URL-Codierung.</span><span class="sxs-lookup"><span data-stu-id="98ae6-756">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="98ae6-757">Die Parameter, die auf das Fragezeichen (?) als Trennzeichen sind nicht codiert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-757">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-758">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> -Methode, die die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-758">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="98ae6-759">Die URL-Parameterzeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-759">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-760">Codiert den angegebenen URL-Parameter für das anfordernde Gerät und schreibt diesen anschließend in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-760">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-761">Leerzeichen im Parameterteil einer URL werden als Pluszeichen (+) codiert und Gleichheitszeichen (=) werden als codiert `%3d`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-761">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-762">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> -Methode, die die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-762">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="98ae6-763">Das Element, für das das Endtag geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-763">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-764">Schreibt alle Tabstopps und das Endtag des angegebenen Markupelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-764">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-765">Im Gegensatz zu den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> -Methode, die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode verfügt über keine Logik, stellen den Endtag des Elements dem entsprechenden Starttag überein.</span><span class="sxs-lookup"><span data-stu-id="98ae6-765">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-766">Im folgenden Codebeispiel wird veranschaulicht, Rendern einer `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-766">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="98ae6-767">Im Codebeispiel wird den folgenden Prozess verwendet:</span><span class="sxs-lookup"><span data-stu-id="98ae6-767">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="98ae6-768">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Methode zum Rendern der öffnenden Zeichen des Elements.</span><span class="sxs-lookup"><span data-stu-id="98ae6-768">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="98ae6-769">Ruft die zwei Überladungen der <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Methode, um Attribute zum Schreiben der `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-769">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="98ae6-770">Ruft die <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Methode zum Schließen der `<img>` Element.</span><span class="sxs-lookup"><span data-stu-id="98ae6-770">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="98ae6-771">Das Element, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-771">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-772">Schreibt alle Tabstopps und das Starttag des angegebenen Markupelements in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-772">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-773">Die <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> Methode schreibt automatisch die schließende spitze Klammer (>) des Starttags des Elements, im Gegensatz zu den <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> -Methode, die nicht die schließende spitze Klammer geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-773">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="98ae6-774">Verwendung <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> für Markupelemente, die keine Attribute aufweisen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-774">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-775">Schreibt Daten, die durch die überladenen Parameter angegeben werden, gefolgt von einem Zeichen für den Zeilenabschluss, in einen <see cref="T:System.Web.UI.HtmlTextWriter" />-Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-775">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="98ae6-776">Alle Versionen dieser Methode schreiben alle ausstehenden Tabstopps in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-776">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-777">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-777">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-778">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-778">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-779">Schreibt eine Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-779">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-780">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-780">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-781">Weitere Informationen finden Sie unter <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="98ae6-781">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-782">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode zum Einfügen einer Zeile nach einem `<img>` Element gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="98ae6-782">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-783">Der boolesche Wert, der in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-783">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-784">Schreibt alle ausstehenden Tabstopps und die Textdarstellung eines booleschen Werts gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-784">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-785">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-786">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-786">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-787">Das Zeichen, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-787">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-788">Schreibt alle ausstehenden Tabstopps und ein Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-788">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-789">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-790">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-790">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="98ae6-791">Das Zeichenarray, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-791">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-792">Schreibt alle ausstehenden Tabstopps und ein Array von Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-792">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-793">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-793">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-794">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-794">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-795">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-795">This section provides two code examples.</span></span> <span data-ttu-id="98ae6-796">Die erste Vorlage veranschaulicht, wie ein Array zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-796">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="98ae6-797">Im zweiten Beispiel veranschaulicht, wie dieses Array.</span><span class="sxs-lookup"><span data-stu-id="98ae6-797">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="98ae6-798">Diese Codebeispiele generieren Sie das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-798">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="98ae6-799">Im folgenden Codebeispiel wird veranschaulicht, wie ein Array von Zeichen zu erstellen, das ausgeschrieben `hello world`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-799">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="98ae6-800">Im Array enthalten ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld, das kein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-800">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="98ae6-801">Im folgenden Codebeispiel wird rendert die `hello world` Zeichenarray, das im vorherigen Beispiel, mithilfe erstellt wurde der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-801">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-802">Die Gleitkommazahl mit doppelter Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-802">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-803">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer Gleitkommazahl mit doppelter Genauigkeit gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-803">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-804">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-804">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-805">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-805">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-806">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um das Rendern des Werts der <xref:System.Double.MaxValue?displayProperty=nameWithType> Feld.</span><span class="sxs-lookup"><span data-stu-id="98ae6-806">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="98ae6-807">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-807">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-808">Die 32-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-808">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-809">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer ganzen 32-Byte-Zahl mit Vorzeichen, gefolgt von einer Zeichenfolge für den Zeilenabschluss, in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-809">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-810">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-810">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-811">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-811">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-812">Die 64-Byte-Ganzzahl mit Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-812">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-813">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer 64-Byte-Ganzzahl mit Vorzeichen, gefolgt von einer Zeichenfolge für den Zeilenabschluss, in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-813">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-814">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-814">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-815">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-815">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-816">Das Objekt, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-816">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-817">Schreibt alle ausstehenden Tabstopps und die Textdarstellung eines Objekts gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-817">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-818">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-818">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-819">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-819">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-820">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um das Rendern des Werts der <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaft an ein Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="98ae6-820">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-821">Die Gleitkommazahl mit einfacher Genauigkeit, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-821">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-822">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer Gleitkommazahl mit einfacher Genauigkeit gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-822">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-823">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-824">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-825">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode zum Rendern des Werts von der <xref:System.Single.Epsilon?displayProperty=nameWithType> Feld, das den kleinstmöglichen Wert wird von der <xref:System.Single> Struktur.</span><span class="sxs-lookup"><span data-stu-id="98ae6-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="98ae6-826">Dieses Codebeispiel wird das folgende Markup generiert:</span><span class="sxs-lookup"><span data-stu-id="98ae6-826">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="98ae6-827">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-827">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-828">Schreibt alle ausstehenden Tabstopps und eine Textzeichenfolge gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-828">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-829">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-829">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-830">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-830">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="98ae6-831">Die 4-Byte-Ganzzahl ohne Vorzeichen, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-831">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-832">Schreibt alle ausstehenden Tabstopps und die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-832">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-833">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-833">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-834">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-834">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-835">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-835">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="98ae6-836">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-836">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-837">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung eines Objekts enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-837">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-838">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-839">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode verwendet die gleiche Semantik wie die <xref:System.String.Format%28System.String%2CSystem.Object%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-839">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="98ae6-840">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-840">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-841">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um eine formatierte Zeichenfolge mit dem Wert des Rendern der <xref:System.Globalization.CultureInfo.CurrentCulture%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-841">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-842">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-842">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="98ae6-843">Ein zu formatierendes Objektarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-843">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-844">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung eines Objektarrays enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-844">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-845">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-845">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-846">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode verwendet die gleiche Semantik wie die <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-846">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="98ae6-847">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-847">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-848">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-848">This section contains two code examples.</span></span> <span data-ttu-id="98ae6-849">Die erste Vorlage veranschaulicht, wie eine Zeichenfolge und ein Array in den Ausgabestream gerendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-849">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="98ae6-850">Das zweite Beispiel zeigt, wie das Array deklariert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-850">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="98ae6-851">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um eine formatierte Zeichenfolge und den Inhalt eines Arrays von Objekten in den Ausgabestream gerendert.</span><span class="sxs-lookup"><span data-stu-id="98ae6-851">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="98ae6-852">Im folgenden Codebeispiel wird veranschaulicht, wie der Objekt-Array zu deklarieren, das im vorangehenden Codebeispiel gerendert wurde.</span><span class="sxs-lookup"><span data-stu-id="98ae6-852">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="98ae6-853">Das Zeichenarray, aus dem Text in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-853">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="98ae6-854">Die Position im Zeichenarray, an der mit dem Schreiben begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-854">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98ae6-855">Die Anzahl der Zeichen im Array, die in den Ausgabestream geschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-855">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-856">Schreibt alle ausstehenden Tabstopps und ein Teilarray von Unicode-Zeichen gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-856">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-857">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-857">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-858">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-858">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-859">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="98ae6-859">This section contains two code examples.</span></span> <span data-ttu-id="98ae6-860">Die erste Vorlage veranschaulicht, wie ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="98ae6-860">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="98ae6-861">Im zweiten Beispiel veranschaulicht, wie das Array.</span><span class="sxs-lookup"><span data-stu-id="98ae6-861">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="98ae6-862">Diese Codebeispiele generieren Sie das folgende Markup:</span><span class="sxs-lookup"><span data-stu-id="98ae6-862">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="98ae6-863">Im folgenden Codebeispiel wird veranschaulicht, wie ein Array von Zeichen zu erstellen, das ausgeschrieben `hello world`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-863">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="98ae6-864">Im Array enthalten ist das <xref:System.Web.UI.HtmlTextWriter.SpaceChar> Feld, das kein Leerzeichen zwischen den beiden Wörtern erstellt.</span><span class="sxs-lookup"><span data-stu-id="98ae6-864">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="98ae6-865">Im folgenden Codebeispiel wird mit der `index` und `count` Parameter von der <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um die ersten fünf Zeichen im Array im vorangehenden Codebeispiel erstellt zu rendern.</span><span class="sxs-lookup"><span data-stu-id="98ae6-865">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="98ae6-866">Eine Zeichenfolge mit 0 oder mehr Formatelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-866">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="98ae6-867">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-867">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="98ae6-868">Ein zu formatierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-868">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-869">Schreibt alle ausstehenden Tabstopps und eine formatierte Zeichenfolge, die die Textdarstellung von zwei Objekten enthält, gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-869">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-870">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-870">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-871">Die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode verwendet die gleiche Semantik wie die <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-871">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="98ae6-872">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-872">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98ae6-873">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, um eine formatierte Zeichenfolge und die Werte der Rendern der <xref:System.Globalization.CultureInfo.CurrentCulture%2A> Eigenschaft und die <xref:System.DateTime.Today%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="98ae6-873">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="98ae6-874">Die Zeichenfolge, die in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-874">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-875">Schreibt eine Zeichenfolge gefolgt von einer Zeichenfolge für den Zeilenabschluss in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-875">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="98ae6-876">Diese Methode ignoriert alle angegebenen Tabstopps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-876">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-877">Verwenden der <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> Methode statt über das <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Methode, wenn Sie keine Tabstopps vor der gerenderten Zeichenfolge rendern möchten `s`.</span><span class="sxs-lookup"><span data-stu-id="98ae6-877">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="98ae6-878">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="98ae6-878">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="98ae6-879">Die <xref:System.IO.TextWriter.WriteLine%2A> base-Methode wird verwendet, um das Schreiben der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-879">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98ae6-880">Schreibt ein Formatattribut und dessen Wert in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-880">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-881">Das Formatattribut, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-881">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-882">Der dem Formatattribut zugewiesene Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-882">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-883">Schreibt das angegebene Formatattribut in den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-883">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-884">Die <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> -Methode schreibt das Formatattribut in der folgenden Form:</span><span class="sxs-lookup"><span data-stu-id="98ae6-884">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="98ae6-885">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="98ae6-885">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98ae6-886">Das Formatattribut, das in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-886">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="98ae6-887">Der dem Formatattribut zugewiesene Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-887">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="98ae6-888">
            <see langword="true" />, wenn das Formatattribut und sein zugeordneter Wert codiert werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-888">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-889">Schreibt das angegebene Formatattribut und dessen Wert in den Ausgabestream, wobei der Wert ggf. codiert geschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-889">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-890">Die <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> -Methode schreibt das Formatattribut in der folgenden Form:</span><span class="sxs-lookup"><span data-stu-id="98ae6-890">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="98ae6-891">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="98ae6-891">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="98ae6-892">Die <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> Methode dient zum Codieren der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="98ae6-892">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="98ae6-893">Die Zeichenfolge, die codiert und in den Ausgabestream geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-893">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="98ae6-894">
            <see langword="true" />, um die Zeichenfolge als Teil des Parameterabschnitts der URL zu codieren, <see langword="false" />, um die Zeichenfolge als Teil des Pfadabschnitts der URL zu codieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-894">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98ae6-895">Schreibt die angegebene Zeichenfolge und codiert sie entsprechend den URL-Anforderungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98ae6-895">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ae6-896">Die <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> Methode codiert die Zeichen, die URL-Trennzeichen betrachtet werden können (abhängig von der Einstellung der `argument`) in Zeichenfolgen des Formulars `%xx`, wenn der ASCII-Code weniger als 128 ist, andernfalls ist `%uxxxx`, wobei `x` ist ein hexadezimale Ziffer.</span><span class="sxs-lookup"><span data-stu-id="98ae6-896">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="98ae6-897">Die <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> und <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> Methoden verwenden, die <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> Methode als eine Utility-Methode.</span><span class="sxs-lookup"><span data-stu-id="98ae6-897">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>