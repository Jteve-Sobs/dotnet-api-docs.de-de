<Type Name="AttributeCollection" FullName="System.Web.UI.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93fcc98fd2f0a24386661ebddbcde6f70e324d14" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39785407" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection sealed" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht im Objektmodell den Zugriff auf alle Attribute, die im öffnenden Tag eines ASP.NET-Serversteuerelements deklariert wurden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zurückgeben der einzelnen Elemente in der Auflistung eine <xref:System.String> Objekt als Wert. Wenn keine Attributelemente in der Auflistung vorhanden sind, gibt die Auflistung `null`.  
  
 Attribute auf ein HTML-Serversteuerelement sind programmgesteuert verfügbar, über die <xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A> -Eigenschaft, die von der alle HTML-Serversteuerelemente geerbt wird. ASP.NET stellt die Attribute des HTML-Serversteuerelemente als Eigenschaften dieser Steuerelemente.  
  
 Sie können Attribute auf einem Webserver-Steuerelement durch Hinzufügen der <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> -Eigenschaft, die von allen Webserver-Steuerelemente geerbt wird. Die Attribute in der attributauflistung für einen Webserver-Steuerelement entsprechen nicht unbedingt um stark typisierte Eigenschaften für dieses Steuerelement des Steuerelements.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Web.UI.AttributeCollection> Objekt mit dem Namen `myAttributeCollection`, und klicken Sie dann überprüft, ob die Seite zurückgesendet wurde. Wenn dies nicht der Fall ist, fügt der Code zwei Attribute der Auflistung hinzu. Anschließend ruft die Anzahl der Attribute in der Auflistung ab und durchläuft die Auflistung, die den Schlüssel für jedes Attribut auf der Seite schreiben. Wenn die Seite zurückgesendet wird, wird der Code Ruft die neue Anzahl von Attributen ab und durchläuft die Auflistung, die den Schlüssel und Wert der einzelnen Attribute auf der Seite schreiben.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#1)]
 [!code-vb[AttributeCollection_AttributeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(System::Web::UI::StateBag ^ bag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.AttributeCollection : System.Web.UI.StateBag -&gt; System.Web.UI.AttributeCollection" Usage="new System.Web.UI.AttributeCollection bag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">Ein Objekt, das die Attributschlüssel und deren Werte aus dem öffnenden Tag des Serversteuerelements enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.AttributeCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.AttributeCollection> Konstruktor zum Erstellen einer Instanz der Klasse den Namen `myAttributeCollection`. Übergibt der Code des Steuerelements <xref:System.Web.UI.Control.ViewState%2A> Parameterargument-Eigenschaft.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#2)]
 [!code-vb[AttributeCollection_AttributeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="attributeCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Attributname.</param>
        <param name="value">Der Attributwert.</param>
        <summary>Fügt dem <see cref="T:System.Web.UI.AttributeCollection" />-Objekt eines Serversteuerelements ein Attribut hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zeichenfolge in die `value` Parameter enthält, ein kaufmännisches und-Zeichen (&), das Zeichen automatisch codiert. Die resultierende HTML-Darstellung ist "&amp;".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.AttributeCollection.Add%2A> Methode, um ein Attribut eines ASP.NET-Serversteuerelements programmgesteuert hinzufügen <xref:System.Web.UI.AttributeCollection> Objekt.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public void AddAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.AddAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.AddAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Eine <see cref="T:System.Web.UI.HtmlTextWriter" />-Instanz, die das Attribut in das öffnende Tag eines ASP.NET-Serversteuerelements schreibt.</param>
        <summary>Fügt Attribute aus der <see cref="T:System.Web.UI.AttributeCollection" />-Klasse dem <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt hinzu, das für das Rendern der Attribute als Markup zuständig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kopiert die Attribute aller des Serversteuerelements ein <xref:System.Web.UI.HtmlTextWriter> Objekts, sodass beim nächsten Aufruf von gerendert werden können die <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Methode.  
  
 Für Steuerelemente, die in anderen Steuerelementen, z. B. enthalten sind <xref:System.Web.UI.WebControls.Calendar> und <xref:System.Web.UI.WebControls.CheckBoxList>, Sie können die Leistung möglicherweise verbessern, indem Sie die enthaltenen Steuerelemente direkt rendern. Die direkte Darstellung ist schneller als durch das Container-Steuerelement, da Containersteuerelemente erfordern, dass Sie alle untergeordneten Steuerelementattribute auf das Containersteuerelement kopieren, und Rendern sie nach der sie kopiert werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie neue Attribute zum Hinzufügen einer <xref:System.Web.UI.WebControls.Button> -Steuerelement mit dem Namen `myButton` und ein <xref:System.Web.UI.WebControls.TextBox> -Steuerelement mit dem Namen `myTextBox`. Klicken Sie dann diese Attribute auf ein benutzerdefiniertes hinzugefügt <xref:System.Web.UI.HtmlTextWriter> -Objekt, das die Attribute für jedes dieser Steuerelemente in einen Ausgabestream geschrieben werden.  
  
 [!code-csharp[AttributeCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_Item/CS/attributecollection_item.cs.aspx#1)]
 [!code-vb[AttributeCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_Item/VB/attributecollection_item.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="attributeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Attribute aus dem <see cref="T:System.Web.UI.AttributeCollection" />-Objekt eines Serversteuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie programmgesteuert entfernen Sie alle Attribute aus einem HTML-Serversteuerelements <xref:System.Web.UI.AttributeCollection> Objekt.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Attribute im <see cref="T:System.Web.UI.AttributeCollection" />-Objekt ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.AttributeCollection.Count%2A> Eigenschaft, um die Anzahl der Attribute für ein Steuerelement auf der umgebenden Seite zu schreiben.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#4)]
 [!code-vb[AttributeCollection_AttributeCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="CssStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection CssStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection CssStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.CssStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssStyle As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ CssStyle { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssStyle : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.AttributeCollection.CssStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Formaten für das ASP.NET-Serversteuerelement ab, zu dem das aktuelle <see cref="T:System.Web.UI.AttributeCollection" />-Objekt gehört.</summary>
        <value>Eine Auflistung, die die Stile für das aktuelle Serversteuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Formatvorlage deklariert wird, für ein bestimmtes HTML-Serversteuerelement, um hinzugefügt wird die <xref:System.Web.UI.CssStyleCollection> Objekt, wenn die mit ASP.NET Web-Seite analysiert wird. Sie können diese Eigenschaft hinzufügen, entfernen und durchlaufen die Stile für das Serversteuerelement deklariert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie programmgesteuert einen CSS-Style-Wert eines Serversteuerelements hinzufügen <xref:System.Web.UI.AttributeCollection> Objekt. Wenn eine Schaltfläche geklickt wird, wird die Farbe des Hintergrunds einer <xref:System.Web.UI.WebControls.TextBox> -Steuerelement mit dem Namen `TextBox1` festgelegt ist, um das ausgewählte Element in einer <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement mit dem Namen `DropDownList1`.  
  
 [!code-csharp[AttributeCollection_CssStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_CssStyle/CS/attributecollection_cssstyle.cs.aspx#1)]
 [!code-vb[AttributeCollection_CssStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_CssStyle/VB/attributecollection_cssstyle.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attributeCollection.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Die Objektinstanz, die mit dieser Instanz verglichen werden soll.</param>
        <summary>Bestimmt, ob die aktuelle Instanz des <see cref="T:System.Web.UI.AttributeCollection" />-Objekts gleich dem angegebenen Objekt ist.</summary>
        <returns><see langword="true" />, wenn das im <paramref name="o" />-Parameter enthaltene Objekt gleich der aktuellen Instanz von <see cref="T:System.Web.UI.AttributeCollection" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die verglichenen Objekte gleich sind müssen die folgenden Kriterien erfüllen:  
  
-   Das Objekt, das in enthalten ist das `o` Parameter muss ein <xref:System.Web.UI.AttributeCollection> Objekt.  
  
-   Beide Auflistungen müssen die gleiche Anzahl von Elementen enthalten.  
  
-   Der Wert des jeder Eintrag in beiden Auflistungen muss übereinstimmen.  
  
    > [!NOTE]
    >  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attributeCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.AttributeCollection.GetHashCode%2A> Methode, um zu bestimmen, den Hashcode für diese <xref:System.Web.UI.AttributeCollection> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Die Position des Attributs in der Auflistung.</param>
        <summary>Ruft einen angegebenen Attributwert für ein Serversteuerelement ab oder legt diesen fest.</summary>
        <value>Der Attributwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können ein Attribut hinzufügen oder Abrufen von ein ASP.NET-Serversteuerelement, die diese Eigenschaft verwendet.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie eine dynamische HTML festlegen `onblur` Attribut ein ECMAScript (JavaScript) ausgeführt Befehl, wenn eine <xref:System.Web.UI.WebControls.TextBox> Webserver-Steuerelement den Fokus verliert.  
  
 [!code-aspx-csharp[Classic AttributeCollection Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.AttributeCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung mit den Schlüsseln für alle Attribute im <see cref="T:System.Web.UI.AttributeCollection" />-Objekt des Serversteuerelements ab.</summary>
        <value>Die Auflistung der Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft enthält alle Schlüssel, die in der <xref:System.Web.UI.AttributeCollection> von einem ASP.NET-Serversteuerelement, angibt, ob Sie hinzugefügt haben, sie programmgesteuert mit der <xref:System.Web.UI.AttributeCollection.Add%2A> -Methode oder deklarativ.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie durchlaufen die <xref:System.Web.UI.AttributeCollection.Keys%2A> Eigenschaft der <xref:System.Web.UI.AttributeCollection> Objekt für eine <xref:System.Web.UI.HtmlControls.HtmlSelect> -Steuerelement.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Keys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Keys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="attributeCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu entfernenden Attributs.</param>
        <summary>Entfernt ein Attribut aus dem <see cref="T:System.Web.UI.AttributeCollection" />-Objekt eines Serversteuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.AttributeCollection> -Objekt enthält ein Attribut mit dem angegebenen keine `key`, die Auflistung unverändert bleibt. Es werden keine Ausnahmen ausgelöst.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie zum programmgesteuerten Entfernen eines Attributs aus einer HTML-Serversteuerelements <xref:System.Web.UI.AttributeCollection> Objekt.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Eine <see cref="T:System.Web.UI.HtmlTextWriter" />-Instanz, die die Attributauflistung in den aktuellen Ausgabestream schreibt.</param>
        <summary>Schreibt die Auflistung der Attribute in den angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Ausgabestream für das Steuerelement, zu dem die Auflistung gehört.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie das erben die <xref:System.Web.UI.WebControls.WebControl> Klasse, um ein benutzerdefiniertes Steuerelement erstellen `AttribRender` , überschreibt die <xref:System.Web.UI.AttributeCollection.Render%2A> Methode. Im zweiten Codebeispiel wird veranschaulicht, wie das benutzerdefinierte Steuerelement in einer ASP.NET-Webseite verwendet wird.  
  
 Das folgende Beispiel zeigt, wie Sie ein benutzerdefiniertes Steuerelement erstellen `AttribRender` , überschreibt die <xref:System.Web.UI.WebControls.WebControl.Render%2A> -Methode der der <xref:System.Web.UI.WebControls.WebControl> Klasse ohne Aufrufen der <xref:System.Web.UI.WebControls.WebControl.Render%2A> Methode der Basisklasse. Stattdessen `AttribRender` Ruft die <xref:System.Web.UI.AttributeCollection.Render%2A> Methode.  
  
 [!code-csharp[AttributeCollection.Render_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_render.cs#1)]
 [!code-vb[AttributeCollection.Render_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_render.vb#1)]  
  
 Das folgende Beispiel zeigt, wie Sie mit der `AttribRender` benutzerdefiniertes Steuerelement auf einer Webseite. Es wird davon ausgegangen, dass die Codedatei für das benutzerdefinierte Steuerelement im Ordner "App_Code" für die Anwendung ist.  
  
 [!code-aspx-csharp[AttributeCollection.Render_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_rendercs.aspx#2)]
 [!code-aspx-vb[AttributeCollection.Render_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_rendervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
  </Members>
</Type>