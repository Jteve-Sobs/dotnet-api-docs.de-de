<Type Name="ClientWebSocket" FullName="System.Net.WebSockets.ClientWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ceb89eee2557dac901093a6b37b6ef988cdf03ec" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542498" /></Metadata><TypeSignature Language="C#" Value="public class ClientWebSocket : System.Net.WebSockets.WebSocket, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientWebSocket extends System.Net.WebSockets.WebSocket implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.ClientWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientWebSocket&#xA;Inherits WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientWebSocket : System::Net::WebSockets::WebSocket, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientWebSocket = class&#xA;    inherit WebSocket&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bb458-101">Stellt einen Client für die Verbindung mit WebSocket-Dienstleistungen bereit.</span><span class="sxs-lookup"><span data-stu-id="bb458-101">Provides a client for connecting to WebSocket services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-102">Einige der Klassen und Klassen Elemente im <xref:System.Net.WebSockets> -Namespace werden unter Windows 7, Windows Vista SP2 und Windows Server 2008 unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-102">Some of the classes and class elements in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="bb458-103">Allerdings werden die einzigen öffentlichen Implementierungen von Client-und Server-websockets unter Windows 8 und Windows Server 2012 unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="bb458-104">Die Klassen Elemente im <xref:System.Net.WebSockets> -Namespace, die unter Windows 7, Windows Vista SP2 und Windows Server 2008 unterstützt werden, sind abstrakte Klassen Elemente.</span><span class="sxs-lookup"><span data-stu-id="bb458-104">The class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</span></span> <span data-ttu-id="bb458-105">Dadurch kann ein Anwendungsentwickler diese abstrakten Klassen Klassen und Klassen Elemente mit einer tatsächlichen Implementierung von Client-websockets erben und erweitern.</span><span class="sxs-lookup"><span data-stu-id="bb458-105">This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientWebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientWebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb458-106">Erstellt eine Instanz der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="bb458-106">Creates an instance of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="clientWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb458-107">Bricht die Verbindung ab und bricht alle ausstehenden EA-Vorgänge ab.</span><span class="sxs-lookup"><span data-stu-id="bb458-107">Aborts the connection and cancels any pending IO operations.</span></span></summary>
        <remarks><span data-ttu-id="bb458-108">Der `ClientWebSocket` kann nicht wieder verwendet werden, nachdem er abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-108">The `ClientWebSocket` cannot be reused once it is aborted.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="bb458-109">Der WebSocket-Abschlussstatus.</span><span class="sxs-lookup"><span data-stu-id="bb458-109">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="bb458-110">Benutzerfreundliche Beschreibung des Status "Schließen".</span><span class="sxs-lookup"><span data-stu-id="bb458-110">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-111">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-111">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-112">Schließen Sie die <see cref="T:System.Net.WebSockets.ClientWebSocket" /> Instanz als einen asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="bb458-112">Close the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-113">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-113">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-114">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-114">This operation will not block.</span></span> <span data-ttu-id="bb458-115">Das zurück <xref:System.Threading.Tasks.Task> gegebene-Objekt wird abgeschlossen <xref:System.Net.WebSockets.ClientWebSocket> , nachdem die-Instanz geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-115">The returned <xref:System.Threading.Tasks.Task> object will complete after the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="bb458-116">Der WebSocket-Abschlussstatus.</span><span class="sxs-lookup"><span data-stu-id="bb458-116">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="bb458-117">Benutzerfreundliche Beschreibung des Status "Schließen".</span><span class="sxs-lookup"><span data-stu-id="bb458-117">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-118">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-118">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-119">Schließen Sie die Ausgaben für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="bb458-119">Close the output for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-120">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-121">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-121">This operation will not block.</span></span> <span data-ttu-id="bb458-122">Das zurück <xref:System.Threading.Tasks.Task> gegebene Objekt wird abgeschlossen, nachdem die Ausgabe <xref:System.Net.WebSockets.ClientWebSocket> für die Instanz geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-122">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb458-123">Ruft den Grund ab, warum der Schließen-Handshake auf der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz initiiert wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-123">Gets the reason why the close handshake was initiated on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="bb458-124">Der Grund, weshalb der Abschluss-Handshake initiiert wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-124">The reason why the close handshake was initiated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb458-125">Ruft eine Beschreibung des Grunds ab, warum die <see cref="T:System.Net.WebSockets.ClientWebSocket" /> Instanz geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-125">Gets a description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></summary>
        <value><span data-ttu-id="bb458-126">Die Beschreibung des Grunds, warum die <see cref="T:System.Net.WebSockets.ClientWebSocket" /> Instanz geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-126">The description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Uri uri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(Uri ^ uri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.ConnectAsync (uri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="bb458-127">Der URI des WebSocket-Servers, mit dem eine Verbindung hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb458-127">The URI of the WebSocket server to connect to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-128">Eine Abbruchtoken das verwendet werden kann, um eine Benachrichtigung dazu zu verteilen, dass der Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb458-128">A cancellation token used to propagate notification that the  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-129">Stellen Sie eine Verbindung mit einem WebSocket-Server als asynchroner Vorgang her.</span><span class="sxs-lookup"><span data-stu-id="bb458-129">Connect to a WebSocket server as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-130">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-130">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-131">Die <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> -Methode initiiert den WebSocket-Handshake mit einem Remote Netzwerk Ziel und aushandiert dann das unter Protokoll.</span><span class="sxs-lookup"><span data-stu-id="bb458-131">The <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</span></span>  
  
 <span data-ttu-id="bb458-132">Verwenden Sie für einfache WebSocket-Verbindungen `ws://` das Schema im URI.</span><span class="sxs-lookup"><span data-stu-id="bb458-132">For plain WebSocket connections, use the `ws://` scheme in the uri.</span></span> <span data-ttu-id="bb458-133">Verwenden Sie für sichere WebSocket-Verbindungen über TLS/SSL `wss://` das Schema.</span><span class="sxs-lookup"><span data-stu-id="bb458-133">For secure WebSocket connections over TLS/SSL, use the `wss://` scheme.</span></span>  
  
 <span data-ttu-id="bb458-134">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-134">This operation will not block.</span></span> <span data-ttu-id="bb458-135">Das zurück <xref:System.Threading.Tasks.Task> gegebene-Objekt wird abgeschlossen, nachdem die Connect <xref:System.Net.WebSockets.ClientWebSocket> -Anforderung für die-Instanz abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-135">The returned <xref:System.Threading.Tasks.Task> object will complete after the connect request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="clientWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb458-136">Gibt die vom <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz verwendeten nicht verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="bb458-136">Releases the unmanaged resources used by the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.WebSockets.ClientWebSocketOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebSockets.ClientWebSocketOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ClientWebSocketOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebSockets::ClientWebSocketOptions ^ Options { System::Net::WebSockets::ClientWebSocketOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.WebSockets.ClientWebSocketOptions" Usage="System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.ClientWebSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb458-137">Ruft die WebSocket-Optionen für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="bb458-137">Gets the WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="bb458-138">Die WebSocket-Optionen für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="bb458-138">The WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bb458-139">Der Puffer, der die Antwort empfangen muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-139">The buffer to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-140">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-140">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-141">Empfängt Daten auf <see cref="T:System.Net.WebSockets.ClientWebSocket" /> in einem asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="bb458-141">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-142">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-142">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-143">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-143">This operation will not block.</span></span> <span data-ttu-id="bb458-144">Das zurück <xref:System.Threading.Tasks.Task%601> gegebene Objekt wird abgeschlossen, nachdem die Empfangs Anforderung <xref:System.Net.WebSockets.ClientWebSocket> für die-Instanz abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-144">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="bb458-145">Genau ein Sende-und ein Empfangsvorgang wird für <xref:System.Net.WebSockets.ClientWebSocket> jedes Objekt parallel unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-145">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb458-146">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</span><span class="sxs-lookup"><span data-stu-id="bb458-146">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb458-147">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bb458-147">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask&lt;System::Net::WebSockets::ValueWebSocketReceiveResult&gt; ReceiveAsync(Memory&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bb458-148">Der Speicherbereich, in dem die Antwort empfangen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb458-148">The region of memory to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-149">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-149">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-150">Empfängt Daten in der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse und speichert diese als asynchronen Vorgang in einem Bytespeicherbereich.</span><span class="sxs-lookup"><span data-stu-id="bb458-150">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> to a byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-151">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-151">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb458-152">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-152">This operation will not block.</span></span> <span data-ttu-id="bb458-153">Das zurück <xref:System.Threading.Tasks.Task%601> gegebene Objekt wird abgeschlossen, nachdem die Empfangs Anforderung <xref:System.Net.WebSockets.ClientWebSocket> für die-Instanz abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="bb458-154">Genau ein Sende-und ein Empfangsvorgang wird für <xref:System.Net.WebSockets.ClientWebSocket> jedes Objekt parallel unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-154">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb458-155">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</span><span class="sxs-lookup"><span data-stu-id="bb458-155">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb458-156">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bb458-156">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bb458-157">Der Puffer mit der zu sendenden Nachricht.</span><span class="sxs-lookup"><span data-stu-id="bb458-157">The buffer containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="bb458-158">Einer der Enumerationswerte, der angibt, ob der Puffer Klartext enthält oder auf ein binäres Format hinweist.</span><span class="sxs-lookup"><span data-stu-id="bb458-158">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="bb458-159"><see langword="true" />, um anzugeben, dass dies der letzte asynchrone Sendevorgang ist; sonst <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb458-159"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-160">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-160">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-161">Sendet Daten in der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse als asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="bb458-161">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-162">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-162">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 <span data-ttu-id="bb458-163">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-163">This operation will not block.</span></span> <span data-ttu-id="bb458-164">Das zurück <xref:System.Threading.Tasks.Task> gegebene-Objekt wird abgeschlossen, nachdem die Sende <xref:System.Net.WebSockets.ClientWebSocket> Anforderung für die-Instanz abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-164">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="bb458-165">Genau ein Sende-und ein Empfangsvorgang wird für <xref:System.Net.WebSockets.ClientWebSocket> jedes Objekt parallel unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-165">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb458-166">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</span><span class="sxs-lookup"><span data-stu-id="bb458-166">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb458-167">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bb458-167">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask SendAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask SendAsync(ReadOnlyMemory&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ReadOnlyMemory&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="endOfMessage" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bb458-168">Der Speicherbereich, der die zu sendende Nachricht enthält.</span><span class="sxs-lookup"><span data-stu-id="bb458-168">The region of memory containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="bb458-169">Einer der Enumerationswerte, der angibt, ob der Puffer Klartext enthält oder auf ein binäres Format hinweist.</span><span class="sxs-lookup"><span data-stu-id="bb458-169">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="bb458-170"><see langword="true" />, um anzugeben, dass dies der letzte asynchrone Sendevorgang ist; sonst <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb458-170"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bb458-171">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</span><span class="sxs-lookup"><span data-stu-id="bb458-171">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="bb458-172">Sendet Daten in der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse eines schreibgeschützten Bytespeicherbereichs als asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="bb458-172">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> from a read-only byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bb458-173">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb458-173">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="bb458-174">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="bb458-174">This operation will not block.</span></span> <span data-ttu-id="bb458-175">Das zurück <xref:System.Threading.Tasks.Task> gegebene-Objekt wird abgeschlossen, nachdem die Sende <xref:System.Net.WebSockets.ClientWebSocket> Anforderung für die-Instanz abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="bb458-175">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>
  
<span data-ttu-id="bb458-176">Genau ein Sende-und ein Empfangsvorgang wird für <xref:System.Net.WebSockets.ClientWebSocket> jedes Objekt parallel unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bb458-176">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb458-177">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</span><span class="sxs-lookup"><span data-stu-id="bb458-177">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb458-178">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bb458-178">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Net.WebSockets.ClientWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb458-179">Ruft den WebSocket-Zustand der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="bb458-179">Gets the WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="bb458-180">Der WebSocket Zustand der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> Instanz</span><span class="sxs-lookup"><span data-stu-id="bb458-180">The WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb458-181">Ruft das unterstützte WebSocket-Unterprotokoll für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="bb458-181">Gets the supported WebSocket sub-protocol for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="bb458-182">Das unterstützte WebSocket-Unterprotokoll.</span><span class="sxs-lookup"><span data-stu-id="bb458-182">The supported WebSocket sub-protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
