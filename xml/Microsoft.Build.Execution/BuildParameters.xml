<Type Name="BuildParameters" FullName="Microsoft.Build.Execution.BuildParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deeaca2778c112a7742df5b4c2fbac5e095ae265" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30328934" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BuildParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.BuildParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class BuildParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildParameters" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Diese Klasse stellt alle Einstellungen dar, die angegeben werden müssen, um einen Build zu starten.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt Buildparameter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuildParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt Buildparameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor für die Verwendung bei der Festlegung von allen werden Eigenschaften programmgesteuert erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParameters (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuildParameters(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection">Die ProjectCollection, aus der sich die BuildParameters auffüllen sollen.</param>
        <summary>Erstellt Buildparameter und initialisiert sie aus einer Projektauflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProcessEnvironment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; BuildProcessEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; BuildProcessEnvironment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.BuildProcessEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildProcessEnvironment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ BuildProcessEnvironment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Umgebungsvariablen ab, die beim Erstellen des Builds festgelegt wurden.</summary>
        <value>Gibt die festgelegten Umgebungsvariablen zurück, als der Build erstellt wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildThreadPriority">
      <MemberSignature Language="C#" Value="public System.Threading.ThreadPriority BuildThreadPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ThreadPriority BuildThreadPriority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.BuildThreadPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildThreadPriority As ThreadPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ThreadPriority BuildThreadPriority { System::Threading::ThreadPriority get(); void set(System::Threading::ThreadPriority value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die gewünschte Threadpriorität zum Erstellen ab oder legt sie fest.</summary>
        <value>Gibt die Threadpriorität zum Erstellen zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildParameters Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildParameters Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildParameters.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BuildParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::BuildParameters ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen Klon dieses Buildparameter-Objekts.</summary>
        <returns>Gibt einen Klon dieses Buildparameter-Objekts zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt einen Klon der Protokollierung Auflistungen, aber die Protokollierungen innerhalb tief nicht geklont werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Kultur ab, die bei der Builderstellung verwendet werden soll, oder legt ihn fest.</summary>
        <value>Gibt die Kultur zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultToolsVersion">
      <MemberSignature Language="C#" Value="public string DefaultToolsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultToolsVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardtoolsversion für den Build ab oder legt sie fest.</summary>
        <value>Gibt die Toolsversion zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetailedSummary">
      <MemberSignature Language="C#" Value="public bool DetailedSummary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetailedSummary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.DetailedSummary" />
      <MemberSignature Language="VB.NET" Value="Public Property DetailedSummary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetailedSummary { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Schalter ab, der angibt, ob der Build am Ende des Protokolls eine ausführliche Zusammenfassung ausgeben soll, oder legt ihn fest.</summary>
        <value>Gibt den Wert eines Schalters zurück, der angibt, ob der Build am Ende des Protokolls eine ausführliche Zusammenfassung ausgeben soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableInProcNode">
      <MemberSignature Language="C#" Value="public bool DisableInProcNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableInProcNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.DisableInProcNode" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableInProcNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableInProcNode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Flag ab oder legt dieses fest, welches bestimmt, ob der "in process"-Knoten verwendet wird.</summary>
        <value>Gibt das Flag zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableNodeReuse">
      <MemberSignature Language="C#" Value="public bool EnableNodeReuse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableNodeReuse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.EnableNodeReuse" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableNodeReuse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableNodeReuse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob prozessexterne Knoten nach dem Build beibehalten werden und auf weitere Builds warten sollen, oder legt es fest.</summary>
        <value>Gibt das Flag zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; EnvironmentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; EnvironmentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.EnvironmentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ EnvironmentProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine unveränderliche Auflistung von Umgebungseigenschaften ab.</summary>
        <value>Gibt eine unveränderliche Auflistung von Umgebungseigenschaften zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardingLoggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; ForwardingLoggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; ForwardingLoggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.ForwardingLoggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ForwardingLoggers As IEnumerable(Of ForwardingLoggerRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ ForwardingLoggers { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Beschreibungen von Weiterleitungsprotokollierungen ab oder legt sie fest.</summary>
        <value>Gibt die Auflistung von Beschreibungen von Weiterleitungsprotokollierungen zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToolset">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Toolset GetToolset (string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.Toolset GetToolset(string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildParameters.GetToolset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToolset (toolsVersion As String) As Toolset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::Toolset ^ GetToolset(System::String ^ toolsVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Toolset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolsVersion">Das abzurufende Toolset.</param>
        <summary>Ruft ein angegebenes Toolset ab.</summary>
        <returns>Gibt das Toolset zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine unveränderliche Auflistung globaler Eigenschaften ab oder legt sie fest.</summary>
        <value>Gibt eine unveränderliche Auflistung globaler Eigenschaften zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostServices">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.HostServices HostServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.HostServices HostServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.HostServices" />
      <MemberSignature Language="VB.NET" Value="Public Property HostServices As HostServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::HostServices ^ HostServices { Microsoft::Build::Execution::HostServices ^ get(); void set(Microsoft::Build::Execution::HostServices ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.HostServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Dienst ab, der dem Host das Bereitstellen zusätzlicher Steuerung über den Buildprozess ermöglicht, oder legt ihn fest.</summary>
        <value>Gibt den Hostdienst zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegacyThreadingSemantics">
      <MemberSignature Language="C#" Value="public bool LegacyThreadingSemantics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LegacyThreadingSemantics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics" />
      <MemberSignature Language="VB.NET" Value="Public Property LegacyThreadingSemantics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LegacyThreadingSemantics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Schalter ab, der Legacy-Threadingsemantik aktiviert oder deaktiviert, oder legt ihn fest.</summary>
        <value>Gibt einen Schalter zurück, der Legacy-Threadingsemantik aktiviert oder deaktiviert; true, wenn aktiviert, andernfalls false.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legacy-threading Semantik angeben, dass ist eine Übermittlung erstellt werden sollen nur für den prozessinternen Knoten und die Übermittlung synchron ausgeführt wird und alle Anforderungen auf dem Thread, der den Build gestartet, statt einen Thread, der im Besitz der BuildManager erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Loggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; Loggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; Loggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.Loggers" />
      <MemberSignature Language="VB.NET" Value="Public Property Loggers As IEnumerable(Of ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ Loggers { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Protokollierungen ab, die bei der Builderstellung verwendet werden sollen, oder legt sie fest.</summary>
        <value>Gibt die Auflistung von Protokollierungen zurück, die bei der Builderstellung verwendet werden sollen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInitialPropertiesAndItems">
      <MemberSignature Language="C#" Value="public bool LogInitialPropertiesAndItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogInitialPropertiesAndItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems" />
      <MemberSignature Language="VB.NET" Value="Public Property LogInitialPropertiesAndItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogInitialPropertiesAndItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Flag ab oder legt dieses fest, welches bestimmt, ob der Build die Eingabeparameter protokolliert.</summary>
        <value>Gibt das Flag zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTaskInputs">
      <MemberSignature Language="C#" Value="public bool LogTaskInputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogTaskInputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.LogTaskInputs" />
      <MemberSignature Language="VB.NET" Value="Public Property LogTaskInputs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogTaskInputs { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Flag ab oder legt dieses fest, welches bestimmt, ob der Build die Aufgabenparameter protokolliert.</summary>
        <value>Gibt das Flag zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNodeCount">
      <MemberSignature Language="C#" Value="public int MaxNodeCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxNodeCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.MaxNodeCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxNodeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxNodeCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von Knoten ab, die dieser Build verwenden kann, oder legt sie fest.</summary>
        <value>Gibt die maximale Anzahl von Knoten zurück, die dieser Build verwenden kann.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUseLimit">
      <MemberSignature Language="C#" Value="public int MemoryUseLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUseLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.MemoryUseLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MemoryUseLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUseLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Speichergröße in Megabyte ab, auf deren Verwendung sich der Build beschränken soll, oder legt sie fest.</summary>
        <value>Gibt die Speichergröße in Megabyte zurück, auf deren Verwendung sich der Build beschränken soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeExeLocation">
      <MemberSignature Language="C#" Value="public string NodeExeLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeExeLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.NodeExeLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeExeLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NodeExeLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speicherort der ausführbaren Datei des Buildknotens ab oder legt ihn fest.</summary>
        <value>Gibt den Speicherort der ausführbaren Datei des Buildknotens zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlyLogCriticalEvents">
      <MemberSignature Language="C#" Value="public bool OnlyLogCriticalEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnlyLogCriticalEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property OnlyLogCriticalEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnlyLogCriticalEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob nicht schwerwiegende Protokollierungsereignisse verworfen werden sollen, oder legt es fest.</summary>
        <value>Gibt ein Flag zurück, das bestimmt, ob nicht schwerwiegende Protokollierungsereignisse verworfen werden sollen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCaches">
      <MemberSignature Language="C#" Value="public bool ResetCaches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.ResetCaches" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetCaches As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetCaches { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Schalter ab, der angibt, ob der Build den Konfigurations- und Ergebniscache zurücksetzen soll, oder legt ihn fest.</summary>
        <value>Gibt einen Schalter zurück, der angibt, ob der Build den Konfigurations- und Ergebniscache zurücksetzen soll; true, wenn die Caches zurückgesetzt werden sollen, andernfalls false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveOperatingEnvironment">
      <MemberSignature Language="C#" Value="public bool SaveOperatingEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveOperatingEnvironment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveOperatingEnvironment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveOperatingEnvironment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Schalter ab, der angibt, ob das Arbeitsumfeld, z. B. das aktuelle Verzeichnis und die Umgebung, zwischen Projektbuilds und Aufgabenaufrufen gespeichert und wiederhergestellt werden soll, oder legt ihn fest.</summary>
        <value>Gibt einen Schalter zurück, der angibt, ob das Arbeitsumfeld zwischen Projektbuilds und Aufgabenaufrufen gespeichert und wiederhergestellt werden soll; true, wenn die Umgebung gespeichert werden soll, andernfalls false.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies sollte auf "false" für alle anderen Build-Manager im System ausgeführt werden, damit wir nicht zwei Build-Manager des jeweils anderen beeinflussen Umgebung verfügen festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownInProcNodeOnBuildFinish">
      <MemberSignature Language="C#" Value="public bool ShutdownInProcNodeOnBuildFinish { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShutdownInProcNodeOnBuildFinish" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownInProcNodeOnBuildFinish As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShutdownInProcNodeOnBuildFinish { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Flag ab oder legt dieses fest, welches bestimmt, ob der "in process"-Knoten beendet wird, wenn der Build abgeschlossen ist. Der Standardwert ist <see langword="false" />.</summary>
        <value>Gibt das Flag zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsetDefinitionLocations">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ToolsetDefinitionLocations ToolsetDefinitionLocations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Evaluation.ToolsetDefinitionLocations ToolsetDefinitionLocations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolsetDefinitionLocations As ToolsetDefinitionLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ToolsetDefinitionLocations ToolsetDefinitionLocations { Microsoft::Build::Evaluation::ToolsetDefinitionLocations get(); void set(Microsoft::Build::Evaluation::ToolsetDefinitionLocations value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ToolsetDefinitionLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Speicherorte ab, an denen nach Toolsets gesucht werden soll, oder legt sie fest.</summary>
        <value>Gibt Speicherorte zurück, an denen nach Toolsets gesucht werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolsets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.Toolset&gt; Toolsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.Toolset&gt; Toolsets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.Toolsets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolsets As ICollection(Of Toolset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::Toolset ^&gt; ^ Toolsets { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::Toolset ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.Toolset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Toolsets ab.</summary>
        <value>Gibt alle Toolsets zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der UI-Kultur ab, die bei der Builderstellung verwendet werden soll, oder legt ihn fest.</summary>
        <value>Gibt den Namen der UI-Kultur zurück, die bei der Builderstellung verwendet werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSynchronousLogging">
      <MemberSignature Language="C#" Value="public bool UseSynchronousLogging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSynchronousLogging" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSynchronousLogging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSynchronousLogging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Schalter ab, der angibt, ob bei einem einzelnen Prozess die synchrone Protokollierung verwendet wird, oder legt ihn fest.</summary>
        <value>Gibt einen Schalter zurück, der angibt, ob bei einem einzelnen Prozess die synchrone Protokollierung verwendet wird; wenn true, wird die synchrone Protokollierung verwendet, andernfalls wird die asynchrone Protokollierung verwendet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>