<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24dee33661935053b061760923ccaa7408319954" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55351386" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb5cf-101">Stellt eine Projektinstanz dar.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-102">Instanzen dieser Klasse dazu führen, wenn ein Projekt geklont wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="bb5cf-103">Konstruktoren sind intern, um Benutzern das Erstellen von Projektinstanzen vorhandener Projekte erfordern.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="bb5cf-104">Neue Project-Instanzen sind unveränderlich, außer dass Instanz-Elemente werden sollen hinzugefügt können, und Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="bb5cf-105">Project-Instanzen sind nützlich, da sie geändert und mehrere Male ohne Beeinträchtigung der ursprünglichen Projekts erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="bb5cf-106">Weder diese Klasse noch Anliegen ist zulässig, um Verweise auf <xref:Microsoft.Build.Construction> oder <xref:Microsoft.Build.Evaluation> Objekte.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="bb5cf-107">Projekt-Instanz hosten von Diensten und der aufgabenregistrierung sind nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-108">Erstellt eine neue Projektinstanz.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="bb5cf-109">Das Projektstammelement.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="bb5cf-110">Erstellt eine neue Projektinstanz und initialisiert sie aus dem angegebenen Projektstamm mit der Standardprojektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-111">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-112">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="bb5cf-113">Der Name der Projektdatei.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="bb5cf-114">Erstellt eine neue Projektinstanz und initialisiert sie aus der angegebenen Projektdatei mit der Standardprojektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-115">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-116">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="bb5cf-117">Der Name der Projektdatei.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="bb5cf-118">Die zu verwendenden globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="bb5cf-119">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="bb5cf-120">Erstellt eine neue Projektinstanz und initialisiert sie aus der angegebenen Projektdatei mit den angegebenen globalen Eigenschaften, der Toolsversion und der Standardprojektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-121">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-122">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="bb5cf-123">Das Projektstammelement.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="bb5cf-124">Die zu verwendenden globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-124">The global properties to use.</span></span> <span data-ttu-id="bb5cf-125">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="bb5cf-126">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-126">The tools version.</span></span> <span data-ttu-id="bb5cf-127">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="bb5cf-128">Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-128">Project collection</span></span></param>
        <summary><span data-ttu-id="bb5cf-129">Erstellt eine neue Projektinstanz und initialisiert sie aus dem angegebenen Projektstamm mit den angegebenen globalen Eigenschaften, der Toolsversion und der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-130">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-131">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="bb5cf-132">Der Name der Projektdatei.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="bb5cf-133">Die zu verwendenden globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-133">The global properties to use.</span></span> <span data-ttu-id="bb5cf-134">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="bb5cf-135">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-135">The tools version.</span></span> <span data-ttu-id="bb5cf-136">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="bb5cf-137">Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-137">Project collection</span></span></param>
        <summary><span data-ttu-id="bb5cf-138">Erstellt eine neue Projektinstanz und initialisiert sie aus der angegebenen Projektdatei mit den angegebenen globalen Eigenschaften, der Toolsversion und der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-139">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-140">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="bb5cf-141">Das Projektstammelement.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="bb5cf-142">Die zu verwendenden globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-142">The global properties to use.</span></span> <span data-ttu-id="bb5cf-143">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="bb5cf-144">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-144">The tools version.</span></span> <span data-ttu-id="bb5cf-145">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="bb5cf-146">Die Version des Sub-Toolsets.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-146">The sub toolset version.</span></span> <span data-ttu-id="bb5cf-147">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="bb5cf-148">Die Projektsammlung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="bb5cf-149">Erstellt eine neue Projektinstanz und initialisiert sie aus dem angegebenen Projektstamm mit den angegebenen globalen Eigenschaften, der Toolsversion und der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-150">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-151">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="bb5cf-152">Der Name der Projektdatei.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="bb5cf-153">Die zu verwendenden globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-153">The global properties to use.</span></span> <span data-ttu-id="bb5cf-154">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="bb5cf-155">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-155">The tools version.</span></span> <span data-ttu-id="bb5cf-156">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="bb5cf-157">Die Version des Sub-Toolsets.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-157">The sub toolset version.</span></span> <span data-ttu-id="bb5cf-158">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="bb5cf-159">Die Projektsammlung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="bb5cf-160">Erstellt eine neue Projektinstanz und initialisiert sie aus der angegebenen Projektdatei mit den angegebenen globalen Eigenschaften, der Toolsversion, der Unter-Toolsetversion und der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-161">Keine fortgeschrittene <xref:Microsoft.Build.Evaluation.Project> Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="bb5cf-162">Dies ist hilfreich, wenn ein Projekt erstellt haben, aber nicht angezeigt oder bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-163">Fügt dem Projekt ein Element ohne Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="bb5cf-164">Der Elementtyp des Elements, das hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="bb5cf-165">Das ausgewertete Include-Attribut des Elements.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="bb5cf-166">Fügt dem Projekt ein Element ohne Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-167">Das neue Element.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-168">Nehmen wir keine ProjectItemInstance, um sicherzustellen, dass wir noch nicht geschehen, die bereits von einem anderen ProjectInstance verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="bb5cf-169">Der Elementtyp des Elements, das hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="bb5cf-170">Das ausgewertete Include-Attribut des Elements.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="bb5cf-171">Die Metadaten des Elements.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="bb5cf-172">Fügt dem Projekt ein Element mit den angegebenen Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-173">Gibt das neue Element zurück.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-174">Nehmen wir keine ProjectItemInstance, um sicherzustellen, dass wir noch nicht geschehen, die bereits von einem anderen ProjectInstance verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-175">Erstellt die Standardziele des Projekts mit Protokollierungen der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb5cf-176">Erstellt die Standardziele des Projekts mit Protokollierungen der Projektauflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-177"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="bb5cf-178">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-178">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-179">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-179">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-180">Erstellt die Standardziele des Projekts mit den angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-181"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-182">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="bb5cf-183">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-183">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-184">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="bb5cf-185">Die Remoteprotokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-186">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-186">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-187">Erstellt die Standardziele des Projekts mit den angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-188"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-189">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bb5cf-190">Das zu erstellende Ziel.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-190">The target to build.</span></span> <span data-ttu-id="bb5cf-191">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-192">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-192">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-193">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-193">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-194">Erstellt das angegebene Ziel des Projekts mit den angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-195"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-196">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="bb5cf-197">Die zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-197">The targets to build.</span></span> <span data-ttu-id="bb5cf-198">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-199">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-199">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-200">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-200">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-201">Erstellt die angegebenen Ziele des Projekts mit den angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-202"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-203">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bb5cf-204">Das zu erstellende Ziel.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-204">The target to build.</span></span> <span data-ttu-id="bb5cf-205">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-206">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-206">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-207">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="bb5cf-208">Die Remoteprotokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-209">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-209">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-210">Erstellt das angegebene Ziel des Projekts mit den angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-211"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-212">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="bb5cf-213">Liste der zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-213">List of targets to build.</span></span> <span data-ttu-id="bb5cf-214">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-215">Enumerierte Liste von Protokollierungen, die zum Erstellen von Zielen verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="bb5cf-216">Ausgaben von Zielbuilds.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="bb5cf-217">Erstellt eine Liste von Zielen mit angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="bb5cf-218">Ziele sind möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-218">Targets may be null.</span></span> <span data-ttu-id="bb5cf-219">Protokollierungen sind möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-220"><see langword="true" /> bei Erfolg, „false“ bei einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-221">Wenn keines der angegebenen Protokollierungen bereits den Protokollierungsdienst angefügt werden, die wir übergeben wurden, löst eine InvalidOperationException aus.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="bb5cf-222">Die zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-222">The targets to build.</span></span> <span data-ttu-id="bb5cf-223">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-224">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-224">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-225">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="bb5cf-226">Die Remoteprotokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-227">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-227">May be null.</span></span></param>
        <summary><span data-ttu-id="bb5cf-228">Erstellt die angegebenen Ziele des Projekts mit den angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-229"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-230">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="bb5cf-231">Die zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-231">The targets to build.</span></span> <span data-ttu-id="bb5cf-232">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="bb5cf-233">Die Protokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-233">The loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-234">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="bb5cf-235">Die Remoteprotokollierungen, die für den Build verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="bb5cf-236">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="bb5cf-237">Die Zielausgaben.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="bb5cf-238">Erstellt die angegebenen Ziele mit den angegebenen Zielausgaben und mit den angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-239"><see langword="true" />, wenn der Build erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-240">Löst eine InvalidOperationException, wenn keines der angegebenen Protokollierungen bereits an den Protokollierungsdienst angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-241">Erstellt einen unabhängigen, tiefen Klon dieses Projekts und aller enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="bb5cf-242">Nützlich zum Kompilieren einer einzelnen Datei oder zum Beibehalten von Buildergebnissen zwischen Builds.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb5cf-243">Erstellt einen unabhängigen, tiefen Klon dieses Projekts und aller enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="bb5cf-244">Der Klon hat dieselbe Veränderlichkeit wie das ursprüngliche Objekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="bb5cf-245">Nützlich zum Kompilieren einer einzelnen Datei oder zum Beibehalten von Buildergebnissen zwischen Builds.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-246">Erstellt einen unabhängigen, tiefen Klon dieses Projekts.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="bb5cf-247">Flag, das die Veränderlichkeit von Klonen angibt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="bb5cf-248">Erstellt einen unabhängigen einen tiefen Klon dieses Projekts und dessen gesamten Inhalts mit der angegebenen Veränderlichkeit.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="bb5cf-249">Nützlich zum Kompilieren einer einzelnen Datei oder zum Beibehalten von Buildergebnissen zwischen Builds.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-250">Ein unabhängiger, tiefer Klon dieses Projekts mit angegebener Veränderlichkeit.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-251">Ruft die Liste der Standardziele für dieses Projekt ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="bb5cf-252">Die Liste der Standardziele für dieses Projekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-253">Standardziele werden erstellt, wenn keine Ziele explizit angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-254">Ruft das Projektstammverzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-254">Gets the project root directory.</span></span> <span data-ttu-id="bb5cf-255">Wird zur Auswertung relativer Pfade und zum Festlegen des aktuellen Verzeichnisses während des Builds verwendet.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="bb5cf-256">Ist nie NULL: Projekte, die nicht von der Festplatte geladen werden, verwenden das aktuelle Verzeichnis zum Startzeitpunkt des Builds.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="bb5cf-257">Stammverzeichnis des Projekts, das nie null ist.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-257">The project root directory, which is never null.</span></span> <span data-ttu-id="bb5cf-258">Nicht von der Festplatte geladene Projekte geben das aktuelle Verzeichnis zum Startzeitpunkt des Builds zurück.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="bb5cf-259">Die zu erweiternde Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="bb5cf-260">Wertet die bereitgestellte Zeichenfolge durch das Erweitern von Elementen und Eigenschaften unter Verwendung der verfügbaren aktuellen Elemente und Eigenschaften als Bedingung aus, führt anschließend eine logische Auswertung aus.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-261"><see langword="true" />, wenn die Zeichenfolge als „true“ ausgewertet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-262">Dies ist nützlich für das "Direktfenster".</span><span class="sxs-lookup"><span data-stu-id="bb5cf-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="bb5cf-263">Bare-Metadaten-Ausdrücke wird nicht erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="bb5cf-264">Die zu erweiternde Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="bb5cf-265">Wertet die bereitgestellte Zeichenfolge durch das Erweitern von Elementen und Eigenschaften unter Verwendung der verfügbaren aktuellen Elemente und Eigenschaften aus.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-266">Der erweiterte Zeichenfolgenwert.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-267">Dies ist nützlich für einige Hosts oder für das "Direktfenster" Debugger.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="bb5cf-268">Bare-Metadaten-Ausdrücke wird nicht erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-269">Ruft den vollständigen Pfad zur Projektdatei ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-269">Gets the full path to the project file.</span></span> <span data-ttu-id="bb5cf-270">Wird für die Protokollierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="bb5cf-271">Der vollständige Pfad zu der Projektdatei oder <see langword="null" /> , wenn das Projekt nie benannt wurde.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-272">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bb5cf-273">Die Elementdefinition, die ausgewertet und mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="bb5cf-274">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-275">Der ausgewertete, mit Escapezeichen versehene Wert des Include-Attributs der bereitgestellten Elementdefinition.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bb5cf-276">Das Element, das ausgewertet und mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="bb5cf-277">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs des bereitgestellten Elements ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-278">Der ausgewertete, mit Escapezeichen versehene Wert des Include-Attributs des bereitgestellten Elements.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="bb5cf-279">Der Elementtyp des Elements, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb5cf-280">Ruft alle Elemente in diesem Projekt mit dem angegebenen Typ ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="bb5cf-281">Dies ist eine schreibgeschützte Liste.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-282">Alle Elemente in diesem Projekt mit dem angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="bb5cf-283">Gibt eine leere Liste zurück, wenn keine Elemente vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="bb5cf-284">Der Elementtyp des Elements, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="bb5cf-285">Der ausgewertete Include-Wert für die abzurufenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="bb5cf-286">Ruft alle Elemente in diesem Projekt des angegebenen Typs und des ausgewerteten Include-Werts ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="bb5cf-287">Dies ist eine schreibgeschützte Liste.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-288">Alle Elemente in diesem Projekt mit dem angegebenen Typ und dem ausgewerteten include-Wert.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="bb5cf-289">Gibt eine leere Auflistung zurück, wenn keine Elemente vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb5cf-290">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="bb5cf-291">Das Metadatum, das mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="bb5cf-292">Ruft den Wert mit Escapezeichen des bereitgestellten Metadatums ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-293">Der Wert mit Escapezeichen des bereitgestellten Metadatums.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bb5cf-294">Die Elementdefinition, die den Metadatumswert bereitstellen soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="bb5cf-295">Der Name des Metadatums.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="bb5cf-296">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-297">Der Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen der bereitgestellten Elementdefinition.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bb5cf-298">Das Element, das den Metadatumswert bereitstellen soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="bb5cf-299">Der Name des Metadatums.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="bb5cf-300">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen im bereitgestellten Element ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-301">Der Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen im bereitgestellten Element.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bb5cf-302">Der Name der abzurufenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="bb5cf-303">Ruft die Eigenschaft mit dem angegebenen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-304">Die Eigenschaft mit dem angegebenen Namen oder <see langword="null" />, wenn keine Eigenschaft mit diesem Namen existiert.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bb5cf-305">Der Name der Eigenschaft, deren Wert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb5cf-306">Ruft den Wert der Eigenschaft mit dem angegebenen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-307">Der Wert der Eigenschaft mit dem angegebenen Namen oder eine leere Zeichenfolge, wenn keine Eigenschaft mit diesem Namen existiert.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="bb5cf-308">Der zurückgegebene Wert verfügt über keine Escapezeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-309">Diese Methode unterscheidet nicht zwischen einer Eigenschaft mit einem Wert von leere Zeichenfolge und keine Eigenschaft mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="bb5cf-310">Die Eigenschaft, die mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="bb5cf-311">Ruft den Wert mit Escapezeichen der bereitgestellten Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-312">Der Wert mit Escapezeichen der bereitgestellten Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-313">Ruft das Wörterbuch globaler Eigenschaften ab, mit denen dieses Projekt ausgewertet wurde, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="bb5cf-314">Das Wörterbuch globaler Eigenschaften, die mit dieses Projekt ausgewertet wurde.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-315">Schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-315">Read only collection.</span></span>  
  
 <span data-ttu-id="bb5cf-316">Durchläuft die Projekt-verweisen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="bb5cf-317">Dies ist die öffentlich verfügbar gemachte abrufen, die in einem nur-Lese dead IDictionary übersetzt\<Zeichenfolge, Zeichenfolge >.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-318">Ruft die Liste der ursprünglichen Ziele für das Projekt und aller Importe ab, ermittelt nach der Tiefe.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="bb5cf-319">Diese Ziele werden vor allen anderen Zielen erstellt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="bb5cf-320">Die Liste der ursprünglichen Ziele für das Projekt und alle zugehörigen Importe, Tiefe.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-321">Ruft einen Wert ab, der angibt, ob die Projektinstanz unveränderlich ist.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="bb5cf-322">Dieses Flag wird dauerhaft festgelegt, wenn die Instanz erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="bb5cf-323"><see langword="true" /> Wenn die Projektinstanz unveränderlich ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-324">Ruft ein schreibgeschütztes Wörterbuch der Elementdefinitionen im Projekt ab, sortiert nach Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="bb5cf-325">Ein schreibgeschütztes Wörterbuch der Elementdefinitionen im Projekt, sortiert nach Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-326">Ruft alle Elemente in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="bb5cf-327">Alle Elemente in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-328">Ruft alle Elementtypen in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="bb5cf-329">Alle Elementtypen in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-330">Ruft den Speicherort der Ursprungsdatei ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="bb5cf-331">Nie NULL.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-331">Never null.</span></span></summary>
        <value><span data-ttu-id="bb5cf-332">Der Speicherort der Ursprungsdatei.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-332">The location of the originating file.</span></span> <span data-ttu-id="bb5cf-333">Gibt nie Werte zurück <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-334">Ruft alle Eigenschaften in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="bb5cf-335">Alle Eigenschaften in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bb5cf-336">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="bb5cf-337">Entfernt ein Element aus dem Projekte, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="bb5cf-338">Gibt true zurück, falls vorhanden, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-339"><see langword="true" />, wenn das Element vor dem Entfernen vorhanden war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bb5cf-340">Der Name der zu entfernenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="bb5cf-341">Entfernt eine Eigenschaft mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-341">Removes a property with the given name.</span></span> <span data-ttu-id="bb5cf-342">Gibt true zurück, wenn die Eigenschaft über einen Wert verfügte (möglicherweise eine leere Zeichenfolge), andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-343"><see langword="true" />, wenn die Eigenschaft vor dem Entfernen über einen Wert verfügte (möglicherweise eine leere Zeichenfolge), andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bb5cf-344">Der Name der hinzuzufügenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="bb5cf-345">Der ausgewertete Wert der hinzuzufügenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="bb5cf-346">Fügt dem Projekt eine Eigenschaft mit dem angegebenen Namen und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="bb5cf-347">Überschreibt eine bereits in die Eigenschaftenauflistung vorhandene Eigenschaft mit dem gleichen Namen.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-348">Die neue Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-349">Nehmen wir keine ProjectPropertyInstance, um sicherzustellen, dass wir noch nicht geschehen, die bereits von einem anderen ProjectPropertyInstance verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-350">Ruft einen Enumerator über alle Ziele in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="bb5cf-351">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="bb5cf-352">Ein Enumerator für alle Ziele in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb5cf-353">Ruft die Toolsversion ab, mit der dieses Projekt ausgewertet wurde, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="bb5cf-354">Die Tools-Version wurde das Projekt ggf. ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb5cf-355">Das Ergebnis ist nicht unbedingt identisch mit dem Tools-Version auf der projektregisterkarte, sofern vorhanden; Es wurden möglicherweise extern angegeben, z. B. mit einem/TV-Switch.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb5cf-356">Erstellt ein ProjectRootElement aus dem Inhalt dieser ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="bb5cf-357">Ein ProjectRootElement, das diese Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="bb5cf-358">Die <see langword="ProjectInstance" />, über die aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="bb5cf-359">Ersetzt den Projektzustand <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> und <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> durch die von der angegebenen <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span><span class="sxs-lookup"><span data-stu-id="bb5cf-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>