<Type Name="HostServices" FullName="Microsoft.Build.Execution.HostServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="724259094f7622709e8ec680fcc12ba0bc501646" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="40001245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.HostServices" />
  <TypeSignature Language="VB.NET" Value="Public Class HostServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostServices" />
  <TypeSignature Language="F#" Value="type HostServices = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("#Entries={hostObjectMap.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c8127-101">Implementierung eines Hostdiensts, der Zugriff vom Build zum Host vermittelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8127-101">Implementation of a host service that mediates access from the build to the host.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8127-102">Siehe auch <xref:Microsoft.Build.Utilities.Task.HostObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8127-102">See also <xref:Microsoft.Build.Utilities.Task.HostObject%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8127-103">Erstellt einen Hostdienst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-103">Creates a host service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskHost GetHostObject (string projectFile, string targetName, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskHost GetHostObject(string projectFile, string targetName, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHostObject (projectFile As String, targetName As String, taskName As String) As ITaskHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITaskHost ^ GetHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName);" />
      <MemberSignature Language="F#" Value="member this.GetHostObject : string * string * string -&gt; Microsoft.Build.Framework.ITaskHost" Usage="hostServices.GetHostObject (projectFile, targetName, taskName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="c8127-104">Der Name der Projektdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-104">The name of the project file.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="c8127-105">Der Name des Ziels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-105">The name of the target.</span>
          </span>
        </param>
        <param name="taskName">
          <span data-ttu-id="c8127-106">Der dem Hostdienst zugeordnete Name der Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-106">The task name associated with the host service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-107">Ruft den Hostdienst für die angegebene Aufgabe ab, wobei die Aufgabe innerhalb eines Ziels und Projekts mit den angegebenen Namen angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-107">Gets the host service for the given task where the task appears within a target and project with the given names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8127-108">Gibt den Hostdienst für die angegebene Aufgabe zurück, wobei die Aufgabe innerhalb eines Ziels und Projekts mit den angegebenen Namen angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-108">Returns the host service for the given task where the task appears within a target and project with the given names.</span>
          </span>
          <span data-ttu-id="c8127-109">Gibt NULL zurück, wenn kein Hostdienst vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-109">If no host service exists, returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeAffinity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeAffinity GetNodeAffinity (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Execution.NodeAffinity GetNodeAffinity(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAffinity (projectFile As String) As NodeAffinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::NodeAffinity GetNodeAffinity(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAffinity : string -&gt; Microsoft.Build.Execution.NodeAffinity" Usage="hostServices.GetNodeAffinity projectFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="c8127-110">Die dem Knoten zugeordnete Projektdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-110">The project file associated with the node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-111">Ruft die Knotenaffinität für die angegebene Projektdatei ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-111">Gets the node affinity for the given project file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8127-112">Gibt die Knotenaffinität für die angegebene Projektdatei zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-112">Returns the node affinity for the given project file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRenameProject">
      <MemberSignature Language="C#" Value="public void OnRenameProject (string oldFullPath, string newFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRenameProject(string oldFullPath, string newFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRenameProject (oldFullPath As String, newFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRenameProject(System::String ^ oldFullPath, System::String ^ newFullPath);" />
      <MemberSignature Language="F#" Value="member this.OnRenameProject : string * string -&gt; unit" Usage="hostServices.OnRenameProject (oldFullPath, newFullPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFullPath" Type="System.String" />
        <Parameter Name="newFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldFullPath">
          <span data-ttu-id="c8127-113">Der aktuelle Pfad zur Projektdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-113">The current path to the project file.</span>
          </span>
        </param>
        <param name="newFullPath">
          <span data-ttu-id="c8127-114">Der neue Pfad zur Projektdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-114">The new path to the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-115">Aktualisiert die Hostdienste-Tabelle, wenn ein Projekt benannt oder umbenannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-115">Updates the host services table when a project is named or renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8127-116">Ein Projekt ist mit dem Namen, erhält Sie einen neuen vollständigen Pfad und der alte Pfad null ist.</span><span class="sxs-lookup"><span data-stu-id="c8127-116">A project is named when it is given a new full path and the old path is null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHostObject">
      <MemberSignature Language="C#" Value="public void RegisterHostObject (string projectFile, string targetName, string taskName, Microsoft.Build.Framework.ITaskHost hostObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHostObject(string projectFile, string targetName, string taskName, class Microsoft.Build.Framework.ITaskHost hostObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHostObject (projectFile As String, targetName As String, taskName As String, hostObject As ITaskHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName, Microsoft::Build::Framework::ITaskHost ^ hostObject);" />
      <MemberSignature Language="F#" Value="member this.RegisterHostObject : string * string * string * Microsoft.Build.Framework.ITaskHost -&gt; unit" Usage="hostServices.RegisterHostObject (projectFile, targetName, taskName, hostObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="hostObject" Type="Microsoft.Build.Framework.ITaskHost" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="c8127-117">Die Projektdatei, die das Aufgabe-Ziel-Paar enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-117">The project file containing the task/target pair.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="c8127-118">Der Name des Ziels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-118">The name of the target.</span>
          </span>
        </param>
        <param name="taskName">
          <span data-ttu-id="c8127-119">Der Name der Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-119">The name of the task.</span>
          </span>
        </param>
        <param name="hostObject">
          <span data-ttu-id="c8127-120">Der Hostdienst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-120">The host service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-121">Registriert einen Hostdienst für das angegebene Aufgabe-Ziel-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-121">Register a host service for the given task/target pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8127-122">Überschreibt alle vorhandenen Dienste für den Host.</span><span class="sxs-lookup"><span data-stu-id="c8127-122">Overwrites any existing host service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeAffinity">
      <MemberSignature Language="C#" Value="public void SetNodeAffinity (string projectFile, Microsoft.Build.Execution.NodeAffinity nodeAffinity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNodeAffinity(string projectFile, valuetype Microsoft.Build.Execution.NodeAffinity nodeAffinity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.SetNodeAffinity(System.String,Microsoft.Build.Execution.NodeAffinity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNodeAffinity(System::String ^ projectFile, Microsoft::Build::Execution::NodeAffinity nodeAffinity);" />
      <MemberSignature Language="F#" Value="member this.SetNodeAffinity : string * Microsoft.Build.Execution.NodeAffinity -&gt; unit" Usage="hostServices.SetNodeAffinity (projectFile, nodeAffinity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="nodeAffinity" Type="Microsoft.Build.Execution.NodeAffinity" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="c8127-123">Die Projektdatei</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-123">The project file.</span>
          </span>
          <span data-ttu-id="c8127-124">Wenn auf String.Empty festgelegt, verwenden alle Projekte die angegebene Knotenaffinität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-124">If set to String.Empty, all projects will use the given node affinity.</span>
          </span>
          <span data-ttu-id="c8127-125">Wenn auf NULL festgelegt, werden alle Knotenaffinitäten gelöscht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-125">If set to null, all node affinities will be cleared.</span>
          </span>
        </param>
        <param name="nodeAffinity">
          <span data-ttu-id="c8127-126">Die Knotenaffinität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-126">The node affinity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-127">Legt die Knotenaffinität für die angegebene Projektdatei fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-127">Sets the node affinity for the given project file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterProject">
      <MemberSignature Language="C#" Value="public void UnregisterProject (string projectFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterProject(string projectFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.UnregisterProject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterProject (projectFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterProject(System::String ^ projectFullPath);" />
      <MemberSignature Language="F#" Value="member this.UnregisterProject : string -&gt; unit" Usage="hostServices.UnregisterProject projectFullPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFullPath">
          <span data-ttu-id="c8127-128">Der Pfad zu dem Projekt, dessen Registrierung aufgehoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-128">The path to the project to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8127-129">Hebt die Registrierung der Hostobjekte des Projekts auf, falls vorhanden, und entfernt alle zugeordneten Knotenaffinitäten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8127-129">Unregister the project's host objects, if any and remove any node affinities associated with it.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>