<Type Name="OutOfProcNode" FullName="Microsoft.Build.Execution.OutOfProcNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d755ca9c8253d970aa9578e7acfa2cfa53ab9f9f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86364184" /></Metadata><TypeSignature Language="C#" Value="public class OutOfProcNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutOfProcNode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.OutOfProcNode" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfProcNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfProcNode" />
  <TypeSignature Language="F#" Value="type OutOfProcNode = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Diese Klasse stellt eine Implementierung von Inode für Out-of-proc-Knoten dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfProcNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.OutOfProcNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfProcNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Konstruktor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfProcNode (string clientToServerPipeHandle, string serverToClientPipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientToServerPipeHandle, string serverToClientPipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.OutOfProcNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientToServerPipeHandle As String, serverToClientPipeHandle As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfProcNode(System::String ^ clientToServerPipeHandle, System::String ^ serverToClientPipeHandle);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.OutOfProcNode : string * string -&gt; Microsoft.Build.Execution.OutOfProcNode" Usage="new Microsoft.Build.Execution.OutOfProcNode (clientToServerPipeHandle, serverToClientPipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientToServerPipeHandle" Type="System.String" Index="0" FrameworkAlternate="msbuild-15-netcore" />
        <Parameter Name="serverToClientPipeHandle" Type="System.String" Index="1" FrameworkAlternate="msbuild-15-netcore" />
      </Parameters>
      <Docs>
        <param name="clientToServerPipeHandle">To be added.</param>
        <param name="serverToClientPipeHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeEngineShutdownReason Run (out Exception shutdownException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Build.Execution.NodeEngineShutdownReason Run([out] class System.Exception&amp; shutdownException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.OutOfProcNode.Run(System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (ByRef shutdownException As Exception) As NodeEngineShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::NodeEngineShutdownReason Run([Runtime::InteropServices::Out] Exception ^ % shutdownException);" />
      <MemberSignature Language="F#" Value="abstract member Run : Exception -&gt; Microsoft.Build.Execution.NodeEngineShutdownReason&#xA;override this.Run : Exception -&gt; Microsoft.Build.Execution.NodeEngineShutdownReason" Usage="outOfProcNode.Run shutdownException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeEngineShutdownReason</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shutdownException" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="shutdownException">Die Ausnahme, die das Schließen verursacht hat, falls vorhanden.</param>
        <summary>Startet den Knoten und verarbeitet Meldungen, bis der Knoten zum Schließen aufgefordert wird.
Geht davon aus, dass keine Wiederverwendung
Geht davon aus, dass niedrige Priorität deaktiviert ist.</summary>
        <returns>Der Grund für das Schließen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeEngineShutdownReason Run (bool enableReuse, out Exception shutdownException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, [out] class System.Exception&amp; shutdownException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.OutOfProcNode.Run(System.Boolean,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (enableReuse As Boolean, ByRef shutdownException As Exception) As NodeEngineShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::NodeEngineShutdownReason Run(bool enableReuse, [Runtime::InteropServices::Out] Exception ^ % shutdownException);" />
      <MemberSignature Language="F#" Value="member this.Run : bool * Exception -&gt; Microsoft.Build.Execution.NodeEngineShutdownReason" Usage="outOfProcNode.Run (enableReuse, shutdownException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeEngineShutdownReason</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableReuse" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="shutdownException" Type="System.Exception" RefType="out" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="enableReuse">Gibt an, ob dieser Knoten später wieder verwendet werden kann.</param>
        <param name="shutdownException">Die Ausnahme, die das Schließen verursacht hat, falls vorhanden.</param>
        <summary>Startet den Knoten und verarbeitet Meldungen, bis der Knoten zum Schließen aufgefordert wird.
Geht davon aus, dass niedrige Priorität deaktiviert ist.</summary>
        <returns>Der Grund für das Schließen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeEngineShutdownReason Run (bool enableReuse, bool lowPriority, out Exception shutdownException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, [out] class System.Exception&amp; shutdownException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.OutOfProcNode.Run(System.Boolean,System.Boolean,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (enableReuse As Boolean, lowPriority As Boolean, ByRef shutdownException As Exception) As NodeEngineShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, [Runtime::InteropServices::Out] Exception ^ % shutdownException);" />
      <MemberSignature Language="F#" Value="member this.Run : bool * bool * Exception -&gt; Microsoft.Build.Execution.NodeEngineShutdownReason" Usage="outOfProcNode.Run (enableReuse, lowPriority, shutdownException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeEngineShutdownReason</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableReuse" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
        <Parameter Name="lowPriority" Type="System.Boolean" Index="1" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
        <Parameter Name="shutdownException" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="enableReuse">Gibt an, ob dieser Knoten später wieder verwendet werden kann.</param>
        <param name="lowPriority">Gibt an, ob dieser Knoten mit niedriger Priorität ausgeführt werden soll.</param>
        <param name="shutdownException">Die Ausnahme, die das Schließen verursacht hat, falls vorhanden.</param>
        <summary>Startet den Knoten und verarbeitet Meldungen, bis der Knoten zum Schließen aufgefordert wird.</summary>
        <returns>Der Grund für das Schließen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
