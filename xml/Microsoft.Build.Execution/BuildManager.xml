<Type Name="BuildManager" FullName="Microsoft.Build.Execution.BuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1434b88f7e2e08b933a78548fee21f6e60d5e81" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36736695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BuildManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.BuildManager" />
  <TypeSignature Language="VB.NET" Value="Public Class BuildManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildManager : IDisposable" />
  <TypeSignature Language="F#" Value="type BuildManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="13a30-101">Diese Klasse ist der öffentliche Einstiegspunkt zum Ausführen von Builds.</span>
      <span class="sxs-lookup">
        <span data-stu-id="13a30-101">This class is the public entry point for executing builds.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13a30-102">Ruft einen neuen Build-Manager ab, ohne einen Namen anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-102">Gets a new build manager without specifying a name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuildManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-103">Ruft einen neuen Build-Manager ab, ohne einen Namen anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-103">Gets a new build manager without specifying a name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildManager (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuildManager(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.BuildManager : string -&gt; Microsoft.Build.Execution.BuildManager" Usage="new Microsoft.Build.Execution.BuildManager hostName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="13a30-104">Der Host für den Build-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-104">The host for the build manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-105">Erstellt einen neuen unbenannten Build-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-105">Creates a new unnamed build manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a30-106">Erstellen Sie einen neuen BuildManager.</span><span class="sxs-lookup"><span data-stu-id="13a30-106">Create a new BuildManager.</span></span> <span data-ttu-id="13a30-107">Erstellen mehrerer mit mehreren Prozessoren beachten Manager wird aufgrund von Konflikten im NodeManager nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="13a30-107">Creating multiple multi-processor aware build managers is not supported due to conflicts in the NodeManager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBuild">
      <MemberSignature Language="C#" Value="public void BeginBuild (Microsoft.Build.Execution.BuildParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBuild(class Microsoft.Build.Execution.BuildParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBuild (parameters As BuildParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBuild(Microsoft::Build::Execution::BuildParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BeginBuild : Microsoft.Build.Execution.BuildParameters -&gt; unit" Usage="buildManager.BeginBuild parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Build.Execution.BuildParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="13a30-108">Die Buildparameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-108">The build parameters.</span>
          </span>
          <span data-ttu-id="13a30-109">Ist möglicherweise NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-109">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-110">Bereitet den BuildManager auf den Empfang von Buildanforderungen vor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-110">Prepares the BuildManager to receive build requests.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13a30-111">Wird ausgelöst, wenn bereits ein Buildvorgang ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-111">Thrown if a build is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult Build (Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Execution.BuildRequestData requestData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildResult Build(class Microsoft.Build.Execution.BuildParameters parameters, class Microsoft.Build.Execution.BuildRequestData requestData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (parameters As BuildParameters, requestData As BuildRequestData) As BuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::BuildResult ^ Build(Microsoft::Build::Execution::BuildParameters ^ parameters, Microsoft::Build::Execution::BuildRequestData ^ requestData);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Execution.BuildParameters * Microsoft.Build.Execution.BuildRequestData -&gt; Microsoft.Build.Execution.BuildResult" Usage="buildManager.Build (parameters, requestData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Build.Execution.BuildParameters" />
        <Parameter Name="requestData" Type="Microsoft.Build.Execution.BuildRequestData" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="13a30-112">Buildparameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-112">Build parameters.</span>
          </span>
        </param>
        <param name="requestData">
          <span data-ttu-id="13a30-113">Buildanforderungsdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-113">Build request data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-114">Sendet eine einzelne Buildanforderung und blockiert, bis Ergebnisse verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-114">Submits a lone build request and blocks until results are available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a30-115">Gibt das Ergebnis des Builds zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-115">Returns the build result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a30-116">Hilfsmethode.</span><span class="sxs-lookup"><span data-stu-id="13a30-116">Convenience method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13a30-117">Wird ausgelöst, wenn bereits ein Buildvorgang ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-117">Thrown if a build is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildRequest">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult BuildRequest (Microsoft.Build.Execution.BuildRequestData requestData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildResult BuildRequest(class Microsoft.Build.Execution.BuildRequestData requestData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildRequest (requestData As BuildRequestData) As BuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::BuildResult ^ BuildRequest(Microsoft::Build::Execution::BuildRequestData ^ requestData);" />
      <MemberSignature Language="F#" Value="member this.BuildRequest : Microsoft.Build.Execution.BuildRequestData -&gt; Microsoft.Build.Execution.BuildResult" Usage="buildManager.BuildRequest requestData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestData" Type="Microsoft.Build.Execution.BuildRequestData" />
      </Parameters>
      <Docs>
        <param name="requestData">
          <span data-ttu-id="13a30-118">Buildanforderung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-118">Build request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-119">Sendet eine Buildanforderung und blockiert, bis die Ergebnisse verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-119">Submits a build request and blocks until the results are available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a30-120">Gibt das Ergebnis des Builds zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-120">Returns the build result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a30-121">Hilfsmethode.</span><span class="sxs-lookup"><span data-stu-id="13a30-121">Convenience method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13a30-122">Wird ausgelöst, wenn StartBuild nicht aufgerufen wurde oder EndBuild aufgerufen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-122">Thrown if StartBuild has not been called or if EndBuild has been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAllSubmissions">
      <MemberSignature Language="C#" Value="public void CancelAllSubmissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAllSubmissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.CancelAllSubmissions" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAllSubmissions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAllSubmissions();" />
      <MemberSignature Language="F#" Value="member this.CancelAllSubmissions : unit -&gt; unit" Usage="buildManager.CancelAllSubmissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-123">Bricht alle ausstehenden Übermittlungen asynchron ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-123">Cancels all outstanding submissions asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBuildManager">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Execution.BuildManager DefaultBuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Build.Execution.BuildManager DefaultBuildManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBuildManager As BuildManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Build::Execution::BuildManager ^ DefaultBuildManager { Microsoft::Build::Execution::BuildManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBuildManager : Microsoft.Build.Execution.BuildManager" Usage="Microsoft.Build.Execution.BuildManager.DefaultBuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13a30-124">Ruft die Singletoninstanz des Build-Managers ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-124">Gets the singleton instance of the Build Manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13a30-125">Gibt die Singletoninstanz des Build-Managers zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-125">Returns the singleton instance of the Build Manager.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="buildManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-126">Löscht den Build-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-126">Dispose of the build manager.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBuild">
      <MemberSignature Language="C#" Value="public void EndBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.EndBuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBuild();" />
      <MemberSignature Language="F#" Value="member this.EndBuild : unit -&gt; unit" Usage="buildManager.EndBuild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-127">Signalisiert, dass keine weiteren Buildanforderungen erwartet (oder zugelassen) werden und dass der BuildManager bereinigen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-127">Signals that no more build requests are expected (or allowed) and that the BuildManager may clean up.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a30-128">Dieser Aufruf blockiert, bis alle derzeit ausstehenden Anforderungen abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="13a30-128">This call blocks until all currently pending requests are complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13a30-129">Wird ausgelöst, wenn kein Buildvorgang ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-129">Thrown if there is no build in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BuildManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BuildManager ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="buildManager.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-130">Erstellungsmanager abschließen</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-130">Finalize the building manager.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectInstanceForBuild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance GetProjectInstanceForBuild (Microsoft.Build.Evaluation.Project project);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance GetProjectInstanceForBuild(class Microsoft.Build.Evaluation.Project project) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ GetProjectInstanceForBuild(Microsoft::Build::Evaluation::Project ^ project);" />
      <MemberSignature Language="F#" Value="member this.GetProjectInstanceForBuild : Microsoft.Build.Evaluation.Project -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="buildManager.GetProjectInstanceForBuild project" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="Microsoft.Build.Evaluation.Project" />
      </Parameters>
      <Docs>
        <param name="project">
          <span data-ttu-id="13a30-131">Das Projekt, für das eine Instanz abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-131">The project for which an instance should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-132">Ruft eine entsprechende ProjectInstance aus dem BuildManager-Cache zuvor erstellter Projekte ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-132">Gets a matching ProjectInstance from the BuildManager cache of previously built projects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a30-133">Gibt eine entsprechende ProjectInstance aus dem BuildManager-Cache zuvor erstellter Projekte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-133">Returns a matching ProjectInstance from the BuildManager cache of previously built projects.</span>
          </span>
          <span data-ttu-id="13a30-134">Wenn keine vorhanden ist, wird eine neue Projektinstanz aus dem angegebenen Projekt erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-134">If none exist, a new project instance will be created from the specified project.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PendBuildRequest">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildSubmission PendBuildRequest (Microsoft.Build.Execution.BuildRequestData requestData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildSubmission PendBuildRequest(class Microsoft.Build.Execution.BuildRequestData requestData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)" />
      <MemberSignature Language="VB.NET" Value="Public Function PendBuildRequest (requestData As BuildRequestData) As BuildSubmission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::BuildSubmission ^ PendBuildRequest(Microsoft::Build::Execution::BuildRequestData ^ requestData);" />
      <MemberSignature Language="F#" Value="member this.PendBuildRequest : Microsoft.Build.Execution.BuildRequestData -&gt; Microsoft.Build.Execution.BuildSubmission" Usage="buildManager.PendBuildRequest requestData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildSubmission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestData" Type="Microsoft.Build.Execution.BuildRequestData" />
      </Parameters>
      <Docs>
        <param name="requestData">
          <span data-ttu-id="13a30-135">Buildanforderungsdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-135">Build request data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a30-136">Sendet eine Buildanforderung an den aktuellen Build, startet sie jedoch nicht sofort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-136">Submits a build request to the current build but does not start it immediately.</span>
          </span>
          <span data-ttu-id="13a30-137">Ermöglicht dem Benutzer, die asynchrone Ausführung auszuführen oder auf die Übermittlungs-ID vor dem Ausführen der Anforderung zuzugreifen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-137">Allows the user to perform asynchronous execution or access the submission ID prior to executing the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a30-138">Gibt die Übermittlung zurück, die erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-138">Returns the submission that will be built.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13a30-139">Wird ausgelöst, wenn StartBuild nicht aufgerufen wurde oder EndBuild aufgerufen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-139">Thrown if StartBuild has not been called or if EndBuild has been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCaches">
      <MemberSignature Language="C#" Value="public void ResetCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCaches() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildManager.ResetCaches" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCaches ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCaches();" />
      <MemberSignature Language="F#" Value="member this.ResetCaches : unit -&gt; unit" Usage="buildManager.ResetCaches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a30-140">Löscht alle zwischengespeicherten Informationen des Build-Managers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a30-140">Clears out all of the build manager cached information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>