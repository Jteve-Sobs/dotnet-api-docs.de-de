<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32ab637180ae7105d9ee340eb6066a041803d229" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4cc6-101">Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.PrincipalPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4cc6-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span>
      </span>
      <span data-ttu-id="c4cc6-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4cc6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cc6-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> kann verwendet werden, um deklarativ fordern, dass Benutzer, die Ausführung des Codes zu einer bestimmten Rolle gehören oder authentifiziert wurden.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="c4cc6-104">Verwenden von <xref:System.Security.Permissions.PermissionState.Unrestricted> erstellt eine <xref:System.Security.Permissions.PrincipalPermission> mit <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> festgelegt `true` und <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> und <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> festgelegt `null`.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="c4cc6-105">Der Gültigkeitsbereich der Deklaration, die zulässig ist, hängt die <xref:System.Security.Permissions.SecurityAction> , der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="c4cc6-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> kann nicht auf Assemblyebene angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="c4cc6-107">Die Sicherheitsinformationen, die von einem Sicherheitsattribut deklariert wird in den Metadaten des Attributziels gespeichert und vom System zur Laufzeit erfolgt.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="c4cc6-108">Sicherheitsattribute werden nur für die deklarative Sicherheit verwendet.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="c4cc6-109">Verwenden Sie für imperative Sicherheit die entsprechende Berechtigungsklasse.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4cc6-110">Vor der Verwendung dieser Klasse, die bei Bedarf principal-Berechtigung müssen Sie die aktuelle Anwendungsdomäne principal Richtlinie festlegen, auf den Enumerationswert <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="c4cc6-111">Standardmäßig die Prinzipale-Richtlinie festgelegt ist, um <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="c4cc6-112">Wenn Sie nicht die Prinzipale-Richtlinie auf festlegen <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, eine Anforderung für Dienstprinzipalname Berechtigung schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="c4cc6-113">Der folgende Code sollte ausgeführt werden, bevor der Prinzipale Berechtigung gefordert wird: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="c4cc6-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cc6-114">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.Permissions.PrincipalPermissionAttribute> -Klasse deklarativ verwendet wird, zu fordern, dass der aktuelle Benutzer ein Administrator sein.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cc6-115">Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="c4cc6-116">Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="c4cc6-117">Standardmäßig verwenden Sie die Standardbenutzerrolle.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="c4cc6-118">Um Code ausführen zu können, der Administratorberechtigungen erfordert, müssen Sie zuerst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="c4cc6-119">Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten. </span><span class="sxs-lookup"><span data-stu-id="c4cc6-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="c4cc6-120">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4cc6-121">Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />-Klasse mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cc6-122">`Demand`, `InheritanceDemand`, und `LinkDemand` werden nur die Werte der <xref:System.Security.Permissions.SecurityAction> Bedeutung für dieses Attribut haben.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-122">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="c4cc6-123">Andere Aktionen gelten nicht für Berechtigungen, die nicht Codezugriffsberechtigungen sind.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-123">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cc6-124">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> Konstruktor gefordert wird, dass der aktuelle Benutzer ein Administrator sein.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-124">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cc6-125">Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-125">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="c4cc6-126">Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-126">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="c4cc6-127">Standardmäßig verwenden Sie die Standardbenutzerrolle.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-127">By default, you are in the standard user role.</span></span> <span data-ttu-id="c4cc6-128">Um Code ausführen zu können, der Administratorberechtigungen erfordert, müssen Sie zuerst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-128">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="c4cc6-129">Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten. </span><span class="sxs-lookup"><span data-stu-id="c4cc6-129">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4cc6-130">Ruft einen Wert ab, der angibt, ob der aktuelle Prinzipal vom zugrunde liegenden Anbieter rollenbasierter Sicherheit authentifiziert wurde, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-130">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4cc6-131">
            <see langword="true" />, wenn der aktuelle Prinzipal authentifiziert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-131">
              <see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4cc6-132">Erstellt eine neue <see cref="T:System.Security.Permissions.PrincipalPermission" /> und gibt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-132">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4cc6-133">Eine <see cref="T:System.Security.Permissions.PrincipalPermission" />, die diesem Attribut entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-133">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cc6-134">Diese Methode sollte nur durch das Sicherheitssystem nie von Anwendungscode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="c4cc6-135">Zum Zeitpunkt der Kompilierung konvertieren Attribute Sicherheitsdeklarationen in serialisierter Form in Metadaten an.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="c4cc6-136">Deklarative Sicherheit von Daten in den Metadaten werden über die Berechtigung, die Rückgabe dieser Methode erstellt, die dieses Attribut entspricht.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4cc6-137">Ruft den Namen der Identität ab, die dem aktuellen Prinzipal zugeordnet ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-137">Gets or sets the name of the identity associated with the current principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4cc6-138">Ein Name, der mit dem vom zugrunde liegenden rollenbasierten Sicherheitsanbieter bereitgestellten Namen verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-138">A name to match against that provided by the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cc6-139">Der Authentifizierungsanbieter ist Windows NT <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> ist identisch mit dem Benutzer Windows NT-Benutzername (im Format "Domänenname\benutzername").</span><span class="sxs-lookup"><span data-stu-id="c4cc6-139">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="c4cc6-140">Überprüfen Sie die Dokumentation des Hosts an, um zu bestimmen, welche Authentifizierungsanbieter verwendet und wie die Identität des aktuellen Prinzipals ermittelt.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-140">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4cc6-141">Ruft die Mitgliedschaft in einer angegebenen Sicherheitsrolle ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-141">Gets or sets membership in a specified security role.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4cc6-142">Der Name einer Rolle aus dem zugrunde liegenden Anbieter für rollenbasierte Sicherheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4cc6-142">The name of a role from the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cc6-143">Die verfügbaren Rollen werden basierend auf den Authentifizierungsanbieter verwendet vom Host unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-143">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="c4cc6-144">Wenn der Authentifizierungsanbieter Windows NT ist, sind die Rollen Windows NT-Benutzergruppen (in der Form "Domänenname\gruppenname").</span><span class="sxs-lookup"><span data-stu-id="c4cc6-144">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="c4cc6-145">Überprüfen Sie die Dokumentation des Hosts an, um zu bestimmen, welche Authentifizierungsanbieter verwendet wird und welchen Rollen Benutzer angehören können.</span><span class="sxs-lookup"><span data-stu-id="c4cc6-145">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>