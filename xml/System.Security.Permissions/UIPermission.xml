<Type Name="UIPermission" FullName="System.Security.Permissions.UIPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="839b8a486a082d7722a534da0be4bcd096cb57aa" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70709045" /></Metadata><TypeSignature Language="C#" Value="public sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UIPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UIPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UIPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type UIPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert die Berechtigungen für Benutzeroberflächen und die Zwischenablage. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zeichnungs-und Benutzereingabe Ereignisse in Windows sind Benutzeroberflächen.  
  
 Die Berechtigung zur Verwendung von Windows kann eines der folgenden sein: uneingeschränkt, eingeschränkt auf <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>, nur <xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows>oder keine Fenster Zeichnung oder Benutzereingabe-Ereignis Zugriff zulässig. <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>und <xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows> sind in Titel und Größe eingeschränkt, um ein mögliches Spoofing durch potenziell schädlichen Code zu verhindern.  
  
 Die Berechtigung, die Zwischenablage zu verwenden, kann eines der folgenden sein: uneingeschränkt, schreibgeschützt oder kein Zwischenablage Zugriff zulässig. Durch die Einfügungs Einschränkung wird verhindert, dass potenziell schädliche Anwendungen Daten aus der Zwischenablage ohne Zustimmung des Benutzers übernehmen und gleichzeitig die Ausschneide-, Kopier-und Einfügevorgänge zulassen, wenn Sie vom Benutzer über Tastaturbefehle initiiert werden.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UIPermissionAttribute" />
    <altmember cref="T:System.Security.Permissions.UIPermissionWindow" />
    <altmember cref="T:System.Security.Permissions.UIPermissionClipboard" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.UIPermission" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UIPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UIPermission" Usage="new System.Security.Permissions.UIPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Einer der Enumerationswerte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.UIPermission" />-Klasse, wobei angegeben werden kann, ob für die Instanz eine vollständig eingeschränkte oder eine uneingeschränkte Berechtigung gilt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt entweder die vollständige Einschränkung`None`() oder `Unrestricted` die Form der Berechtigung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Security.Permissions.UIPermission.%23ctor%2A> -Konstruktors veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#7)]
 [!code-csharp[System.Security.Permissions.UIPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#7)]
 [!code-vb[System.Security.Permissions.UIPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="state" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionClipboard clipboardFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clipboardFlag As UIPermissionClipboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPermission(System::Security::Permissions::UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UIPermission : System.Security.Permissions.UIPermissionClipboard -&gt; System.Security.Permissions.UIPermission" Usage="new System.Security.Permissions.UIPermission clipboardFlag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clipboardFlag" Type="System.Security.Permissions.UIPermissionClipboard" />
      </Parameters>
      <Docs>
        <param name="clipboardFlag">Einer der Enumerationswerte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.UIPermission" />-Klasse mit den Berechtigungen für die Zwischenablage und ohne Zugriff auf Fenster.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Festlegen der Zwischenablage-und Fenster Berechtigungen den-Konstruktor, der Parameter für beides annimmt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionClipboard%29?displayProperty=nameWithType> -Konstruktors veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#9)]
 [!code-csharp[System.Security.Permissions.UIPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#9)]
 [!code-vb[System.Security.Permissions.UIPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="clipboardFlag" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.UIPermissionClipboard" />-Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionWindow windowFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (windowFlag As UIPermissionWindow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPermission(System::Security::Permissions::UIPermissionWindow windowFlag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UIPermission : System.Security.Permissions.UIPermissionWindow -&gt; System.Security.Permissions.UIPermission" Usage="new System.Security.Permissions.UIPermission windowFlag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="windowFlag" Type="System.Security.Permissions.UIPermissionWindow" />
      </Parameters>
      <Docs>
        <param name="windowFlag">Einer der Enumerationswerte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.UIPermission" />-Klasse mit den Berechtigungen für Fenster und ohne Zugriff auf die Zwischenablage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Festlegen der Zwischenablage-und Fenster Berechtigungen den-Konstruktor, der Parameter für beides annimmt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%29?displayProperty=nameWithType> -Konstruktors veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#8)]
 [!code-csharp[System.Security.Permissions.UIPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#8)]
 [!code-vb[System.Security.Permissions.UIPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="windowFlag" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.UIPermissionWindow" />-Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionWindow windowFlag, valuetype System.Security.Permissions.UIPermissionClipboard clipboardFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (windowFlag As UIPermissionWindow, clipboardFlag As UIPermissionClipboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPermission(System::Security::Permissions::UIPermissionWindow windowFlag, System::Security::Permissions::UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UIPermission : System.Security.Permissions.UIPermissionWindow * System.Security.Permissions.UIPermissionClipboard -&gt; System.Security.Permissions.UIPermission" Usage="new System.Security.Permissions.UIPermission (windowFlag, clipboardFlag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="windowFlag" Type="System.Security.Permissions.UIPermissionWindow" />
        <Parameter Name="clipboardFlag" Type="System.Security.Permissions.UIPermissionClipboard" />
      </Parameters>
      <Docs>
        <param name="windowFlag">Einer der Enumerationswerte.</param>
        <param name="clipboardFlag">Einer der Enumerationswerte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.UIPermission" />-Klasse mit den angegebenen Berechtigungen für Fenster und Zwischenablage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%2CSystem.Security.Permissions.UIPermissionClipboard%29?displayProperty=nameWithType> -Konstruktors veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.UIPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#10)]
 [!code-vb[System.Security.Permissions.UIPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="windowFlag" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.UIPermissionWindow" />-Wert.  
  
- oder - 
Der <paramref name="clipboardFlag" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.UIPermissionClipboard" />-Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.UIPermissionClipboard Clipboard" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UIPermission.Clipboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Clipboard As UIPermissionClipboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::UIPermissionClipboard Clipboard { System::Security::Permissions::UIPermissionClipboard get(); void set(System::Security::Permissions::UIPermissionClipboard value); };" />
      <MemberSignature Language="F#" Value="member this.Clipboard : System.Security.Permissions.UIPermissionClipboard with get, set" Usage="System.Security.Permissions.UIPermission.Clipboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.UIPermissionClipboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den durch die Berechtigung dargestellten Zwischenablagezugriff ab oder legt ihn fest.</summary>
        <value>Einer der <see cref="T:System.Security.Permissions.UIPermissionClipboard" />-Werte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="uIPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
        <returns>Eine Kopie der aktuellen Berechtigung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Kopie der Berechtigung stellt denselben Zugriff auf Ressourcen wie die ursprüngliche Berechtigung dar.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.Copy%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.UIPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#5)]
 [!code-vb[System.Security.Permissions.UIPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="uIPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">Die zum Wiederherstellen der Berechtigung verwendete XML-Codierung.</param>
        <summary>Stellt eine Berechtigung mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.FromXml%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]
 [!code-csharp[System.Security.Permissions.UIPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]
 [!code-vb[System.Security.Permissions.UIPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="esd" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="esd" />-Parameter ist kein gültiges Berechtigungselement.  
  
- oder - 
Die Versionsnummer des <paramref name="esd" />-Parameters ist nicht gültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="uIPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss vom selben Typ wie die aktuelle Berechtigung sein.</param>
        <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
        <returns>Eine neue Berechtigung, die die Schnittmenge der aktuellen und der angegebenen Berechtigung darstellt. Diese neue Berechtigung ist <see langword="null" />, wenn die Schnittmenge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den Satz von Vorgängen beschreibt, den beide gemeinsam beschreiben. Dabei handelt es sich insbesondere um die geringsten Werte von <xref:System.Security.Permissions.UIPermissionWindow> und <xref:System.Security.Permissions.UIPermissionClipboard> aus den Werten der aktuellen Berechtigung und der angegebenen Berechtigung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.Intersect%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.UIPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#4)]
 [!code-vb[System.Security.Permissions.UIPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="uIPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Eine Berechtigung, für die überprüft werden soll, ob sie eine Teilmenge einer anderen Berechtigung ist. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
        <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die aktuelle Berechtigung ist eine Teilmenge der angegebenen Berechtigung, wenn alle Anforderungen, die für die aktuelle Berechtigung erfolgreich sind, auch für die angegebene Berechtigung erfolgreich sind. Das heißt, die angegebene Berechtigung enthält mindestens die Berechtigungen, die in der Teilmenge enthalten sind. Damit <xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> zurückgegeben `true`werden kann, <xref:System.Security.Permissions.UIPermissionWindow> müssen <xref:System.Security.Permissions.UIPermissionClipboard> der-Wert und der-Wert der aktuellen Berechtigung gleich oder kleiner als die Werte der angegebenen Berechtigung sein.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.UIPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]
 [!code-vb[System.Security.Permissions.UIPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="uIPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Berechtigung uneingeschränkt ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Berechtigung uneingeschränkt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine uneingeschränkte Berechtigung stellt den Zugriff auf alle von der Berechtigung geschützten Ressourcen dar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="uIPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung der Berechtigung und ihres aktuellen Zustands.</summary>
        <returns>Eine XML-Codierung der Berechtigung, einschließlich aller Zustandsinformationen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.ToXml%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]
 [!code-csharp[System.Security.Permissions.UIPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]
 [!code-vb[System.Security.Permissions.UIPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="uIPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Diese muss von demselben Typ wie die aktuelle Berechtigung sein.</param>
        <summary>Erstellt eine Berechtigung, die die Union der Berechtigung und der angegebenen Berechtigung darstellt.</summary>
        <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ergebnis eines <xref:System.Security.Permissions.UIPermission.Union%2A> Aufrufes ist eine Berechtigung, die alle Vorgänge darstellt, die durch die aktuelle Berechtigung dargestellt werden, sowie alle Vorgänge, die durch die angegebene Berechtigung dargestellt werden. Dabei handelt es sich um die meisten geltenden Werte von <xref:System.Security.Permissions.UIPermissionWindow> und <xref:System.Security.Permissions.UIPermissionClipboard> aus den Werten der aktuellen Berechtigung und der angegebenen Berechtigung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Verhalten <xref:System.Security.Permissions.UIPermission.Union%2A> der-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
> [!NOTE]
>  Das Codebeispiel soll das Verhalten der-Methode zeigen, nicht um deren Verwendung zu veranschaulichen. Im Allgemeinen werden die Methoden der Berechtigungs Klassen von der Sicherheitsinfrastruktur verwendet. Sie werden in der Regel nicht in-Anwendungen verwendet.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#3)]
 [!code-csharp[System.Security.Permissions.UIPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#3)]
 [!code-vb[System.Security.Permissions.UIPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.UIPermissionWindow Window { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.UIPermissionWindow Window" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UIPermission.Window" />
      <MemberSignature Language="VB.NET" Value="Public Property Window As UIPermissionWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::UIPermissionWindow Window { System::Security::Permissions::UIPermissionWindow get(); void set(System::Security::Permissions::UIPermissionWindow value); };" />
      <MemberSignature Language="F#" Value="member this.Window : System.Security.Permissions.UIPermissionWindow with get, set" Usage="System.Security.Permissions.UIPermission.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.UIPermissionWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den durch die Berechtigung dargestellten Fensterzugriff ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Security.Permissions.UIPermissionWindow" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung <xref:System.Security.Permissions.UIPermission.Window%2A> der-Eigenschaft veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Permissions.UIPermission> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Permissions.UIPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.UIPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]
 [!code-vb[System.Security.Permissions.UIPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
