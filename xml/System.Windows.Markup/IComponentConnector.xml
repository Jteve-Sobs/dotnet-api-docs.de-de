<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcc9c2ec81fc3ba9d6811339b819af61c85fafc7" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70451286" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Unterstützung für Markupkompilierung und benannte XAML-Elemente sowie zum Anfügen von Ereignishandlern an sie bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird intern von <xref:System.Windows.Baml2006.Baml2006Reader>verwendet.  
  
 Implementierungen von <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> sind im Rahmen der Infrastruktur, die von Frameworks oder Technologien bereitgestellt wird, die XAML in Kombination mit Anwendungs-und Programmier Modellen verwenden, weitgehend observabel. Wenn Sie z. b. die generierten Klassen für XAML-Stamm Elemente in WPF-Seiten und-Anwendungen betrachten, <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> werden Sie in der Ausgabe definiert sehen. Diese Methode ist auch in der kompilierten Assembly vorhanden und spielt eine Rolle im WPF-Anwendungsmodell zum Laden des XAML-UI-Inhalts zum Zeitpunkt der XAML-Analyse. Weitere Informationen zur WPF-Integration des `InitializeComponent` Konzepts finden Sie unter Übersicht über die [Anwendungs Verwaltung](~/docs/framework/wpf/app-development/application-management-overview.md) oder [Code-Behind und XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 In früheren Versionen des .NET Framework war diese Schnittstelle in der WPF-spezifischen Assembly Windows Base vorhanden. In  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] befindet sich in  der System. XAML-Assembly. <xref:System.Windows.Markup.IComponentConnector> sein. Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Ein Fehler bei der <xref:System.Windows.Markup.IComponentConnector> Auflösung während eines versuchten Builds ist oft ein Indikator dafür, dass Sie das WPF-Projekt nicht ordnungsgemäß aktualisiert haben. Insbesondere verweist das Projekt nicht auf die System. XAML-Assembly für ein Projekt, das auf abzielt [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Führen Sie die `devenv /upgrade` Option für das Projekt aus, oder passen Sie die projekterassemblyverweise auf andere Weise an, sodass sich System. XAML in der Verweis Liste befindet.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="target" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionId">Ein Bezeichnertoken zur Unterscheidung von Aufrufen.</param>
        <param name="target">Das Ziel, mit dem Ereignisse und Namen verbunden werden sollen.</param>
        <summary>Fügt Ereignisse und Namen an kompilierten Inhalt an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector>wird intern von <xref:System.Windows.Baml2006.Baml2006Reader>verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt die kompilierte Seite einer Komponente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector>wird intern von <xref:System.Windows.Baml2006.Baml2006Reader>verwendet.  
  
 Implementierungen von <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> sind im Rahmen der Infrastruktur, die von Frameworks oder Technologien bereitgestellt wird, die XAML in Kombination mit Anwendungs-und Programmier Modellen verwenden, weitgehend observabel. Wenn Sie z. b. die generierten Klassen für XAML-Stamm Elemente in WPF-Seiten und-Anwendungen betrachten, <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> werden Sie in der Ausgabe definiert sehen. Diese Methode ist auch in der kompilierten Assembly vorhanden und spielt eine Rolle im WPF-Anwendungsmodell zum Laden des XAML-UI-Inhalts zum Zeitpunkt der XAML-Analyse. Weitere Informationen zur WPF-Integration des `InitializeComponent` Konzepts finden Sie unter Übersicht über die [Anwendungs Verwaltung](~/docs/framework/wpf/app-development/application-management-overview.md) oder [Code-Behind und XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
