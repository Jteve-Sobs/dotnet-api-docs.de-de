<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29b9eb9fa99fed54bf96e19b877f4570f609f006" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962965" /></Metadata><TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="82571-101">Definiert einen Verfahrensvertrag für den Zugriff auf Elemente in einem bestimmten XAML-Namescope und für das Erzwingen der Eindeutigkeit von Namen in diesem XAML-Namescope.</span><span class="sxs-lookup"><span data-stu-id="82571-101">Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82571-102">Diese Schnittstelle wird von Klassen implementiert, die über untergeordnete Elemente verfügen, die wiederverwendet werden, über die Vorlage oder die defer-Metapher vorgesehen sind.</span><span class="sxs-lookup"><span data-stu-id="82571-102">This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</span></span> <span data-ttu-id="82571-103">Vorlagen, Factorys und ähnliche Konstrukte müssen eindeutige XAML-Namescopes, die aus einem Diagramm Hauptobjekt getrennt sind und die Stamm-XAML.</span><span class="sxs-lookup"><span data-stu-id="82571-103">Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</span></span> <span data-ttu-id="82571-104">Im hier gilt, dass es sollten keine Namenskonflikte sein, wenn Objekte erstellt, die von dieser untergeordneten Elemente einer Anwendung Objektdiagramm eingeführt werden, und DOM-Operationen und XAML-Verweis-Techniken, die auf den Namensbezeichner basieren auf Namen verlassen können die Eindeutigkeit in jeder XAML-Namescope.</span><span class="sxs-lookup"><span data-stu-id="82571-104">The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</span></span>  
  
 <span data-ttu-id="82571-105">In früheren Versionen von .NET Framework war diese Schnittstelle in der Assembly "WPF-spezifische" WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="82571-105">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="82571-106">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> befindet sich in der System.Xaml-Assembly.</span><span class="sxs-lookup"><span data-stu-id="82571-106">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> is in the System.Xaml assembly.</span></span> <span data-ttu-id="82571-107">Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="82571-107">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="82571-108">Hinweise zur WPF-Verwendung</span><span class="sxs-lookup"><span data-stu-id="82571-108">WPF Usage Notes</span></span>  
 <span data-ttu-id="82571-109">Diese Schnittstelle wird von der WPF-Klasse implementiert <xref:System.Windows.NameScope>.</span><span class="sxs-lookup"><span data-stu-id="82571-109">This interface is implemented by the WPF class <xref:System.Windows.NameScope>.</span></span> <span data-ttu-id="82571-110">Die meisten Vorgänge der XAML-Namescope in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] mithilfe der <xref:System.Windows.NameScope> -Instanzen, sondern auch Informationen wird gelegentlich übermittelt, intern mit <xref:System.Windows.Markup.INameScope> verweisen.</span><span class="sxs-lookup"><span data-stu-id="82571-110">Most XAML namescope operations in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operate by using <xref:System.Windows.NameScope> instances, but information is occasionally communicated internally by using <xref:System.Windows.Markup.INameScope> references.</span></span>  
  
 <span data-ttu-id="82571-111">Beispiele für WPF-Klassen, die eine Factory oder zurückstellen Metapher, die zusammen mit Ihrer Darstellung in XAML sind <xref:System.Windows.Style> und <xref:System.Windows.FrameworkTemplate>.</span><span class="sxs-lookup"><span data-stu-id="82571-111">Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <xref:System.Windows.Style> and <xref:System.Windows.FrameworkTemplate>.</span></span> <span data-ttu-id="82571-112">Diese Implementierungen beruhen zumeist auf die explizite Versionen der Schnittstellenmethoden verfügbar sind, aus der <xref:System.Windows.NameScope> Klasse.</span><span class="sxs-lookup"><span data-stu-id="82571-112">These implementations usually rely on the explicit versions of the interface methods available from the <xref:System.Windows.NameScope> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48"><span data-ttu-id="82571-113">X: Name-Attribut</span><span class="sxs-lookup"><span data-stu-id="82571-113">x:Name Attribute</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="82571-114">Der Namensbezeichner für das angeforderte Objekt.</span><span class="sxs-lookup"><span data-stu-id="82571-114">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="82571-115">Gibt ein Objekt zurück, das den bereitgestellten kennzeichnenden Namen aufweist.</span><span class="sxs-lookup"><span data-stu-id="82571-115">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="82571-116">Das ggf. gefundene Objekt.</span><span class="sxs-lookup"><span data-stu-id="82571-116">The object, if found.</span></span> <span data-ttu-id="82571-117">Gibt <see langword="null" /> zurück, wenn kein Objekt dieses Namens gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="82571-117">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82571-118">Gültige Zeichenfolgen im XAML-Markup müssen die Anforderungen finden Sie im entsprechen [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="82571-118">Valid name strings in XAML markup must match the requirements documented in [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48"><span data-ttu-id="82571-119">X: Name-Attribut</span><span class="sxs-lookup"><span data-stu-id="82571-119">x:Name Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="scopedElement" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="82571-120">Der zu registrierende Name.</span><span class="sxs-lookup"><span data-stu-id="82571-120">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="82571-121">Das bestimmte Element, auf das der bereitgestellte <paramref name="name" /> verweist.</span><span class="sxs-lookup"><span data-stu-id="82571-121">The specific element that the provided <paramref name="name" /> refers to.</span></span></param>
        <summary><span data-ttu-id="82571-122">Registriert den bereitgestellten Namen im aktuellen XAML-Namescope.</span><span class="sxs-lookup"><span data-stu-id="82571-122">Registers the provided name into the current XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82571-123">Doppelte Namen in einem XAML-Namescope sind nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="82571-123">Duplicate names in a XAML namescope are not permitted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="82571-124">Erlauben Sie keine doppelte Namen registriert werden.</span><span class="sxs-lookup"><span data-stu-id="82571-124">Do not permit duplicate names to be registered.</span></span> <span data-ttu-id="82571-125">Wenn die Eingabe <paramref name="name" /> ist bereits mit einem vorhandenen Element in der internen Darstellung der XAML-Namescope zugewiesen (selbst wenn es sich um einen identisch ist <paramref name="scopedElement" />), löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="82571-125">If the input <paramref name="name" /> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <paramref name="scopedElement" />), throw an exception.</span></span>  
  
<span data-ttu-id="82571-126">Berücksichtigen Sie auch eine Ausnahme auszulösen, wenn der angegebene Name nicht entspricht [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="82571-126">Also consider throwing an exception if the provided name does not conform to [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span></para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="82571-127">Der Name, dessen Registrierung aufgehoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82571-127">The name to unregister.</span></span></param>
        <summary><span data-ttu-id="82571-128">Hebt die Registrierung des bereitgestellten Namens im aktuellen XAML-Namescope auf.</span><span class="sxs-lookup"><span data-stu-id="82571-128">Unregisters the provided name from the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="82571-129">Wenn der Eingabename nicht vorhanden ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="82571-129">If the input name does not exist, throw an exception.</span></span>  
  
<span data-ttu-id="82571-130">Sie sollten den Namen und das zuvor registrierte-Element, auf die, das Sie aus der Auflistung-Darstellung des XAML-Namescope, verweist, entfernen, sodass Sie der gleiche Namen möglicherweise erneut in der Zukunft registriert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="82571-130">You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</span></span></para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>