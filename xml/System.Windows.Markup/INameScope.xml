<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e264d8479dec6164dddc623658b41a77d5ae6fd2" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76955984" /></Metadata><TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert einen Vertrag dafür, wie in einem bestimmten XAML-Namensbereich auf Namen von Elementen zugegriffen werden soll und wie die Eindeutigkeit von Namen innerhalb dieses XAML-Namensbereichs durchgesetzt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird von Klassen implementiert, die über untergeordnete Elemente verfügen, die über die Vorlage wieder verwendet werden sollen. Vorlagen, Factorys und ähnliche Konstrukte müssen über eindeutige XAML-Namescopes verfügen, die von einem Hauptobjekt Diagramm und einem XAML-Stammverzeichnis getrennt sind. Der Grund dafür ist, dass es keine Namenskonflikte geben sollte, wenn Objekte, die aus diesen untergeordneten Elementen erstellt wurden, in das Objekt Diagramm einer Anwendung eingefügt werden, sodass Dom-Vorgänge und XAML-Referenz Techniken, die auf dem namens Bezeichner basieren, auf den Namen zurückgreifen können. Eindeutigkeit in den einzelnen XAML-Namescope.  
  
 In früheren Versionen des .NET Framework war diese Schnittstelle in der WPF-spezifischen Assembly Windows Base vorhanden. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]befindet sich <xref:System.Windows.Markup.INameScope> in der Assembly "System. XAML". Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Diese Schnittstelle wird von der WPF-Klasse <xref:System.Windows.NameScope>implementiert. Die meisten XAML-Namescope-Vorgänge in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] mithilfe von <xref:System.Windows.NameScope> Instanzen ausgeführt werden. Informationen werden jedoch gelegentlich intern über <xref:System.Windows.Markup.INameScope> Verweise kommuniziert.  
  
 Beispiele für WPF-Klassen, die eine Factory oder eine Verzögerungs-Metapher zusammen mit der XAML-Darstellung verwenden, sind <xref:System.Windows.Style> und <xref:System.Windows.FrameworkTemplate>. Diese Implementierungen basieren in der Regel auf den expliziten Versionen der Schnittstellen Methoden, die in der <xref:System.Windows.NameScope>-Klasse verfügbar sind.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">x:Name-Attribut</related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Namensbezeichner für das angeforderte Objekt.</param>
        <summary>Gibt ein Objekt zurück, das über den bereitgestellten kennzeichnenden Namen verfügt.</summary>
        <returns>Das Objekt, falls gefunden. Gibt <see langword="null" /> zurück, wenn kein Objekt mit diesem Namen gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gültige namens Zeichenfolgen im XAML-Markup müssen den in der [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md)dokumentierten Anforderungen entsprechen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">x:Name-Attribut</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der zu registrierende Name.</param>
        <param name="scopedElement">Das bestimmte Element, auf das der <paramref name="name" /> verweist.</param>
        <summary>Registriert den angegebenen Namen beim aktuellen XAML-Namensbereich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Doppelte Namen in einem XAML-Namescope sind nicht zulässig.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Es ist nicht zulässig, doppelte Namen zu registrieren. Wenn die Eingabe <paramref name="name" /> bereits einem vorhandenen Element in der internen Auflistungs Darstellung des XAML-Namescope zugewiesen ist (auch wenn Sie identisch mit <paramref name="scopedElement" />ist), lösen Sie eine Ausnahme aus.  
  
Sie sollten auch eine Ausnahme auslösen, wenn der angegebene Name nicht der [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md)entspricht.</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, dessen Registrierung aufgehoben werden soll.</param>
        <summary>Hebt die Registrierung des angegebenen Namens beim aktuellen XAML-Namensbereich auf.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Wenn der Eingabe Name nicht vorhanden ist, lösen Sie eine Ausnahme aus.  
  
 Sie sollten den Namen und das zuvor registrierte Element, auf das verwiesen wird, aus der Auflistungs Darstellung des XAML-Namescope entfernen, sodass derselbe Name in Zukunft möglicherweise erneut registriert wird.</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>
