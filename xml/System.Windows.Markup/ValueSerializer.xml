<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="510b9e1e2a58ae70cc3dfc373fa2996bfa3394db" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76944595" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f08f-101">Abstrakte Klasse, die das Konvertierungsverhalten für die Serialisierung aus einer Objektdarstellung definiert.</span><span class="sxs-lookup"><span data-stu-id="5f08f-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-102">Die Zeichenfolge, die ein Konverter für die Serialisierung zurückgibt, muss weniger Verlust sein, und der Konverter muss immer dieselbe Zeichenfolge für einen bestimmten Wert zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="5f08f-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="5f08f-103">Wenn ein Typkonverter (abgeleitet von <xref:System.ComponentModel.TypeConverter>) diese Anforderungen in seinen `ConvertTo`-Implementierungen für die Zeichen folgen Ausgabe nicht erfüllt, muss ein benutzerdefinierter <xref:System.Windows.Markup.ValueSerializer> deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="5f08f-104">Der <xref:System.Windows.Markup.ValueSerializer> muss die Anforderungen erfüllen, oder dem Typ muss eine NULL-<xref:System.Windows.Markup.ValueSerializer> zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="5f08f-105">Ein <xref:System.Windows.Markup.ValueSerializer> wird einem Typ durch Anwenden des <xref:System.Windows.Markup.ValueSerializerAttribute> Attributs zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="5f08f-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="5f08f-106">Ein NULL-<xref:System.Windows.Markup.ValueSerializer> gibt an, dass der Typkonverter für Konvertierungen von Konvertierungen aus dem Objekt Diagramm ignoriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f08f-107">Die Implementierung von <xref:System.Windows.Markup.ValueSerializer> sollte das Auslösen von Ausnahmen vermeiden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="5f08f-108">Alle ausgelösten Ausnahmen könnten die Serialisierung beenden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="5f08f-109"><xref:System.Windows.Markup.IValueSerializerContext> für einen <xref:System.Windows.Markup.ValueSerializer> und seine APIs entsprechen <xref:System.ComponentModel.ITypeDescriptorContext> für eine <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5f08f-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="5f08f-110">Tatsächlich erbt <xref:System.Windows.Markup.IValueSerializerContext> <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="5f08f-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="5f08f-111">Wenn eine <xref:System.Windows.Markup.ValueSerializer> abgeleitete Klassen-API aufgerufen wird, übergibt der Aufrufer (in der Regel ein Serialisierungsprogramme) einen Kontext, der möglicherweise bestimmte Dienste bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="5f08f-112">Aufgrund der allgemeinen Anleitung, dass ein <xref:System.Windows.Markup.ValueSerializer> keine Ausnahmen auslösen darf.</span><span class="sxs-lookup"><span data-stu-id="5f08f-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="5f08f-113">Wenn ein bestimmter Dienst nicht aus dem Kontext zurückgegeben wird, müssen auch keine Ausnahmen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="5f08f-114">In früheren Versionen des .NET Framework war diese Klasse in der WPF-spezifischen Assembly Windows Base vorhanden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="5f08f-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]befindet sich <xref:System.Windows.Markup.ValueSerializer> in der Assembly "System. XAML".</span><span class="sxs-lookup"><span data-stu-id="5f08f-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="5f08f-116">Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="5f08f-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f08f-117">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-118">Der Hauptteil dieses Konstruktors ist leer. die <xref:System.Windows.Markup.ValueSerializer>-Klasse enthält keine Werte, für die eine Initialisierung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-119">Die Zeichenfolge, die für die Konvertierung ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-120">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-121">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob die angegebene <see cref="T:System.String" /> in eine Instanz des Typs konvertiert werden kann, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="5f08f-122"><see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-123">Die Basisimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-124">Das Objekt, das für die Konvertierung ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-125">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-126">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob das angegebene Objekt in eine <see cref="T:System.String" /> konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="5f08f-127"><see langword="true" />, wenn der <paramref name="value" /> in eine <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false." />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-128">Die Basisimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-129">Die zu konvertierende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5f08f-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-130">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-131">Konvertiert beim Überschreiben in einer abgeleiteten Klasse eine <see cref="T:System.String" /> in eine Instanz des Typs, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="5f08f-132">Eine neue Instanz des Typs, der von der Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> auf Basis des bereitgestellten <paramref name="value" />s unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-133">Die Basis Implementierung löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="5f08f-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5f08f-134"><paramref name="value" /> kann nicht konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5f08f-135">Vermeiden Sie das Auslösen von Ausnahmen aus-Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="5f08f-136">Siehe <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-137">Das in eine Zeichenfolge zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-138">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-139">Konvertiert das angegebene Objekt beim Überschreiben in einer abgeleiteten Klasse in eine <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="5f08f-140">Eine Zeichenfolgendarstellung des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="5f08f-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-141">Die Basis Implementierung löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="5f08f-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5f08f-142"><paramref name="value" /> kann nicht konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5f08f-143">Vermeiden Sie das Auslösen von Ausnahmen aus-Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="5f08f-144">Siehe <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5f08f-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-145">Das Objekt, das nicht konvertiert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="5f08f-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="5f08f-146">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="5f08f-147">Ein <see cref="T:System.Exception" />-Objekt für die auszulösende Ausnahme, wenn keine <see langword="ConvertFrom" />-Konvertierung ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-148">Das tatsächliche `throw`-Schlüsselwort wird von dieser Methode nicht aufgerufen, daher wird die typische Verwendung `throw GetConvertFromException` (mit den angegebenen Parametern).</span><span class="sxs-lookup"><span data-stu-id="5f08f-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="5f08f-149">Die spezifische Ausnahme, die zurückgegeben wird, ist <xref:System.InvalidOperationException>, wobei `value` in der Ausnahme Meldung übermittelt wurde.</span><span class="sxs-lookup"><span data-stu-id="5f08f-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="5f08f-150">Das Verwendungs Muster ist das gleiche wie bei Ausnahme Dienstprogrammen in <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5f08f-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-151">Das Objekt, das nicht konvertiert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="5f08f-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5f08f-152">Ein Typ, der die Art der angestrebten Konvertierung darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="5f08f-153">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="5f08f-154">Ein <see cref="T:System.Exception" />-Objekt für die auszulösende Ausnahme, wenn keine <see langword="ConvertTo" />-Konvertierung ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-155">Das tatsächliche `throw`-Schlüsselwort wird von dieser Methode nicht aufgerufen, daher ist die typische Verwendung `throw GetConvertToException` (mit `value` Parameter).</span><span class="sxs-lookup"><span data-stu-id="5f08f-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="5f08f-156">Die spezifische Ausnahme, die zurückgegeben wird, ist <xref:System.InvalidOperationException>, wobei `value` in der Ausnahme Meldung übermittelt wurde.</span><span class="sxs-lookup"><span data-stu-id="5f08f-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="5f08f-157">Das Verwendungs Muster ist das gleiche wie bei Ausnahme Dienstprogrammen in <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5f08f-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f08f-158">Ruft den <see cref="T:System.Windows.Markup.ValueSerializer" /> für ein Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="5f08f-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="5f08f-159">Der CLR-Eigenschaftendeskriptor für die Eigenschaft, die serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="5f08f-160">Ruft den <see cref="T:System.Windows.Markup.ValueSerializer" /> ab, der für eine Eigenschaft deklariert wurde, indem ein CLR-Eigenschaftendeskriptor für die Eigenschaft übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="5f08f-161">Das Serialisierungsprogramm, das der angegebenen Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="5f08f-162">Gibt möglicherweise <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-163">Eine <xref:System.Windows.Markup.ValueSerializer> für eine Eigenschaft oder für einen Typ, der als Wert für eine Eigenschaft verwendet wird, wird durch Anwenden des <xref:System.Windows.Markup.ValueSerializerAttribute>-Attributs auf die Eigenschaft oder Typdeklaration angegeben.</span><span class="sxs-lookup"><span data-stu-id="5f08f-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="5f08f-164">Die <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>-Methode ist eine hilfsprogrammmethode, die die CLR-typsysteminformationen liest und eine neue <xref:System.Windows.Markup.ValueSerializer> Klasse auf der Grundlage des Attributs zurückgibt, wenn Sie in der Eigenschaft gefunden wird, oder wenn Sie für den Eigenschaftentyp gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="5f08f-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="5f08f-165">`null` kann zurückgegeben werden, wenn kein solcher Serialisierungsprogramm vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="5f08f-166">`null` kann auch zurückgegeben werden, wenn ein Typ oder eine Eigenschaft absichtlich mit einem NULL-Wert-<xref:System.Windows.Markup.ValueSerializerAttribute>attributiert wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="5f08f-167">Ein anderer Modus, den <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> unterstützt, gibt die interne `TypeConverterValueSerializer`-Klasse zurück. Hierbei handelt es sich um eine <xref:System.Windows.Markup.ValueSerializer>-Implementierung, die ein <xref:System.ComponentModel.TypeConverter> umschließt und die `Convert` Methoden in `Convert*String` Methoden übersetzt (z. b. wird <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> mit Eingabe des <xref:System.String> Typs aufgerufen und in <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>übersetzt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="5f08f-168">Dies geschieht nur in Fällen, in denen alle folgenden Punkte zutreffen:</span><span class="sxs-lookup"><span data-stu-id="5f08f-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="5f08f-169">Eine <xref:System.ComponentModel.TypeConverterAttribute> wird für die relevante Eigenschaft oder den Typ der relevanten Eigenschaft gefunden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="5f08f-170">Der <xref:System.ComponentModel.TypeConverter>, der angezeigt wird, kann erfolgreich erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="5f08f-171">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="5f08f-172">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="5f08f-173">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f08f-174">Folgendes sind Sonderfälle: <xref:System.DateTime> Typen geben eine <xref:System.Windows.Markup.DateTimeValueSerializer>zurück. <xref:System.String> Typen geben einen internen, aber funktionalen Serialisierer (`StringValueSerializer`) zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f08f-175"><paramref name="descriptor" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="5f08f-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5f08f-176">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="5f08f-177">Ruft den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</span><span class="sxs-lookup"><span data-stu-id="5f08f-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="5f08f-178">Das Serialisierungsprogramm, das dem angegebenen Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="5f08f-179">Gibt möglicherweise <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-180">Eine <xref:System.Windows.Markup.ValueSerializer> für einen Typ wird durch Anwenden des <xref:System.Windows.Markup.ValueSerializerAttribute>-Attributs auf die Typdeklaration angegeben.</span><span class="sxs-lookup"><span data-stu-id="5f08f-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="5f08f-181">Die <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>-Methode ist eine hilfsprogrammmethode, die die CLR-typsysteminformationen liest und eine neue <xref:System.Windows.Markup.ValueSerializer> Klasse auf Grundlage des-Attributs zurückgibt, wenn Sie auf dem angegebenen `type`gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="5f08f-182">`null` kann zurückgegeben werden, wenn kein solcher Serialisierungsprogramm vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="5f08f-183">`null` kann auch zurückgegeben werden, wenn ein Typ absichtlich mit einem NULL-Wert-<xref:System.Windows.Markup.ValueSerializerAttribute>attributiert wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="5f08f-184">Ein anderer Modus, den <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> unterstützt, gibt die interne `TypeConverterValueSerializer`-Klasse zurück. Hierbei handelt es sich um eine <xref:System.Windows.Markup.ValueSerializer>-Implementierung, die ein <xref:System.ComponentModel.TypeConverter> umschließt und die `Convert` Methoden in `Convert*String` Methoden übersetzt (z. b. wird <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> mit Eingabe des <xref:System.String> Typs aufgerufen und in <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>übersetzt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="5f08f-185">Dies geschieht nur in Fällen, in denen alle folgenden Punkte zutreffen:</span><span class="sxs-lookup"><span data-stu-id="5f08f-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="5f08f-186">Ein <xref:System.ComponentModel.TypeConverterAttribute> wird auf `type`gefunden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="5f08f-187">Der <xref:System.ComponentModel.TypeConverter>, der angezeigt wird, kann erfolgreich erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="5f08f-188">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="5f08f-189">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="5f08f-190">Der <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>zurück, die als Verweis auf den <xref:System.String> Typ bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f08f-191">Folgendes sind Sonderfälle: <xref:System.DateTime> Typen geben eine <xref:System.Windows.Markup.DateTimeValueSerializer>zurück. <xref:System.String> Typen geben einen internen, aber funktionalen Serialisierer (`StringValueSerializer`) zurück.</span><span class="sxs-lookup"><span data-stu-id="5f08f-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f08f-192"><paramref name="type" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="5f08f-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="5f08f-193">Der Deskriptor für die Eigenschaft, die serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-194">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-195">Ruft mit dem angegebenen Kontext den <see cref="T:System.Windows.Markup.ValueSerializer" /> ab, der für die angegebene Eigenschaft deklariert ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5f08f-196">Das Serialisierungsprogramm, das der angegebenen Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-197">Anstatt sich ausschließlich auf Attribute zu verlassen, die im CLR-Typsystem gemeldet werden, verwendet diese Überladung den `context` als Dienst und ruft die Implementierung von <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>des dienstaners auf.</span><span class="sxs-lookup"><span data-stu-id="5f08f-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5f08f-198">Die <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>-Implementierung beruht in der Regel auch auf der `descriptor`, kann jedoch ein spezielles Verhalten für bestimmte Kontexte implementieren.</span><span class="sxs-lookup"><span data-stu-id="5f08f-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="5f08f-199">Diese Methode sollte aufgerufen werden, wenn der Aufrufer über eine verfügbare <xref:System.Windows.Markup.IValueSerializerContext> aus einem Dienst verfügt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="5f08f-200">Dadurch wird sichergestellt, dass die richtige <xref:System.Windows.Markup.ValueSerializer> für den jeweiligen Kontext zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="5f08f-201">Wenn der Kontext `null` aus seiner <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> für den angegebenen `descriptor`zurückgibt, oder wenn der von Ihnen angegebene Kontext `null`ist, ist das Verhalten mit dem Aufrufen der <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> Überladung identisch.</span><span class="sxs-lookup"><span data-stu-id="5f08f-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f08f-202"><paramref name="descriptor" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="5f08f-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5f08f-203">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f08f-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-204">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-205">Ruft im angegebenen Kontext den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</span><span class="sxs-lookup"><span data-stu-id="5f08f-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5f08f-206">Das Serialisierungsprogramm, das dem angegebenen Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-207">Anstatt sich ausschließlich auf Attribute zu verlassen, die im CLR-Typsystem gemeldet werden, verwendet diese Überladung den `context` als Dienst und ruft die Implementierung von <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>des dienstaners auf.</span><span class="sxs-lookup"><span data-stu-id="5f08f-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5f08f-208">Die <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>-Implementierung beruht in der Regel auch auf der `type`, kann jedoch ein spezielles Verhalten für bestimmte Kontexte implementieren.</span><span class="sxs-lookup"><span data-stu-id="5f08f-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="5f08f-209">Diese Methode sollte aufgerufen werden, wenn der Aufrufer über eine verfügbare <xref:System.Windows.Markup.IValueSerializerContext> aus einem Dienst verfügt.</span><span class="sxs-lookup"><span data-stu-id="5f08f-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="5f08f-210">Dadurch wird sichergestellt, dass die richtige <xref:System.Windows.Markup.ValueSerializer> für den jeweiligen Kontext zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="5f08f-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="5f08f-211">Wenn der Kontext `null` aus seiner <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> für den angegebenen `type`zurückgibt, oder wenn der von Ihnen angegebene Kontext `null`ist, ist das Verhalten mit dem Aufrufen der <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> Überladung identisch.</span><span class="sxs-lookup"><span data-stu-id="5f08f-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f08f-212"><paramref name="type" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="5f08f-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f08f-213">Der zu serialisierende Wert.</span><span class="sxs-lookup"><span data-stu-id="5f08f-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="5f08f-214">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="5f08f-215">Ruft eine Enumeration der Typen auf, auf die <see cref="T:System.Windows.Markup.ValueSerializer" /> verweist.</span><span class="sxs-lookup"><span data-stu-id="5f08f-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="5f08f-216">Die von diesem Serialisierungsprogramm konvertierten Typen.</span><span class="sxs-lookup"><span data-stu-id="5f08f-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f08f-217">Alle Typen, die von einem <xref:System.Windows.Markup.ValueSerializer> konvertiert werden, sollten in der zurückgegebenen Enumeration enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="5f08f-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="5f08f-218">Dadurch kann ein Serialisierungsprogramm sicherstellen, dass ein Deserialisierungsprogramm über genügend Informationen zu den Typen verfügt, die von diesem Serialisierungsprogramm konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="5f08f-219">Das Überschreiben dieser Methode ist ein erweitertes Szenario.</span><span class="sxs-lookup"><span data-stu-id="5f08f-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="5f08f-220">Das Überschreiben ist nur erforderlich, wenn Sie ein System implementieren, bei dem CLR-Typsystem Besitzer-Eigenschafts Beziehungen, die für einen XAML-Schema Kontext verfügbar sind, nicht genügend Informationen melden.</span><span class="sxs-lookup"><span data-stu-id="5f08f-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="5f08f-221">Hinweise zur WPF-Verwendung</span><span class="sxs-lookup"><span data-stu-id="5f08f-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="5f08f-222">Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Eigenschaften System implementiert einen internen wertserialisierer, der <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> überschreibt, da eine Abhängigkeits Eigenschaft über ein Konzept verfügt, das Sie hinzufügen kann.</span><span class="sxs-lookup"><span data-stu-id="5f08f-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5f08f-223">Ausdrücke weisen auch eine spezielle interne Behandlung auf.</span><span class="sxs-lookup"><span data-stu-id="5f08f-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
