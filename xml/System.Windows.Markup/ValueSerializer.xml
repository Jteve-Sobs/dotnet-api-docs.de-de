<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44894f140207ce0b9641da2f3474f8800d70ba57" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36501840" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3de0f-101">Abstrakte Klasse, die das Konvertierungsverhalten für die Serialisierung aus einer Objektdarstellung definiert.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3de0f-101">Abstract class that defines conversion behavior for serialization from an object representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-102">Die Zeichenfolge, die ein Konverter für die Serialisierung gibt verlustfrei sein muss, und der Konverter muss immer die gleiche Zeichenfolge für einen bestimmten Wert zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="3de0f-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="3de0f-103">Wenn einen Typkonverter (abgeleitet <xref:System.ComponentModel.TypeConverter>) nicht erfüllt diese Anforderungen in seiner `ConvertTo` Implementierungen für die Zeichenfolgenausgabe, die eine benutzerdefinierte <xref:System.Windows.Markup.ValueSerializer> muss deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="3de0f-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="3de0f-104">Entweder die <xref:System.Windows.Markup.ValueSerializer> sollte zu erfüllen der Anforderungen, oder ein NULL-Wert <xref:System.Windows.Markup.ValueSerializer> mit dem Typ verknüpft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3de0f-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="3de0f-105">Ein <xref:System.Windows.Markup.ValueSerializer> bezieht sich auf einen Typ durch Anwenden der <xref:System.Windows.Markup.ValueSerializerAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="3de0f-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="3de0f-106">Ein NULL-Wert <xref:System.Windows.Markup.ValueSerializer> gibt an, der Typkonverter für die Convert-zeichenfolgenkonvertierungen aus dem Objektdiagramm ignoriert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3de0f-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3de0f-107">Implementierung von <xref:System.Windows.Markup.ValueSerializer> sollte das Auslösen von Ausnahmen zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="3de0f-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="3de0f-108">Ausgelöste Ausnahmen können die Serialisierung beendet.</span><span class="sxs-lookup"><span data-stu-id="3de0f-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="3de0f-109"><xref:System.Windows.Markup.IValueSerializerContext> für eine <xref:System.Windows.Markup.ValueSerializer> und seine APIs ist analog zu <xref:System.ComponentModel.ITypeDescriptorContext> für eine <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="3de0f-110">In der Tat <xref:System.Windows.Markup.IValueSerializerContext> erbt <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="3de0f-111">Wenn eine <xref:System.Windows.Markup.ValueSerializer> abgeleiteten Klasse API aufgerufen wird, der Aufrufer (normalerweise ein Serialisierungsprozess) übergibt einen Kontext, der bestimmte Dienste bereitstellen kann.</span><span class="sxs-lookup"><span data-stu-id="3de0f-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="3de0f-112">Aufgrund der allgemeinen Leitfaden, der eine <xref:System.Windows.Markup.ValueSerializer> dürfen keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="3de0f-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="3de0f-113">Fehler beim Zurückgeben eines bestimmten Diensts aus dem Kontext muss auch keine Ausnahmen auslöst.</span><span class="sxs-lookup"><span data-stu-id="3de0f-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="3de0f-114">In früheren Versionen von .NET Framework war diese Klasse in der WPF-spezifischen Assembly WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="3de0f-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="3de0f-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> befindet sich in der System.Xaml-Assembly.</span><span class="sxs-lookup"><span data-stu-id="3de0f-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="3de0f-116">Weitere Informationen finden Sie unter [aus WPF zu System.Xaml migrierte Typen](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="3de0f-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3de0f-117">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-118">Der Text dieses Konstruktors ist leer. die <xref:System.Windows.Markup.ValueSerializer> Klasse enthält keine Werte, die Initialisierung erfordern.</span><span class="sxs-lookup"><span data-stu-id="3de0f-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-119">Die Zeichenfolge, die für die Konvertierung ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-119">The string to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-120">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-120">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-121">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob die angegebene <see cref="T:System.String" /> in eine Instanz des Typs konvertiert werden kann, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-122">
            <see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-122">
              <see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-123">Die Basisimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="3de0f-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-124">Das Objekt, das für die Konvertierung ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-124">The object to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-125">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-125">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-126">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob das angegebene Objekt in eine <see cref="T:System.String" /> konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-127">
            <see langword="true" />, wenn der <paramref name="value" /> in eine <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-127">
              <see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-128">Die Basisimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="3de0f-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-129">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-129">The string to convert.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-130">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-130">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-131">Konvertiert beim Überschreiben in einer abgeleiteten Klasse eine <see cref="T:System.String" /> in eine Instanz des Typs, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-132">Eine neue Instanz des Typs, der von der Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> auf Basis des bereitgestellten <paramref name="value" />s unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-133">Die basisimplementierung immer löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="3de0f-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3de0f-134">
            <paramref name="value" /> kann nicht konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-134">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3de0f-135">
            <para>Vermeiden Sie das Auslösen von Ausnahmen von Implementierungen. Finden Sie unter <see cref="T:System.Windows.Markup.ValueSerializer" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-135">
              <para>Avoid throwing exceptions from implementations. See <see cref="T:System.Windows.Markup.ValueSerializer" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-136">Das in eine Zeichenfolge zu konvertierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-136">The object to convert into a string.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-137">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-137">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-138">Konvertiert das angegebene Objekt beim Überschreiben in einer abgeleiteten Klasse in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-138">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-139">Eine Zeichenfolgendarstellung des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-139">A string representation of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-140">Die basisimplementierung immer löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="3de0f-140">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3de0f-141">
            <paramref name="value" /> kann nicht konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-141">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3de0f-142">
            <para>Vermeiden Sie das Auslösen von Ausnahmen von Implementierungen. Finden Sie unter <see cref="T:System.Windows.Markup.ValueSerializer" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-142">
              <para>Avoid throwing exceptions from implementations. See <see cref="T:System.Windows.Markup.ValueSerializer" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-143">Das Objekt, das nicht konvertiert werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-143">The object that could not be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-144">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-144">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-145">Ein <see cref="T:System.Exception" />-Objekt für die Ausnahme, die ausgelöst wird, wenn eine <see langword="ConvertFrom" />-Konvertierung nicht durchgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-145">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-146">Die tatsächlichen `throw` Schlüsselwort wird nicht von dieser Methode aufgerufen, daher die typische Nutzung darin `throw GetConvertFromException` (mit Parametern, die bereitgestellt werden).</span><span class="sxs-lookup"><span data-stu-id="3de0f-146">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="3de0f-147">Die spezifische Ausnahme zurückgegeben wird <xref:System.InvalidOperationException>, mit `value` in der Ausnahmemeldung übergeben.</span><span class="sxs-lookup"><span data-stu-id="3de0f-147">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="3de0f-148">Das Muster für die Verwendung entspricht derjenigen Ausnahme Hilfsprogrammen <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-148">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-149">Das Objekt, das nicht konvertiert werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-149">The object that could not be converted.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="3de0f-150">Ein Typ, der die Art der angestrebten Konvertierung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-150">A type that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-151">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-151">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-152">Ein <see cref="T:System.Exception" />-Objekt für die Ausnahme, die ausgelöst wird, wenn eine <see langword="ConvertTo" />-Konvertierung nicht durchgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-152">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-153">Die tatsächlichen `throw` Schlüsselwort wird nicht von dieser Methode aufgerufen, daher die typische Nutzung darin `throw GetConvertToException` (mit `value` Parameter bereitgestellt).</span><span class="sxs-lookup"><span data-stu-id="3de0f-153">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="3de0f-154">Die spezifische Ausnahme zurückgegeben wird <xref:System.InvalidOperationException>, mit `value` in der Ausnahmemeldung übergeben.</span><span class="sxs-lookup"><span data-stu-id="3de0f-154">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="3de0f-155">Das Muster für die Verwendung entspricht derjenigen Ausnahme Hilfsprogrammen <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-155">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3de0f-156">Ruft den <see cref="T:System.Windows.Markup.ValueSerializer" /> für ein Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-156">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="3de0f-157">Der CLR-Eigenschaftendeskriptor für die Eigenschaft, die serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-157">The CLR property descriptor for the property to be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-158">Ruft den <see cref="T:System.Windows.Markup.ValueSerializer" /> ab, der für eine Eigenschaft deklariert wurde, indem ein CLR-Eigenschaftendeskriptor für die Eigenschaft übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-159">Das Serialisierungsprogramm, das der angegebenen Eigenschaft zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-159">The serializer associated with the specified property.</span>
          </span>
          <span data-ttu-id="3de0f-160">Gibt möglicherweise <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-160">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-161">Ein <xref:System.Windows.Markup.ValueSerializer> für eine Eigenschaft oder für einen Typ, der als Wert für eine Eigenschaft verwendet wird, wird angegeben, durch Anwenden der <xref:System.Windows.Markup.ValueSerializerAttribute> Attribut in der Deklaration der Eigenschaft oder einen Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-161">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="3de0f-162">Die <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Methode ist eine Hilfsprogrammmethode, die die CLR-Typinformationen System liest und gibt eine neue <xref:System.Windows.Markup.ValueSerializer> Klasse basiert auf dem Attribut, wenn für die Eigenschaft gefunden, oder dann, wenn auf den Typ der Eigenschaft gefunden.</span><span class="sxs-lookup"><span data-stu-id="3de0f-162">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="3de0f-163">`null` kann zurückgegeben werden, wenn kein solches Serialisierungsprogramm vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="3de0f-163">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="3de0f-164">`null` kann auch zurückgegeben, wenn ein Typ oder eine Eigenschaft mit einem Null-Wert absichtlich attributiert ist <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-164">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="3de0f-165">Einen anderen Modus, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> unterstützt wird die Rückgabe der internen `TypeConverterValueSerializer` Klasse, die eine <xref:System.Windows.Markup.ValueSerializer> Implementierung, die dient als Wrapper für eine <xref:System.ComponentModel.TypeConverter> und übersetzt die `Convert` Methoden, um `Convert*String` Methoden (z. B. <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>wird aufgerufen, mit der Eingabe der <xref:System.String> geben, und führt zur Verwendung <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-165">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="3de0f-166">Dies erfolgt nur in Fällen, in dem alle der folgenden erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="3de0f-166">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="3de0f-167">Ein <xref:System.ComponentModel.TypeConverterAttribute> auf die relevante Eigenschaft oder die relevante Eigenschaft Typ gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="3de0f-167">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="3de0f-168">Das angezeigte <xref:System.ComponentModel.TypeConverter> erfolgreich erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="3de0f-168">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="3de0f-169">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-169">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="3de0f-170">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-170">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="3de0f-171">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3de0f-172">Im folgenden sind Sonderfälle: <xref:System.DateTime> Typen geben einen <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> Rückgabetypen ein internes, aber funktionale Serialisierungsprogramm (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="3de0f-172">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3de0f-173">
            <paramref name="descriptor" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-173">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3de0f-174">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-174">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-175">Ruft den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-175">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-176">Das Serialisierungsprogramm, das dem angegebenen Typ zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-176">The serializer associated with the specified type.</span>
          </span>
          <span data-ttu-id="3de0f-177">Gibt möglicherweise <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-177">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-178">Ein <xref:System.Windows.Markup.ValueSerializer> für ein Typ, durch Anwenden angegeben ist der <xref:System.Windows.Markup.ValueSerializerAttribute> Attribut für die Deklaration des Typs.</span><span class="sxs-lookup"><span data-stu-id="3de0f-178">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="3de0f-179">Die <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Methode ist eine Hilfsprogrammmethode, die die CLR-Typinformationen System liest und gibt eine neue <xref:System.Windows.Markup.ValueSerializer> Klasse basiert auf dem Attribut, wenn gefunden, auf dem angegebenen `type`.</span><span class="sxs-lookup"><span data-stu-id="3de0f-179">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="3de0f-180">`null` kann zurückgegeben werden, wenn kein solches Serialisierungsprogramm vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="3de0f-180">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="3de0f-181">`null` kann auch zurückgegeben, wenn ein Typ mit einem Null-Wert absichtlich attributiert ist <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-181">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="3de0f-182">Einen anderen Modus, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> unterstützt wird die Rückgabe der internen `TypeConverterValueSerializer` Klasse, die eine <xref:System.Windows.Markup.ValueSerializer> Implementierung, die dient als Wrapper für eine <xref:System.ComponentModel.TypeConverter> und übersetzt die `Convert` Methoden, um `Convert*String` Methoden (z. B. <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>wird aufgerufen, mit der Eingabe der <xref:System.String> geben, und führt zur Verwendung <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-182">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="3de0f-183">Dies erfolgt nur in Fällen, in dem alle der folgenden erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="3de0f-183">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="3de0f-184">Ein <xref:System.ComponentModel.TypeConverterAttribute> befindet sich auf `type`.</span><span class="sxs-lookup"><span data-stu-id="3de0f-184">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="3de0f-185">Das angezeigte <xref:System.ComponentModel.TypeConverter> erfolgreich erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="3de0f-185">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="3de0f-186">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-186">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="3de0f-187">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-187">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="3de0f-188">Die <xref:System.ComponentModel.TypeConverter> gibt `true` für <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>Namens verweisen auf die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="3de0f-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3de0f-189">Im folgenden sind Sonderfälle: <xref:System.DateTime> Typen geben einen <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> Rückgabetypen ein internes, aber funktionale Serialisierungsprogramm (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="3de0f-189">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3de0f-190">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-190">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="3de0f-191">Der Deskriptor für die Eigenschaft, die serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-191">Descriptor for the property to be serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-192">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-192">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-193">Ruft im angegebenen Kontext den für die angegebene Eigenschaft deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-193">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-194">Das Serialisierungsprogramm, das der angegebenen Eigenschaft zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-194">The serializer associated with the specified property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-195">Statt der vertrauenden Seite ausschließlich auf Attribute derjenigen, die in dem CLR-Typsystem, diese Überladung verwendet die `context` als Dienst und ruft die dienstimplementierung des <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-195">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3de0f-196">Die <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Implementierung würde auch in der Regel beruhen auf den `descriptor`, aber möglicherweise besonderes Verhalten für bestimmte Kontexte implementieren.</span><span class="sxs-lookup"><span data-stu-id="3de0f-196">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="3de0f-197">Diese Methode sollte aufgerufen werden, wenn der Aufrufer einen verfügbaren aufweist <xref:System.Windows.Markup.IValueSerializerContext> von einem Dienst.</span><span class="sxs-lookup"><span data-stu-id="3de0f-197">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="3de0f-198">Dadurch wird sichergestellt, dass die richtige <xref:System.Windows.Markup.ValueSerializer> wird für den spezifischen Kontext zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="3de0f-198">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="3de0f-199">Wenn der Kontext gibt `null` aus seiner <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> für den angegebenen `descriptor`, oder wenn der Kontext, die Sie angeben, ist `null`, wird das Verhalten identisch mit einem Aufruf der <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="3de0f-199">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3de0f-200">
            <paramref name="descriptor" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-200">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3de0f-201">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-201">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-202">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-202">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-203">Ruft im angegebenen Kontext den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-203">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-204">Das Serialisierungsprogramm, das dem angegebenen Typ zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-204">The serializer associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-205">Statt der vertrauenden Seite ausschließlich auf Attribute derjenigen, die in dem CLR-Typsystem, diese Überladung verwendet die `context` als Dienst und ruft die dienstimplementierung des <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3de0f-205">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3de0f-206">Die <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Implementierung würde auch in der Regel beruhen auf den `type`, aber möglicherweise besonderes Verhalten für bestimmte Kontexte implementieren.</span><span class="sxs-lookup"><span data-stu-id="3de0f-206">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="3de0f-207">Diese Methode sollte aufgerufen werden, wenn der Aufrufer einen verfügbaren aufweist <xref:System.Windows.Markup.IValueSerializerContext> von einem Dienst.</span><span class="sxs-lookup"><span data-stu-id="3de0f-207">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="3de0f-208">Dadurch wird sichergestellt, dass die richtige <xref:System.Windows.Markup.ValueSerializer> wird für den spezifischen Kontext zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="3de0f-208">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="3de0f-209">Wenn der Kontext gibt `null` aus seiner <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> für den angegebenen `type`, oder wenn der Kontext, die Sie angeben, ist `null`, wird das Verhalten identisch mit einem Aufruf der <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="3de0f-209">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3de0f-210">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-210">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3de0f-211">Der zu serialisierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-211">The value being serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3de0f-212">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-212">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3de0f-213">Ruft eine Enumeration der vom <see cref="T:System.Windows.Markup.ValueSerializer" /> referenzierten Typen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-213">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3de0f-214">Die von diesem Serialisierungsprogramm konvertierten Typen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3de0f-214">The types converted by this serializer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de0f-215">Alle Typen eine <xref:System.Windows.Markup.ValueSerializer> konvertiert, die in der zurückgegebenen Enumeration eingeschlossen werden soll.</span><span class="sxs-lookup"><span data-stu-id="3de0f-215">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="3de0f-216">Dadurch wird ein Serialisierungsprogramm sicherstellen, dass ein Deserialisierungsprogramm verfügt, genügend Informationen zu den Objekttypen an, dass dieses Serialisierungsprogramm konvertiert.</span><span class="sxs-lookup"><span data-stu-id="3de0f-216">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="3de0f-217">Überschreiben diese Methode ist eines erweiterten Szenarios.</span><span class="sxs-lookup"><span data-stu-id="3de0f-217">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="3de0f-218">Überschreiben darf nur sein erforderlich, wenn Sie ein System implementieren, in denen CLR System Besitzertyp-Eigenschaft typbeziehungen für einen XAML-Schemakontext verfügbar nicht genügend Informationen melden.</span><span class="sxs-lookup"><span data-stu-id="3de0f-218">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="3de0f-219">Hinweise zur WPF-Verwendung</span><span class="sxs-lookup"><span data-stu-id="3de0f-219">WPF Usage Notes</span></span>  
 <span data-ttu-id="3de0f-220">Die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Eigenschaftensystem implementiert ein internes Wertserialisierungsprogramm, die überschreibt <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> , da eine Abhängigkeitseigenschaft ein Konzept hat, dass er Besitzer hinzugefügt haben, kann.</span><span class="sxs-lookup"><span data-stu-id="3de0f-220">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3de0f-221"> -Ausdrücke weisen auch eine besondere interne Behandlung.</span><span class="sxs-lookup"><span data-stu-id="3de0f-221"> expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>