<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7412669d16ca6897e348def6cc8c79c20d146f1f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64202297" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fragt ab, ob eine angegebene Eigenschaft im aktuellen Bereich als Ambient-Eigenschaft behandelt werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zweck eines Mechanismus ambient-Eigenschaft wird verkürzt verbessern, indem darüber informiert, um zu vermeiden, instanziieren bestimmte Objekte, in Fällen, in denen bekannt ist, dass die Objekte für Werte, die für einen typischen Laufzeit temporäre und nicht nützlich sind, sind, einen XAML-Objektwriter die Anwendung. In der Regel müssen XAML-suchen oder XAML-Verarbeitung von Get-Accessor einer Eigenschaft solche Objekte zum Ausfüllen der objektdiagrammdarstellung bereit zu verwendenden Werte zu instanziieren.  
  
 <xref:System.Windows.Markup.IQueryAmbient> ein Member aufweist: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> Gibt einen paralleler Mechanismus zum <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> ist der spezielle Mechanismus, der vermeidet mithilfe von Reflektion zum Bestimmen von Informationen und können auch Act können in bestimmten Situationen (ein bestimmtes Objekt können Bericht `true` oder `false` für <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), während das Attribut im Wesentlichen statisch ist. die Analyse). <xref:System.Windows.Markup.AmbientAttribute> ist der allgemeine Mechanismus, der verwendet werden kann, indem Sie XAML-Objektwriter und korreliert, die in der Regel auf die Systemeigenschaften der dedizierte XAML Typ <xref:System.Xaml.XamlMember.IsAmbient%2A> und <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>WPF-Implementierungen von IQueryAmbient  
 In WPF <xref:System.Windows.Markup.IQueryAmbient> wird für den Wörterbuch-Lookup-Prozess verwendet. Der Suchprozess ruft aufeinander folgenden `Resources` Werte in der logischen Struktur von WPF, arbeiten aber bereits an den Stamm der Ressourcenbereich bis entweder einen Schlüssel gefunden wird, oder richtet sich des Schlüssels nicht im Gültigkeitsbereich vorhanden sein. In der Regel auf diese Weise müssten Instanziieren einer <xref:System.Windows.ResourceDictionary> jedes Mal, um die Ergebnisse zu erhalten. Deklarieren den Inhalt der `Resources` als Umgebung so lange `Resources` vorhanden optimiert diesen Suchprozess. In WPF ist diese Schnittstelle in den folgenden Fällen implementiert:  
  
-   <xref:System.Windows.FrameworkElement> implementiert <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> zurückzugebenden `true` für alle Eigenschaftennamen Feldnamen, wenn sie eine vorhandene enthält <xref:System.Windows.ResourceDictionary> für <xref:System.Windows.FrameworkElement.Resources%2A>, und, sofern die Abfrage nicht für die wird die <xref:System.Windows.FrameworkElement.Resources%2A> -Eigenschaft selbst.  
  
-   <xref:System.Windows.Style> implementiert das gleiche Muster für die <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementiert das gleiche Muster für die <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementiert das gleiche Muster für die <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementiert das gleiche Muster für die <xref:System.Windows.FrameworkTemplate.Resources%2A>. Meldet auch <xref:System.Windows.FrameworkTemplate.Template%2A> Inhalte wie Umgebung, aber gibt `false` Wenn Abfragen <xref:System.Windows.FrameworkTemplate.Template%2A> selbst.  
  
-   In jedem dieser Fälle, die die relevanten `Resources` Eigenschaft (und <xref:System.Windows.FrameworkTemplate.Template%2A>) werden durch Attribute als <xref:System.Windows.Markup.AmbientAttribute>. Die typische Verwendung besteht darin Abfragen der Eigenschaften, die nicht die <xref:System.Windows.Markup.AmbientAttribute> zugeordnet sind Eigenschaften des Objekts, das die Schnittstelle definiert. Das heißt, solange ein Ressourcenverzeichnis vorhanden ist, um die potenziellen Wert zur Laufzeit bereitzustellen, wenn das Objektdiagramm erstellt wird, kann eine andere Eigenschaft als Eigenschaftencontainer das Ressourcenverzeichnis als Umgebung behandelt werden.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Eigenschaft, die auf den Ambience-Zustand überprüft werden soll.</param>
        <summary>Fragt ab, ob eine angegebene benannte Eigenschaft im aktuellen Bereich als Ambient betrachtet werden kann.</summary>
        <returns><see langword="true" />, wenn die angeforderte Eigenschaft als Ambient betrachtet werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>