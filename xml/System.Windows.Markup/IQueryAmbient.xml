<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3fc4b5258dc07f4eadf8564b9485e2f54ccfd49e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168436" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fragt ab, ob eine angegebene Eigenschaft im aktuellen Bereich als Ambient-Eigenschaft behandelt werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zweck eines Ambient-Eigenschafts Mechanismus besteht darin, die Verarbeitungszeit zu verbessern, indem ein XAML-objektwriter darauf hingewiesen wird, bestimmte Objekte zu instanziieren, in Fällen, in denen bekannt ist, dass es sich bei den Objekten um temporäre Werte handelt, die für eine typische Laufzeit nicht nützlich sind. Asyl. Normalerweise müssen XAML-suchen oder die XAML-Verarbeitung eines Get-Accessor für die Eigenschaft solche Objekte instanziieren, um die Darstellung des Objekt Diagramms mit gebrauchsfertigen Werten zu füllen.  
  
 <xref:System.Windows.Markup.IQueryAmbient>hat einen Member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient>ist ein paralleler Mechanismus <xref:System.Windows.Markup.AmbientAttribute>für. <xref:System.Windows.Markup.IQueryAmbient>ist der spezialisierte Mechanismus, bei dem die Verwendung von Reflektion vermieden wird, um Informationen zu bestimmen, und kann auch situationsbedingt agieren `true` ( `false` ein <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>bestimmtes Objekt kann sich für den Bericht oder für entscheiden), wohingegen das Attribut im Grunde statisch ist Analyse). <xref:System.Windows.Markup.AmbientAttribute>ist der allgemeine Mechanismus, der von XAML-Objekt-Writern verwendet werden kann und in der Regel mit den dedizierten XAML <xref:System.Xaml.XamlType.IsAmbient%2A>-typsystemeigenschaften <xref:System.Xaml.XamlMember.IsAmbient%2A> und korreliert.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>WPF-Implementierungen von IQueryAmbient  
 In WPF <xref:System.Windows.Markup.IQueryAmbient> wird für den Suchvorgang des Ressourcen Wörterbuchs verwendet. Der Suchvorgang ruft aufeinander folgende `Resources` Werte in der logischen WPF-Struktur ab und arbeitet an den Stamm des Ressourcenbereichs, bis entweder ein Schlüssel gefunden wird oder der Schlüssel nicht im Gültigkeitsbereich vorhanden ist. Normalerweise würde dies dazu führen, dass jedes Mal <xref:System.Windows.ResourceDictionary> eine Instanziierung durchführt, um die Ergebnisse zu erhalten. Wenn Sie den Inhalt `Resources` von als Ambient `Resources` deklarieren, solange vorhanden ist, wird dieser Suchvorgang optimiert. In WPF wird diese Schnittstelle in den folgenden Fällen implementiert:  
  
-   <xref:System.Windows.FrameworkElement>implementiert <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> , um `true` für alle Eigenschaftsnamen zurückzugeben, wenn <xref:System.Windows.ResourceDictionary> Sie <xref:System.Windows.FrameworkElement.Resources%2A>ein vorhandenes für enthält, und solange die Abfrage nicht <xref:System.Windows.FrameworkElement.Resources%2A> für die Eigenschaft selbst gilt.  
  
-   <xref:System.Windows.Style>implementiert das gleiche Muster für <xref:System.Windows.Style.Resources%2A>den.  
  
-   <xref:System.Windows.Application>implementiert das gleiche Muster für <xref:System.Windows.Application.Resources%2A>den.  
  
-   <xref:System.Windows.FrameworkContentElement>implementiert das gleiche Muster für <xref:System.Windows.FrameworkContentElement.Resources%2A>den.  
  
-   <xref:System.Windows.FrameworkTemplate>implementiert das gleiche Muster für <xref:System.Windows.FrameworkTemplate.Resources%2A>den. Sie meldet <xref:System.Windows.FrameworkTemplate.Template%2A> auch Inhalte als Ambient, gibt `false` jedoch zurück, wenn <xref:System.Windows.FrameworkTemplate.Template%2A> Sie sich selbst Abfragen.  
  
-   In jedem dieser Fälle wird die relevante `Resources` Eigenschaft (und <xref:System.Windows.FrameworkTemplate.Template%2A>) als <xref:System.Windows.Markup.AmbientAttribute>attributiert. Die typische Verwendung besteht darin, die Eigenschaften abzufragen, die nicht <xref:System.Windows.Markup.AmbientAttribute> die attributierten Eigenschaften des Objekts sind, das die Schnittstelle definiert. Anders ausgedrückt: solange ein Ressourcen Wörterbuch vorhanden ist, um beim Erstellen des Objekt Diagramms den Wert für die Ausführungszeit bereitzustellen, kann jede andere Eigenschaft neben dem Eigenschafts Container des Ressourcen Wörterbuchs als Ambient behandelt werden.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Eigenschaft, die auf den Ambience-Zustand überprüft werden soll.</param>
        <summary>Fragt ab, ob eine angegebene benannte Eigenschaft im aktuellen Bereich als Ambient betrachtet werden kann.</summary>
        <returns><see langword="true" />, wenn die angeforderte Eigenschaft als Ambient betrachtet werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
