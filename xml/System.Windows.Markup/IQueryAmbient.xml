<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78732f2b7abbe05d954732b1cec29dd42e3a312f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82424727" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fragt ab, ob eine angegebene Eigenschaft im aktuellen Bereich als Ambient-Eigenschaft behandelt werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zweck eines Ambient-Eigenschafts Mechanismus besteht darin, die Verarbeitungszeit zu verbessern, indem ein XAML-objektwriter darauf hingewiesen wird, bestimmte Objekte zu instanziieren, in Fällen, in denen bekannt ist, dass es sich bei den Objekten um temporäre Werte handelt, die für eine typische Lauf Zeit Anwendung nicht nützlich sind. Normalerweise müssen XAML-suchen oder die XAML-Verarbeitung eines Get-Accessor für die Eigenschaft solche Objekte instanziieren, um die Darstellung des Objekt Diagramms mit gebrauchsfertigen Werten zu füllen.  
  
 <xref:System.Windows.Markup.IQueryAmbient> einen Member hat: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> ist ein paralleler Mechanismus zum <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> ist der spezielle Mechanismus, bei dem die Verwendung von Reflektion vermieden wird, um Informationen zu bestimmen, und kann auch situationsbedingt agieren (ein bestimmtes Objekt kann sich für das Melden von `true` oder `false` für <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>entscheiden), während das Attribut im wesentlichen statische Analyse ist. <xref:System.Windows.Markup.AmbientAttribute> ist der allgemeine Mechanismus, der von XAML-Objekt-Writern verwendet werden kann und in der Regel mit den dedizierten XAML-typsystemeigenschaften <xref:System.Xaml.XamlMember.IsAmbient%2A> und <xref:System.Xaml.XamlType.IsAmbient%2A>korreliert.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>WPF-Implementierungen von IQueryAmbient  
 In WPF wird <xref:System.Windows.Markup.IQueryAmbient> für den Suchvorgang des Ressourcen Wörterbuchs verwendet. Der Suchvorgang erhält aufeinander folgende `Resources` Werte in der logischen WPF-Struktur, die auf den Stamm des Ressourcenbereichs festgelegt werden, bis entweder ein Schlüssel gefunden wird oder der Schlüssel nicht im Gültigkeitsbereich vorhanden ist. Normalerweise ist es erforderlich, eine <xref:System.Windows.ResourceDictionary> jedes Mal zu instanziieren, um die Ergebnisse zu erhalten. Wenn Sie den Inhalt von `Resources` als Ambient deklarieren, solange `Resources` vorhanden ist, wird dieser Suchvorgang optimiert. In WPF wird diese Schnittstelle in den folgenden Fällen implementiert:  
  
-   <xref:System.Windows.FrameworkElement> implementiert <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>, um `true` für alle Eigenschaftsnamen zurückzugeben, wenn Sie ein vorhandenes <xref:System.Windows.ResourceDictionary> für <xref:System.Windows.FrameworkElement.Resources%2A>enthält, und solange die Abfrage nicht für die <xref:System.Windows.FrameworkElement.Resources%2A>-Eigenschaft selbst gilt.  
  
-   <xref:System.Windows.Style> implementiert das gleiche Muster für seine <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementiert das gleiche Muster für seine <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementiert das gleiche Muster für seine <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementiert das gleiche Muster für seine <xref:System.Windows.FrameworkTemplate.Resources%2A>. Außerdem wird <xref:System.Windows.FrameworkTemplate.Template%2A> Inhalt als Ambient gemeldet, aber `false` zurückgegeben, wenn eine Abfrage für <xref:System.Windows.FrameworkTemplate.Template%2A> selbst durchführt.  
  
-   In jedem dieser Fälle werden die relevanten `Resources` Eigenschaft (und <xref:System.Windows.FrameworkTemplate.Template%2A>) als <xref:System.Windows.Markup.AmbientAttribute>attributiert. Die typische Verwendung besteht darin, die Eigenschaften abzufragen, die nicht die <xref:System.Windows.Markup.AmbientAttribute> attributierten Eigenschaften des Objekts sind, das die Schnittstelle definiert. Anders ausgedrückt: solange ein Ressourcen Wörterbuch vorhanden ist, um beim Erstellen des Objekt Diagramms den Wert für die Ausführungszeit bereitzustellen, kann jede andere Eigenschaft neben dem Eigenschafts Container des Ressourcen Wörterbuchs als Ambient behandelt werden.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Eigenschaft, die auf den Ambience-Zustand überprüft werden soll.</param>
        <summary>Fragt ab, ob eine angegebene benannte Eigenschaft im aktuellen Bereich als Ambient betrachtet werden kann.</summary>
        <returns><see langword="true" />, wenn die angeforderte Eigenschaft als Ambient betrachtet werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
