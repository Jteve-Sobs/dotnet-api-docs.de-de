<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c07a67f28f82e1d372f2cd2ead988fc1f3ed34e4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51911938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Dienst dar, der situationsbedingte Objekteigenschaftsbeziehungen zur Auswertung der Markuperweiterung meldet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> Stellt einen Dienst, der Informationen in Bezug auf die Objekteigenschaft Struktur, umgibt, in denen ein Wertkonverter aufgerufen wird.  
  
 Typkonverter und Markuperweiterungen können Abfragen für <xref:System.Windows.Markup.IProvideValueTarget> als Dienst auf den Dienstkontext, der durch ein XAML-Objektwriter bereitgestellt wird, wenn der XAML-Objektwriter Wertkonvertierungsverhalten aufruft. Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Markuperweiterungen insbesondere ein Szenario, in denen <xref:System.Windows.Markup.IProvideValueTarget> eignet sich die Gültigkeit der situationsbedingte Verwendung der Markuperweiterung zu bestimmen. Klicken Sie z. B. die Markuperweiterung möglicherweise einen verzögerungsmechanismus wird Wert implementieren, jedoch mit diesem Mechanismus kann nur sinnvoll sein, wenn das Zielobjekt kann mit anderen Komponenten Ihre verzögerungsmechanismus wird zur Laufzeit. Sie können überprüfen, die Typ-System-Eigenschaften des Objekts zurückgegeben wird, als <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> und sicherstellen, dass das Objekt unterstützt, Ihre Deferral-Technik. Wenn dies der Fall ist, gibt die Markuperweiterung einen Wert zurück, und falls nicht, wird die Markuperweiterung löst eine Ausnahme, die als interne Ausnahme von einem XAML-Objektwriter übernommen wird. Ein ähnliches Szenario gewährleistet, dass eine bestimmte Eigenschaft eine Funktion erfüllt, indem Sie die Merkmale der Typ des Eigenschaftensystems der <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Obwohl der Name der API <xref:System.Windows.Markup.IProvideValueTarget> bedeuten könnte eine Zuordnung mit <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, die Informationen gemeldet werden, indem <xref:System.Windows.Markup.IProvideValueTarget> kann auch hilfreich sein, eine <xref:System.ComponentModel.TypeConverter> oder <xref:System.Windows.Markup.ValueSerializer>. Ein <xref:System.ComponentModel.TypeConverter> oder <xref:System.Windows.Markup.ValueSerializer> haben in der Regel mehr Kontext als eine Markuperweiterung, da sie einen bestimmten Zieltyp oder die Zieleigenschaft zugeordnet sind, und daher die situationsbedingte Gültigkeit im Typsystem vorhersehbar ist. Es gibt jedoch andere Szenarien. Im folgenden finden eine Liste der einige Szenarien, die durch einen Typkonverter oder eine Markuperweiterung implementiert werden kann:  
  
-   Erste <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> Instanzwerte anderer Eigenschaften für dieses Objekt zu lesen. Beachten Sie, dass die Behandlung hier möglicherweise für nicht festgelegte Werte stabil sein, da die Verarbeitungsreihenfolge der XAML-Elemente für das Zielobjekt nicht deterministisch sein kann.  
  
-   Erste <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> auf Typebene Metadaten zu lesen oder stellen Sie sicher, dass die erforderliche Schnittstellen vom Typ implementiert werden.  
  
-   Erste <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> Metadaten zu lesen.  
  
 Ein Szenario ist die Verwendung <xref:System.Windows.Markup.IProvideValueTarget> Informationen zur Beschränkung der Objekte oder Eigenschaften sind berechtigt, auf die von der Markuperweiterung festgelegt werden.  
  
 Stellen Sie vor dem Versuch, den Dienst verwenden, sicher, dass der Dienst selbst keine `null` bei Rückgabe durch die entsprechenden Serviceprovider-Parameter verwenden Sie für den Kontext.  
  
> [!IMPORTANT]
>  Wenn Sie den Dienst zu verwenden, ist besonders wichtig, nicht das Objekt, das auf die verwiesen wird durch Ändern der <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> Eigenschaft oder andere Objekte, die auf dieses Objekt verweist. Für WPF können insbesondere diese Änderungen unerwartete Änderungen verursachen, die WPF-Eigenschaftensystem ungültig machen würde.  
  
> [!NOTE]
>  Verwenden Sie nicht den Typ des <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> um zu bestimmen, die genau ein Markup-Erweiterung oder ein Typkonverter sollte zurückgegeben werden. Das ist nicht empfohlen. Der Rückgabetyp muss konsistent mit den Attributen (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> Markuperweiterungen) oder Muster (Klassenname des Typkonverters).  
  
 In früheren Versionen von .NET Framework war diese Schnittstelle in der Assembly "WPF-spezifische" WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> befindet sich in der System.Xaml-Assembly. Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Dieser Dienst unterstützt die Framework-Features wie z. B. die Bindung für eine Abhängigkeitseigenschaft.  
  
 In WPF werden der Dienst durch dargestellt <xref:System.Windows.Markup.IProvideValueTarget> können Objekte und Eigenschaften für Situationen, in dem der zurückzugebende Wert, aus einer Markup oder einen Typkonverter hängt vom Kontext, zurück.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> stark genutzt wird, in die interne Implementierung der <xref:System.Windows.Data.BindingBase>, Klasse, die den Mechanismus für die Bindung für Abhängigkeitseigenschaften in WPF implementiert.  
  
 Ein interner Dienst Standardanbieter für WPF implementiert <xref:System.Windows.Markup.IProvideValueTarget> für die Verwendung durch eine benutzerdefinierte Markuperweiterung oder Typkonverter. Das Objekt und Eigenschaft von gemeldeten <xref:System.Windows.Markup.IProvideValueTarget> kann nur vom internen WPF-Dienst festgelegt werden. Über diese Definition wie <xref:System.Windows.Markup.IProvideValueTarget> arbeitet müssten definieren eigene Service-Anbieter für die Verwendungsmöglichkeiten von Markup-Erweiterung und Typ-Konverter, zumindest implementiert, die <xref:System.Windows.Markup.IProvideValueTarget> und <xref:System.Windows.Markup.IXamlTypeResolver> Dienste und das ist eine erweiterte Szenario, das hier nicht beschrieben wird.  
  
 Null-Wert für <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> oder <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> bedeutet nicht unbedingt, dass eine Markuperweiterung oder Typkonverter handeln kann, obwohl das von Ihrer Implementierung abhängt. Ein Beispiel für Fall, in dem die Werte aus <xref:System.Windows.Markup.IProvideValueTarget> null sind, auch wenn der Dienst verfügbar ist ist, wenn die Markuperweiterung innerhalb einer anderen Markuperweiterung,, z. B. geschachtelt ist eine <xref:System.Windows.Data.Binding>. Eine Implementierung, die auf beruht <xref:System.Windows.Markup.IProvideValueTarget> sollten immer überprüfen, für Null-Werte nur für das Auslösen eine bestimmte Ausnahme, wenn dies beabsichtigt ist.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielobjekt ab, das gemeldet wird.</summary>
        <value>Das gemeldete Zielobjekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert von <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> ist von den tatsächlichen Verweis, nicht Typsystembezeichner oder andere Bezeichner. Der Wert kann auch sein `null`; finden Sie unter <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Wenn Sie den Dienst zu verwenden, ist besonders wichtig, nicht das Objekt, das auf die verwiesen wird durch Ändern der <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> bearbeiten, Eigenschaft oder andere Objekte, die durch dieses Objekt verwiesen wird, wie Eigenschaften, die nicht speziell die Wert-Konvertierung sind Zustimmung. Für WPF kann insbesondere das Zielobjekt ändern unerwartete Änderungen verursachen, die WPF-Eigenschaftensystem ungültig machen würde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markuperweiterungen für XAML</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Bezeichner für die Zieleigenschaft ab, die gemeldet wird.</summary>
        <value>Ein Bezeichner für die Zieleigenschaft, die gemeldet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert kann auch sein `null`; finden Sie unter <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Für eine Abhängigkeitseigenschaft möglicherweise die Standard-WPF-abweichende zurück eine <xref:System.Windows.DependencyProperty>, sodass die Markup oder einen Typkonverter Metadaten verwenden kann. Andernfalls kann das zurückgegebene Objekt eine <xref:System.Reflection.PropertyInfo> für eine CLR-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markuperweiterungen für XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>