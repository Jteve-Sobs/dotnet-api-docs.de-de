<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb81d4871b078bffda4d58f9ecc6bb921125db1e" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86979978" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass eine Eigenschaft oder ein Typ als Umgebung behandelt werden soll. Das Umgebungskonzept bezieht sich darauf, wie XAML-Prozessoren Typbesitzer von Membern bestimmen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Ambient-Eigenschaft ist eine Eigenschaft, bei der beim Erstellen eines Objekt Diagramms erwartet wird, dass der Wert im Parserkontext verfügbar ist, wobei jedoch die typische Typmember-Suche für Zwecke der unmittelbar erstellten XAML-Knotengruppe angehalten wird. Für das Ambient-Konzept gibt es zwei Haupt Szenarien:  
  
-   Eine andere Eigenschaft desselben Objekts wirkt sich darauf aus und gibt an, wie die Objekteigenschaften Suche funktionieren soll.  
  
-   Die-Eigenschaft stellt einen umfassenderen Verzögerungs Mechanismus dar, und die Umgebungs Funktionen zum Suchen eines Element Werts werden auf alle Objekte im aktuellen-Objekt ausgeweitet.  
  
 Dieses Attribut kann auf bestimmte Eigenschaften angewendet werden, die erwartete Container aufweisen, die ein Umgebungs Eigenschaften-Suche-Verhalten ermöglichen, oder auf eine Klasse angewendet werden, um das Ambient-Eigenschafts Verhalten in allen Fällen dieses Werttyps für eine Eigenschaft zu aktivieren.  
  
 <xref:System.Windows.Markup.AmbientAttribute> kann auch auf eine CLR-Methode angewendet werden, um das Attributieren einer XAML-anfügbaren Eigenschaft als Ambient zu unterstützen. Dies ist möglicherweise erforderlich, da eine XAML-angefügte Eigenschaft in einer CLR-Implementierung implementiert bzw. als accessormuster mit `get` -und-Methoden dargestellt wird `set` . Es ist keine tatsächliche CLR-Eigenschaft für das Attribut vorhanden. Daher hätte das Einschränken der Verwendung von <xref:System.AttributeTargets> auf die `Property` Angabe eines anfügbaren Members als Ambient nicht aktiviert. Für ein anfügbares Element, das Sie als Ambient melden möchten, müssen Sie den `get` Accessor zuweisen. Sie sollten nicht versuchen, Methoden zu Attributen, die nicht explizit Methoden für anfügbare Member unterstützen.  
  
 In früheren Versionen des .NET Framework war diese Klasse in der WPF-spezifischen Assembly Windows Base vorhanden. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] <xref:System.Windows.Markup.AmbientAttribute> befindet sich in der System. XAML-Assembly. Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml).  
  
 Ambient-Typen (Typen <xref:System.Windows.Markup.AmbientAttribute> , die auf Typebene angewendet werden) können für bestimmte XAML-Verarbeitungs Situationen verwendet werden, in denen der Typ einer Eigenschaft nicht in der richtigen Reihenfolge aufgelöst werden muss.  
  
## <a name="object-writer-scenarios"></a>Objektwriter-Szenarien  
 Wenn Sie einen XAML-objektwriter definieren und auf eine Eigenschaft, eine Methode oder einen Typ, bei der <xref:System.Windows.Markup.AmbientAttribute> angewendet wird, zugegriffen wird, müssen Sie in der Regel auf einen Dienst zugreifen, um das gewünschte Ambient-Eigenschaften Suchverhalten zu ermitteln, das zum Schreiben von Objekten erforderlich ist. Weitere Informationen finden Sie unter <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Wertkonverter  
 Typkonverter oder Markup Erweiterungen müssen möglicherweise die Umgebungs Informationen kennen, um Eigenschaften zu verarbeiten, die indirekte Typzuordnungen darstellen, wie z. b. Eigenschaften, die Member oder Typen nach Zeichen folgen Namen mit oder ohne Qualifikation angeben. In diesem Szenario <xref:System.Windows.Markup.AmbientAttribute> ist nicht für die direkte Verwendung für die Codelogik des Wert Konverters vorgesehen. Stattdessen sollte der Wert Konverter auf das Verarbeitungs Verhalten des XAML-Writers zurückgreifen, das <xref:System.Xaml.IAmbientProvider> seine Dienst Kontexte beim Aufruf an Ihre Wert Konverter-Methoden übergibt.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>WPF-Szenarien für ambientattribute  
  
-   Eine Eigenschaft von <xref:System.Windows.Style> ( <xref:System.Windows.Style.TargetType%2A> ) kann die erforderlichen Eigenschaftsnamen suchen qualifizieren, die erforderlich sind, um die Unterstützungs Verweise für Eigenschaftsnamen in-Werten zu suchen <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> .  
  
-   Alle Inhalte in einer `Resources` Eigenschaft (Elemente eines <xref:System.Windows.ResourceDictionary> ) sowie Vorlagen Inhalt sollten in der Lage sein, auf andere Peers als Werte zuzugreifen. Wenn Sie die gesamte `Resources` Eigenschaft als Ambient deklarieren, wird eine Logik aufgerufen, die dies im WPF-XAML-Parser ermöglicht.  
  
 <xref:System.Windows.ResourceDictionary>Ein Beispiel für ein Szenario für die Einstellung <xref:System.Windows.Markup.AmbientAttribute> auf der Typebene finden Sie unter.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">XAML-bezogene CLR-Attribute für benutzerdefinierte Typen und Bibliotheken</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Definieren von benutzerdefinierten Typen für die Verwendung mit .NET Framework-XAML-Diensten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Konzeptionelle Dokumentation zur net-XAML-Dienste</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.AmbientAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
