<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbientAttribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac555dd6cc03b82733e7cc9502b48929ccdfcd92546.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55dd6cc03b82733e7cc9502b48929ccdfcd92546</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Specifies that a property or type should be treated as ambient.</source>
          <target state="translated">Gibt an, dass eine Eigenschaft oder ein Typ als Umgebung behandelt werden soll.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The ambient concept relates to how XAML processors determine type owners of members.</source>
          <target state="translated">Das Umgebungskonzept bezieht sich darauf, wie XAML-Prozessoren Typbesitzer von Membern bestimmen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</source>
          <target state="translated">Eine Ambiente-Eigenschaft ist eine Eigenschaft, in dem der Wert muss in der Parserkontext verfügbar sein, für die Erstellung eines Objektdiagramms, jedoch typische Typmember Suche angehalten wird, im Rahmen der unmittelbaren Verwendung von XAML-Knoten festgelegt, wird erstellt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>There are two main scenarios for the ambient concept:</source>
          <target state="translated">Es gibt zwei Hauptszenarien für das Umgebungskonzept:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Some other property of the same object influences and qualifies how that object-property lookup should work.</source>
          <target state="translated">Eine andere Eigenschaft desselben Objekts beeinflusst und qualifiziert die Funktionsweise dieser Objekteigenschaft Suche.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</source>
          <target state="translated">Die Eigenschaft stellt einen größeren Deferral-Mechanismus dar, und die ambient-Funktionen für das Nachschlagen der Elementwert erweitern, um alle Objekte innerhalb des aktuellen Objekts.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</source>
          <target state="translated">Dieses Attribut kann auf bestimmte Eigenschaften, die Container erwartet haben, mit die eine ambient-Eigenschaft Suchverhalten können angewendet werden oder auf eine Klasse, um das Verhalten der ambient-Eigenschaft in allen Fällen dieses Werttyps für eine Eigenschaft aktivieren angewendet werden kann.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> kann auch auf einer CLR-Methode, um eine XAML-anfügbare Eigenschaft als ambient Attributierung zu unterstützen angewendet werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> methods.</source>
          <target state="translated">Dies ist möglicherweise erforderlich, da in einer CLR-Implementierung eine XAML-angefügte Eigenschaft implementiert/für die Reflektion als ein Accessor Muster mit dargestellt wird <ph id="ph1">`get`</ph> und <ph id="ph2">`set`</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>No actual CLR property to attribute exists, so restricting usage for <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> to <ph id="ph2">`Property`</ph> would not have enabled specifying an attachable member as ambient.</source>
          <target state="translated">Keine tatsächliche CLR-Eigenschaft Attribut vorhanden ist, so einschränken Nutzung für <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> auf <ph id="ph2">`Property`</ph> würde nicht angeben eines anfügbaren Members als Umgebung aktiviert haben.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For an attachable member that you want to report as ambient, attribute the <ph id="ph1">`get`</ph> accessor.</source>
          <target state="translated">Attribut für eine anfügbare-Element, das Sie als Umgebung melden möchten, die <ph id="ph1">`get`</ph> Accessor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>You should not attempt to attribute methods that are not specifically support methods of attachable members.</source>
          <target state="translated">Sie sollten nicht Attribut Methoden, die nicht speziell Unterstützungsmethoden anfügbare Member sind.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">In früheren Versionen von .NET Framework war diese Klasse in der WPF-spezifischen Assembly WindowsBase.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> befindet sich in der System.Xaml-Assembly.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>aus WPF zu System.Xaml migrierte Typen<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Ambient types (types where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</source>
          <target state="translated">Ambient-Typen (Typen, bei denen <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> wird angewendet auf Typebene) für bestimmte XAML-Verarbeitungssituationen, in denen der Typ einer Eigenschaft werden außerhalb der Reihenfolge behoben muss, verwendet werden können.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Object Writer Scenarios</source>
          <target state="translated">Objekt-Writer-Szenarien</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>If you are defining a XAML object writer, and you encounter a property, method or type where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</source>
          <target state="translated">Wenn Sie einen XAML-Objektwriter definieren, und, eine Eigenschaft, die Methode oder den Typ treten, in dem <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> wird angewendet, Sie in der Regel müssen Zugriff auf einen Dienst, um das Suchverhalten vorgesehenen ambient-Eigenschaft zu bestimmen, die zum Schreiben von Objekten erforderlich ist.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Value Converters</source>
          <target state="translated">Wertkonverter</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</source>
          <target state="translated">Den Einsatz von Typkonvertern oder Markuperweiterungen müssen möglicherweise die Ambiente-Informationen zu kennen, um Eigenschaften zu verarbeiten, die indirekte typzuordnungen, z. B. Eigenschaften darstellen, die von Zeichenfolgennamen mit oder ohne Qualifizierung Membern oder Typen angeben.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In this scenario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is not intended to be used directly for value converter code logic.</source>
          <target state="translated">In diesem Szenario <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> nicht direkt für den Wert Code Konverterlogik verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Rather, the value converter should rely on the XAML writer processing behavior, which will pass <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in its service contexts to your value converter methods when called.</source>
          <target state="translated">Der Wertkonverter sollten stattdessen auf die Verwendung von XAML-Writer Verarbeitungsverhalten, das weitergeleitet werden verlassen <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in seinen Dienstkontexten auf Ihre Wert die Konvertermethoden aufruft, wenn aufgerufen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>WPF Scenarios for AmbientAttribute</source>
          <target state="translated">WPF-Szenarien für AmbientAttribute</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>A property of a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Eine Eigenschaft einer <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) können Sie die erforderliche Eigenschaft Name Suchvorgänge, die erforderlich sind, finden Sie die unterstützende Verweise für Eigenschaftsnamen in qualifizieren <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> Werte.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>All content within a <ph id="ph1">`Resources`</ph> property (items of a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>) as well as template content, should be able to access other peers as values.</source>
          <target state="translated">Alle Inhalte innerhalb einer <ph id="ph1">`Resources`</ph> Eigenschaft (Elemente eine <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>) sowie den Inhalt der Vorlage muss auf anderen Peers als Werte zugreifen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Declaring the entire <ph id="ph1">`Resources`</ph> property as ambient invokes logic that enables this in the WPF XAML parser.</source>
          <target state="translated">Deklarieren die gesamte <ph id="ph1">`Resources`</ph> -Eigenschaft als ambient ruft eine Logik, die dadurch in der WPF XAML-Parser.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>See <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> for an example of a scenario for setting <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> at type level.</source>
          <target state="translated">Finden Sie unter <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> für ein Beispiel für ein Szenario für die Einstellung <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> auf Typebene.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.AmbientAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>