<Type Name="ServiceProviders" FullName="System.Windows.Markup.ServiceProviders">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5c1be6d12bd7b1fb0ad65441dfe37c37f9cb7d2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167099" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProviders extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ServiceProviders" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProviders&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ServiceProviders = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Implementierung für die <see cref="T:System.IServiceProvider" />-Schnittstelle mit Methoden bereit, die das Hinzufügen von Diensten aktivieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine Hilfsprogrammklasse, die beim Serialisieren von Inhalten verwendet werden kann. Bei der-Klasse handelt es sich im Grunde um ein nur-Eingabe-Wörterbuch zum Speichern von Diensten <xref:System.IServiceProvider> , die von Ihrem Diensttyp verschlüsselt werden, der zum späteren Abrufen des gleichen Wörterbuchs implementiert Wenn Sie das Wörterbuch verwenden, wird das wiederholte Abfragen für denselben Dienst vermieden. Diese Klasse ist die Basisklasse von <xref:System.Windows.Markup.XamlDesignerSerializationManager>, bei der es sich um den `ShouldSerialize` Dienst handelt, der für Methoden Implementierungen in anderen Teilen von WPF verwendet wird.  
  
 Die Verwendung dieser Klasse erfordert Verweise auf WPF-Assemblys, Sie ist nicht für allgemeine .NET Framework XAML-Dienst Szenarios vorgesehen. Das Szenario ist für die interne WPF-Implementierung von Dienst intensiven Features während der Serialisierung, z. b. `ShouldSerialize` bei der Verarbeitung der Implementierungen bestimmter Typen. Die praktische Klasse, die an diesem Szenario beteiligt ist, <xref:System.Windows.Markup.XamlDesignerSerializationManager>ist die abgeleitete Klasse.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProviders();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ServiceProviders" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(Type ^ serviceType, System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : Type * obj -&gt; unit" Usage="serviceProviders.AddService (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Diensttyp des neuen Diensts.</param>
        <param name="service">Eine Implementierungsklasse des Diensts.</param>
        <summary>Fügt der Liste einen Dienst hinzu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceType" /> oder <paramref name="service" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Es wurde versucht, einen Dienst hinzuzufügen, der im Wörterbuch bereits vorhanden ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="serviceProviders.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des abzurufenden Dienstobjekts.</param>
        <summary>Ruft das Dienstobjekt des angegebenen Typs ab.</summary>
        <returns>Eine Dienstimplementierung für den Typ <paramref name="serviceType" />. Kann <see langword="null" /> sein, wenn es für den Typ <paramref name="serviceType" /> keinen gespeicherten Dienst gibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
