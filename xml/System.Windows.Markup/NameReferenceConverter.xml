<Type Name="NameReferenceConverter" FullName="System.Windows.Markup.NameReferenceConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f83a24adec8f4215a24143b9d41ef45831d69c7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86649885" /></Metadata><TypeSignature Language="C#" Value="public class NameReferenceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameReferenceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameReferenceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class NameReferenceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameReferenceConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type NameReferenceConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Typkonvertierung bereit, um einen Zeichenfolgennamen in einen Objektverweis auf das Objekt mit diesem Namen zu konvertieren oder um den Namen eines Objekts von Objektdiagrammen zurückzugeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt einen typkonverterwrapper um zwei Dienste bereit.  
  
 Die- <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> Implementierung verwendet den <xref:System.Xaml.IXamlNameResolver> Dienst aus dem Kontext, um die Auflösung eines Objekts anhand des Namens in XAML auszuführen. Dies ist Teil der relevanten XAML-Reader-und XAML-Writer-Implementierungen in .NET Framework XAML-Diensten. Die richtige Funktion dieses Konverters erfordert, dass der Dienst über den <xref:System.Xaml.IXamlNameResolver> Dienst Kontext verfügbar ist.  
  
 Die- <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> Implementierung verwendet den <xref:System.Xaml.IXamlNameProvider> Dienst aus dem Kontext, um die Auflösung eines Verweis namens für ein Objekt während der Speicherung/Serialisierung auszuführen. Dies ist Teil der relevanten Reader-und Writer-Implementierungen und deren Kontext. Die richtige Funktion dieses Konverters erfordert, dass ein zugrunde liegender <xref:System.Xaml.IXamlNameProvider> Dienst verfügbar ist.  
  
 Diese typkonverterimplementierung ist für den <xref:System.ComponentModel.TypeConverter> Basistyp untypisch, da Sie nicht auf einen diskreten Konvertierungstyp festgelegt ist. Möglicherweise konvertiert Sie ein beliebiges Objekt in einen und aus einem verweisenden Namen, solange diesem Objekt in XAML ein Name zugewiesen werden kann, und der unterstützende Kontext verfügt über die erforderlichen Dienste, um Ergebnisse zurückzugeben.  
  
 Im Rahmen der Unterstützung allgemeiner Dienste bietet die System. XAML-Basis Implementierung von <xref:System.Xaml.XamlObjectWriter> und die <xref:System.Xaml.XamlXmlWriter> <xref:System.Xaml.IXamlNameProvider> -und-Dienste, die <xref:System.Xaml.IXamlNameResolver> von verwendet werden können <xref:System.Windows.Markup.NameReferenceConverter> . Die namens Basis für diese Dienste verwendet entweder `x:Name` oder eine attributierte <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> Alias Eigenschaft.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markup Erweiterungen für XAML</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Übersicht über System. XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameReferenceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameReferenceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.NameReferenceConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
        <summary>Gibt zurück, ob dieser Konverter ein Objekt eines Typs in ein anderes Objekt konvertieren kann.</summary>
        <returns><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung kann nur eine `sourceType` von verarbeiten <xref:System.String> . Andere Typen geben zurück `false` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="destinationType">Der Typ, in den konvertiert werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der Konverter ein Objekt in den angegebenen Zieltyp konvertieren kann.</summary>
        <returns><see langword="true" />, wenn der Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein `destinationType` , das auf den <xref:System.String> Typ zurückgibt `true` ; alle anderen `destinationType` Werte geben zurück `false` .  
  
 Diese Methode gibt false zurück, wenn den Wert `context` `null` hat, oder, wenn <xref:System.Xaml.IXamlNameProvider> nicht als Dienst aus abgerufen werden kann `context` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="nameReferenceConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
        <param name="value">Die zu konvertierende Verweisnamenzeichenfolge.</param>
        <summary>Konvertiert das bereitgestellte Objekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein anderes Objekt.</summary>
        <returns>Das zurückgegebene Objekt, das potenziell jedes Objekt ist, das einem Typ in den relevanten Unterstützungsassemblys zugeordnet ist und in XAML mit einem XAML-Namensverweis deklariert werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur eine <xref:System.String> Eingabe stellt ein Konvertierungsergebnis bereit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="value" /> ist eine NULL-Zeichenfolge oder eine leere Zeichenfolge.  
  
- oder - 
 <see cref="T:System.Xaml.IXamlNameResolver" />-Dienst fehlt oder ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="nameReferenceConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
        <param name="value">Das Objekt, für das der Verweisname abgerufen werden soll.</param>
        <param name="destinationType">Der Typ, der zurückgegeben wird. Sie sollten immer auf den <see cref="T:System.String" />-Typ verweisen.</param>
        <summary>Konvertiert ein Objekt in den angegebenen Typ. Dies ist dazu gedacht, XAML-Verweisnamen von Objekten in einem Objektdiagramm zurückzugeben.</summary>
        <returns>Der Verweisname des eingegebenen <paramref name="value" />-Objekts.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xaml.IXamlNameProvider" />-Dienst fehlt oder ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
