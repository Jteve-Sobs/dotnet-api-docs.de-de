<Type Name="EventSetterHandlerConverter" FullName="System.Windows.Markup.EventSetterHandlerConverter">
  <TypeSignature Language="C#" Value="public sealed class EventSetterHandlerConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventSetterHandlerConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.EventSetterHandlerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventSetterHandlerConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetterHandlerConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8aea-101">Konvertiert den Zeichenfolgennamen eines Ereignissetterhandlers in eine Delegatdarstellung.</span><span class="sxs-lookup"><span data-stu-id="e8aea-101">Converts the string name of an event setter handler to a delegate representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8aea-102">Weitere Informationen dazu, wie XAML für WPF Ereignishandlernamen verarbeitet, finden Sie unter [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="e8aea-102">For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetterHandlerConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetterHandlerConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8aea-103">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e8aea-103">Initializes a new instance of the <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (typeDescriptorContext As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="e8aea-104">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e8aea-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="e8aea-105">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="e8aea-105">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="e8aea-106">Gibt zurück, ob dieser Konverter ein Objekt eines Typs in ein <see cref="T:System.Delegate" />-Objekt konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="e8aea-106">Returns whether this converter can convert an object of one type to a <see cref="T:System.Delegate" />.</span></span></summary>
        <returns>
          <span data-ttu-id="e8aea-107"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8aea-107"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8aea-108">Diese Methode gibt `true` nur, wenn `sourceType` ist eine <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="e8aea-108">This method returns `true` only when `sourceType` is a <xref:System.String> type.</span></span> <span data-ttu-id="e8aea-109">Alle anderen `sourceType` Typen geben `false`.</span><span class="sxs-lookup"><span data-stu-id="e8aea-109">All other `sourceType` types return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (typeDescriptorContext As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="e8aea-110">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e8aea-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e8aea-111">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="e8aea-111">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="e8aea-112">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="e8aea-112">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="e8aea-113">Gibt immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="e8aea-113">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="e8aea-114">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e8aea-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="e8aea-115">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span><span class="sxs-lookup"><span data-stu-id="e8aea-115">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="source"><span data-ttu-id="e8aea-116">Die zu konvertierende Quellzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="e8aea-116">The source string to convert.</span></span></param>
        <summary><span data-ttu-id="e8aea-117">Konvertiert die angegebene Zeichenfolge in ein neues <see cref="T:System.Delegate" />-Objekt für den Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="e8aea-117">Converts the specified string to a new <see cref="T:System.Delegate" /> for the event handler.</span></span></summary>
        <returns><span data-ttu-id="e8aea-118">Ein neues <see cref="T:System.Delegate" />-Objekt, das den Ereignishandler darstellt, auf den verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="e8aea-118">A new <see cref="T:System.Delegate" /> that represents the referenced event handler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8aea-119">Die `typeDescriptorContext` müssen Dienste für bereitstellen <xref:System.Xaml.IRootObjectProvider> und <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="e8aea-119">The `typeDescriptorContext` must provide services for <xref:System.Xaml.IRootObjectProvider> and <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8aea-120">Die notwendigen Dienste sind nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="e8aea-120">The necessary services are not available.</span></span>  
  
 <span data-ttu-id="e8aea-121">- oder - </span><span class="sxs-lookup"><span data-stu-id="e8aea-121">-or-</span></span>  
  
 <span data-ttu-id="e8aea-122">Die spezielle Konvertierung konnte nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e8aea-122">Could not perform the specific conversion.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8aea-123"><paramref name="typeDescriptorContext" /> oder <paramref name="source" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8aea-123"><paramref name="typeDescriptorContext" /> or <paramref name="source" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="e8aea-124">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e8aea-124">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="e8aea-125">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span><span class="sxs-lookup"><span data-stu-id="e8aea-125">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="e8aea-126">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="e8aea-126">The value to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e8aea-127">Der Typ, in den der <c>value</c>-Parameter konvertiert wird</span><span class="sxs-lookup"><span data-stu-id="e8aea-127">The type to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="e8aea-128">Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="e8aea-128">Converts the specified value object to the specified type.</span></span> <span data-ttu-id="e8aea-129">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="e8aea-129">Always throws an exception.</span></span></summary>
        <returns><span data-ttu-id="e8aea-130">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="e8aea-130">Always throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8aea-131">Ausgelöst in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="e8aea-131">Thrown in all cases.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>