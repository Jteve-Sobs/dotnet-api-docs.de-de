<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e7587f7af5b68bb898391330b0cf724d2e27a83" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167006" /></Metadata><TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type TypeExtension = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementiert eine Markuperweiterung, die einen <see cref="T:System.Type" /> auf Grundlage einer Zeichenfolgeneingabe zurückgibt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] zur Verwendung finden Sie unter [x:typmarkup Erweiterung](~/docs/framework/xaml-services/x-type-markup-extension.md).  
  
> [!NOTE]
>  Die `{x:Type}` Funktionalität ist im Allgemeinen für den Aufruf von Benutzercode aus Markup. Bei Code, der XAML-Unterstützung implementiert, stammen die Typauflösungs Dienste von <xref:System.Windows.Markup.IXamlTypeResolver> und sind mit der Implementierung des handelnden XAML-Schema Kontexts verknüpft. Versuchen Sie nicht, als <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> Ersatz für einen <xref:System.Windows.Markup.IXamlTypeResolver> Dienstanbieter zu verweisen. der Kontext, den Sie übergeben, ist möglicherweise nicht für eine Typauflösung gültig, und Versuche, ohne gültige Dienste aufzurufen, können nicht ausgeführt werden.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Typverweise werden in der Regel für Stil-, Vorlagen-und Datenbindung- [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]Funktionsbereiche in verwendet, wenn XAML auf diese Features verweist.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec">x:Type-Markuperweiterung</related>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markup Erweiterungen für XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : string -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName">Eine Zeichenfolge, die den Typ identifiziert, auf den verwiesen werden soll. Diese Zeichenfolge weist das Format <c>Präfix:Klassenname</c> auf. <c>Präfix</c> ist das Zuordnungspräfix für einen XAML-Namespace. Es ist nur für den Verweis auf Typen erforderlich, die nicht dem XAML-Standardnamespace zugeordnet werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse, wobei der <see cref="P:System.Windows.Markup.TypeExtension.TypeName" />-Wert auf Grundlage der bereitgestellten <paramref name="typeName" />-Zeichenfolge initialisiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Wert wird nicht ausgewertet, wenn Sie ihn im Konstruktor festlegen. Wenn der Wert nicht `null`ist, wird der Wert anfänglich akzeptiert. Die tatsächliche Analyse und Auswertung des Werts wird verzögert, bis <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> für diese Erweiterung aufgerufen wird, wenn XAML analysiert wird und verfügbare Dienst Kontexte aktiv sind. Zu diesem Zeitpunkt `typeName` wird erwartet, dass als Typ innerhalb eines XAML-Schema Kontexts auflösbar ist und dieser Typ zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, <paramref name="typeName" /> als <see langword="null" /> anzugeben.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : Type -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der durch diese <see cref="T:System.Windows.Markup.TypeExtension" /> dargestellt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse, wobei der Typ direkt deklariert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine Hilfsmethode für Lauf Zeit Code-Verwendungen <xref:System.Windows.Markup.TypeExtension> von und ist nicht Teil des normalen Implementierungs Musters für eine Markup Erweiterung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist gleich <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="typeExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Objekt, das Dienste für die Markuperweiterung bereitstellen kann. Es wird erwartet, dass der Anbieter einen Dienst für <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> bereitstellt.</param>
        <summary>Gibt ein Objekt zurück, das für die Eigenschaft festgelegt werden soll, für die diese Erweiterung angewendet wird. Für <see cref="T:System.Windows.Markup.TypeExtension" /> ist dies der <see cref="T:System.Type" />-Wert, der für den angeforderten Typnamen ausgewertet wurde.</summary>
        <returns>Der <see cref="T:System.Type" />, der für die Eigenschaft festgelegt werden soll, für die die Erweiterung angewendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für `null` `serviceProvider`übergeben, aber nur, wenn <xref:System.Windows.Markup.TypeExtension> diese Instanz mit einem anfänglichen true-Typ im Konstruktor anstelle eines `typeName`erstellt wurde. Andernfalls stützt diese Markup Erweiterungs Implementierung Dienste basierend auf dem bestandenen `serviceProvider`. Dies darf nicht der `null`Fall sein. Der `serviceProvider` soll einen Dienst für <xref:System.Windows.Markup.IXamlTypeResolver>bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <paramref name="member" />-Wert für die Erweiterung ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ein Teil der <paramref name="typeName" />-Zeichenfolge wurde nicht ordnungsgemäß analysiert.  
  
- oder - 
 <paramref name="serviceProvider" /> hat keinen Dienst für <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> bereitgestellt.  
  
- oder - 
 Der <paramref name="typeName" />-Wert wurde nicht in einen Typ aufgelöst.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" /> ist gleich <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Windows.Markup.TypeExtension.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Typinformationen für diese Erweiterung ab oder legt diese fest.</summary>
        <value>Der festgelegte Typ. Im Hinblick auf die Laufzeit kann dies für get access <see langword="null" /> sein; ein Festlegen auf <see langword="null" /> ist jedoch nicht möglich.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Instanz nicht absichtlich mit dem <xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29> Signatur-Konstruktor instanziiert wurde, ist dieser Wert. `null` Diese Eigenschaft wird nicht zurückgesetzt, <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> wenn aufgerufen wird. Wenn Sie möchten, dass der true-Typ dargestellt wird <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> , sollten Sie immer anstelle der Eigenschaft diese Eigenschaft aufzurufen.  
  
 Diese Eigenschaft ist gemäß den üblichen Regeln bezüglich der Verwendung von Markup Erweiterungen feststellbar. Wenn Sie jedoch mit <xref:System.Type>festlegen, ist der Zweck dieser Markup Erweiterung irrelevant, da derselbe <xref:System.Type> von einem <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> -Befehl zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Windows.Markup.TypeExtension.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den durch diese Markuperweiterung dargestellten Typnamen ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Typ bezeichnet. Diese Zeichenfolge verwendet das Format *Präfix*<c>:</c>*Klassenname*. *Präfix* ist das Zuordnungspräfix für einen XML-Namespace. Es ist nur für den Verweis auf Typen erforderlich, die nicht dem XML-Standardnamespace für WPF ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]) zugeordnet werden.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, es auf <see langword="null" />festzulegen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
