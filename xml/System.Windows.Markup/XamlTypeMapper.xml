<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67111545063cb8271973fe3a5511c778fbb67cd4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166576" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ordnet dem entsprechenden CLR-<see cref="T:System.Type" /> in Assemblys einen XAML-Elementnamen zu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper>ist Teil eines erweiterten WPF-Szenarios, das Alternativen Kontext <xref:System.Windows.Markup.XamlReader> für <xref:System.Windows.Markup.XamlWriter>und bereitstellt. Für [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF-Anwendungen sollten Sie in <xref:System.Xaml.XamlSchemaContext> Erwägung gezogen werden, dieses Szenario zu überschreiben, <xref:System.Windows.Markup.XamlTypeMapper>anstatt zu versuchen, zu verwenden.  
  
 <xref:System.Windows.Markup.XamlTypeMapper>kann verwendet werden, um den XAML-Parser über eine direktere Methode als die Anwendung von <xref:System.Windows.Markup.XmlnsDefinitionAttribute> Werten im Assemblycode mit benutzerdefinierten Zuordnungsinformationen bereitzustellen. Dies kann hilfreich für die Konsolidierung aller CLR-Namespaces in einer Assembly sein oder für Verweise auf Typen, die XAML-bereit in einer vorhandenen Assembly sind, ohne Sie neu kompilieren zu müssen, <xref:System.Windows.Markup.XmlnsDefinitionAttribute> um die Zuordnung hinzuzufügen.  
  
 In der Regel erstellen <xref:System.Windows.Markup.XamlTypeMapper> Sie eine-Instanz, um <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> den-Eigenschafts <xref:System.Windows.Markup.ParserContext>Wert für einen anzugeben. Der <xref:System.Windows.Markup.ParserContext> wiederum kann als Kontext für einen <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> -Rückruf verwendet werden.  
  
## <a name="default-mapper"></a>Standard-Mapper  
 Sie können einen Standard-Mapper mithilfe der <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> statischen-Eigenschaft abrufen. Der Standard-Mapper funktioniert nur in einer standardassemblyliste. Es werden keine spezifischen Informationen zu Assemblys ( <xref:System.Windows.Markup.XamlTypeMapper> wie in Konstruktoren angegeben) verwendet.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlTypeMapper" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Das Array von Assemblynamen, das vom <see cref="T:System.Windows.Markup.XamlTypeMapper" /> verwendet werden soll.</param>
        <summary>Initialisiert durch Angeben eines Arrays von Assemblynamen, die vom <see cref="T:System.Windows.Markup.XamlTypeMapper" /> verwendet werden sollen, eine neue Instanz der <see cref="T:System.Windows.Markup.XamlTypeMapper" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Das Array von Assemblynamen, das vom <see cref="T:System.Windows.Markup.XamlTypeMapper" /> verwendet werden soll.</param>
        <param name="namespaceMaps">Das Array von Namespacezuordnungen, das von <see cref="T:System.Windows.Markup.XamlTypeMapper" /> verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlTypeMapper" />-Klasse mit dem angegebenen Array von Assemblynamen und den angegebenen Namespacezuordnungen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Das Präfix für den XML-Namespace.</param>
        <param name="clrNamespace">Der CLR-Namespace, der die zuzuordnenden Typen enthält.</param>
        <param name="assemblyName">Die Assembly, die den CLR-Namespace enthält.</param>
        <summary>Definiert in Assemblys eine Zuordnung zwischen einem XML-Namespace und CLR-Namespaces und fügt diese den <see cref="T:System.Windows.Markup.XamlTypeMapper" />-Informationen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>ist eine programmgesteuerte Methode zum Hinzufügen einer Zuordnung.  Beispielsweise entsprechen die verschiedenen Teile der folgenden XAML-Mapping-Anweisung den Parametern des <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 `xmlNamespace` Ist ,`clrNamespace`ist , und`assemblyName` ist .`SDKSamples` `SDK` `Samples`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="clrNamespace" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, auf den zugegriffen werden soll.</param>
        <summary>Fordert die Berechtigung für einen abgeleiteten <see cref="T:System.Windows.Markup.XamlTypeMapper" />-Typ an, der mit voller Vertrauenswürdigkeit aufgerufen wird, um auf einen bestimmten internen Typ zuzugreifen.</summary>
        <returns><see langword="true" />, wenn auf den internen Typ zugegriffen werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht von einer Unterklasse überschrieben <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> wird, `false`gibt immer zurück.  
  
 Beim Überschreiben durch eine Unterklasse sollte das Verhalten lauten, das <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> zurückgeben `true` soll, wenn auf den internen Typ zugegriffen `false`werden kann, andernfalls.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz des zu verwendenden <see cref="T:System.Windows.Markup.XamlTypeMapper" /> ab, wenn keiner angegeben wurde.</summary>
        <value>Der Standard-Typ-Mapper.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standard-Mapper funktioniert nur in einer standardassemblyliste. Es werden keine spezifischen Informationen zu Assemblys ( <xref:System.Windows.Markup.XamlTypeMapper> wie in Konstruktoren angegeben) verwendet. In der aktuellen Implementierung lautet die standardassemblyliste `PresentationFramework`: `WindowsBase`, `PresentationCore`,.  
  
 Die Verwendung des standardmappers bedeutet nicht, dass Sie benutzerdefinierte Assemblys/Typen in XAML überhaupt nicht verwenden können. Dies bedeutet nur, dass Sie bei Verwendung von benutzerdefinierten Typen/Assemblys die konventionelle XAML-Technik zum Erstellen der Zuordnungen als `xmlns` Attribute auf jeder XAML-Seite verwenden müssen, auf die anstelle einer Typmapper-API auf die Typen/Assemblys verwiesen wird. Weitere Informationen finden Sie unter [XAML-Namespaces und Namespace Zuordnung für WPF-XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Das angegebene XML-Namespacepräfix.</param>
        <param name="localName">Der "lokale" Name des XAML-Elements, für den der zugeordnete <see cref="T:System.Type" /> abgerufen werden soll. Lokal bezieht sich in diesem Kontext auf die Zuordnung im Vergleich zum bereitgestellten <paramref name="xmlNamespace" />.</param>
        <summary>Ruft mit dem angegebenen XML-Namespacepräfix und dem angegebenen Elementnamen den CLR-<see cref="T:System.Type" /> ab, dem ein angegebenes XAML-Element zugeordnet ist.</summary>
        <returns>Der <see cref="T:System.Type" /> für das Objekt, oder <see langword="null" />, wenn keine Zuordnung aufgelöst werden konnte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Typ nicht gefunden werden kann, der den bereitgestellten Informationen `null` zugeordnet ist, wird zurückgegeben.  
  
 Fügen Sie das Präfix nicht als Teil `localName`von ein. Trennen Sie für alle XAML-Element Informationen, die mit `xmlNamespace` dem `localName` Präfix versehen sind, diese in die Komponenten und für diesen API-  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="localName" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Der Kurzname der Assembly ohne Erweiterung oder Pfad (entspricht <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
        <param name="assemblyPath">Der Dateipfad der Assemblydatei. Der Assemblypfad muss ein vollständiger Dateipfad mit einer Dateierweiterung sein.</param>
        <summary>Gibt den Pfad an, der beim Laden einer Assembly verwendet werden soll.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="assemblyPath" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" /> ist gleich <see cref="F:System.String.Empty" />.  
  
- oder - 
 <paramref name="assemblyPath" /> ist gleich <see cref="F:System.String.Empty" />.  
  
- oder - 
 <paramref name="assemblyPath" /> ist kein vollständiger Dateipfad mit einer Dateierweiterung.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
