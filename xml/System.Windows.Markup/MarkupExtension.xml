<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8304293a4f3587ddb4a6d1d2c316286d66ba82d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960625" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt für Implementierungen von XAML-Markuperweiterungen eine Basisklasse bereit, die von .NET Framework-XAML-Diensten und anderen zugehörigen XAML-Readern und XAML-Writern unterstützt werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Markuperweiterungen geben Objekte zurück, für die Aufrufer, die auf Grundlage der Eingabe von zeichenfolgenattributwerten oder Markupelementen in XAML. Markuperweiterungen geben Objekte zurück, in eine ausgeklügeltere Methode als Typkonverter alleine bewältigen können. Ein XAML-Objektwriter Ruft einen Typkonverter, da ein Typ oder Member eine Typkonverter-Implementierung zugeordnet ist. Von der CLR Verweisrahmen, dies bedeutet, dass ein Typ oder Member <xref:System.ComponentModel.TypeConverterAttribute> zugeordnet sind. Aus der XAML-Typ-System-Perspektive, dies bedeutet, dass ein XAML-Typ oder ein XAML-Element einen Wert für die `TypeConverter` Eigenschaft. Der Aufruf eines Typkonverters ist an der Definition oder den Eigenschaftennamen gebunden und wird immer aufgerufen werden, indem XAML-Verarbeitung für diese Fälle. Im Gegensatz dazu eine Markuperweiterung ist unter der Kontrolle der Benutzercode als auch Benutzer erzeugten Markup und angewendet werden kann, wenn in Ihrem Anwendungsszenario verlangt. Eine Markuperweiterung kann aufgerufen werden, und kann zum Festlegen von Werten der verschiedenen Typmember, verwendet werden, solange der Markuperweiterung Rückgabetyp auf diesen Wert zugewiesen werden.  
  
 Informationen zum Erstellen einer benutzerdefinierten Markuperweiterung, finden Sie unter <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. Weitere Informationen über Markuperweiterungen im Allgemeinen finden Sie unter [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). Wenn Sie in WPF und verwenden oder Erstellen von Markuperweiterungen für XAML erstellen, weitere relevante Informationen finden Sie im Thema [Markuperweiterungen und WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 Die <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> -Methode der einzelnen Markuperweiterungsimplementierung können eine <xref:System.IServiceProvider> zur Laufzeit, das Kontext bereitstellen kann. Dies <xref:System.IServiceProvider> wird dann abgefragt, für bestimmte Dienste, die Informationen, wie z. B. übergeben <xref:System.Windows.Markup.IProvideValueTarget> oder <xref:System.Windows.Markup.IXamlTypeResolver>. Weitere Informationen zu Dienstkontexte für eine Markuperweiterung, finden Sie unter [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Abgeleitete Klassen sollten zugeschrieben werden <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> informieren Sie Kunden, die von der spezifischsten zur Verfügung, von der Markuperweiterung Rückgabetyp <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> Implementierung.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markuperweiterungen für XAML</related>
    <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Übersicht über Markuperweiterungen für XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz einer Klasse, die von <see cref="T:System.Windows.Markup.MarkupExtension" /> abgeleitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Markup.MarkupExtension> abstrakte Klasse errichtet keine privaten Werte, die Initialisierung erfordern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Eine funktionale Markuperweiterung sollten ihren eigenen öffentlichen Standardkonstruktor definieren. Darüber hinaus muss die Markuperweiterung Konstruktoren implementieren, die für die gewünschten Funktionen der Erweiterung und Markupverwendung geeignet sind. Weitere Informationen finden Sie unter [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Ein Dienstanbieter-Hilfsprogramm, das Dienste für die Markuperweiterung bereitstellen kann.</param>
        <summary>Gibt bei Implementierung in einer abgeleiteten Klasse ein Objekt zurück, das als Wert der Zieleigenschaft für diese Markuperweiterung bereitgestellt wird.</summary>
        <returns>Der Objektwert, der für die Eigenschaft festgelegt werden soll, auf die die Erweiterung angewendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein XAML-Prozessor einen Knoten und Element, die eine Markuperweiterung ist verarbeitet, ruft es die <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> -Methode dieser Markuperweiterung und das Ergebnis in den Objekt-Graph-API oder Serialisierung-Stream schreibt. Der XAML-Objektwriter übergibt den Dienstkontext für jede eine solche Implementierung über die `serviceProvider` Parameter.  
  
 Weitere Informationen zur Implementierung finden Sie unter "Hinweise zur Implementierung" Abschnitt <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in eine benutzerdefinierte Markuperweiterung.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
  
> [!IMPORTANT]
>  WPF-Klassen, die bestimmte Interaktionen mit Markup-Set-Vorgänge nicht empfehlenswert <xref:System.Windows.Markup.IReceiveMarkupExtension> für eine [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] Implementierung. Verwendung <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-stattdessen Rückrufe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Allgemeine Dienste, die von der Standard-Dienstanbieter, der in der Regel an einen benutzerdefinierten verfügbar oder bereits vorhanden ist zurückgegeben <see cref="T:System.Windows.Markup.MarkupExtension" /> Implementierung enthalten die folgenden primären Dienste.  
  
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> meldet den Objektverweis und ein Bezeichner für eine aus dem Kontext, in denen die Markuperweiterung verwendet wird 
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> Stellt einen Dienst, der gleicht die allgemeine XAML-Objekt, das Schreiben von Verhalten, das bereitstellen kann ein <see cref="T:System.Type" /> basierend auf einer XAML-Typname. Der Name kann optional ein Präfix für einen zugeordneten XAML-Namespace enthalten.  
  
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> Stellt den aktiven XAML-Schemakontext direkt an. Über die gemeldeten <see cref="T:System.Xaml.XamlSchemaContext" />, Sie erhalten die XAML-Schemakontextinformationen z. B. wie die Assemblys zugeordnet sind, für die Unterstützung von Typen, bevorzugte Präfix in Assemblys, listet der einzelnen <see cref="T:System.Xaml.XamlType" /> in einer Assembly, und So weiter.  
  
-Andere Dienste verfügbar für spezialisierter Markup Extension-Szenarien umfassen: 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
Potenziell Implementierungen von <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> können ignorieren die <paramref name="serviceProvider" /> Parameter. Dies ist auf einige grundlegende Szenarien, in denen kein Kontext für die Rückgabe eines Werts erforderlich ist.  
  
In der typischen Verwendung der .NET Framework-XAML-Dienste und der implementierten XAML Objekt Writer bietet einen Dienstanbieter an alle Wert Konverter-Methoden, die aufgerufen werden, während der XAML verarbeitet. Allerdings sollten für mehr Stabilität, Sie Codepfade für null-Werte sowohl für den Service Provider selbst als auch für alle angeforderten Dienst bereitstellen. NULL-Werte können auftreten, wenn die Markuperweiterung in einer Situation angewendet wird, ist zur Unterstützung typischer Dienst durch einen XAML-Prozessor-Infrastruktur nicht verfügbar.  
  
Weitere Informationen über die verfügbare Dienste aus der XAML-Dienstkontext-Anbieter und deren Verwendung finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
Implementierungen, die einen bestimmten Dienst zu sein, um ein nützliches erzeugen erfordern <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> Ergebnis sollten Ausnahmen auslösen, wenn dieser Dienst nicht verfügbar ist. Ist die empfohlene auszulösende Ausnahme <see cref="T:System.InvalidOperationException" />.  
  
Die Implementierung kann auch Ausnahmen auslösen, wenn eines der Argumente, die die benutzerdefinierte Markuperweiterung benötigt, um zu gewährleisten, dass ein Wert null ist, ist für seinen Datentyp ungültig oder enthält einen Wert, der Verarbeitung die Markuperweiterung kann keine. Ist die empfohlene auszulösende Ausnahme <see cref="T:System.InvalidOperationException" />.</para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typkonverter oder Markuperweiterungen für XAML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Übersicht über Markuperweiterungen für XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>