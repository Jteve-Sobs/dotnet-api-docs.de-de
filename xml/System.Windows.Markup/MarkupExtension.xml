<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupExtension.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f36d9706c5d26b97dcc9537ee7078eceaf138fc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f36d9706c5d26b97dcc9537ee7078eceaf138fc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</source>
          <target state="translated">Stellt eine Basisklasse für Implementierungen von XAML-Markuperweiterungen bereit, die von .NET Framework-XAML-Diensten sowie anderen XAML-Readern und XAML-Writern unterstützt werden können.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</source>
          <target state="translated">Markuperweiterungen geben Objekte basierend auf zeichenfolgenattributwerten oder Markupelementen in XAML-Eingabe Aufrufern zurück.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</source>
          <target state="translated">Markuperweiterungen geben Objekte zurück, auf anspruchsvollere Weise als Typkonverter allein ausführen können.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</source>
          <target state="translated">Ein XAML-Objektwriter Ruft einen Typkonverter, da ein Typ oder Member eine Typkonverter-Implementierung zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the CLR frame of reference, this means that a type or member is <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attributed.</source>
          <target state="translated">Von der CLR Referenzrahmen, dies bedeutet, dass ein Typ oder Member <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attributiert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its <ph id="ph1">`TypeConverter`</ph> property.</source>
          <target state="translated">Aus der Perspektive der Verwendung von XAML-Typ-System, das heißt, dass ein XAML-Typ oder ein XAML-Element einen Wert für die <ph id="ph1">`TypeConverter`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</source>
          <target state="translated">Der Aufruf eines Typkonverters ist auf die Definition oder den Eigenschaftennamen gebunden und wird vom XAML-Verarbeitung für diese Fälle immer aufgerufen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</source>
          <target state="translated">Im Gegensatz dazu eine Markuperweiterung mehr unter der Kontrolle der Benutzercode als auch Markup Benutzer erstellt und kann angewendet werden, wenn ein Szenario für die Anwendung es erfordert.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</source>
          <target state="translated">Eine Markuperweiterung kann aufgerufen werden und kann zum Festlegen von Werten der verschiedenen Typmember, verwendet werden, solange die Markuperweiterung Rückgabetyp zugewiesen werden, um diesen Wert ist.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For information on creating a custom markup extension, see <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</source>
          <target state="translated">Informationen zum Erstellen einer benutzerdefinierten Markuperweiterung finden Sie unter <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on markup extensions in general, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Markuperweiterungen im Allgemeinen finden Sie unter <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
          <target state="translated">Wenn Sie auf WPF und verwenden oder erstellen Markuperweiterungen für XAML erstellen, weitere relevante Informationen finden Sie im Thema <bpt id="p1">[</bpt>Markuperweiterungen und WPF-XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of each markup extension implementation can use an <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> at run time that can provide context.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> -Methode jeder Markuperweiterungsimplementierung können eine <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> zur Laufzeit, das Kontext bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>This  <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> is then queried for specific services that pass information, such as <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
          <target state="translated">Dies <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> wird dann abgefragt, für bestimmte Dienste, die Weitergabe von Informationen, wie z. B. <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on service contexts for a markup extension, see <bpt id="p1">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Dienstkontexte für eine Markuperweiterung finden Sie unter <bpt id="p1">[</bpt>verfügbare Dienstkontexte Typkonverter und Markuperweiterungen<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Derived classes should be attributed with <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> to inform consumers of the most specific return type available from the markup extension's <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementation.</source>
          <target state="translated">Abgeleitete Klassen sollten zugeschrieben werden <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> Consumer, von dem am spezifischsten Rückgabetyp entsprechen, die von der Markuperweiterung informiert <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Initializes a new instance of a class derived from <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz einer Klasse, die von <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> abgeleitet wurde.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> abstract class does not hold any private values that require initialization.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> abstrakte Klasse enthält private Werte, die Initialisierung erfordern.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>A functional markup extension should define its own public default constructor.</source>
          <target state="translated">Eine funktionale Markuperweiterung sollten ihren eigenen öffentlichen Standardkonstruktor definieren.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</source>
          <target state="translated">Darüber hinaus sollte die Markuperweiterung Konstruktoren implementieren, die für die Erweiterung beabsichtigten Funktionen und Markupverwendung geeignet sind.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>A service provider helper that can provide services for the markup extension.</source>
          <target state="translated">Ein Dienstanbieter-Hilfsprogramm, das Dienste für die Markuperweiterung bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</source>
          <target state="translated">Gibt bei Implementierung in einer abgeleiteten Klasse ein Objekt zurück, das als Wert der Zieleigenschaft für diese Markuperweiterung bereitgestellt wird.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The object value to set on the property where the extension is applied.</source>
          <target state="translated">Der Objektwert, der für die Eigenschaft festgelegt werden soll, auf die die Erweiterung angewendet wird.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When a XAML processor processes a type node and member value that is a markup extension, it invokes the <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of that markup extension and writes the result into the object graph or serialization stream.</source>
          <target state="translated">Wenn ein XAML-Prozessor einen Knoten und Element, der eine Markuperweiterung ist verarbeitet, ruft der <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> -Methode dieser Markuperweiterung und das Ergebnis in den Objektstream, Diagramm oder der Serialisierung schreibt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The XAML object writer passes service context to each such implementation through the <ph id="ph1">`serviceProvider`</ph> parameter.</source>
          <target state="translated">Der XAML-Objektwriter übergibt Dienstkontext an jede solche Implementierung über die <ph id="ph1">`serviceProvider`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>See "Notes to Implementers" section for more information on how to implement <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> in a custom markup extension.</source>
          <target state="translated">Weitere Informationen zum Implementieren finden Sie unter "Hinweise zur Implementierung" Abschnitt <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> in eine benutzerdefinierte Markuperweiterung.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF Usage Notes</source>
          <target state="translated">Hinweise zur WPF-Verwendung</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF classes that have specific interactions with markup set operations should not rely on <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> for a <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementation.</source>
          <target state="translated">WPF-Klassen, die bestimmte Interaktionen mit Markup-Mengenoperationen verfügen sollten Sie sich nicht auf <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> für eine <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-attributed callbacks instead.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-stattdessen Rückrufe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Common services returned by the default service provider that is typically available to a custom or existing <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> implementation include the following primary services.</source>
          <target state="translated">Allgemeine Dienste, die von der Standard-Dienstanbieter, der in der Regel an einen benutzerdefinierten verfügbar oder vorhandene zurückgegeben <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> Implementierung enthalten die folgenden primären Dienste.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> reports the object reference and a property identifier from the context where the markup extension is used</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> meldet den Objektverweis und einen Eigenschaftenbezeichner aus dem Kontext, wo die Markuperweiterung verwendet wird</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> exposes a service that parallels the general XAML object writing behavior that can provide a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> based on a XAML type name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> einen Dienst, der die allgemeine XAML-Objekt, das Schreiben von Verhalten, das bereitstellen kann parallel macht eine <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> basierend auf einem XAML-Typnamen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The name can optionally include a prefix for a mapped XAML namespace.</source>
          <target state="translated">Der Name kann optional ein Präfix für einen zugeordneten XAML-Namespace enthalten.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> exposes the active XAML schema context directly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> macht den aktiven XAML-Schemakontext direkt verfügbar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>From the reported <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in an assembly, and so on.</source>
          <target state="translated">Aus der gemeldeten <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, Informationen erhalten Sie von XAML-Schema Kontext z. B. wie Assemblys, für die Unterstützung von Typen, bevorzugte Präfix in Assemblys zugeordnet sind, listet jedes <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in einer Assembly und So weiter.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Other services available for more specialized markup extension scenarios include:</source>
          <target state="translated">Andere Dienste verfügbar für spezialisierter Markup Extension-Szenarien umfassen:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Potentially, implementations of <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> can ignore the <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> parameter.</source>
          <target state="translated">Potenziell Implementierungen von <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> können ignorieren die <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>This is viable for some basic scenarios, where no context at all is required for returning a value.</source>
          <target state="translated">Dies ist für einige grundlegende Szenarien, in denen überhaupt kein Kontext für die Rückgabe eines Werts erforderlich ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</source>
          <target state="translated">In der typischen Auslastung der .NET Framework-XAML-Dienste und die implementierten XAML-Objekt Writer bietet einen Dienstanbieter, um alle Wert die Konvertermethoden aufruft, die während der XAML aufgerufen werden verarbeitet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</source>
          <target state="translated">Allerdings sollten aus Gründen der Stabilität Sie Codepfade für null-Werte für den Service-Anbieter selbst und für alle angeforderten Dienst bereitstellen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</source>
          <target state="translated">NULL-Werte auftreten, wenn die Markuperweiterung in einer Situation angewendet wird, ist zur Unterstützung typischer Dienst durch einen XAML-Prozessor-Infrastruktur nicht verfügbar.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>For more information on available services from the XAML service provider context and how to use them, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</source>
          <target state="translated">Weitere Informationen über die verfügbare Dienste aus der Verwendung von XAML-Dienstkontext für Anbieter und deren Verwendung finden Sie unter <bpt id="p1">[</bpt>Typkonverter und Markuperweiterungen für XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Implementations that require a certain service to be available in order to produce a useful <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> result are expected to throw exceptions if that service is not available.</source>
          <target state="translated">Implementierungen, die einen bestimmten Dienst verfügbar sind, um nützlich zu erzeugen, erfordern <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> Ergebnis voraussichtlich Ausnahmen auslösen, wenn dieser Dienst nicht verfügbar ist.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Ist die empfohlene auszulösende Ausnahme <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</source>
          <target state="translated">Die Implementierung kann auch Ausnahmen auslösen, wenn eines der Argumente, die die benutzerdefinierte Markuperweiterung benötigt, um zu gewährleisten, dass ein Wert null ist, ist für diesen Datentyp ungültig oder enthält keinen Wert an, dass die Markuperweiterung verarbeiten kann.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Ist die empfohlene auszulösende Ausnahme <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>