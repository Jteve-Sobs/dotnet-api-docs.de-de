<Type Name="XmlnsPrefixAttribute" FullName="System.Windows.Markup.XmlnsPrefixAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7789bafe45bc016c0c58b58710b0a31958b4b2a8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166264" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlnsPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlnsPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlnsPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlnsPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlnsPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type XmlnsPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt ein empfohlenes Präfix an, das einem XAML-Namespace für die XAML-Verwendung zugeordnet werden soll, wenn Elemente und Attribute in eine XAML-Datei geschrieben werden (Serialisierung) oder wenn mit einer Entwurfsumgebung interagiert wird, die XAML-Bearbeitungsfunktionen aufweist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML-Prozessoren oder Frameworks, die XAML integrieren, oder ein beliebiger Prozess, der die XAML-Serialisierung ausführt, sollten im Allgemeinen das empfohlene Präfix berücksichtigen. Das Präfix ist möglicherweise erforderlich, wenn Präfixe aus bestimmten Zuordnungen in der ursprünglichen XAML-Quelle nicht im Laufzeitobjekt Diagramm oder anderweitig von einem Framework oder einer Technologie gespeichert werden. Ein Framework kann bestimmte Einstellungen für die Serialisierung seiner eigenen Typen aufweisen, die das empfohlene Präfix aus seinen eigenen Assemblys ignorieren. Dies kann dazu geführt werden, dass ein XAML-Standard Namespace einheitlich herauf gestuft wird. Ein solches Framework sollte jedoch weiterhin Empfohlene Präfixe für mögliche Drittanbieter-und Tool Verwendungen der XAML-Typen bereitstellen. Weitere Informationen finden Sie im Abschnitt "bewährte Methoden für XAML-Designer-Unterstützung oder allgemeine Serialisierung" weiter unten.  
  
 Eine allgemeine Empfehlung für Präfixe besteht darin, kurze Zeichen folgen zu verwenden, da das Präfix in der Regel auf alle serialisierten Elemente angewendet wird, die aus dem XAML-Namespace stammen. Die Länge der Präfix Zeichenfolge kann eine spürbare Auswirkung auf die Größe der serialisierten XAML-Ausgabe haben.  
  
 Wenn ein angefordertes Präfix bereits von einem anderen zuvor gefundenen/serialisierten XAML-Namespace Bezeichner verwendet wird, ist das Verhalten nicht angegeben (das Verhalten ist für jede einzelne XAML-Prozessor Implementierung).  
  
 In den meisten Fällen wenden <xref:System.Windows.Markup.XmlnsPrefixAttribute> Sie nur an, wenn Sie für denselben XAML-Namespace auch mindestens eine <xref:System.Windows.Markup.XmlnsDefinitionAttribute> in der Assembly angewendet haben.  
  
 In früheren Versionen des .NET Framework war diese Klasse in der WPF-spezifischen Assembly Windows Base vorhanden. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]befindetsichin derSystem.XAML-Assembly.<xref:System.Windows.Markup.XmlnsPrefixAttribute> Weitere Informationen finden Sie unter [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="best-practice-for-xaml-designer-support-or-general-serialization"></a>Bewährte Methoden für XAML-Designer Unterstützung oder allgemeine Serialisierung  
 Auch wenn Sie beabsichtigen, dass der zugeordnete XAML-Namespace in den meisten Verwendungs Fällen für das Framework oder die Bibliothek der Standard-XAML-Namespace sein soll, sollten Sie immer noch eine nicht leere Zeichenfolge als das empfohlene Präfix für einen XAML-Namespace angeben. Standard-XAML-Namespace Informationen werden in einzelne XAML-Dateien und XAML-knotenstreams übertragen. Der standardmäßige XAML-Namespace und die Definition in einer bestimmten XAML-Quelle können ohne Verwendung <xref:System.Windows.Markup.XmlnsPrefixAttribute>von für die Serialisierung pro Fall fortgeführt werden. Das <xref:System.Windows.Markup.XmlnsPrefixAttribute> ist jedoch nützlich für Fälle, in denen der XAML-Autor festgelegt hat, dass der XAML-Standard Namespace einem anderen zugeordnet werden soll. In diesem Szenario kann ein XAML-Text-Editor, der in eine <xref:System.Windows.Markup.XmlnsPrefixAttribute> Entwurfs Umgebung eingebettet ist, als Hinweis für eine anfängliche XAML-Namespace `xmlns` Zuordnung verwendet werden. Oder eine Entwurfs Umgebung kann dem Unterstützungs-XAML Just-in-Time-Zuordnungen für Entwurfs Metaphern hinzufügen, z. b. das Ziehen von Objekten aus einer Toolbox und in eine visuelle Entwurfs Oberfläche. Es ist auch denkbar, dass ein Designer gleichzeitig mehrere XAML-aktivierbare Frameworks unterstützen kann und über ein gängiges XAML-Serialisierungsprogramm verfügt, das .NET Framework XAML-Diensten anstelle der frameworkspezifischen Serialisierung basiert. Durch die <xref:System.Windows.Markup.XmlnsPrefixAttribute> Angabe eines für diese Szenarien wird die XAML-Verwendung für Ihre Typen portabler und stabiler, wenn der XAML-Code zwischen den Entwurfs Tools ausgetauscht wird, oder es wird ein Roundtrip zwischen XAML-Editoren und anderen Consumern wie Markup Compiler oder anderen Benutzern durchgeführt. Serialisierung.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">XAML-bezogene CLR-Attribute für benutzerdefinierte Typen und Bibliotheken</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Definieren von benutzerdefinierten Typen für die Verwendung mit .NET Framework-XAML-Diensten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Konzeptionelle Dokumentation zur net-XAML-Dienste</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlnsPrefixAttribute (string xmlNamespace, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlNamespace, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlNamespace As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlnsPrefixAttribute(System::String ^ xmlNamespace, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XmlnsPrefixAttribute : string * string -&gt; System.Windows.Markup.XmlnsPrefixAttribute" Usage="new System.Windows.Markup.XmlnsPrefixAttribute (xmlNamespace, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="prefix" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Der XAML-Namespacebezeichner.</param>
        <param name="prefix">Die empfohlene Präfixzeichenfolge.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> oder <paramref name="prefix" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das diesem Attribut zugeordnete empfohlene Präfix ab.</summary>
        <value>Die empfohlene Präfixzeichenfolge.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespace">
      <MemberSignature Language="C#" Value="public string XmlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlNamespace : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XAML-Namespacebezeichner ab, der diesem Attribut zugeordnet ist.</summary>
        <value>Der XAML-Namespacebezeichner.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
