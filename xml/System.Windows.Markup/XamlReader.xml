<Type Name="XamlReader" FullName="System.Windows.Markup.XamlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb09b92c85f6899f8f0386e85d5fda59b541d871" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39361140" /></Metadata><TypeSignature Language="C#" Value="public class XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader" />
  <TypeSignature Language="F#" Value="type XamlReader = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cfe06-101">Liest XAML-Eingabe und erstellt ein Objektdiagramm und verwendet dazu den WPF-XAML-Standardparser sowie einen zugeordneten XAML-Objektwriter.</span><span class="sxs-lookup"><span data-stu-id="cfe06-101">Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-102">Die synchrone <xref:System.Windows.Markup.XamlReader.Load%2A> Methoden sind statisch, aber die asynchronen <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> Methoden sind nicht statisch und erfordern eine Instanz der dem <xref:System.Windows.Markup.XamlReader> zu verwendende Klasse an.</span><span class="sxs-lookup"><span data-stu-id="cfe06-102">The synchronous <xref:System.Windows.Markup.XamlReader.Load%2A> methods are static, but the asynchronous <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> methods are not static and require an instance of the <xref:System.Windows.Markup.XamlReader> class to use.</span></span>  
  
 <span data-ttu-id="cfe06-103">Die Ausgabe der `Load` Methoden wird ein einzelnes Objekt, das das Stammobjekt der erstellten Objektstruktur oder eines Objektdiagramms darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-103">The output of the `Load` methods is a single object, which represents the root object of a created object tree or object graph.</span></span> <span data-ttu-id="cfe06-104">Objektdiagramme, die vom erstellten <xref:System.Windows.Markup.XamlReader> werden in der Regel an der vorhandenen Objektstruktur einer WPF-Anwendung zur Laufzeit hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-104">Object graphs that are created by <xref:System.Windows.Markup.XamlReader> are typically added to the existing object tree of a WPF application at run time.</span></span> <span data-ttu-id="cfe06-105">Andernfalls gilt die neue Objektdiagramm als zum Zweck der WPF-Anwendungsmodell getrennt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-105">Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</span></span> <span data-ttu-id="cfe06-106">Dies bedeutet, dass es nicht gerendert, nicht auf der WPF-Anwendung Hauptobjektstruktur angewendet zugegriffen mithilfe eines der Verfahren der Objekt-Struktur als werden (z. B. die APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span><span class="sxs-lookup"><span data-stu-id="cfe06-106">This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span></span> <span data-ttu-id="cfe06-107">Weitere Informationen zu den Konzepten der Objekt-Struktur finden Sie unter [Strukturen in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="cfe06-107">For more information on object tree concepts, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="cfe06-108"><xref:System.Windows.Markup.XamlReader> unterstützt die folgenden Hauptszenarien:</span><span class="sxs-lookup"><span data-stu-id="cfe06-108"><xref:System.Windows.Markup.XamlReader> supports the following primary scenarios:</span></span>  
  
-   <span data-ttu-id="cfe06-109">**Das Klonen/Objekt-Factory**: ohne zusätzliche Mechanismen kann ein Verweistyp in der Regel kann nicht einbezogen werden in mehr als eine Position in der Struktur eines WPF-Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfe06-109">**Cloning/object factory**: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</span></span> <span data-ttu-id="cfe06-110">(Beispiele für weiterer Mechanismen, die bieten Unterstützung für die Freigabe erneut in WPF oder Verwendung sind Objekte auf der Grundlage von <xref:System.Windows.Freezable>, oder Unterstützung für häufig gemeinsam nutzbare Objekte wie z. B. <xref:System.Windows.Media.Brush> verwiesen wird, werden als ein Element aus einem <xref:System.Windows.ResourceDictionary>.) Eine Möglichkeit, ein Objekt zu klonen, der bereits in die Objektstruktur wird serialisiert das Objekt mit <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cfe06-110">(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on <xref:System.Windows.Freezable>, or support for commonly shareable objects such as <xref:System.Windows.Media.Brush> that are referenced as an item from a <xref:System.Windows.ResourceDictionary>.) One way to clone an object that is already in the object tree is to serialize the object using <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cfe06-111">Sie verwenden dann die serialisierte Zeichenfolge als Eingabe für einen Aufruf von <xref:System.Windows.Markup.XamlReader.Load%2A>, mit einem Stream oder <xref:System.Xml.XmlReader> als Vermittler.</span><span class="sxs-lookup"><span data-stu-id="cfe06-111">You then use the serialized string as input for a call to <xref:System.Windows.Markup.XamlReader.Load%2A>, with a stream or <xref:System.Xml.XmlReader> as an intermediary.</span></span>  
  
-   <span data-ttu-id="cfe06-112">**Erstellen Objekte basierend auf just-in-Time-Informationen**: Es gibt häufig weitere Möglichkeiten, die späte Bindung oder vom Benutzer bereitgestellte Eingabe, die der Status von vorhandenen Objekten geändert haben.</span><span class="sxs-lookup"><span data-stu-id="cfe06-112">**Constructing objects based on just-in-time information**: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</span></span> <span data-ttu-id="cfe06-113">Beispielsweise können den gleichen Wert verwenden, um mehr als eine Eigenschaft festzulegen oder mithilfe der Datenbindung.</span><span class="sxs-lookup"><span data-stu-id="cfe06-113">For example you could use the same value to set more than one property, or use data binding.</span></span> <span data-ttu-id="cfe06-114">Aber wenn Sie ein Szenario, in dem auch der Typ des zu erstellenden Objekts nur bestimmbar zur Laufzeit oder Interaktion des Benutzers ist, verfügen, erstellen Sie ein solches Objekt durch das Einrichten einer Zeichenfolge für <xref:System.Windows.Markup.XamlReader.Load%2A> Eingabe ist oft eine nützliche Technik.</span><span class="sxs-lookup"><span data-stu-id="cfe06-114">But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for <xref:System.Windows.Markup.XamlReader.Load%2A> input is often a useful technique.</span></span>  
  
-   <span data-ttu-id="cfe06-115">**Verwenden die vorhandene Ressource Techniken**: die <xref:System.IO.Stream> Typ wird häufig in anderen Frameworks oder Technologien verwendet, für die Übertragung von Daten oder Objekte über Anwendungsgrenzen hinweg oder für ähnliche Situationen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-115">**Using existing resource techniques**: The <xref:System.IO.Stream> type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</span></span> <span data-ttu-id="cfe06-116">Anschließend können Sie die <xref:System.IO.Stream> Techniken speichern oder Abrufen von XAML-formatierte Daten, die Sie später verwenden, um ein Objekt als Teil Ihrer Anwendung zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-116">You can then use the <xref:System.IO.Stream> techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</span></span>  
  
-   <span data-ttu-id="cfe06-117">**Dokumente behoben:** Ihrer Anwendung möglicherweise lokale oder heruntergeladene XPS-Dokumente für die Aufnahme in eine Struktur des WPF-Objekts und die Benutzeroberfläche geladen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-117">**Fixed documents:** Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfe06-118">In dieser Dokumentation manchmal wird ein Objektdiagramm, im Gegensatz zu einer Objektstruktur beschrieben.</span><span class="sxs-lookup"><span data-stu-id="cfe06-118">This documentation sometimes describes an object graph, as opposed to an object tree.</span></span> <span data-ttu-id="cfe06-119">Eine strenge über-/ unterordnungsbeziehung existiert immer nicht in das Objekt zur Laufzeit Beziehungen zwischen einer WPF-Anwendung zur Laufzeit ein Objektdiagramm ist ein Begriff mit der zunehmenden Verbreitung anwendbar.</span><span class="sxs-lookup"><span data-stu-id="cfe06-119">A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</span></span> <span data-ttu-id="cfe06-120">Aber da WPF auch zwei andere Struktur Konzeptualisierung APIs umfasst (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) die Baumstrukturmetapher gilt weiterhin ordnungsgemäß auf den meisten realen praktischen Fällen in WPF.</span><span class="sxs-lookup"><span data-stu-id="cfe06-120">However, because WPF also includes two different tree conceptualization APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) the tree metaphor still applies adequately to most real-world cases in WPF.</span></span> <span data-ttu-id="cfe06-121">Aus der Perspektive der XAML-Sprache, das Objektdiagramm ist jedoch häufig die beste Möglichkeit, stellen Sie sich zur Erstellung von Objekten aus XAML, da die XAML-Sprache selbst nicht unbedingt angibt Helper-Klasse Methoden, die den Beziehungen, die mehr bieten in einem Baumstruktur erneut aus.</span><span class="sxs-lookup"><span data-stu-id="cfe06-121">From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</span></span>  
  
## <a name="code-access-security-loose-xaml-and-xamlreader"></a><span data-ttu-id="cfe06-122">Codezugriffssicherheit Loose XAML und XamlReader</span><span class="sxs-lookup"><span data-stu-id="cfe06-122">Code Access Security, Loose XAML, and XamlReader</span></span>  
 <span data-ttu-id="cfe06-123">XAML ist eine Markupsprache, die Objektinstanziierung und -ausführung direkt darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-123">XAML is a markup language that directly represents object instantiation and execution.</span></span> <span data-ttu-id="cfe06-124">Daher verfügen in XAML erstellte Elemente über dieselbe Fähigkeit zur Interaktion mit Systemressourcen (z.B. Netzwerkzugriff, Dateisystem E/A), wie der gleichwertig generierte Code.</span><span class="sxs-lookup"><span data-stu-id="cfe06-124">Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="cfe06-125">unterstützt die [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] Sicherheitsframework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cfe06-125">supports the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] security framework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span></span> <span data-ttu-id="cfe06-126">Dies bedeutet, dass in der Internetzone ausgeführter [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Inhalt eingeschränkte Ausführungsberechtigungen hat.</span><span class="sxs-lookup"><span data-stu-id="cfe06-126">This means that [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content running in the internet zone has reduced execution permissions.</span></span> <span data-ttu-id="cfe06-127">"Loose XAML" (Seiten nicht kompilierten XAML-Codes, die beim Laden von einem XAML-Viewer interpretiert werden) und [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] werden normalerweise in dieser Internetzone ausgeführt und verwenden die gleiche Berechtigungsmenge.</span><span class="sxs-lookup"><span data-stu-id="cfe06-127">"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] are usually run in this internet zone and use the same permission set.</span></span>  <span data-ttu-id="cfe06-128">Wenn XAML allerdings in eine voll vertrauenswürdige Anwendung geladen wird, hat es den gleichen Zugriff auf Systemressourcen wie die Hostanwendung.</span><span class="sxs-lookup"><span data-stu-id="cfe06-128">However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</span></span> <span data-ttu-id="cfe06-129">Weitere Informationen finden Sie unter [WPF-Sicherheit mit teilweiser Vertrauenswürdigkeit](~/docs/framework/wpf/wpf-partial-trust-security.md).</span><span class="sxs-lookup"><span data-stu-id="cfe06-129">For more information, see [WPF Partial Trust Security](~/docs/framework/wpf/wpf-partial-trust-security.md).</span></span>  
  
 <span data-ttu-id="cfe06-130">Die Auswirkungen dieser Anweisungen für <xref:System.Windows.Markup.XamlReader> besteht darin, dass der Entwurf der Anwendung vornehmen muss Entscheidungen über die Vertrauenswürdigkeit über die XAML Sie laden möchten.</span><span class="sxs-lookup"><span data-stu-id="cfe06-130">The implications of these statements for <xref:System.Windows.Markup.XamlReader> is that your application design must make trust decisions about the XAML you decide to load.</span></span> <span data-ttu-id="cfe06-131">Wenn Sie XAML, die nicht vertrauenswürdig ist laden, sollten erwägen Sie, Ihre eigenen Sandkastentechnik für, wie Sie das resultierende Objektdiagramm laden zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="cfe06-131">If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</span></span>  
  
 <span data-ttu-id="cfe06-132"><xref:System.Windows.Markup.XamlReader> kann auch von teilweise vertrauenswürdigem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="cfe06-132"><xref:System.Windows.Markup.XamlReader> can also be called by partial trust code.</span></span> <span data-ttu-id="cfe06-133">In diesem Fall wird die Sicherheit der Zone des Internets für Codezugriffssicherheit angewendet.</span><span class="sxs-lookup"><span data-stu-id="cfe06-133">In this case, Internet security zone is applied for code access security.</span></span> <span data-ttu-id="cfe06-134">Wenn alle Elemente in der geladenen XAML Internetsicherheitszone ungültig ist, wird eine XAML-Analyse-Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="cfe06-134">If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</span></span> <span data-ttu-id="cfe06-135">Unter XBAP und in anderen Fällen mit teilweiser Vertrauenswürdigkeit auf Plattformebene, wobei <xref:System.Windows.Markup.XamlReader> ist Teil der Ausführung erhalten Sie das gleiche Verhalten wie bei expliziten teilweiser Vertrauenswürdigkeit Aufrufe.</span><span class="sxs-lookup"><span data-stu-id="cfe06-135">Under XBAP and other cases that are partial trust at the platform level, where <xref:System.Windows.Markup.XamlReader> is part of the execution, you get the same exception behavior as with explicit partial trust calls.</span></span>  
  
## <a name="wpf-xaml-xaml-readerswriters-and-xaml-language-versioning"></a><span data-ttu-id="cfe06-136">WPF-XAML, XAML-Leser/Schreiber und Versionsverwaltung für XAML-Sprache</span><span class="sxs-lookup"><span data-stu-id="cfe06-136">WPF XAML, XAML Readers/Writers, and XAML Language Versioning</span></span>  
 <span data-ttu-id="cfe06-137">XAML2009 enthält Funktionen, wie z. B. [X: Reference-](~/docs/framework/xaml-services/x-reference-markup-extension.md) und [X: FactoryMethod-](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span><span class="sxs-lookup"><span data-stu-id="cfe06-137">XAML2009 includes language features such as [x:Reference](~/docs/framework/xaml-services/x-reference-markup-extension.md) and [x:FactoryMethod](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span></span> <span data-ttu-id="cfe06-138">Sie können die Signaturen der `Load` oder `Parse` XAML geladen, die diese Funktionen verwendet.</span><span class="sxs-lookup"><span data-stu-id="cfe06-138">You can use signatures of `Load` or `Parse` to load XAML that uses these features.</span></span> <span data-ttu-id="cfe06-139">Diese Sprachfunktionen werden jedoch nicht unterstützt, für XAML, das Markup kompiliert werden muss (z. B. XAML für die **Seite** Buildvorgang in einer WPF-Anwendung oder eine beliebige XAML, der die Aufgabe in den Buildvorgängen Markup beinhaltet).</span><span class="sxs-lookup"><span data-stu-id="cfe06-139">However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the **Page** build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</span></span>  
  
 <span data-ttu-id="cfe06-140">WPF-Typen und die WPF-Technologie unterstützen im allgemeinen Konzepte, die für den Zugriff auf WPF-Interna basieren.</span><span class="sxs-lookup"><span data-stu-id="cfe06-140">WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</span></span> <span data-ttu-id="cfe06-141">Beispielsweise, basiert wie WPF Abhängigkeitseigenschaften implementiert auf internen Techniken für die effiziente Typmember-Suche.</span><span class="sxs-lookup"><span data-stu-id="cfe06-141">For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</span></span> <span data-ttu-id="cfe06-142">Zugriff auf diese internen Werte ist aktiviert, die XAML Lesen und Schreiben von APIs, die im bereitgestellten <xref:System.Windows.Markup.XamlWriter> und <xref:System.Windows.Markup.XamlReader> aus der <xref:System.Windows.Markup> Namespace und PresentationFramework-Assembly.</span><span class="sxs-lookup"><span data-stu-id="cfe06-142">Access to these internals is enabled by the XAML reading and writing APIs provided in <xref:System.Windows.Markup.XamlWriter> and <xref:System.Windows.Markup.XamlReader> from the <xref:System.Windows.Markup> namespace and PresentationFramework assembly.</span></span> <span data-ttu-id="cfe06-143">Allerdings die Low-Level-XAML-Reader und XAML-Writern aus System.Xaml-Assembly (Klassen basierend auf <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) haben keinen Zugriff auf die WPF-Interna.</span><span class="sxs-lookup"><span data-stu-id="cfe06-143">However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) do not have access to the WPF internals.</span></span> <span data-ttu-id="cfe06-144">Es gibt keine Abhängigkeit von "System.xaml" für jede WPF-spezifische-Assembly.</span><span class="sxs-lookup"><span data-stu-id="cfe06-144">There is no dependency from System.Xaml to any WPF-specific assembly.</span></span> <span data-ttu-id="cfe06-145">Ohne Zugriff auf die WPF-Interna System.Xaml-Readern und Writern können nicht ordnungsgemäß geladen werden, oder speichern Sie alle WPF-Typen oder Typen basierend auf WPF-Typen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-145">Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</span></span> <span data-ttu-id="cfe06-146">Insbesondere, dass "System.xaml" Reader und Writer nicht verstanden Konzepte, z. B. Unterstützung Eigenschaftenspeicher, oder alle Einzelheiten wie die WPF-Stile, Ressourcenverzeichnisse und Vorlagen verwendet der WPF-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="cfe06-146">In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</span></span> <span data-ttu-id="cfe06-147">Aus diesem Grund müssen Sie eine Auswahl treffen:</span><span class="sxs-lookup"><span data-stu-id="cfe06-147">Therefore you have a choice to make:</span></span>  
  
-   <span data-ttu-id="cfe06-148">Wenn Sie WPF-Typen laden, und/oder Sie XAML in BAML-Form, in keiner Weise verwenden, verwenden Sie PresentationFramework XAML-Reader und XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="cfe06-148">If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</span></span>  
  
-   <span data-ttu-id="cfe06-149">Wenn Sie nicht auf alle WPF-Typen oder die BAML-Form von XAML verlassen, und verwenden einen anderen bestimmten Technologie des XAML-Reader oder XAML-Writer-Implementierung nicht aus Gründen, die für dieses Framework spezifisch sind, verwenden Sie "System.xaml"-XAML-Reader und XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="cfe06-149">If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</span></span>  
  
## <a name="systemxaml-backing-implementation-in-net-4"></a><span data-ttu-id="cfe06-150">"System.xaml" enthalten, sichern die Implementierung in .NET 4</span><span class="sxs-lookup"><span data-stu-id="cfe06-150">System.Xaml Backing Implementation in .NET 4</span></span>  
 <span data-ttu-id="cfe06-151"><xref:System.Windows.Markup.XamlReader> ist die aufrufbare API-Oberfläche für den XAML-Parser in WPF-Frameworkebene.</span><span class="sxs-lookup"><span data-stu-id="cfe06-151"><xref:System.Windows.Markup.XamlReader> is the callable API surface for the WPF framework-level XAML parser.</span></span> <span data-ttu-id="cfe06-152">Führt der gleiche zugrunde liegenden XAML-Parser die XAML zur Laufzeit laden und Analysieren von ASP.NET-Vorlagen für WPF-Anwendungen, die auf [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] und [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cfe06-152">The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span>  
  
 <span data-ttu-id="cfe06-153">Wenn Sie Anzielen [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], die externe API ist identisch, aber Teile der Implementierung auf Grundlage der [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] allgemeinen XAML-Implementierung in der System.Xaml-Assembly, die zahlreiche Aspekte der Analyse von XAML technischen und verbessert.</span><span class="sxs-lookup"><span data-stu-id="cfe06-153">If you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the external API is the same, but parts of the implementation are built on the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</span></span> <span data-ttu-id="cfe06-154">Zielgruppenadressierung [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] unbedingt bringt, einschließlich "System.xaml" als Verweis und Details der Implementierung, wie z. B. "System.xaml" enthalten die gemeldeten Ausnahmen stammen möglicherweise Typen definiert.</span><span class="sxs-lookup"><span data-stu-id="cfe06-154">Targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</span></span>  
  
## Examples  
 <span data-ttu-id="cfe06-155">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.Button> in eine Zeichenfolge mithilfe der <xref:System.Windows.Markup.XamlWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-155">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="cfe06-156">Die Zeichenfolge dann wieder geladen wird eine <xref:System.Windows.Controls.Button> mit der statischen <xref:System.Windows.Markup.XamlReader.Load%2A> Methode für die <xref:System.Windows.Markup.XamlReader> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-156">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe06-157">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlReader" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-157">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="xamlReader.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe06-158">Bricht den aktuellen asynchronen Ladevorgang ab, wenn noch ein asynchroner Ladevorgang aussteht.</span><span class="sxs-lookup"><span data-stu-id="cfe06-158">Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> ist ein asynchroner Vorgang. aus diesem Grund kann einige Laden auftreten, bevor der Vorgang abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="cfe06-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWpfSchemaContext">
      <MemberSignature Language="C#" Value="public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.XamlSchemaContext GetWpfSchemaContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWpfSchemaContext () As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::XamlSchemaContext ^ GetWpfSchemaContext();" />
      <MemberSignature Language="F#" Value="static member GetWpfSchemaContext : unit -&gt; System.Xaml.XamlSchemaContext" Usage="System.Windows.Markup.XamlReader.GetWpfSchemaContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe06-160">Gibt ein <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zurück, das die Kontexteinstellungen des WPF-Schemas für einen <see cref="T:System.Windows.Markup.XamlReader" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-160">Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></summary>
        <returns><span data-ttu-id="cfe06-161">Ein <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt, das die Kontexteinstellungen des WPF-Schemas für einen <see cref="T:System.Windows.Markup.XamlReader" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe06-162">Liest XAML-Eingaben und gibt das Stammelement der entsprechenden Objektstruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="cfe06-162">Reads XAML input and returns the root of the corresponding object tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cfe06-163">Das XAML, das geladen werden soll, als Stream.</span><span class="sxs-lookup"><span data-stu-id="cfe06-163">The XAML to load, in stream form.</span></span></param>
        <summary><span data-ttu-id="cfe06-164">Liest die XAML-Eingabe im angegebenen <see cref="T:System.IO.Stream" /> und gibt ein <see cref="T:System.Object" /> zurück, das das Stammelement der entsprechenden Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-164">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-165">Das Objekt am Stamm der erstellten Objektstruktur.</span><span class="sxs-lookup"><span data-stu-id="cfe06-165">The object at the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cfe06-166">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.Button> in einem <xref:System.IO.MemoryStream> mithilfe der <xref:System.Windows.Markup.XamlWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-166">The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class.</span></span> <span data-ttu-id="cfe06-167">Der Datenstrom wird dann wieder geladen eine <xref:System.Windows.Controls.Button> mit der statischen <xref:System.Windows.Markup.XamlReader.Load%2A> Methode für die <xref:System.Windows.Markup.XamlReader> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-167">The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-168"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-168"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="cfe06-169">Ein <see cref="T:System.Xaml.XamlReader" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-169">A <see cref="T:System.Xaml.XamlReader" /> object.</span></span> <span data-ttu-id="cfe06-170">Es wird davon ausgegangen, dass das Objekt mit Eingabe-XAML initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="cfe06-170">This is expected to be initialized with input XAML.</span></span></param>
        <summary><span data-ttu-id="cfe06-171">Liest die XAML-Eingabe über einen bereitgestellten <see cref="T:System.Xaml.XamlReader" /> und gibt ein Objekt zurück, das das Stammelement der entsprechenden Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-171">Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-172">Das Objekt, das das Stammelement der erstellten Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-172">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-173">Die Eingabe <xref:System.Xaml.XamlReader> kann <xref:System.Windows.Baml2006.Baml2006Reader>.</span><span class="sxs-lookup"><span data-stu-id="cfe06-173">The input <xref:System.Xaml.XamlReader> can be <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span> <span data-ttu-id="cfe06-174">Dies ist, wie Sie BAML für Lokalisierungszwecke-Tool oder zur Laufzeit laden können.</span><span class="sxs-lookup"><span data-stu-id="cfe06-174">This is how you can load BAML at run time, or for localization tool purposes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-175"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-175"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="cfe06-176">Der <see cref="T:System.Xml.XmlReader" />, der die im XML-Format zu ladende XAML-Eingabe bereits geladen hat.</span><span class="sxs-lookup"><span data-stu-id="cfe06-176">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</span></span></param>
        <summary><span data-ttu-id="cfe06-177">Liest die XAML-Eingabe im angegebenen <see cref="T:System.Xml.XmlReader" /> und gibt ein Objekt zurück, das das Stammelement der entsprechenden Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-177">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-178">Das Objekt, das das Stammelement der erstellten Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-178">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cfe06-179">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.Button> in eine Zeichenfolge mithilfe der <xref:System.Windows.Markup.XamlWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-179">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="cfe06-180">Die Zeichenfolge dann wieder geladen wird eine <xref:System.Windows.Controls.Button> mit der statischen <xref:System.Windows.Markup.XamlReader.Load%2A> Methode für die <xref:System.Windows.Markup.XamlReader> Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfe06-180">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-181"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-181"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cfe06-182">Der Stream, der die XAML-Eingabe enthält, die geladen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cfe06-182">The stream that contains the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="cfe06-183">Vom Parser verwendete Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-183">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="cfe06-184">Liest die XAML-Eingabe im angegebenen <see cref="T:System.IO.Stream" /> und gibt ein Objekt zurück, das das Stammelement der entsprechenden Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-184">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-185">Das Objekt, das das Stammelement der erstellten Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-185">The object that is the root of the created object tree.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-186"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-186"><paramref name="stream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cfe06-187">- oder - </span><span class="sxs-lookup"><span data-stu-id="cfe06-187">-or-</span></span> 
 <span data-ttu-id="cfe06-188"><paramref name="parserContext" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-188"><paramref name="parserContext" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe06-189">Liest XAML-Markup und gibt ein Objekt zurück, das dem Stammelement des angegebenen Markups entspricht.</span><span class="sxs-lookup"><span data-stu-id="cfe06-189">Reads XAML markup and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream -&gt; obj" Usage="xamlReader.LoadAsync stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cfe06-190">Der Stream, der die zu ladende XAML-Eingabe enthält.</span><span class="sxs-lookup"><span data-stu-id="cfe06-190">The stream containing the XAML input to load.</span></span></param>
        <summary><span data-ttu-id="cfe06-191">Liest die XAML-Eingabe im angegebenen <see cref="T:System.IO.Stream" /> und gibt das Stammelement der entsprechenden Objektstruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="cfe06-191">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-192">Das Objekt, das das Stammelement der erstellten Objektstruktur darstellt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-192">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-193">Ein asynchroner Ladevorgang von XAML wird zunächst ein Objekt zurück, die nur das Stammobjekt ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-193">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="cfe06-194">Asynchron, XAML-Analyse dann weiterhin, und alle untergeordneten Objekte werden unter dem Stamm ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-194">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="cfe06-195">Dies steht im Gegensatz zu den typischen WPF XAML verarbeitet wird, Verhalten und die Interaktion mit WPF-Konzepte der Lebensdauer eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfe06-195">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="cfe06-196">Bei der Interaktion typische (nicht asynchronen) werden alle Eigenschaften eines Objekts, einschließlich aller untergeordneten Sammlungen vor dem Zurückgeben eines Elements und der Meldung beim Laden gefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-196">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="cfe06-197">Dieses Verhalten entspricht eine Bottom-up-Methode zum Erstellen der Struktur, in dem das Stammobjekt für das letzte Objekt verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-197">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="cfe06-198">Sie in der Regel würden das zurückgegebene Objekt in einen Speicherort in der WPF-Anwendung-Objektstruktur zuweisen, mit dem wissen, die Inhalte möglicherweise immer noch werden ausfüllen und möglicherweise inkrementelles Layout-Updates aus, wenn der gesamte Inhalt als Teil der Benutzeroberfläche verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="cfe06-198">You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="cfe06-199">Aus diesem Grund ist es typisch, zu isolieren oder virtualisieren asynchron geladene Objekte aus XAML und Anwendungsspezifischer Logik oder Anwendungsstatus verwenden, um Sie darüber informieren, dass <xref:System.Windows.Markup.XamlReader.LoadCompleted> erfolgt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-199">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="cfe06-200">In der Reihenfolge für <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> um XAML-Eingaben asynchron zu laden, muss das Stammelement in der XAML-Eingabe enthalten, das Attribut und Wert `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="cfe06-200">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="cfe06-201">Der Wert wird Groß-und Kleinschreibung behandelt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-201">The value is treated as case sensitive.</span></span> <span data-ttu-id="cfe06-202">Wenn der XAML-Eingabe-Stamm keine `x:SynchronousMode="Async"`, wird keine Ausnahme ausgelöst und der Aufruf als synchrone Last verarbeitet wird (finden Sie unter <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span><span class="sxs-lookup"><span data-stu-id="cfe06-202">If the XAML input root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span></span>  
  
 <span data-ttu-id="cfe06-203">Nur ein asynchroner Ladevorgang pro Instanz von der <xref:System.Windows.Markup.XamlReader> Klasse kann zu einem Zeitpunkt ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="cfe06-203">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="cfe06-204">Wenn mehr als einen asynchronen Vorgang, klicken Sie auf der gleichen Instanz von versucht wird der <xref:System.Windows.Markup.XamlReader> Klasse eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="cfe06-204">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-205"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-205"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfe06-206">Es stehen mehrere Ladevorgänge mit demselben <see cref="T:System.Windows.Markup.XamlReader" /> gleichzeitig an.</span><span class="sxs-lookup"><span data-stu-id="cfe06-206">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.Xml.XmlReader -&gt; obj" Usage="xamlReader.LoadAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="cfe06-207">Ein vorhandener <see cref="T:System.Xml.XmlReader" />, der die XAML-Eingabe bereits geladen bzw. gelesen hat.</span><span class="sxs-lookup"><span data-stu-id="cfe06-207">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</span></span></param>
        <summary><span data-ttu-id="cfe06-208">Liest die XAML-Eingabe im angegebenen <see cref="T:System.Xml.XmlReader" /> und gibt das Stammelement der entsprechenden Objektstruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="cfe06-208">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-209">Das Stammelement der erstellten Objektstruktur.</span><span class="sxs-lookup"><span data-stu-id="cfe06-209">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-210">Ein asynchroner Ladevorgang von XAML wird zunächst ein Objekt zurück, die nur das Stammobjekt ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-210">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="cfe06-211">Asynchron, XAML-Analyse dann weiterhin, und alle untergeordneten Objekte werden unter dem Stamm ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-211">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="cfe06-212">Dies steht im Gegensatz zu den typischen WPF XAML verarbeitet wird, Verhalten und die Interaktion mit WPF-Konzepte der Lebensdauer eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfe06-212">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="cfe06-213">Bei der Interaktion typische (nicht asynchronen) werden alle Eigenschaften eines Objekts, einschließlich aller untergeordneten Sammlungen vor dem Zurückgeben eines Elements und der Meldung beim Laden gefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-213">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="cfe06-214">Dieses Verhalten entspricht eine Bottom-up-Methode zum Erstellen der Struktur, in dem das Stammobjekt für das letzte Objekt verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-214">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="cfe06-215">Das zurückgegebene Objekt von würde in der Regel weisen <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> in einen Speicherort in Ihrer Anwendung Objektstruktur, mit dem wissen, dass Inhalt möglicherweise immer noch werden Sie ausfüllen und möglicherweise inkrementelles Layout-Updates aus, wenn der gesamte Inhalt verfügbar, als Teil gemacht wird der -BENUTZEROBERFLÄCHE.</span><span class="sxs-lookup"><span data-stu-id="cfe06-215">You typically would assign the returned object from <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="cfe06-216">Aus diesem Grund ist es typisch, zu isolieren oder virtualisieren asynchron geladene Objekte aus XAML und Anwendungsspezifischer Logik oder Anwendungsstatus verwenden, um Sie darüber informieren, dass <xref:System.Windows.Markup.XamlReader.LoadCompleted> erfolgt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-216">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="cfe06-217">In der Reihenfolge für <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> um XAML-Eingaben asynchron zu laden, muss das Stammelement in der XAML-Markup enthalten, das Attribut und Wert `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="cfe06-217">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="cfe06-218">Der Wert wird Groß-und Kleinschreibung behandelt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-218">The value is treated as case sensitive.</span></span> <span data-ttu-id="cfe06-219">Wenn die Stammelement des XAML-Markups keine `x:SynchronousMode="Async"`, wird keine Ausnahme ausgelöst und der Aufruf stattdessen als synchrone Last verarbeitet wird (finden Sie unter <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span><span class="sxs-lookup"><span data-stu-id="cfe06-219">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is instead processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span></span>  
  
 <span data-ttu-id="cfe06-220">Nur ein asynchroner Ladevorgang pro Instanz von der <xref:System.Windows.Markup.XamlReader> Klasse kann zu einem Zeitpunkt ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="cfe06-220">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="cfe06-221">Wenn mehr als einen asynchronen Vorgang, klicken Sie auf der gleichen Instanz von versucht wird der <xref:System.Windows.Markup.XamlReader> Klasse eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="cfe06-221">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-222"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-222"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfe06-223">Es werden mehrere Ladevorgänge mit demselben <see cref="T:System.Windows.Markup.XamlReader" /> gleichzeitig ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-223">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="xamlReader.LoadAsync (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cfe06-224">Ein Stream, der die zu ladende XAML-Eingabe enthält.</span><span class="sxs-lookup"><span data-stu-id="cfe06-224">A stream containing the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="cfe06-225">Vom Parser verwendete Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-225">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="cfe06-226">Liest die XAML-Eingabe im angegebenen <see cref="T:System.IO.Stream" /> und gibt das Stammelement der entsprechenden Objektstruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="cfe06-226">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="cfe06-227">Das Stammelement der erstellten Objektstruktur.</span><span class="sxs-lookup"><span data-stu-id="cfe06-227">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-228">Ein asynchroner Ladevorgang von XAML wird zunächst ein Objekt zurück, die nur das Stammobjekt ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-228">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="cfe06-229">Asynchron, XAML-Analyse dann weiterhin, und alle untergeordneten Objekte werden unter dem Stamm ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-229">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="cfe06-230">Dies steht im Gegensatz zu den typischen WPF XAML verarbeitet wird, Verhalten und die Interaktion mit WPF-Konzepte der Lebensdauer eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfe06-230">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="cfe06-231">Bei der Interaktion typische (nicht asynchronen) werden alle Eigenschaften eines Objekts, einschließlich aller untergeordneten Sammlungen vor dem Zurückgeben eines Elements und der Meldung beim Laden gefüllt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-231">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="cfe06-232">Dieses Verhalten entspricht eine Bottom-up-Methode zum Erstellen der Struktur, in dem das Stammobjekt für das letzte Objekt verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-232">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="cfe06-233">Sie in der Regel würden das zurückgegebene Objekt in einen Speicherort in Ihrer Anwendung Objektstruktur zuweisen, mit dem wissen, die Inhalte möglicherweise immer noch werden ausfüllen und möglicherweise inkrementelles Layout-Updates aus, wenn der gesamte Inhalt als Teil der Benutzeroberfläche verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="cfe06-233">You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="cfe06-234">Aus diesem Grund ist es typisch, zu isolieren oder virtualisieren asynchron geladene Objekte aus XAML und Anwendungsspezifischer Logik oder Anwendungsstatus verwenden, um Sie darüber informieren, dass <xref:System.Windows.Markup.XamlReader.LoadCompleted> erfolgt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-234">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="cfe06-235">In der Reihenfolge für <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> Markup asynchron zu laden, muss das Stammelement in der XAML-Markup enthalten, das Attribut und Wert `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="cfe06-235">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load markup asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="cfe06-236">Der Wert wird Groß-und Kleinschreibung behandelt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-236">The value is treated as case sensitive.</span></span> <span data-ttu-id="cfe06-237">Wenn die Stammelement des XAML-Markups keine `x:SynchronousMode="Async"`, wird keine Ausnahme ausgelöst und der Aufruf als synchrone Last verarbeitet wird (finden Sie unter <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span><span class="sxs-lookup"><span data-stu-id="cfe06-237">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span></span>  
  
 <span data-ttu-id="cfe06-238">Nur ein asynchroner Ladevorgang pro Instanz von der <xref:System.Windows.Markup.XamlReader> Klasse kann zu einem Zeitpunkt ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="cfe06-238">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="cfe06-239">Wenn mehr als einen asynchronen Vorgang, klicken Sie auf der gleichen Instanz von versucht wird der <xref:System.Windows.Markup.XamlReader> Klasse eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="cfe06-239">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe06-240"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfe06-240"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfe06-241">Es werden mehrere Ladevorgänge mit demselben <see cref="T:System.Windows.Markup.XamlReader" /> gleichzeitig ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="cfe06-241">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Markup.XamlReader.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe06-242">Tritt ein, wenn ein asynchroner Ladevorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="cfe06-242">Occurs when an asynchronous load operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> wird auch ausgelöst, wenn ein asynchroner Ladevorgang abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="cfe06-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> is also raised when an asynchronous load operation aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe06-244">Liest das Markup in der angegebenen Textzeichenfolge und gibt ein Objekt zurück, das dem Stammelement des angegebenen Markups entspricht.</span><span class="sxs-lookup"><span data-stu-id="cfe06-244">Reads the markup in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xamlText As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse xamlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="cfe06-245">Das Eingabe-XAML als einzelne Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="cfe06-245">The input XAML, as a single text string.</span></span></param>
        <summary><span data-ttu-id="cfe06-246">Liest die XAML-Eingabe in der angegebenen Textzeichenfolge und gibt ein Objekt zurück, das dem Stammelement des angegebenen entspricht.</span><span class="sxs-lookup"><span data-stu-id="cfe06-246">Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="cfe06-247">Das Stammelement der erstellten Objektstruktur.</span><span class="sxs-lookup"><span data-stu-id="cfe06-247">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-248">Die Standardimplementierung ruft <xref:System.Windows.Markup.XamlReader.Load%2A> intern, nachdem Sie erstellt einen Datenstrom aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="cfe06-248">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="cfe06-249">Finden Sie unter <xref:System.Windows.Markup.XamlReader.Load%2A> für zusätzliche Informationen wie z. B. möglichen Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-249">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse (xamlText, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="cfe06-250">Das Eingabe-XAML als einzelne Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="cfe06-250">The input XAML, as a single text string.</span></span></param>
        <param name="parserContext"><span data-ttu-id="cfe06-251">Vom Parser verwendete Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-251">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="cfe06-252">Liest das XAML-Markup in der angegebenen Textzeichenfolge (mithilfe eines angegebenen <see cref="T:System.Windows.Markup.ParserContext" />) und gibt ein Objekt zurück, das dem Stammelement des angegebenen Markups entspricht.</span><span class="sxs-lookup"><span data-stu-id="cfe06-252">Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="cfe06-253">Das Stammelement der erstellten Objektstruktur.</span><span class="sxs-lookup"><span data-stu-id="cfe06-253">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe06-254">Die Standardimplementierung ruft <xref:System.Windows.Markup.XamlReader.Load%2A> intern, nachdem Sie erstellt einen Datenstrom aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="cfe06-254">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="cfe06-255">Finden Sie unter <xref:System.Windows.Markup.XamlReader.Load%2A> für zusätzliche Informationen wie z. B. möglichen Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="cfe06-255">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>