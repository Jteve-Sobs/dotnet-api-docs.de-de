<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InheritanceMappingAttribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54a8fa199413e6127dce319f3df8ad15d3ee1851f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a8fa199413e6127dce319f3df8ad15d3ee1851f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>Maps an inheritance hierarchy in a LINQ to SQL application.</source>
          <target state="translated">Ordnet eine Vererbungshierarchie in einer LINQ to SQL-Anwendung zu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>One <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute&gt;</ph> is specified per mapped class.</source>
          <target state="translated">Eine <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute&gt;</ph> pro zugeordneter Klassentyp angegeben wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>Note the following when you map inheritance hierarchies:</source>
          <target state="translated">Beachten Sie Folgendes, wenn Sie Vererbungshierarchien zuordnen:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>All classes in a hierarchy must be mapped to a single table.</source>
          <target state="translated">Alle Klassen in einer Hierarchie müssen eine einzelne Tabelle zugeordnet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy.</source>
          <target state="translated">Die Tabelle für eine Vererbungshierarchie muss für den zugeordneten Typ deklariert werden, die an der Spitze der Hierarchie befindet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>You cannot specify the table or mapping attributes in a class that is derived from the top class.</source>
          <target state="translated">Sie können nicht die Tabelle oder die Zuordnung der Attribute in einer Klasse angeben, die von der Top-Klasse abgeleitet ist.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>You can use an interface in a hierarchy, but <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> does not map it.</source>
          <target state="translated">Sie können eine Schnittstelle in einer Hierarchie verwenden, aber <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> nicht zugeordnet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.</source>
          <target state="translated">Sie können eine Klasse in der Hierarchie überspringen, wenn Sie Klassen zuordnen, aber Sie für die zugeordneten Klassen nur Abfragen können.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>For correct materialization, discriminator code values must be unique and match the values in the database.</source>
          <target state="translated">Unterscheidungseigenschaft Codewerte müssen eindeutig sein und passen Sie die Werte in der Datenbank, für die richtige Materialisierung.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Eine Zeile mit einen Diskriminatorwert für Code, die nicht genau (auch nach Groß-/Kleinschreibung übereinstimmen) instanziiert die Klasse mit <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A&gt;</ph> festgelegt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>This example shows inheritance mapping for a hierarchy where the top, mapped class (<ph id="ph1">`Shape`</ph>) is abstract.</source>
          <target state="translated">Dieses Beispiel zeigt die Zuordnung für eine Hierarchie, in dem Sie im oberen Bereich zugeordnet Klasse (<ph id="ph1">`Shape`</ph>) ist abstrakt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>The following example shows the inclusion of unmapped classes.</source>
          <target state="translated">Das folgende Beispiel zeigt die Aufnahme des nicht zugeordneten Klassen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
          <source>You can put unmapped classes anywhere in the hierarchy.</source>
          <target state="translated">Sie können die nicht zugeordnete Klassen an einer beliebigen Stelle in der Hierarchie einfügen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code">
          <source>Gets or sets the discriminator code value in a mapped inheritance hierarchy.</source>
          <target state="translated">Ruft den Diskriminatorcodewert in einer zugeordneten Vererbungshierarchie ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code">
          <source>Must be user-specified.</source>
          <target state="translated">Muss vom Benutzer angegeben werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code">
          <source>There is no default value.</source>
          <target state="translated">Es ist kein Standardwert vorhanden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault">
          <source>Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.</source>
          <target state="translated">Ruft ab oder legt fest, ob ein Objekt dieses Typs instanziiert wird, wenn der Diskriminatorwert mit keinem angegebenen Wert übereinstimmt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault">
          <source>Default = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Standard = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault">
          <source>Exactly one of the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute&gt;</ph> attributes must be declared with <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A&gt;</ph> as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Nur eines der <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute&gt;</ph> Attribute müssen deklariert werden, mit <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A&gt;</ph> als <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type">
          <source>Gets or sets the type of the class in the hierarchy.</source>
          <target state="translated">Ruft den Typ der Klasse in der Hierarchie ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type">
          <source>Must be user-specified.</source>
          <target state="translated">Muss vom Benutzer angegeben werden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type">
          <source>There is no default value.</source>
          <target state="translated">Es ist kein Standardwert vorhanden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type">
          <source>Use any non-abstract type in the inheritance hierarchy, including the root type.</source>
          <target state="translated">Verwenden Sie nicht abstrakten Typ in der Vererbungshierarchie befindet, z. B. den Root-Typ.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>