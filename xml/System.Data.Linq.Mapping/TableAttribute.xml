<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24ef701b00c090ec36cb6b25e837af7ea35c12e5" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48687588" /></Metadata><TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Legt eine Klasse als Entitätsklasse fest, die einer Datenbanktabelle zugeordnet ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Attribut, um eine Klasse als Entität zu kennzeichnen, die einer Datenbanktabelle oder einer Ansicht zugeordnet ist. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] behandelt Klassen, die die <xref:System.Data.Linq.Mapping.TableAttribute> Attribut als erhaltene Klassen.  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] unterstützt nur die Zuordnung zu nur einer Tabelle an. Also eine Entitätsklasse muss genau eine Datenbanktabelle zugeordnet werden, und Sie können nicht mehrere Klassen gleichzeitig eine Datenbanktabelle zuordnen.  
  
 Können Sie die <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Eigenschaft der <xref:System.Data.Linq.Mapping.TableAttribute> Attribut, um einen Namen für die Tabelle angeben, und Sie können optional den Schemanamen um einen Tabellennamen zu qualifizieren. Wenn Sie einen Namen nicht mit angeben der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> -Eigenschaft den Namen der Tabelle wird angenommen, dass die Namen der Klasse identisch sein.  
  
## <a name="schema-qualified-names"></a>Schemaqualifizierte Namen  
 Sie können optional den Schemanamen verwenden, um einen Tabellennamen zu qualifizieren. Standardmäßig wird das Token auf der linken Seite von den ersten Punkt in der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Zeichenfolge gilt der Schemaname. Der Rest des Namens gilt der Tabellenname sein. Der Anbieter schließt den Tabellennamen nach Bedarf Anführungszeichen ein. Z. B. die [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Datenanbieter für SQL Server stellt sicher, dass es sich bei Klammern mindestens verwendet werden, wo sie benötigt werden.  
  
> [!NOTE]
>  In einigen Fällen müssen Sie explizit Attribute zitieren, da der SQL Server-Anbieter automatisch Anführungszeichen kann nicht. Die folgende Tabelle zeigt einige Beispiele.  
  
|Case|Beispiel: Bezeichnername|Beispiel: Die erwartete Zeichenfolge in Attributen|Andernfalls...|  
|----------|------------------------------|--------------------------------------------|----------------|  
|Name des Schemas enthält einen Punkt|Schema: "A.B"<br /><br /> Tabelle: "C"|"[A.B].C"|Der erste Zeitraum wird angenommen, um den Schemanamen von den Namen der Tabelle zu trennen.|  
|Name der Schema/Tabelle beginnt mit `@`|"@SomeName"|"[@SomeName]"|Angenommen, dass ein Parametername sein.|  
|Schema beginnt mit `[` und endet mit `]`|"[Schema.Table]"|"[[Schema]. [Tabelle]]]"|Der Bezeichner ohne Anführungszeichen ähnelt einen Bezeichner in Anführungszeichen.|  
|Tabelle beginnt mit `[` und endet mit `]`|"[Tabelle]"|"[[Tabelle]]]"|Der Bezeichner ohne Anführungszeichen ähnelt einen Bezeichner in Anführungszeichen.|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.Mapping.TableAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Tabelle oder Sicht ab oder legt diesen fest.</summary>
        <value>Standardmäßig ist der Wert mit dem Namen der Klasse identisch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen Namen nicht mit angeben <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, den Namen der Tabelle wird davon ausgegangen, dass auf den Namen der Klasse identisch sein.  
  
> [!NOTE]
>  Sie können optional ein Schemaname, qualifizieren Sie den Namen der Tabelle (z. B. Schema3.Table5). Standardmäßig wird das Token auf der linken Seite von den ersten Punkt in der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Zeichenfolge wird als betrachtet den Schemanamen, und den Rest auf den Namen der Tabelle sein.  
  
 Im folgenden Beispiel den Standardnamen für die Tabelle, `Customer`, geändert wird, um `Customers`.  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>