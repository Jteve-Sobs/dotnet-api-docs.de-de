<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12fa30ba5677d34b848e725388607ce0d6e83ffd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69374653" /></Metadata><TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Legt eine Klasse als Entitätsklasse fest, die einer Datenbanktabelle zugeordnet ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Attribut, um eine Klasse als Entität zu kennzeichnen, die einer Datenbanktabelle oder einer Ansicht zugeordnet ist. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]behandelt Klassen, die das <xref:System.Data.Linq.Mapping.TableAttribute> -Attribut als persistente Klassen aufweisen.  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]unterstützt nur die Zuordnung einer einzelnen Tabelle. Das heißt, eine Entitäts Klasse muss genau einer Datenbanktabelle zugeordnet werden, und Sie können einer Datenbanktabelle nicht gleichzeitig mehrere Klassen zuordnen.  
  
 Mit der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> -Eigenschaft <xref:System.Data.Linq.Mapping.TableAttribute> des-Attributs können Sie einen Namen für die Tabelle angeben, und Sie können optional den Schema Namen verwenden, um einen Tabellennamen zu qualifizieren. Wenn Sie keinen Namen mit der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> -Eigenschaft angeben, wird davon ausgegangen, dass der Tabellenname mit dem Klassennamen identisch ist.  
  
## <a name="schema-qualified-names"></a>Schema qualifizierte Namen  
 Sie können optional den Schema Namen verwenden, um einen Tabellennamen zu qualifizieren. Standardmäßig wird das Token auf der linken Seite des ersten Zeitraums in der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Zeichenfolge als Schema Name betrachtet. Der Rest des Namens wird als Tabellenname betrachtet. Der Anbieter gibt den Tabellennamen nach Bedarf an. Beispielsweise stellt der [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Anbieter für SQL Server sicher, dass die eckigen Klammern zumindest dort verwendet werden, wo Sie benötigt werden.  
  
> [!NOTE]
>  In einigen Fällen müssen Sie Attribute explizit angeben, da der SQL Server-Anbieter kein automatisches Anführungszeichen durchführt. In der folgenden Tabelle sind einige Beispiele aufgeführt.  
  
|Case|Beispiel: Bezeichnername|Beispiel: Erwartete Zeichenfolge in Attributen|Andernfalls...|  
|----------|------------------------------|--------------------------------------------|----------------|  
|Schema Name enthält einen Zeitraum|Chaos "A. B"<br /><br /> Tabelle: SCHER|"[A.B].C"|Der erste Zeitraum wird davon ausgegangen, dass der Schema Name von dem Tabellennamen getrennt wird.|  
|Schema-/Tabellenname beginnt mit`@`|"@SomeName"|"[@SomeName]"|Angenommen, es handelt sich um einen Parameternamen.|  
|Schema beginnt mit `[` und endet mit`]`|"[Schema. Table]"|"[[Schema]. [Tabelle]]] "|Der Bezeichner ohne Anführungszeichen ähnelt einem Bezeichner in Anführungszeichen.|  
|Tabelle beginnt mit `[` und endet mit`]`|"[Tabelle]"|"[[Tabelle]]]"|Der Bezeichner ohne Anführungszeichen ähnelt einem Bezeichner in Anführungszeichen.|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.Mapping.TableAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Tabelle oder Sicht ab oder legt diesen fest.</summary>
        <value>Standardmäßig ist der Wert mit dem Namen der Klasse identisch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie keinen Namen mithilfe <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>von angeben, wird davon ausgegangen, dass der Tabellenname mit dem Klassennamen identisch ist.  
  
> [!NOTE]
>  Sie können optional einen Schema Namen verwenden, um den Tabellennamen zu qualifizieren (z. b. Sie Schema3. Table5). Standardmäßig wird das Token auf der linken Seite des ersten Zeitraums in der <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Zeichenfolge als Schema Name betrachtet, und der Rest muss der Tabellenname sein.  
  
 Im folgenden Beispiel wird der Standard Tabellenname `Customer`,, in `Customers`geändert.  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
