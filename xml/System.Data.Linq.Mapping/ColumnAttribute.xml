<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="631ae816c0beb1c96743faf3ecd8c5fc3475a876" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69375212" /></Metadata><TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f3ac-101">Ordnet einer Spalte in einer Datenbanktabelle eine Klasse zu.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-101">Associates a class with a column in a database table.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-102">Mit diesem Attribut können Sie einen Member einer Entitätsklasse für die Darstellung einer Spalte in einer Datenbanktabelle festlegen.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="2f3ac-103">Sie können dieses Attribut auf jedes Feld oder jede Eigenschaft anwenden, `public`das `private`, oder `internal`ist.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="2f3ac-104">Nur die als Spalten identifizierten Entitäts Klassen Elemente werden beibehalten [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] , wenn Änderungen an der Datenbank speichert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="2f3ac-105">Verwenden Sie Kommas, um mehrere Eigenschaften für das Attribut voneinander zu trennen.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f3ac-106">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-107">Ruft die <see cref="T:System.Data.Linq.Mapping.AutoSync" />-Enumeration ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="2f3ac-108">Der <see cref="T:System.Data.Linq.Mapping.AutoSync" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-109">Ruft ab oder legt fest, ob eine Spalte NULL-Werte enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-109">Gets or sets whether a column can contain null values.</span></span></summary>
        <value><span data-ttu-id="2f3ac-110">Standard = <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-110">Default = <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-111">Wenn Sie diesen Wert auf `false`festlegen, wird davon ausgegangen, dass die Daten in der entsprechenden Spalte nicht NULL sind.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f3ac-112">Diese Eigenschaft wird von der <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> -Eigenschaft zur einfacheren Duplizierung dupliziert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="2f3ac-113">Die <xref:System.Data.Linq.DataContext.CreateDatabase%2A> -Methode verwendet nur <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="2f3ac-114">Aus diesem Grund müssen Sie angeben, ob eine Spalte auch NULL-Werte in der <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> -Eigenschaft enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-115">Ruft den Typ der Datenbankspalte ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-115">Gets or sets the type of the database column.</span></span></summary>
        <value><span data-ttu-id="2f3ac-116">Ein Zeichen folgen Wert, der den genauen Text angibt, der die Spalte in einer Transact-SQL-Tabellen Deklaration definiert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-117">Verwenden Sie diese Eigenschaft, um den genauen Text anzugeben, der die Spalte in einer Transact-SQL-Tabellen Deklaration definiert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="2f3ac-118">Legen Sie <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> die-Eigenschaft nur dann fest, <xref:System.Data.Linq.DataContext.CreateDatabase%2A> Wenn Sie planen, zum Erstellen einer Instanz der-Datenbank zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="2f3ac-119">Der Standardwert von <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> wird vom Elementtyp abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="2f3ac-120">Weitere Informationen finden Sie unter [SQL-CLR-Typzuordnung](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span><span class="sxs-lookup"><span data-stu-id="2f3ac-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-121">Ruft ab oder legt fest, ob eine Spalte eine berechnete Spalte in einer Datenbank ist.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-121">Gets or sets whether a column is a computed column in a database.</span></span></summary>
        <value><span data-ttu-id="2f3ac-122">Standard = leer.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-122">Default = empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-123">Verwenden Sie diese Eigenschaft, wenn <xref:System.Data.Linq.DataContext.CreateDatabase%2A> Sie verwenden, um eine Spalte zu definieren, die berechnete Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="2f3ac-124">Wenn Sie z. b. eine in SQL definierte Spalte als `InventoryVal AS UnitPrice * UnitsInStock`erstellen möchten, verwenden Sie die folgende *Ausdrucks* Zeichenfolge:. `"UnitPrice * UnitsInStock"`</span><span class="sxs-lookup"><span data-stu-id="2f3ac-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="2f3ac-125">unterstützt keine berechneten Spalten als Primärschlüssel.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-125">does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-126">Ruft ab oder legt fest, ob eine Spalte Werte enthält, die von der Datenbank automatisch generiert werden.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-126">Gets or sets whether a column contains values that the database auto-generates.</span></span></summary>
        <value><span data-ttu-id="2f3ac-127">Standard = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-127">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A>Elemente werden unmittelbar nach dem Einfügen der Daten Zeile synchronisiert, und die Elemente sind verfügbar, nachdem <xref:System.Data.Linq.DataContext.SubmitChanges%2A> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f3ac-129">Wenn die Spalte Primärschlüssel Werte enthält und Sie als <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> `true`festlegen, sollten Sie auch die <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> Eigenschaft mit dem `IDENTITY` -Modifizierer hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-130">Ruft ab oder legt fest, ob eine Spalte einen Diskriminatorwert für eine [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]-Vererbungshierarchie enthält.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="2f3ac-131">Standard = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-131">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-132">Wenn `true`, identifiziert diese Eigenschaft den Klassenmember als den Diskriminatorwert für eine Vererbungs Hierarchie.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="2f3ac-133">Sie können diese Eigenschaft auf `true` festlegen, wenn Sie nicht mehr als einen Member haben, der der obersten zugeordneten Klasse in der Hierarchie angehören muss.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-134">Ruft ab oder legt fest, ob dieser Klassenmember eine Spalte darstellt, die den gesamten Primärschlüssel der Tabelle oder einen Teil von diesem bildet.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span></span></summary>
        <value><span data-ttu-id="2f3ac-135">Standard = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-135">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-136">Wenn Sie eine Entitäts Klasse annehmen, müssen Sie mindestens ein Element mit diesem Attribut angeben, das dem Primärschlüssel oder einem eindeutigen Schlüssel in der entsprechenden Tabelle oder Sicht zugeordnet werden muss.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="2f3ac-137">Wenn Sie diese [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Aufforderung nicht ausführen, werden Instanzen der-Klasse für das Senden von Änderungen an die Datenbank als schreibgeschützt betrachtet.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="2f3ac-138">Wenn Sie mehr als ein Member der Klasse mithilfe dieser Eigenschaft festlegen, wird der Schlüssel als zusammengesetzter der zugeordneten Spalten bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="2f3ac-139">unterstützt keine berechneten Spalten als Primärschlüssel.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-139">does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-140">Ruft ab oder legt fest, ob der Spaltentyp des Members ein Datenbankzeitstempel oder eine Versionsnummer ist.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span></span></summary>
        <value><span data-ttu-id="2f3ac-141">Standardwert = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-141">Default value = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-142">Versionsnummern werden inkrementiert, und Zeitstempel-Spalten werden jedes Mal aktualisiert, wenn die zugehörige Zeile aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="2f3ac-143">(Diese Eigenschaft [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] gibt an, dass eine Spalte aktualisiert werden sollte, um anzuzeigen, dass es sich um eine neue Version handelt. Sie soll keine Informationen aufzeichnen, z. b. Wer die Aktualisierung durchgeführt hat.)</span><span class="sxs-lookup"><span data-stu-id="2f3ac-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="2f3ac-144">Beachten Sie Folgendes, `IsVersion` wenn den Wert true hat:</span><span class="sxs-lookup"><span data-stu-id="2f3ac-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="2f3ac-145">Verwenden <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> Sie, um die korrekten modifiziererer anzugeben, um eine Versionsnummer oder eine Zeitstempel-Spalte anzugeben.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="2f3ac-146">Wenn Sie nicht angeben <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] leitet die richtigen Modifizierer ab.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="2f3ac-147">Versionsnummern werden inkrementiert, und Zeitstempel-Spalten werden jedes Mal aktualisiert, wenn die zugehörige Zeile aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="2f3ac-148">Member mit `IsVersion=true` werden unmittelbar nach der Aktualisierung der Daten Zeile synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="2f3ac-149">Die neuen Werte werden nach Abschluss <xref:System.Data.Linq.DataContext.SubmitChanges%2A> von angezeigt.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f3ac-150">Ruft ab oder legt fest, wie [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] beim Erkennen von Konflikten der vollständigen Parallelität vorgeht.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span></span></summary>
        <value><span data-ttu-id="2f3ac-151">Standard = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, sofern für einen Member <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> nicht <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span></span>  
  
<span data-ttu-id="2f3ac-152">Als weitere Werte sind <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> und <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" /> verfügbar.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f3ac-153">Wenn diese Eigenschaft mit einer von drei enums verwendet wird, bestimmt Sie, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] wie Parallelitäts Konflikte erkennt.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="2f3ac-154">Wenn kein Member als `IsVersion=true`entwickelt wurde, werden die ursprünglichen Element Werte mit dem aktuellen Datenbankzustand verglichen.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="2f3ac-155">Die folgenden-Aufstände sind verfügbar:</span><span class="sxs-lookup"><span data-stu-id="2f3ac-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="2f3ac-156">`Always`Verwenden Sie diese Spalte immer für die Konflikterkennung.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="2f3ac-157">`Never`Verwenden Sie diese Spalte nie für die Konflikterkennung.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="2f3ac-158">`WhenChanged`Verwenden Sie diese Spalte nur, wenn der Member von der Anwendung geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="2f3ac-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
