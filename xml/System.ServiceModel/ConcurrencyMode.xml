<Type Name="ConcurrencyMode" FullName="System.ServiceModel.ConcurrencyMode">
  <TypeSignature Language="C#" Value="public enum ConcurrencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConcurrencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ConcurrencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConcurrencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConcurrencyMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="9ec2c-101">Gibt an, ob eine Dienstklasse den Singlethread- oder den Multithread-Betriebsmodus unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-101">Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ec2c-102"><xref:System.ServiceModel.ConcurrencyMode> wird in Verbindung mit der <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>-Eigenschaft verwendet, um anzugeben, ob eine Dienstklasse den Singlethread- oder den Multithread-Betriebsmodus unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-102"><xref:System.ServiceModel.ConcurrencyMode> is used in conjunction with the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</span></span> <span data-ttu-id="9ec2c-103">Ein Singlethread-Betrieb kann wiedereintrittsfähig oder nicht wiedereintrittsfähig sein.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-103">A single-threaded operation can be either reentrant or non-reentrant.</span></span>  
  
 <span data-ttu-id="9ec2c-104">In der folgenden Tabelle wird dargestellt, wann [!INCLUDE[indigo1](~/includes/indigo1-md.md)] den Aufruf einer Operation zulässt, während eine andere Operation läuft, abhängig vom <xref:System.ServiceModel.ConcurrencyMode>.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-104">The following table shows when [!INCLUDE[indigo1](~/includes/indigo1-md.md)] permits an operation to be invoked while another one is in progress, depending upon the <xref:System.ServiceModel.ConcurrencyMode>.</span></span>  
  
|<span data-ttu-id="9ec2c-105">Parallelitätsmodus-Wert</span><span class="sxs-lookup"><span data-stu-id="9ec2c-105">ConcurrencyMode Value</span></span>|<span data-ttu-id="9ec2c-106">Kann eine neue Operation aufgerufen werden?</span><span class="sxs-lookup"><span data-stu-id="9ec2c-106">Can a new operation be invoked?</span></span>|  
|---------------------------|-------------------------------------|  
|<span data-ttu-id="9ec2c-107">Single</span><span class="sxs-lookup"><span data-stu-id="9ec2c-107">Single</span></span>|<span data-ttu-id="9ec2c-108">Nie</span><span class="sxs-lookup"><span data-stu-id="9ec2c-108">Never.</span></span>|  
|<span data-ttu-id="9ec2c-109">Reentrant</span><span class="sxs-lookup"><span data-stu-id="9ec2c-109">Reentrant</span></span>|<span data-ttu-id="9ec2c-110">Nur, wenn ein anderer Dienst oder ein Rückruf aufgerufen wird</span><span class="sxs-lookup"><span data-stu-id="9ec2c-110">Only while invoking another service or a callback.</span></span>|  
|<span data-ttu-id="9ec2c-111">Mehrere</span><span class="sxs-lookup"><span data-stu-id="9ec2c-111">Multiple</span></span>|<span data-ttu-id="9ec2c-112">Immer.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-112">Always.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9ec2c-113">Im folgenden Codebeispiel wird veranschaulicht, die zwischen der Verwendung von Reentrant, einzelnen und mehreren verschiedenen.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-113">The following code example demonstrates the different between using Single, Reentrant, and Multiple.</span></span> <span data-ttu-id="9ec2c-114">Dieses Beispiel kompilieren ohne zu einer echten Implementierung es nicht möglich, jedoch wird die Art der threadinggarantien wird sichergestellt, dass WCF macht und was dies für den Vorgangscode bedeutet veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-114">This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that WCF makes and what that means for your operation code.</span></span>  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Multiple = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9ec2c-115">Diese Dienstinstanz ist eine Multithread-Instanz.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-115">The service instance is multi-threaded.</span></span> <span data-ttu-id="9ec2c-116">Es werden keine Synchronisierungsgarantien gegeben.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-116">No synchronization guarantees are made.</span></span> <span data-ttu-id="9ec2c-117">Da andere Threads jederzeit das Dienstobjekt ändern können, müssen Sie die Synchronisierung und die Zustandskonsistenz ständig verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-117">Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Reentrant">
      <MemberSignature Language="C#" Value="Reentrant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Reentrant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberSignature Language="VB.NET" Value="Reentrant" />
      <MemberSignature Language="C++ CLI" Value="Reentrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9ec2c-118">Die Dienstinstanz ist eine Singlethread-Instanz und nimmt wiedereintrittsfähige Aufrufe an.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-118">The service instance is single-threaded and accepts reentrant calls.</span></span> <span data-ttu-id="9ec2c-119">Der wiedereintrittsfähige Dienst nimmt Aufrufe an, wenn Sie einen anderen Dienst aufrufen. Sie sind daher verantwortlich dafür, den Objektzustand vor Aufrufen konsistent zu lassen, und Sie müssen bestätigen, dass lokale Operationsdaten nach Aufrufen gültig sind.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-119">The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</span></span> <span data-ttu-id="9ec2c-120">Beachten Sie, dass die Dienstinstanz nur durch das Aufrufen eines anderen Diensts über einen WCF-Kanal entsperrt wird.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-120">Note that the service instance is unlocked only by calling another service over a WCF channel.</span></span> <span data-ttu-id="9ec2c-121">In diesem Fall kann der aufgerufene Dienst über einen Rückruf wieder in den ersten Dienst eintreten.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-121">In this case, the called service can reenter the first service via a callback.</span></span> <span data-ttu-id="9ec2c-122">Wenn der erste Dienst nicht wiedereintrittsfähig ist, führt die Sequenz der Aufrufe zu einem Deadlock.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-122">If the first service is not reentrant, the sequence of calls results in a deadlock.</span></span> <span data-ttu-id="9ec2c-123">Ausführliche Informationen finden Sie unter <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-123">For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Single = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9ec2c-124">Die Dienstinstanz ist eine Singlethread-Instanz und nimmt keine wiedereintrittsfähige Aufrufe an.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-124">The service instance is single-threaded and does not accept reentrant calls.</span></span> <span data-ttu-id="9ec2c-125">Wenn die <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />-Eigenschaft <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> ist und weitere Meldungen ankommen, während die Instanz einen Aufruf bedient, müssen diese Meldungen warten, bis der Dienst verfügbar ist oder bis eine Zeitüberschreitung bei den Meldungen eintritt.</span><span class="sxs-lookup"><span data-stu-id="9ec2c-125">If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>