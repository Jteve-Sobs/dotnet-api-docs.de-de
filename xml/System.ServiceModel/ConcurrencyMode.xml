<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrencyMode.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac505ec8ae681b81889f4dba2cfb53bcd59c150db65.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05ec8ae681b81889f4dba2cfb53bcd59c150db65</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</source>
          <target state="translated">Gibt an, ob eine Dienstklasse den Singlethread- oder den Multithread-Betriebsmodus unterstützt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> is used in conjunction with the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> wird in Verbindung mit der <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>-Eigenschaft verwendet, um anzugeben, ob eine Dienstklasse den Singlethread- oder den Multithread-Betriebsmodus unterstützt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>A single-threaded operation can be either reentrant or non-reentrant.</source>
          <target state="translated">Ein Singlethread-Betrieb kann wiedereintrittsfähig oder nicht wiedereintrittsfähig sein.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>The following table shows when <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> permits an operation to be invoked while another one is in progress, depending upon the <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle wird dargestellt, wann <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> den Aufruf einer Operation zulässt, während eine andere Operation läuft, abhängig vom <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>ConcurrencyMode Value</source>
          <target state="translated">Parallelitätsmodus-Wert</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Can a new operation be invoked?</source>
          <target state="translated">Kann eine neue Operation aufgerufen werden?</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Single</source>
          <target state="translated">Single</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Never.</source>
          <target state="translated">Nie</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Reentrant</source>
          <target state="translated">Reentrant</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Only while invoking another service or a callback.</source>
          <target state="translated">Nur, wenn ein anderer Dienst oder ein Rückruf aufgerufen wird</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Multiple</source>
          <target state="translated">Mehrere</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Always.</source>
          <target state="translated">Immer.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>The following code example demonstrates the different between using Single, Reentrant, and Multiple.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die zwischen der Verwendung von Reentrant, einzelnen und mehreren verschiedenen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> makes and what that means for your operation code.</source>
          <target state="translated">Dieses Beispiel kann nur mit einer echten Implementierung kompiliert werden; es verdeutlicht jedoch die Art der Threadinggarantien, die von <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> gewährt werden, und welche Bedeutung dies für den Vorgangscode hat.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>The service instance is multi-threaded.</source>
          <target state="translated">Diese Dienstinstanz ist eine Multithread-Instanz.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>No synchronization guarantees are made.</source>
          <target state="translated">Es werden keine Synchronisierungsgarantien gegeben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</source>
          <target state="translated">Da andere Threads jederzeit das Dienstobjekt ändern können, müssen Sie die Synchronisierung und die Zustandskonsistenz ständig verarbeiten.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>The service instance is single-threaded and accepts reentrant calls.</source>
          <target state="translated">Die Dienstinstanz ist eine Singlethread-Instanz und nimmt wiedereintrittsfähige Aufrufe an.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</source>
          <target state="translated">Der wiedereintrittsfähige Dienst nimmt Aufrufe an, wenn Sie einen anderen Dienst aufrufen. Sie sind daher verantwortlich dafür, den Objektzustand vor Aufrufen konsistent zu lassen, und Sie müssen bestätigen, dass lokale Operationsdaten nach Aufrufen gültig sind.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>Note that the service instance is unlocked only by calling another service over a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> channel.</source>
          <target state="translated">Beachten Sie, dass die Dienstinstanz nur durch das Aufrufen eines anderen Diensts über einen <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Kanal entsperrt wird.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>In this case, the called service can reenter the first service via a callback.</source>
          <target state="translated">In diesem Fall kann der aufgerufene Dienst über einen Rückruf wieder in den ersten Dienst eintreten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>If the first service is not reentrant, the sequence of calls results in a deadlock.</source>
          <target state="translated">Wenn der erste Dienst nicht wiedereintrittsfähig ist, führt die Sequenz der Aufrufe zu einem Deadlock.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>For details, see <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" /&gt;</ph>.</source>
          <target state="translated">Ausführliche Informationen finden Sie unter <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Single">
          <source>The service instance is single-threaded and does not accept reentrant calls.</source>
          <target state="translated">Die Dienstinstanz ist eine Singlethread-Instanz und nimmt keine wiedereintrittsfähige Aufrufe an.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Single">
          <source>If the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /&gt;</ph> property is <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.Single" /&gt;</ph>, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /&gt;</ph>-Eigenschaft <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.Single" /&gt;</ph> ist und weitere Meldungen ankommen, während die Instanz einen Aufruf bedient, müssen diese Meldungen warten, bis der Dienst verfügbar ist oder bis eine Zeitüberschreitung bei den Meldungen eintritt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>