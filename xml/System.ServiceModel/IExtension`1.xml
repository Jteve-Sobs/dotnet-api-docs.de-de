<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e23c364cd0eb8b30c490d766f998a5de4886ca7" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32690888" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="61458-101">Das Objekt, das am benutzerdefinierten Verhalten teilnimmt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61458-101">The object that participates in the custom behavior.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="61458-102">Aktiviert ein Objekt, um durch Aggregation ein anderes Objekt zu erweitern.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61458-102">Enables an object to extend another object through aggregation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61458-103">WCF ermöglicht Ihnen das Erweitern <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> Objekte (die <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, und <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> Klassen) einen Zustand "Neu" oder das Verhalten mithilfe des erweiterbaren Objektmusters hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="61458-103">WCF allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="61458-104">Das erweiterbare Objektmuster wird in WCF verwendet, um vorhandene Laufzeit Klassen mit neuen Funktionen zu erweitern oder um neue Zustandsfunktionen zu einem Objekt hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="61458-104">The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="61458-105">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-105">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61458-106">Aktiviert ein Erweiterungsobjekt, um herauszufinden, wann es aggregiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-106">Enables an extension object to find out when it has been aggregated.</span>
          </span>
          <span data-ttu-id="61458-107">Wird aufgerufen, wenn die Erweiterung in die <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61458-108">Verwenden Sie diese Methode, um das <xref:System.ServiceModel.IExtensibleObject%601>-Objekt nachzuverfolgen, zu dem die aktuelle Instanz der Erweiterung gehört.</span><span class="sxs-lookup"><span data-stu-id="61458-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="61458-109">Dank dieses Aufrufs können Erweiterungen Ereignisse verarbeiten oder Eigenschaften ihres Besitzers überprüfen.</span><span class="sxs-lookup"><span data-stu-id="61458-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61458-110">Mit dem folgenden Beispielcode wird veranschaulicht, wie mit dieser Methode das <xref:System.ServiceModel.IExtensibleObject%601>-Objekt, zu dem die aktuelle Instanz der Erweiterung gehört, nachverfolgt werden kann.</span><span class="sxs-lookup"><span data-stu-id="61458-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="61458-111">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-111">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61458-112">Aktiviert ein Objekt, um zu kennzeichnen, wenn es nicht mehr aggregiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-112">Enables an object to find out when it is no longer aggregated.</span>
          </span>
          <span data-ttu-id="61458-113">Wird aufgerufen, wenn eine Erweiterung aus der <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft entfernt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61458-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61458-114">Verwenden Sie die <xref:System.ServiceModel.IExtension%601.Detach%2A>-Methode, um herauszufinden, wann die Erweiterung entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="61458-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="61458-115">Eine Erweiterung kann dies verwenden, um die Verknüpfung der Ereignisse auf dem erweiterbaren Objekt aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="61458-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="61458-116">Eine Erweiterung kann auch <xref:System.InvalidOperationException?displayProperty=nameWithType> aus dieser Methode auslösen, um anzugeben, dass die Erweiterung nach dem Hinzufügen nicht mehr entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="61458-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="61458-117">Beachten Sie, dass diese Methode nicht aufgerufen wird, wenn das Besitzerobjekt verworfen oder geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="61458-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="61458-118">Falls erforderlich ist es Aufgabe der Erweiterung oder des Codes, der die Erweiterung hinzufügt, die entsprechenden <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType>-Ereignisse zu verknüpfen oder die geeignete Schnittstellen (für <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) zu implementieren, um den Lebenszyklus des Besitzers zu beachten.</span><span class="sxs-lookup"><span data-stu-id="61458-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>