<Type Name="ClientCredentialsSecurityTokenManager" FullName="System.ServiceModel.ClientCredentialsSecurityTokenManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f11e00ec793377b4d1108a83bcb4fbdf878bd69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36611245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager" />
  <TypeSignature Language="F#" Value="type ClientCredentialsSecurityTokenManager = class&#xA;    inherit SecurityTokenManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Sicherheitstoken für den Client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse übernimmt die Sicherheitstokenserialisierung, Sicherheitstokenbereitstellung und Sicherheitstokenauthentifizierung für den Client. Es gibt eine Instanz dieser Klasse für jede Clientkanalfactory.  
  
   
  
## Examples  
 Der folgende Code zeigt, wie Sie diese Klasse überschreiben können, um einen benutzerdefinierten Sicherheitstoken-Manager für die Client-Anmeldeinformationen zu erstellen.  
  
 [!code-csharp[c_CustomCredentials#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#2)]
 [!code-vb[c_CustomCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/client/client.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientCredentialsSecurityTokenManager (System.ServiceModel.Description.ClientCredentials clientCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ClientCredentials clientCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientCredentialsSecurityTokenManager(System::ServiceModel::Description::ClientCredentials ^ clientCredentials);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ClientCredentialsSecurityTokenManager : System.ServiceModel.Description.ClientCredentials -&gt; System.ServiceModel.ClientCredentialsSecurityTokenManager" Usage="new System.ServiceModel.ClientCredentialsSecurityTokenManager clientCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCredentials" Type="System.ServiceModel.Description.ClientCredentials" />
      </Parameters>
      <Docs>
        <param name="clientCredentials">Die <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie diesen Konstruktor überschreiben können.  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#8](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#8)]
 [!code-vb[ClientCredentialsSecurityTokenManager#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clientCredentials" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ClientCredentials ClientCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCredentials As ClientCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ClientCredentials ^ ClientCredentials { System::ServiceModel::Description::ClientCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredentials : System.ServiceModel.Description.ClientCredentials" Usage="System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Clientanmeldeinformationen ab.</summary>
        <value>Das <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dem <xref:System.ServiceModel.Description.ClientCredentials>-Objekt kann der Benutzer die Clientanmeldeinformationen für die Authentifizierung für den Dienst konfigurieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenRequirement *  -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="clientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator (tokenRequirement, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
        <param name="outOfBandTokenResolver">Wenn diese Methode zurückgegeben wird, ist <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> enthalten. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Erstellt einen Sicherheitstoken-Authentifikator.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> ist für die Validierung der Sicherheitstoken und die Bereitstellung von <xref:System.IdentityModel.Policy.IAuthorizationPolicy> verantwortlich, um Ansprüche für Sicherheitstoken zu erhalten, die die in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> festgelegten Anforderungen erfüllen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (tokenRequirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.IdentityModel.Selectors.SecurityTokenProvider" Usage="clientCredentialsSecurityTokenManager.CreateSecurityTokenProvider tokenRequirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
        <summary>Erstellt einen Sicherheitstokenanbieter.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse ist verantwortlich für das Abrufen von Token für eine gegebene <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optional können Tokenanbieter auch das Erneuern und Abbrechen von Token unterstützen.  
  
   
  
## Examples  
 Der folgende Code zeigt eine Möglichkeit, wie diese Methode überschrieben werden kann.  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#2](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#2)]
 [!code-vb[ClientCredentialsSecurityTokenManager#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSecurityTokenSerializer">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein Sicherheitstoken-Serialisierungsprogramm.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die beiden Überladungen unterscheiden sich durch ihre Eingabeparameter: eine erhält die <xref:System.IdentityModel.Selectors.SecurityTokenVersion>, die andere <xref:System.ServiceModel.Security.SecurityVersion>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.IdentityModel.Selectors.SecurityTokenVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="clientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> des Sicherheitstokens.</param>
        <summary>Erstellt ein Sicherheitstoken-Serialisierungsprogramm.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> werden Sicherheitstoken, Sicherheitsschlüssel-IDs und Sicherheitsschlüssel-ID-Klauseln geschrieben und gelesen. Beim Deserialisieren des Tokens aus XML muss das zurückgegebene Token in der Lage sein, kryptografische Vorgänge auszuführen. Das Token-Serialisierungsprogramm muss daher sicherstellen, dass das deserialisierte Token kryptografische Vorgänge (Kerberos-Ticketverarbeitung, X.509-Decodierung, SAML-Decodierung und andere Vorgänge) durchführen kann, sollte aber Entscheidungen zur Vertrauenswürdigkeit der Anwendung an den Authentifizierer weiterleiten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.ServiceModel.Security.SecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.ServiceModel.Security.SecurityVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecurityTokenSerializer (version As SecurityVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::ServiceModel::Security::SecurityVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.ServiceModel.Security.SecurityVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="clientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Security.SecurityVersion" />
      </Parameters>
      <Docs>
        <param name="version">
          <see cref="T:System.ServiceModel.Security.SecurityVersion" /> des Sicherheitstokens.</param>
        <summary>Erstellt ein Sicherheitstoken-Serialisierungsprogramm.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> werden Sicherheitstoken, Sicherheitsschlüssel-IDs und Sicherheitsschlüssel-ID-Klauseln gelesen und geschrieben. Beim Deserialisieren des Tokens aus XML muss das zurückgegebene Token in der Lage sein, kryptografische Vorgänge auszuführen. Das Token-Serialisierungsprogramm muss daher sicherstellen, dass das deserialisierte Token kryptografische Vorgänge (Kerberos-Ticketverarbeitung, X.509-Decodierung, SAML-Decodierung und andere Vorgänge) durchführen kann, sollte aber Entscheidungen zur Vertrauenswürdigkeit der Anwendung an den Authentifizierer weiterleiten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected internal bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="member this.IsIssuedSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; bool" Usage="clientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Token-Anforderung eine ausgegebene Sicherheitstoken-Anforderung ist.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene Tokenanforderung eine ausgegebene Sicherheitstoken-Anforderung ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requirement" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>