<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AddressAlreadyInUseException.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f02cb5a17ae45142d63ae1f4d4a7673285e3205d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f02cb5a17ae45142d63ae1f4d4a7673285e3205d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>The exception that is thrown when an address is unavailable because it is already in use.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn eine Adresse nicht verfügbar ist, da sie bereits verwendet wird.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client and service applications are expected to handle.</source>
          <target state="translated">Diese Ausnahme wird von <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> abgeleitet. Hierbei handelt es sich um eine Klasse behebbarer Fehler, die während der Kommunikation zwischen Endpunkten ausgelöst werden können und für deren Behandlung robuste <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Client- und Dienstanwendungen vorgesehen sind.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>To prevent a handler for <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.AddressAlreadyInUseException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">Um zu verhindern, dass ein Handler für die <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> die spezifischere <ph id="ph2">&lt;xref:System.ServiceModel.AddressAlreadyInUseException&gt;</ph> abfängt, fangen Sie diese Ausnahme vor der Behandlung der <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">Wenn Sie eine Fehlermeldung an den Benutzer übergeben möchten, verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29&gt;</ph>-Konstruktor.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">Wenn Sie eine Fehlermeldung und einen Verweis auf die interne Ausnahme, die die Ausnahme ausgelöst hat, an den Benutzer übergeben möchten, verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph>-Konstruktor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.AddressAlreadyInUseException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">Wenn Sie Serialisierungsinformationen und Streamingkontext übergeben möchten, verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph>-Konstruktor.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn Sie eine Fehlermeldung an den Benutzer übergeben möchten.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the intended user.</source>
          <target state="translated">Der Inhalt des Nachrichtenparameters sollte für den vorgesehenen Benutzer verständlich sein.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that contains all the data required to serialize the exception.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Instanz, die alle erforderlichen Daten zum Serialisieren der Ausnahme enthält.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the source and destination of the stream.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Objekt, das die Quelle und das Ziel des Streams angibt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph> class with serialization information and streaming context specified.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph>-Klasse unter Angabe der Serialisierungsinformationen und des Streamingkontexts.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</source>
          <target state="translated">Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the current exception to be thrown.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of the exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressAlreadyInUseException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die interne Ausnahme, die diese Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn Sie eine Fehlermeldung und Informationen über eine interne Ausnahme an den Benutzer übergeben möchten.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">Der Inhalt der Nachrichtenparameter sollte für die vorgesehenen Benutzer verständlich sein.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, kann in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder einen <ph id="ph2">`null`</ph>-Verweis (<ph id="ph3">`Nothing`</ph> in Visual Basic), wenn die <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft den Wert der internen Ausnahme nicht an den Konstruktor übergibt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>