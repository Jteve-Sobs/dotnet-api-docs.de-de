<Type Name="OperationContractAttribute" FullName="System.ServiceModel.OperationContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c645cc5c1a22c19e3e0ba3c71e0c283cbc6c285" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70494176" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OperationContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0bf52-101">Gibt an, dass eine Methode einen Vorgang definiert, der Bestandteil eines Dienstvertrags in einer Windows Communication Foundation-Anwendung (WCF) ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-101">Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-102">Wenden Sie den <xref:System.ServiceModel.OperationContractAttribute> auf eine Methode an, um anzugeben, dass mit einer Methode ein Dienstvorgang als Bestandteil eines Dienstvertrags (angegeben mit einem <xref:System.ServiceModel.ServiceContractAttribute>-Attribut) implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="0bf52-102">Apply the <xref:System.ServiceModel.OperationContractAttribute> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <xref:System.ServiceModel.ServiceContractAttribute> attribute).</span></span>  
  
 <span data-ttu-id="0bf52-103">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute>-Eigenschaften, um die Struktur des Vorgangs und die in Metadaten ausgedrückten Werte zu steuern:</span><span class="sxs-lookup"><span data-stu-id="0bf52-103">Use the <xref:System.ServiceModel.OperationContractAttribute> properties to control the structure of the operation and the values expressed in metadata:</span></span>  
  
-   <span data-ttu-id="0bf52-104">Die <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft gibt die Aktion an, die diesen Vorgang eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-104">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property specifies the action that uniquely identifies this operation.</span></span> <span data-ttu-id="0bf52-105">WCF sendet Anforderungs Nachrichten auf der Grundlage ihrer Aktion an Methoden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-105">WCF dispatches request messages to methods based on their action.</span></span>  
  
-   <span data-ttu-id="0bf52-106">Mit der <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>-Eigenschaft wird angegeben, dass der Vorgang implementiert wird oder asynchron mit einem Begin/End-Methodenpaar aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-106">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</span></span>  
  
-   <span data-ttu-id="0bf52-107">Die <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A>-Eigenschaft gibt an, ob die <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A>-Eigenschaft ausdrücklich festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="0bf52-107">The <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property indicates whether the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property has been explicitly set.</span></span>  
  
-   <span data-ttu-id="0bf52-108">Die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft gibt an, dass der Vorgang nur aus einer einzelnen Eingabenachricht besteht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-108">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that the operation only consists of a single input message.</span></span> <span data-ttu-id="0bf52-109">Der Vorgang verfügt über keine zugeordnete Ausgabenachricht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-109">The operation has no associated output message.</span></span>  
  
-   <span data-ttu-id="0bf52-110">Die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>-Eigenschaft gibt an, ob dieser Vorgang der anfängliche Vorgang in einer Sitzung sein kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-110">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property specifies whether this operation can be the initial operation in a session.</span></span>  
  
-   <span data-ttu-id="0bf52-111">Die <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> -Eigenschaft gibt an, ob WCF versucht, die aktuelle Sitzung zu beenden, nachdem der Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="0bf52-111">The <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property specifies whether WCF attempts to terminate the current session after the operation completes.</span></span>  
  
-   <span data-ttu-id="0bf52-112">Die <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A>-Eigenschaft gibt die Sicherheit auf Nachrichtenebene an, die ein Vorgang während der Laufzeit erfordert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-112">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property specifies the message-level security that an operation requires at run time.</span></span>  
  
-   <span data-ttu-id="0bf52-113">Die <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A>-Eigenschaft gibt die Aktion der Antwortnachricht für den Vorgang an.</span><span class="sxs-lookup"><span data-stu-id="0bf52-113">The <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> property specifies the action of the reply message for the operation.</span></span>  
  
 <span data-ttu-id="0bf52-114">Das <xref:System.ServiceModel.OperationContractAttribute>-Attribut deklariert, dass eine Methode ein Vorgang in einem Dienstvertrag ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-114">The <xref:System.ServiceModel.OperationContractAttribute> attribute declares that a method is an operation in a service contract.</span></span> <span data-ttu-id="0bf52-115">Nur Methoden, die dem <xref:System.ServiceModel.OperationContractAttribute> attributiert werden, werden als Dienstvorgänge verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-115">Only methods attributed with the <xref:System.ServiceModel.OperationContractAttribute> are exposed as service operations.</span></span> <span data-ttu-id="0bf52-116">Mit einem Dienstvertrag ohne mit <xref:System.ServiceModel.OperationContractAttribute> markierte Methoden werden keine Vorgänge verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-116">A service contract without any methods marked with the <xref:System.ServiceModel.OperationContractAttribute> exposes no operations.</span></span>  
  
 <span data-ttu-id="0bf52-117">Die <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> -Eigenschaft gibt an, dass `Begin`ein \<paar von *MethodName*-> und `End` *MethodName*- \<> Methoden einen einzelnen, asynchron implementierten Vorgang (auf dem Client) bilden. oder den-Dienst).</span><span class="sxs-lookup"><span data-stu-id="0bf52-117">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that a pair of `Begin`\<*methodName*> and `End`\<*methodName*> methods form a single operation implemented asynchronously (whether on the client or the service).</span></span> <span data-ttu-id="0bf52-118">Die Fähigkeit eines Diensts, Vorgänge asynchron zu implementieren, ist ein Dienstimplementierungsdetail und wird nicht in den Metadaten (wie z.&#160;B. WSDL (Web Services Description Language)) verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-118">The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</span></span>  
  
 <span data-ttu-id="0bf52-119">Ähnlich können Clients Vorgänge unabhängig von der Implementierung der Dienstmethode asynchron aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-119">Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</span></span> <span data-ttu-id="0bf52-120">Der asynchrone Aufruf von Dienstvorgängen auf dem Client wird empfohlen, wenn eine Dienstmethode einige Zeit beansprucht, jedoch Informationen direkt an den Client zurückgeben muss.</span><span class="sxs-lookup"><span data-stu-id="0bf52-120">Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</span></span> <span data-ttu-id="0bf52-121">Ausführlichere Informationen finden Sie unter <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-121">For details, see <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span></span>  
  
 <span data-ttu-id="0bf52-122">Die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft gibt an, dass eine Methode überhaupt keinen Wert zurückgibt. Dies bezieht sich auch auf eine leere zugrunde liegende Antwortnachricht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-122">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that a method does not return any value at all, including an empty underlying response message.</span></span> <span data-ttu-id="0bf52-123">Dieser Methodentyp ist für Benachrichtigungen oder ereignisbezogene Kommunikation nützlich.</span><span class="sxs-lookup"><span data-stu-id="0bf52-123">This type of method is useful for notifications or event-style communication.</span></span> <span data-ttu-id="0bf52-124">Methoden dieser Art können keine Antwortnachricht zurückgeben. Folglich muss die Deklaration der Methode `void` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-124">Methods of this kind cannot return a reply message so the method's declaration must return `void`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0bf52-125">Wenn Sie den Informationsspeicher Programm gesteuert in diesem Attribut abrufen, verwenden Sie <xref:System.ServiceModel.Description.ContractDescription> die-Klasse anstelle der Reflektion.</span><span class="sxs-lookup"><span data-stu-id="0bf52-125">When programmatically retrieving the information store in this attribute, use the <xref:System.ServiceModel.Description.ContractDescription> class instead of reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-126">Wenn für die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft `false` festgelegt wird (Standardeinstellung), liegen auch bei Methoden, die `void` zurückgeben, bidirektionale Methoden auf der zugrunde liegenden Nachrichtenebene vor.</span><span class="sxs-lookup"><span data-stu-id="0bf52-126">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false`, (the default), even methods that return `void` are two-way methods at the underlying message level.</span></span> <span data-ttu-id="0bf52-127">In diesem Fall erstellt und sendet die Infrastruktur eine leere Nachricht, um dem Aufrufer mitzuteilen, dass die Methode einen Wert zurückgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="0bf52-127">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="0bf52-128">Mit dieser Vorgehensweise können die Anwendung und die Infrastruktur Fehlerinformationen (wie z.&amp;#160;B. einen SOAP-Fehler) an den Client zurücksenden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-128">Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</span></span> <span data-ttu-id="0bf52-129">Die Festlegung von <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> auf `true` ist die einzige Möglichkeit, die Erstellung und Versendung einer Antwortnachricht zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="0bf52-129">Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to prevent the creation and dispatch of a reply message.</span></span> <span data-ttu-id="0bf52-130">Weitere Informationen finden Sie unter unidirektionale [Dienste](~/docs/framework/wcf/feature-details/one-way-services.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-130">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md).</span></span>  
  
 <span data-ttu-id="0bf52-131">Mit der <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft und der <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A>-Eigenschaft können nicht nur die Standardaktion von SOAP-Nachrichten geändert werden, sondern können auch Handler für unerkannte Nachrichten erstellt oder das Hinzufügen von Aktionen für die direkte Nachrichtenprogrammierung deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-131">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</span></span> <span data-ttu-id="0bf52-132">Verhindern Sie mit der <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>-Eigenschaft, dass Clients vor anderen Vorgängen einen besonderen Dienstvorgang aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-132">Use the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to prevent clients from calling a particular service operation prior to other operations.</span></span> <span data-ttu-id="0bf52-133">Verwenden Sie <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> die-Eigenschaft, damit WCF den Channel schließt, nachdem Clients einen bestimmten Dienst Vorgang aufgerufen haben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-133">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to have WCF close the channel after clients call a particular service operation.</span></span> <span data-ttu-id="0bf52-134">Weitere Informationen finden Sie unter [Verwenden von Sitzungen](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-134">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
 <span data-ttu-id="0bf52-135">Mit der <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A>-Eigenschaft können Sie für den Dienstvertrag angeben, ob die Vorgangsnachrichten signiert, verschlüsselt oder signiert und verschlüsselt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-135">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</span></span> <span data-ttu-id="0bf52-136">Kann von einer Bindung die vom Vertrag geforderte Sicherheitsebene nicht bereitgestellt werden, wird während der Laufzeit eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0bf52-136">If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</span></span> <span data-ttu-id="0bf52-137">Weitere Informationen finden <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> Sie unter und Grundlegendes zu [Schutz Ebenen](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-137">For more information, see <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> and [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-138">Im folgenden Codebeispiel ist ein einfacher Dienstvertrag mit einem Vorgang dargestellt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-138">The following code example shows a simple service contract with one operation.</span></span>  
  
 [!code-csharp[OperationContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="0bf52-139">Das folgende Beispiel enthält einen Dienst, der einen impliziten Dienstvertrag implementiert, mit dem drei Vorgänge angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-139">The following example is a service that implements an implicit service contract that specifies three operations.</span></span> <span data-ttu-id="0bf52-140">Zwei der Vorgänge sind bidirektionale Vorgänge, die zugrunde liegende Antworten an den Aufrufer zurückgeben, und zwar unabhängig davon, wie der Rückgabewert lautet.</span><span class="sxs-lookup"><span data-stu-id="0bf52-140">Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="0bf52-141">Der dritte Vorgang empfängt einen Aufruf, eine zugrunde liegende eingehende Nachricht, gibt aber keine zugrunde liegende Antwortnachricht zurück.</span><span class="sxs-lookup"><span data-stu-id="0bf52-141">The third operation receives a call, an underlying inbound message, but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContractAttribute]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContractAttribute]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContractAttribute]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is dispatched to the service; no response  
  // message is generated or sent from the service.  
  [OperationContractAttribute(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0bf52-142">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContractAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0bf52-142">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-143">Ruft ab oder legt die WS-Adressierungsaktion der Anforderungsnachricht fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-143">Gets or sets the WS-Addressing action of the request message.</span></span></summary>
        <value><span data-ttu-id="0bf52-144">Die beim Generieren des WS-Adressierungsaktionsheaders zu verwendende Aktion.</span><span class="sxs-lookup"><span data-stu-id="0bf52-144">The action to use in generating the WS-Addressing Action header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-145">Verwenden Sie <xref:System.ServiceModel.OperationContractAttribute.Action%2A> die-Eigenschaft, um die Aktion der Eingabe Nachricht der Methode zu steuern.</span><span class="sxs-lookup"><span data-stu-id="0bf52-145">Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property to control the action of the method's input message.</span></span> <span data-ttu-id="0bf52-146">Da WCF diese Aktion verwendet, um eine eingehende Nachricht an die entsprechende Methode zu senden, müssen Nachrichten, die innerhalb eines Vertrags Vorgangs verwendet werden, eindeutige Aktionen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-146">Because WCF uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</span></span> <span data-ttu-id="0bf52-147">Der Standard Aktionswert ist eine Kombination aus dem Vertrags Namespace (der Standardwert `"http://tempuri.org/"`ist), dem Vertrags Namen (Schnittstellen Name oder Klassenname, wenn keine explizite Dienst Schnittstelle verwendet wird), dem Vorgangs Namen und einer zusätzlichen Zeichenfolge ("Response"), wenn die Meldung ist eine korrelierte Antwort.</span><span class="sxs-lookup"><span data-stu-id="0bf52-147">The default action value is a combination of the contract namespace (the default value is `"http://tempuri.org/"`), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</span></span> <span data-ttu-id="0bf52-148">Sie können diesen Standard mit der <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft überschreiben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-148">You can override this default with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span>  
  
 <span data-ttu-id="0bf52-149">Um anzugeben, dass ein Dienstvorgang alle Nachrichten verarbeitet soll, die der Dienst empfängt, jedoch nicht an einen Dienstvorgang weiterleiteten kann, geben Sie als Wert "\*" (ein Sternchen) an.</span><span class="sxs-lookup"><span data-stu-id="0bf52-149">To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "\*" (an asterisk).</span></span> <span data-ttu-id="0bf52-150">Dieser Vorgangstyp wird als fehlender Nachrichtenhandler bezeichnet und muss über eine der nachstehenden Methodensignaturen verfügen. Andernfalls wird ein <xref:System.InvalidOperationException> ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="0bf52-150">This type of operation, called an unmatched message handler, must have one of following method signatures, or a <xref:System.InvalidOperationException> is thrown:</span></span>  
  
-   <span data-ttu-id="0bf52-151">Die Dienstoperation kann nur ein <xref:System.ServiceModel.Channels.Message>-Objekt annehmen und ein <xref:System.ServiceModel.Channels.Message>-Objekt zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-151">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return a <xref:System.ServiceModel.Channels.Message> object.</span></span>  
  
-   <span data-ttu-id="0bf52-152">Die Dienstoperation kann nur ein <xref:System.ServiceModel.Channels.Message>-Objekt annehmen und nichts (das heißt, `void`) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-152">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return nothing (that is, return `void`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-153">Ein Dienstvertrag kann nur über einen Dienstvorgang verfügen, für den die <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft auf "\*" gesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-153">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="0bf52-154">Eine beliebige Gruppe von Dienstverträgen, die mit dem gleichen ListenUri gehostet wird, den eine Dienstklasse implementiert, kann <xref:System.ServiceModel.OperationContractAttribute.Action%2A> viele Dienst Vorgänge aufweisen\*, bei denen die-Eigenschaft auf `false`festgelegt ist, wenn die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> -Eigenschaft auf festgelegt ist</span><span class="sxs-lookup"><span data-stu-id="0bf52-154">Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="0bf52-155">Allerdings kann die <xref:System.ServiceModel.OperationContractAttribute.Action%2A> -Eigenschaft nur für einen dieser Dienst Vorgänge auf "\*" und für die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> -Eigenschaft auf true festgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="0bf52-155">However, only one of those service operations can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to true.</span></span> <span data-ttu-id="0bf52-156">Weitere Informationen finden Sie unter <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-156">For more details, see <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-157">Im nachstehenden Beispiel ist ein Dienst dargestellt, für den die <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft und die <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A>-Eigenschaft zur ausdrücklichen Steuerung der SOAP-Aktionen sowohl der eingehenden als auch der ausgehenden (oder Antwort-) Nachrichten und die <xref:System.ServiceModel.OperationContractAttribute.Name%2A>-Eigenschaft zur Steuerung des Vorgangsnamens in den Metadaten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-157">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to control the name of the operation in metadata.</span></span> <span data-ttu-id="0bf52-158">Außerdem verwendet die Anwendungen einen <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Wert von "\*" zur Angabe einer Methode für die Verarbeitung unerkannter Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="0bf52-158">Finally, the application also uses an <xref:System.ServiceModel.OperationContractAttribute.Action%2A> value of "\*" to indicate a method that handles unrecognized messages.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 <span data-ttu-id="0bf52-159">Ein Dienst, der diesen Vertrag implementiert, sendet Nachrichten entsprechend nachstehendem Beispiel:</span><span class="sxs-lookup"><span data-stu-id="0bf52-159">A service that implements this contract sends messages that look like the following example:</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf52-160">Der Wert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-160">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPattern">
      <MemberSignature Language="C#" Value="public bool AsyncPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncPattern" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPattern As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsyncPattern { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPattern : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-161">Gib an, dass ein Vorgang mit dem Methodenpaar <see langword="Begin" />&lt;*Methodenname*&gt; und <see langword="End" />&lt;*Methodenname*&gt; in einem Dienstvertrag asynchron implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="0bf52-161">Indicates that an operation is implemented asynchronously using a <see langword="Begin" />&lt;*methodName*&gt; and <see langword="End" />&lt;*methodName*&gt; method pair in a service contract.</span></span></summary>
        <value><span data-ttu-id="0bf52-162"><see langword="true" />Wenn die <see langword="Begin" /> <see langword="End" /> *MethodName* -Methode &lt; mit einer MethodName &gt;  -Methode übereinstimmt und von der Infrastruktur als ein implementierter Vorgang behandelt werden kann \*\* &lt;&gt; als asynchrones Methoden paar auf der Dienst Schnittstelle. <see langword="false" />andernfalls.</span><span class="sxs-lookup"><span data-stu-id="0bf52-162"><see langword="true" /> if the <see langword="Begin" />&lt;*methodName*&gt;method is matched by an <see langword="End" />&lt;*methodName*&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0bf52-163">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-163">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-164">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>-Eigenschaft zur Erstellung von Dienstvorgängen, die asynchron auf dem Server, dem Client oder beiden aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="0bf52-164">Use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to build service operations that can be called asynchronously on the server, the client, or both.</span></span> <span data-ttu-id="0bf52-165">Die <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>-Eigenschaft informiert die Laufzeit, dass eine `Begin`-Methode über eine passende `End`-Methode verfügt, die mit den Entwurfsmustern von .NET Framework für asynchrone Methoden übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-165">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property informs the runtime that a `Begin` method has a matched `End` method that conforms to the .NET Framework asynchronous method design pattern.</span></span> <span data-ttu-id="0bf52-166">Mit der Erstellung von asynchronen Servermethoden, die einen Dienstvorgang implementieren, wird die Skalierbarkeit und die Leistung des Servers erhöht, ohne dass die Clients des Servers dadurch beeinträchtigt werden. Dieser Schritt wird empfohlen, wenn ein Dienstvorgang nach der Durchführung eines langwierigen Vorgangs etwas zurückgeben muss, das asynchron durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-166">Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</span></span>  
  
 <span data-ttu-id="0bf52-167">Auf Clients hat dies keine Auswirkung, da das asynchrone Methodenpaar auf dem Server ein Implementierungsdetail ist, das sich nicht auf die zugrunde liegende WSDL (Web Services Description Language)-Beschreibung des Vorgangs auswirkt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-167">Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</span></span> <span data-ttu-id="0bf52-168">Diese Methoden werden den Clients als einzelner Vorgang mit `<input>` und korrelierten `<output>` Nachrichten angezeigt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-168">Such methods appear to clients as a single operation with `<input>` and correlated `<output>` messages.</span></span> <span data-ttu-id="0bf52-169">WCF leitet eingehende Nachrichten automatisch `Begin`an die \< *MethodName*-> `End` \<Methode weiter und leitet die Ergebnisse des *MethodName*-> Aufrufens an die ausgehende Nachricht weiter.</span><span class="sxs-lookup"><span data-stu-id="0bf52-169">WCF automatically routes inbound messages to the `Begin`\<*methodName*> method and routes the results of the `End`\<*methodName*> call to the outbound message.</span></span> <span data-ttu-id="0bf52-170">Clientkanäle können daher das Methodenpaar als einzelnen synchronen Vorgang oder als asynchrones Vorgangspaar darstellen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-170">Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</span></span> <span data-ttu-id="0bf52-171">In keinem Fall wirkt sich die Clientdarstellung in irgendeiner Weise auf die asynchrone Implementierung auf dem Server aus.</span><span class="sxs-lookup"><span data-stu-id="0bf52-171">In no case does the client representation affect the asynchronous implementation on the server in any way.</span></span>  
  
 <span data-ttu-id="0bf52-172">In Clientverträgen kann die <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>-Eigenschaft zur Angabe eines asynchronen Methodenpaars verwendet werden, mit dem der Client den Vorgang asynchron aufrufen kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-172">Client contracts can use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</span></span> <span data-ttu-id="0bf52-173">In der Regel verwenden Client Anwendungen [das Service Model Metadata Utility Tool (Svcutil. exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) -Tool `/async` und die- `Begin` \<Option, um *MethodName*- `End` \< *> zu generieren. MethodName*> Methoden Paar, das der Client verwenden kann, um den Vorgang asynchron aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-173">Typically, client applications use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool and the `/async` option to generate a `Begin`\<*methodName*> and `End`\<*methodName*> method pair that the client can use to invoke the operation asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-174">Ist für einen Dienstvorgang sowohl eine asynchrone als auch eine synchrone Version vorhanden, ist das Standardverhalten für den Dienst der Aufruf der synchronen Version.</span><span class="sxs-lookup"><span data-stu-id="0bf52-174">If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-175">Im nachstehenden Codebeispiel ist ein Clientkanal zu einem Dienstvertrag dargestellt, der sowohl eine synchrone als auch eine asynchrone Version von `Add` beinhaltet.</span><span class="sxs-lookup"><span data-stu-id="0bf52-175">The following code example shows a client channel to a service contract that includes both a synchronous version of `Add` and an asynchronous version.</span></span> <span data-ttu-id="0bf52-176">Wird die Vertragsschnittstelle auf dem Client verwendet, rufen sowohl der `BeginAdd`-Vorgang als auch der `Add`-Vorgang eine Methode auf dem Server auf, die synchron oder asynchron sein kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-176">If the contract interface is used on the client, both the `BeginAdd` and the `Add` operation invoke a method on the server that may or may not be synchronous.</span></span> <span data-ttu-id="0bf52-177">Wir der Dienst mit dem Vertrag implementiert, werden laut Standardeinstellung eingehende Anforderungen an die synchrone Methode gesendet.</span><span class="sxs-lookup"><span data-stu-id="0bf52-177">If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</span></span>  
  
```csharp  
[ServiceContract]  
public interface IAddTwoNumbers  
{  
    // If the asynchronous method pair  
    // appears on the client channel, the client can call   
    // them asynchronously to prevent blocking.  
    [OperationContract (AsyncPattern=true)]  
    IAsyncResult BeginAdd(int a, int b, AsyncCallback cb, AsyncState s);  
  
    [OperationContract]  
    int EndAdd(IAsyncResult r);  
  
    // This is a synchronous version of the BeginAdd/EndAdd pair.  
    // It appears in the client channel code by default.   
    [OperationContract]  
    int Add(int a, int b);  
   }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-178">Ruft einen Wert ab, der angibt, ob die Nachrichten für diesen Vorgang verschlüsselt oder signiert werden müssen oder beides.</span><span class="sxs-lookup"><span data-stu-id="0bf52-178">Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="0bf52-179"><see langword="true" />, wenn für die <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />-Eigenschaft ein anderer Wert als <see cref="F:System.Net.Security.ProtectionLevel.None" /> festgelegt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-179"><see langword="true" /> if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0bf52-180">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-181">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A>-Eigenschaft, um anzugeben, ob für die Nachrichten dieses Vorgangs eine bestimmte Sicherheitsebene erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-181">Use the <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property to determine whether a specific protection level is required by the messages of this operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitiating">
      <MemberSignature Language="C#" Value="public bool IsInitiating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitiating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitiating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitiating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitiating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-182">Ruft einen Wert ab, der angibt, ob die Methode einen Vorgang implementiert, der eine Sitzung auf dem Server initiieren kann (wenn eine solche Sitzung vorhanden ist), oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-182">Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</span></span></summary>
        <value><span data-ttu-id="0bf52-183"><see langword="true" />, wenn dem Vorgang erlaubt wird, eine Sitzung auf dem Server zu initiieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-183"><see langword="true" /> if the operation is permitted to initiate a session on the server, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0bf52-184">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-184">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-185">Die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>-Eigenschaft steuert, ob ein Vorgang bei der Erstellung einer Sitzung als erster Vorgang aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-185">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property controls whether an operation can be the first operation called when a session is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-186">Um eine einwandfreie Funktion zu gewährleisten, muss der Wert von <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> <xref:System.ServiceModel.SessionMode.Allowed> oder <xref:System.ServiceModel.SessionMode.Required> lauten. Die Bindung muss Sitzungen für die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>-Eigenschaft anfordern oder zulassen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-186">The value of <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> must be either <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> and the binding used must require or allow sessions for the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to work properly.</span></span>  
  
 <span data-ttu-id="0bf52-187">Der Standardwert ist `true`, was bedeutet, dass ein Vorgang als erster Vorgang in einem Kanal aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-187">The default is `true`, which means that an operation can be the first one called on a channel.</span></span> <span data-ttu-id="0bf52-188">Nachfolgende Aufrufe der initiierenden Methode haben nur die Auswirkung, dass die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0bf52-188">Subsequent calls to the initiating method have no effect, other than to call the method.</span></span> <span data-ttu-id="0bf52-189">Es werden keine anderen Sitzungen erstellt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-189">No other sessions are created.</span></span> <span data-ttu-id="0bf52-190">Wenn der Vertrag keine Sitzung nutzt, wird die Festlegung von <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> auf `false` ignoriert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-190">If the contract does not make use of a session, setting <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` is ignored.</span></span>  
  
 <span data-ttu-id="0bf52-191">In der Regel legen Sie für <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>`false` fest, um zu erzwingen, dass Clients eine andere Methode für den Dienst aufrufen, bevor sie diese aktivieren können.</span><span class="sxs-lookup"><span data-stu-id="0bf52-191">Typically, you set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` to force clients to call another method on the service before they can invoke this one.</span></span> <span data-ttu-id="0bf52-192">Verfügt beispielsweise Ihr Dienst über eine Reihe von Vorgängen, die von einer ID-Nummer abhängig sind, können Sie für <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> den `true` für einen `GetOrderId`-Dienstvorgang festlegen und für alle verbleibenden Dienstvorgänge `false` festlegen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-192">For example, if your service has a series of operations that depend on an order ID number, you can set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `true` for a `GetOrderId` service operation and set all remaining service operations to `false`.</span></span> <span data-ttu-id="0bf52-193">Hiermit wird sichergestellt, dass jeder neue Client vor der Verwendung anderer, vom Dienst verfügbar gemachter Methoden eine Auftrags-ID erhält.</span><span class="sxs-lookup"><span data-stu-id="0bf52-193">This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-194">Es findet eine Interaktion zwischen <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> und der <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft statt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-194">There is an interaction between <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> and the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span> <span data-ttu-id="0bf52-195">Ein Dienstvertrag kann nur über einen Dienstvorgang verfügen, für den die <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft auf "\*" gesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-195">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="0bf52-196">Eine beliebige Gruppe von Dienstverträgen, die mit demselben Abhör-URI gehostet werden, der von einer Dienstklasse implementiert wird <xref:System.ServiceModel.OperationContractAttribute.Action%2A> , kann viele Dienst\*Vorgänge aufweisen, wobei die-Eigenschaft `false`auf "" festgelegt ist, wenn die <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> -Eigenschaft auf</span><span class="sxs-lookup"><span data-stu-id="0bf52-196">Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="0bf52-197">Allerdings kann nur für eine dieser Dienst Methoden <xref:System.ServiceModel.OperationContractAttribute.Action%2A> die-Eigenschaft auf "\*" festgelegt werden <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> , und die `true`-Eigenschaft ist auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-197">However, only one of those service methods can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="0bf52-198">Wenn ein Dienst eine Nachricht für einen Nicht-Initiierungsvorgang empfängt, gibt der Dienst einen ActionNotSupported-SOAP-Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="0bf52-198">If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</span></span> <span data-ttu-id="0bf52-199">Der Client erfährt dieses als <xref:System.ServiceModel.FaultException>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-199">The client experiences this as an <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="0bf52-200">Wenn ein Client zuerst einen Nicht-Initiierungsvorgang aufruft, löst die Clientlaufzeit <xref:System.InvalidOperationException?displayProperty=nameWithType> aus.</span><span class="sxs-lookup"><span data-stu-id="0bf52-200">If a client calls a non-initiating operation first, the client runtime throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0bf52-201">Weitere Informationen finden Sie unter [Verwenden von Sitzungen](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-201">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-202">Das folgende Beispiel ist ein Dienst, der einen Dienstvertrag implementiert, der drei Methoden angibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-202">The following example is a service that implements a service contract that specifies three methods.</span></span> <span data-ttu-id="0bf52-203">Der Dienst erfordert eine Sitzung.</span><span class="sxs-lookup"><span data-stu-id="0bf52-203">The service requires a session.</span></span> <span data-ttu-id="0bf52-204">Ruft der Aufrufer zuerst einen anderen Vorgang als `MethodOne` auf, wird der Kanal verweigert, und es wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0bf52-204">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="0bf52-205">Initiiert ein Aufrufer eine Sitzung durch Aufruf von `MethodOne`, kann dieser Aufrufer die Kommunikationssitzung jederzeit durch den Aufruf von `MethodThree` beenden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-205">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="0bf52-206">`MethodTwo`kann während einer Sitzung beliebig oft aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-206">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContract(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false,  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public bool IsOneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOneWay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOneWay : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-207">Ruft einen Wert ab, der angibt, ob ein Vorgang eine Antwortnachricht zurückgibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-207">Gets or sets a value that indicates whether an operation returns a reply message.</span></span></summary>
        <value><span data-ttu-id="0bf52-208"><see langword="true" />, wenn diese Methode eine Anforderungsnachricht empfängt und keine Antwortnachricht zurückgibt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-208"><see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0bf52-209">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-210">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft, um anzugeben, dass ein Vorgang keine Antwortnachricht zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-210">Use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to indicate that an operation does not return a reply message.</span></span> <span data-ttu-id="0bf52-211">Dieser Vorgangstyp ist für Benachrichtigungen oder die ereignisbezogene Kommunikation hilfreich, besonders bei bidirektionaler Kommunikation.</span><span class="sxs-lookup"><span data-stu-id="0bf52-211">This type of operation is useful for notifications or event-style communication, especially in two-way communication.</span></span> <span data-ttu-id="0bf52-212">Wenn sie nicht auf eine zugrunde liegende Antwortnachricht warten, verfügen Aufrufer von unidirektionalen Vorgängen über keine direkte Möglichkeit, einen Fehler bei der Verarbeitung der Antwortnachricht zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-212">Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</span></span> <span data-ttu-id="0bf52-213">(Dienstanwendungen, die mit zuverlässigen Kanälen und unidirektionalen Vorgängen arbeiten, können einen Nachrichtenzustellfehler auf Kanalebene erkennen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-213">(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</span></span> <span data-ttu-id="0bf52-214">Weitere Informationen finden Sie unter [Übersicht über zuverlässige Sitzungen](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md).)</span><span class="sxs-lookup"><span data-stu-id="0bf52-214">For details, see [Reliable Sessions Overview](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md).)</span></span>  
  
 <span data-ttu-id="0bf52-215">Bei dienstorientierten Duplexanwendungen (oder bidirektionalen Anwendungen), bei denen Client und Server unabhängig miteinander kommunizieren, kann ein Clientkanal die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft für seine Methoden anwenden, um anzugeben, dass der Dienst unidirektionale Aufrufe an den Client tätigen kann, die der Client dann als Ereignisse behandeln kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-215">In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</span></span> <span data-ttu-id="0bf52-216">Es werden keine Rückgabeaufrufe bzw. Nachrichten generiert, da der Dienst keine Antwortnachricht erwartet.</span><span class="sxs-lookup"><span data-stu-id="0bf52-216">No return call or message is generated because the service does not expect any response message.</span></span>  
  
 <span data-ttu-id="0bf52-217">Wenn die für die <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>-Eigenschaft `false` festgelegt ist (Standardeinstellung), wird sogar bei Methoden, die `void` zurückgeben, eine Antwortnachricht ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-217">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false` (the default), even methods that return `void` result in a reply message.</span></span> <span data-ttu-id="0bf52-218">In diesem Fall erstellt und sendet die Infrastruktur eine leere Nachricht, um dem Aufrufer mitzuteilen, dass die Methode einen Wert zurückgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="0bf52-218">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="0bf52-219">(Bei dieser Vorgehensweise kann die Infrastruktur SOAP-Fehler an den Client zurücksenden.) Das <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> festlegen `true` von auf ist die einzige Möglichkeit, die Erstellung und den Versand einer Antwortnachricht abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-219">(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to cancel the creation and dispatch of a response message.</span></span>  
  
 <span data-ttu-id="0bf52-220">Unidirektionale Methoden dürfen keinen Wert zurückgeben oder über `ref`-Parameter oder `out`-Parameter verfügen, andernfalls wird eine <xref:System.InvalidOperationException?displayProperty=nameWithType>-Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0bf52-220">One-way methods must not return a value or have `ref` or `out` parameters; otherwise a <xref:System.InvalidOperationException?displayProperty=nameWithType> exception is thrown.</span></span>  
  
 <span data-ttu-id="0bf52-221">Die Angabe, dass ein Vorgang ein unidirektionaler Vorgang ist, bedeutet lediglich, dass es keine Antwortnachricht gibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-221">Specifying that an operation is a one-way operation means only that there is no response message.</span></span> <span data-ttu-id="0bf52-222">Es kann eine Blockade auftreten, wenn eine Verbindung nicht hergestellt werden kann, die ausgehende Nachricht sehr groß ist oder der Dienst eingehende Informationen nicht schnell genug lesen kann.</span><span class="sxs-lookup"><span data-stu-id="0bf52-222">It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</span></span> <span data-ttu-id="0bf52-223">Erfordert ein Client einen nicht blockierenden Aufruf, generieren Sie <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="0bf52-223">If a client requires a non-blocking call, generate <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> operations.</span></span> <span data-ttu-id="0bf52-224">Weitere Informationen finden Sie unter unidirektionale [Dienste](~/docs/framework/wcf/feature-details/one-way-services.md) und [zugreifen auf Dienste mithilfe eines WCF-Clients](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-224">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md) and [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-225">Das folgende Beispiel enthält einen Dienst, der einen Dienstvertrag implementiert, der drei Vorgänge angibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-225">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="0bf52-226">Zwei der Methoden implementieren bidirektionale Vorgänge, die zugrunde liegende Antwortnachrichten an den Aufrufer zurückgeben, und zwar unabhängig davon, wie der Rückgabewert lautet.</span><span class="sxs-lookup"><span data-stu-id="0bf52-226">Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="0bf52-227">Die dritte Methode implementiert einen Vorgang, der einen Aufruf (eine zugrunde liegende eingehende Nachricht) empfängt, aber keine zugrunde liegende Antwortnachricht zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-227">The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContract]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContract]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContract]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is queued for dispatch to the service; no response  
  // message is generated or sent.  
  [OperationContract(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTerminating">
      <MemberSignature Language="C#" Value="public bool IsTerminating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTerminating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTerminating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTerminating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-228">Ruft einen Wert ab, der angibt, ob der Dienstvorgang bewirkt, dass der Server die Sitzung schließt, nachdem die Antwortnachricht gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="0bf52-228">Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</span></span></summary>
        <value><span data-ttu-id="0bf52-229"><see langword="true" />, wenn der Vorgang bewirkt, dass der Server die Sitzung schließt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-229"><see langword="true" /> if the operation causes the server to close the session, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0bf52-230">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-230">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-231">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A>-Eigenschaft, um anzugeben, dass durch den Aufruf eines Dienstvorgangs die Kommunikationssitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="0bf52-231">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to indicate that calling a service operation terminates the communication session.</span></span>  
  
 <span data-ttu-id="0bf52-232">In einer Client Anwendung wird durch einen Wert <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> von auf `true` festgelegt, um den Kanal nach Eintreffen der Antwort zu schließen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-232">In a client application, a value of <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> set to `true` instructs WCF to close the channel after the reply arrives.</span></span>  
  
 <span data-ttu-id="0bf52-233">In einem Dienst wird ein Timer festgelegt, und der Kanal bricht ab, wenn er nicht innerhalb dieses Zeitraums vom Client geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="0bf52-233">In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</span></span>  
  
 <span data-ttu-id="0bf52-234">Weitere Informationen zum Verwenden dieser Eigenschaft mit Sitzungen finden Sie unter [Verwenden von Sitzungen](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-234">For more information about using this property with sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bf52-235">Überwacht ein Aufrufer das <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType>-Ereignis im Hinblick auf einen <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType>-Vorgang, ist beim Empfang der Antwort eine Blockierung möglich.</span><span class="sxs-lookup"><span data-stu-id="0bf52-235">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="0bf52-236">Die Behandlung dieses Vorgangs wird korrekt ausgeführt, wenn Sie bei Auslösen von <xref:System.ServiceModel.OperationContext.OperationCompleted> Arbeit auf einem anderen Thread planen und umgehend von diesem Ereignishandler zurückkehren.</span><span class="sxs-lookup"><span data-stu-id="0bf52-236">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-237">Das folgende Beispiel enthält einen Dienst, der einen Dienstvertrag implementiert, der drei Vorgänge angibt.</span><span class="sxs-lookup"><span data-stu-id="0bf52-237">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="0bf52-238">Der Dienst erfordert eine statusbehaftete Verbindung.</span><span class="sxs-lookup"><span data-stu-id="0bf52-238">The service requires a stateful connection.</span></span> <span data-ttu-id="0bf52-239">Ruft der Aufrufer zuerst einen anderen Vorgang als `MethodOne` auf, wird der Kanal verweigert, und es wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0bf52-239">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="0bf52-240">Initiiert ein Aufrufer eine Sitzung durch Aufruf von `MethodOne`, kann dieser Aufrufer die Kommunikationssitzung jederzeit durch den Aufruf von `MethodThree` beenden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-240">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="0bf52-241">`MethodTwo`kann während einer Sitzung beliebig oft aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="0bf52-241">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContractAttribute(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-242">Ruft den Namen des Vorgangs ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-242">Gets or sets the name of the operation.</span></span></summary>
        <value><span data-ttu-id="0bf52-243">Der Name des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="0bf52-243">The name of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-244">Verwenden Sie <xref:System.ServiceModel.OperationContractAttribute.Name%2A> die-Eigenschaft, `<operation>` um den Elementnamen in WSDL zu überschreiben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-244">Use the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to override the `<operation>` element name in WSDL.</span></span> <span data-ttu-id="0bf52-245">Der standardmäßige Vorgangsname ist der Name der implementierenden Methode.</span><span class="sxs-lookup"><span data-stu-id="0bf52-245">The default operation name is the name of the implementing method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-246">Im folgenden Codebeispiel wird mithilfe der <xref:System.ServiceModel.OperationContractAttribute.Name%2A>-Eigenschaft der Name des Vorgangs deklariert, wie er in den Metadaten verfügbar gemacht wurde.</span><span class="sxs-lookup"><span data-stu-id="0bf52-246">The following code example uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf52-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0bf52-248">Der Wert ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0bf52-248">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-249">Ruft einen Wert ab, der angibt, ob die Nachrichten eines Vorgangs verschlüsselt oder signiert werden müssen oder beides beziehungsweise legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-249">Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="0bf52-250">Einer der <see cref="T:System.Net.Security.ProtectionLevel" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="0bf52-250">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="0bf52-251">Die Standardeinstellung ist <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-251">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-252">Verwenden Sie die <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A>-Eigenschaften, um zu steuern, ob die Nachrichten eines Vorgangs verschlüsselt oder/und signiert sein müssen.</span><span class="sxs-lookup"><span data-stu-id="0bf52-252">Use the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property to control whether the messages of an operation must be encrypted, signed, or both.</span></span> <span data-ttu-id="0bf52-253">Der hier festgelegte Wert ist der Standardwert für alle Nachrichten, die für diesen Vorgang angegeben werden, es sei denn, ein kleinerer Bereich überschreibt diesen Wert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-253">The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</span></span>  
  
 <span data-ttu-id="0bf52-254">Dabei ist wichtig zu bedenken, dass das Schutzverhalten zur Laufzeit die Kombination der Schutzebenenwerte der folgenden Eigenschaften ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-254">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="0bf52-255">Diese Eigenschaften verfügen über eine hierarchische Struktur.</span><span class="sxs-lookup"><span data-stu-id="0bf52-255">These properties have a hierarchical structure.</span></span> <span data-ttu-id="0bf52-256">Mit der Festlegung des äußersten Werts wird die Standardeinstellung für alle engeren Bereiche festgelegt, es sei denn, es wird ausdrücklich ein anderer Wert für einen engeren Bereich definiert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-256">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="0bf52-257">In diesem Fall bleibt der äußere Wert der Standardwert für alle engeren Bereiche mit Ausnahme des ausdrücklich festgelegten Werts.</span><span class="sxs-lookup"><span data-stu-id="0bf52-257">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="0bf52-258">Wenn beispielsweise <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> auf <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> festgelegt ist und für keine weiteren engeren Bereiche Schutzebeneneinstellungen definiert sind, werden alle Nachrichten in einem Vorgangsvertrag verschlüsselt und signiert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-258">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="0bf52-259">Wenn aber für einen dieser Vorgänge <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> auf <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> festgelegt ist, werden die Nachrichten für diesen Vorgang signiert, alle anderen Nachrichten im Vertrag werden jedoch verschlüsselt und signiert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-259">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="0bf52-260">Ausführliche Informationen zu Schutz Ebenen und deren Annahmen und Bereichen finden Sie Untergrund Legendes zur [Schutz Ebene](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="0bf52-260">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="0bf52-261">Die Bereiche, für die diese Werte festgelegt wurden:</span><span class="sxs-lookup"><span data-stu-id="0bf52-261">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0bf52-262">Die <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType>-Eigenschaft für <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-262">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0bf52-263">Die <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType>-Eigenschaft für <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-263">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0bf52-264">Wenn im Vertrag nicht ausdrücklich eine Schutzebene festgelegt ist und die zugrunde liegende Bindung Sicherheitsfunktionen (auf der Transport- oder Nachrichtenebene) unterstützt, ist die effektive Schutzebene für den gesamten Vertrag <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-264">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0bf52-265">Wenn die Bindung keine Sicherheitsfunktionen (wie beispielsweise <xref:System.ServiceModel.BasicHttpBinding>) unterstützt, ist die effektive <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> für den gesamten Vertrag <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bf52-265">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="0bf52-266">Im Ergebnis können Clients abhängig von der Endpunktbindung unterschiedlichen Nachrichten- oder Transportebenenschutz auch dann anfordern, wenn im Vertrag <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="0bf52-266">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0bf52-267">Der Wert ist keiner der <see cref="T:System.Net.Security.ProtectionLevel" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="0bf52-267">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplyAction">
      <MemberSignature Language="C#" Value="public string ReplyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReplyAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyAction : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf52-268">Ruft ab oder legt den Wert der SOAP-Aktion für die Antwortnachricht des Vorgangs fest.</span><span class="sxs-lookup"><span data-stu-id="0bf52-268">Gets or sets the value of the SOAP action for the reply message of the operation.</span></span></summary>
        <value><span data-ttu-id="0bf52-269">Der Wert der SOAP-Aktion für die Antwortnachtricht.</span><span class="sxs-lookup"><span data-stu-id="0bf52-269">The value of the SOAP action for the reply message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf52-270">Zusätzlich zur Angabe eines bestimmten Werts für den Aktionsheader der Antwortnachricht können Sie die Zeichenfolge "\*" (ein Sternchen) angeben.</span><span class="sxs-lookup"><span data-stu-id="0bf52-270">In addition to specifying a particular value for the action header of the reply message, you can also specify the string "\*" (an asterisk).</span></span> <span data-ttu-id="0bf52-271">Wenn Sie ein Sternchen im Dienst angeben, wird WCF angewiesen, der Nachricht keine Antwort Aktion hinzuzufügen. Dies ist nützlich, wenn Sie direkt mit Nachrichten programmieren.</span><span class="sxs-lookup"><span data-stu-id="0bf52-271">Specifying an asterisk in the service instructs WCF not to add a reply action to the message, which is useful if you are programming against messages directly.</span></span> <span data-ttu-id="0bf52-272">Das Angeben eines Sternchen in einer Client Anwendung weist WCF an, die Antwort Aktion nicht zu validieren.</span><span class="sxs-lookup"><span data-stu-id="0bf52-272">Specifying an asterisk in a client application instructs WCF not to validate the reply action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf52-273">Im nachstehenden Beispiel ist ein Dienst dargestellt, der mit der <xref:System.ServiceModel.OperationContractAttribute.Action%2A>-Eigenschaft und der <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A>-Eigenschaft die SOAP-Aktionen der eingehenden und ausgehenden (oder Antwort) Nachrichten ausdrücklich steuert.</span><span class="sxs-lookup"><span data-stu-id="0bf52-273">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</span></span> <span data-ttu-id="0bf52-274">Zusätzlich wird mit der <xref:System.ServiceModel.OperationContractAttribute.Name%2A>-Eigenschaft der Name des Vorgangs deklariert, wie er in den Metadaten verfügbar gemacht wurde.</span><span class="sxs-lookup"><span data-stu-id="0bf52-274">It also uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf52-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf52-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
