<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContext.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b651d31df1389374d57ccfab4c8222f8ac73618.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b651d31df1389374d57ccfab4c8222f8ac73618</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContext">
          <source>Provides access to the execution context of a service method.</source>
          <target state="translated">Stellt Zugriff auf den Ausführungskontext einer Dienstmethode bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> from within a service operation to access the current operation execution environment.</source>
          <target state="translated">Verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> aus einem Dienstvorgang, um auf die aktuelle Vorgangsausführungsumgebung zuzugreifen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</source>
          <target state="translated">Der Vorgangskontext wird insbesondere für den Zugriff auf Rückrufkanal in Duplexdiensten eingesetzt, um zusätzliche Statusdaten für verschiedene Vorgangsbereiche zu speichern und auf eingehende Nachrichtenheader und -eigenschaften zuzugreifen sowie um ausgehende Nachrichtenheader und -eigenschaften hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For more information about using extensions to store state data, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Verwendung von Erweiterungen zur Speicherung von Zustandsdaten finden Sie unter <bpt id="p1">[</bpt>erweiterbare Objekte<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> has the following properties and methods.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> stellt die folgenden Eigenschaften und Methoden bereit:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object representing the current execution context.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft gibt das <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Objekt zurück, das den aktuellen Ausführungskontext liefert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property returns the security environment under which the method executes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>-Eigenschaft gibt die Sicherheitsumgebung zurück, in der die Methode ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> property gets the operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph>-Eigenschaft ruft den <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph> des Vorgangs ab.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property returns an extension collection for the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph>-Eigenschaft gibt eine Erweiterungsauflistung für den aktuellen <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that manages the service.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph>-Eigenschaft gibt das <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>-Objekt zurück, das den Dienst verwaltet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> property returns a value that indicates whether the method has supporting tokens, if so, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> property gets them.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph>-Eigenschaft gibt einen Wert zurück, der angibt, ob die Methode Token unterstützt. Ist dies der Fall, ruft die <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph>-Eigenschaft diese ab.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> properties get these items from the incoming message.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>-Eigenschaft, die <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>-Eigenschaft und die <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph>-Eigenschaft rufen diese Elemente aus der eingehenden Nachricht ab.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event is fired when the operation has completed.</source>
          <target state="translated">Das <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph>-Ereignis wird nach Abschluss des Vorgangs ausgelöst.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> properties get these items for the outbound message.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph>-Eigenschaft rufen diese Elemente für die ausgehende Nachricht ab.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> implementation for the method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph>-Eigenschaft gibt die <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph>-Implementierung für die Methode zurück.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associated with the operation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph>-Eigenschaft gibt den dem Vorgang zugeordneten <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> property returns the session identifier for the current channel and object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph>-Eigenschaft gibt die Sitzungs-ID für den aktuellen Kanal und das Objekt zurück.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method returns a callback channel to the caller in the case of duplex communication.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>-Methode gibt dem Aufrufer bei Duplexkommunikation einen Rückrufkanal zurück.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> method commits the current transaction.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph>-Methode führt einen Commit für die aktuelle Transaktion aus.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to obtain the channel back to the caller from within a method.</source>
          <target state="translated">Im nachstehenden Codebeispiel wird mit der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft und der <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>-Methode der Kanal abgerufen, der aus einer Methode zum Aufrufer zurückführt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Alle in diesem Beispiel verwendeten Methoden sind unidirektionale Methoden, die für den Dienst und den Client eine unabhängige Kommunikation in beide Richtungen ermöglichen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In diesem Fall erwartet die Beispielclientanwendung nur einen Rückgabeaufruf, bevor er beendet wird. Ein anderer Client, wie zum Beispiel ein Windows Forms-Client kann jedoch eine beliebige Anzahl Aufrufe von dem Dienst erhalten.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Der folgende Client implementiert <ph id="ph1">`SampleDuplexHelloCallback`</ph>, um die Rückrufnachricht zu erhalten.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Der importierte Rückrufvertrag weist einen anderen Namen auf als der im Dienst enthaltene Vertrag. Der Grund hierfür ist die Verwendung der <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph>-Eigenschaft im voranstehenden Beispiel.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Beachten Sie, dass der Client keine Annahmen trifft, ob oder wann er einen Rückruf erhalten könnte. Der Serverrückruf ist völlig unabhängig vom ausgehenden Aufruf des Clients.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, in dem die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Klasse in einem Clientszenario verwendet wird, finden Sie unter <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> used to create a new client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Der zum Erstellen eines neuen Client-<ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> verwendete <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in a client application.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>-Klasse, die den angegebenen <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in einer Clientanwendung verwendet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</source>
          <target state="translated">Verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph>-Konstruktor zur Erstellung eines neuen Vorgangskontexts in dem Bereich dem der Proxy zugeordnet ist, um ausgehende Elemente, wie zum Beispiel Header, ändern zu können.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">Im nachstehenden Beispiel ist dargestellt, wie mit dem <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> ein neuer Kontext in einer Clientanwendung erstellt werden kann, um der ausgehenden Nachricht einen benutzerdefinierten Header hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel is null.</source>
          <target state="translated">Der Kanal ist NULL.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>Gets the channel associated with the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Ruft den dem aktuellen <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>-Objekt zugeordneten Kanal ab.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associated with the current <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ein dem aktuellen <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> zugeordneter <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>Gets the claims-based principal associated with the operation.</source>
          <target state="translated">Ruft den anspruchsbasierten Prinzipal ab, der dem Vorgang zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>The claims principal.</source>
          <target state="translated">Der Anspruchs-Prinzipal.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Gets or sets the execution context for the current thread.</source>
          <target state="translated">Ruft den Ausführungskontext für den aktuellen Thread ab oder legt ihn fest.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> that represents the messaging and execution context of the current method.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>, der den Nachrichten- und Ausführungskontext der aktuellen Methode angibt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to obtain the execution and message context for the current method.</source>
          <target state="translated">Verwenden Sie die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft, um den Ausführungs- und Nachrichtenkontext für die aktuelle Methode zu erhalten.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a method.</source>
          <target state="translated">Im nachstehenden Codebeispiel wird mit der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft und der <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>-Methode ein Kanal zurück zum Aufrufer aus einer Methode erstellt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Alle in diesem Beispiel verwendeten Methoden sind unidirektionale Methoden, die für den Dienst und den Client eine unabhängige Kommunikation in beide Richtungen ermöglichen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In diesem Fall erwartet die Beispielclientanwendung nur einen Rückgabeaufruf, bevor er beendet wird. Ein anderer Client, wie zum Beispiel ein Windows Forms-Client kann jedoch eine beliebige Anzahl Aufrufe von dem Dienst erhalten.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Ruft ab oder legt den Endpunktverteiler für den zu prüfenden oder zu ändernden Endpunkt fest.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>The endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Der Endpunktverteiler für den zu prüfenden oder zu ändernden Endpunkt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Gets the collection of service extensions from the current message context.</source>
          <target state="translated">Ruft die Diensterweiterungsauflistung vom aktuellen Nachrichtenkontext ab.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>A collection of extensions of <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Eine Auflistung der Erweiterungen von <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property to obtain a collection of all extensions of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> used to modify the context or add custom state.</source>
          <target state="translated">Verwenden Sie die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph>-Eigenschaft zum Abrufen einer Auflistung aller Erweiterungen von <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>, die zur Änderung des Kontexts oder zum Hinzufügen eines benutzerdefinierten Status verwendet werden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>For more information about extensions, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Erweiterungen finden Sie unter <bpt id="p1">[</bpt>erweiterbare Objekte<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The type of channel used to call back to the client.</source>
          <target state="translated">Der für den Rückruf an den Client verwendete Kanaltyp.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Gets a channel to the client instance that called the current operation.</source>
          <target state="translated">Ruft einen Kanal zur Clientinstanz ab, die den aktuellen Vorgang aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>A channel to the client instance that called the operation of the type specified in the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> property.</source>
          <target state="translated">Ein Kanal zur Clientinstanz, die den Vorgang des in der <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph>-Eigenschaft angegebenen Typs aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> property to obtain a channel that you can use to call operations on the client instance that called the service.</source>
          <target state="translated">Rufen Sie die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>-Eigenschaft auf, um einen Kanal zu erhalten, den Sie für den Aufruf von Vorgängen auf der Clientinstanz verwenden können, die den Dienst aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a operation.</source>
          <target state="translated">Im nachstehenden Codebeispiel wird mit der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft und der <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>-Methode ein Kanal zurück zum Aufrufer aus einem Vorgang erstellt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Alle in diesem Beispiel verwendeten Vorgänge sind unidirektionale Vorgänge, die für den Dienst und den Client eine unabhängige Kommunikation in beide Richtungen ermöglichen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">In diesem Fall erwartet die Beispielclientanwendung nur einen Rückgabeaufruf, bevor er beendet wird. Ein anderer Client, wie zum Beispiel ein Windows Forms-Client kann jedoch eine beliebige Anzahl Aufrufe von dem Dienst erhalten.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Der folgende Client implementiert <ph id="ph1">`SampleDuplexHelloCallback`</ph>, um die Rückrufnachricht zu erhalten.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Der importierte Rückrufvertrag weist einen anderen Namen auf als der im Dienst enthaltene Vertrag. Der Grund hierfür ist die Verwendung der <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph>-Eigenschaft im voranstehenden Beispiel.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Beachten Sie, dass der Client keine Annahmen trifft, ob oder wann er einen Rückruf erhalten könnte. Der Serverrückruf ist völlig unabhängig vom ausgehenden Aufruf des Clients.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, in dem die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Klasse in einem Clientszenario verwendet wird, finden Sie unter <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source>Gets a value that indicates whether the incoming message has supporting tokens.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die eingehende Nachrichte über unterstützende Tokens verfügt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the incoming message has supporting tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die eingehenden Nachricht über unterstützende Tokens verfügt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Host">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> for the current service object.</source>
          <target state="translated">Ruft <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> für das aktuelle Dienstobjekt ab.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Gets the incoming message headers for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ruft die eingehenden Nachrichtenheader für den <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains the incoming message headers.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph>-Objekt, das die eingehenden Nachrichtenheader enthält.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</source>
          <target state="translated">Prüfen oder ändern Sie mit dieser Eigenschaft die Anforderungsheader, die bei einem Dienstvorgang eingehen, oder antworten Sie auf Header, die bei einem Clientproxy ankommen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>The following code example shows how to read the incoming message headers in a service operation.</source>
          <target state="translated">Das folgende Codebeispiel zeigt, wie die eingehenden Nachrichtenheader in einem Dienstvorgang gelesen werden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Gets the message properties for the incoming message in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ruft die Nachrichteneigenschaften für die eingehende Nachricht im <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the incoming message.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph>-Objekt, das die Nachrichteneigenschaften für die eingehende Nachricht enthält.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</source>
          <target state="translated">Prüfen oder ändern Sie mit dieser Eigenschaft die Nachrichteneigenschaften für eine Anforderungsnachricht in einem Dienstvorgang oder einer Antwortnachricht auf einem Clientproxy.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Gets the incoming SOAP message version for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ruft die eingehende SOAP-Nachrichtenversion für den <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>The SOAP version of the incoming message.</source>
          <target state="translated">Die SOAP-Version der eingehenden Nachricht.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</source>
          <target state="translated">Prüfen oder ändern Sie mit dieser Eigenschaft die SOAP-Version der Anforderungsnachricht, die bei einem Dienstvorgang eingeht, oder die SOAP-Version der Antwortnachricht, die auf einem Clientproxy ankommt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that manages the current service instance.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>-Objekt ab, das die aktuelle Dienstinstanz verwaltet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object for the current service.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>-Objekt für den aktuellen Dienst.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property to access the run-time object that manages the current service object.</source>
          <target state="translated">Verwenden Sie die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph>-Eigenschaft, um auf das Laufzeitobjekt zuzugreifen, das das aktuelle Dienstobjekt verwaltet.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source>This property is intended for system use and should not be called by users.</source>
          <target state="translated">Diese Eigenschaft ist zur Verwendung durch das System bestimmt und sollte nicht von Benutzern aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">Tritt ein, wenn der Vorgang abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event to dispose parameters or a return value if you set <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Verwenden Sie das <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph>-Ereignis, um Parameter oder einen Rückgabewert zu verwerfen, wenn Sie für <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph3">`false`</ph> festgelegt haben.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Normally you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph> to prevent <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> from calling <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the parameter and return value objects.</source>
          <target state="translated">Normalerweise legen Sie für <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">`false`</ph> fest, um zu verhindern, dass <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> den Parameter oder Rückgabewertobjekte aufruft.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</source>
          <target state="translated">Müssen jedoch einige Parameter beibehalten werden, während andere verworfen werden müssen, bietet dieses Ereignis die beste Möglichkeit zum Verwerfen dieser Parameter.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</source>
          <target state="translated">Bei Duplexbindungen kann mit diesem Ereignis eine Anforderung an den Rückrufkanal gesendet werden, nachdem eine Antwort auf den aktuellen Vorgang gesendet wurde.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">Überwacht ein Aufrufer das <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph>-Ereignis im Hinblick auf einen <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>-Vorgang, ist beim Empfang der Antwort eine Blockierung möglich.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">Die Behandlung dieses Vorgangs wird korrekt ausgeführt, wenn Sie bei Auslösen von <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> Arbeit auf einem anderen Thread planen und umgehend von diesem Ereignishandler zurückkehren.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Gets the outgoing message headers for the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ruft die ausgehenden Nachrichtenheader für den aktiven <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains outbound message headers for the active <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph>-Objekt, das ausgehende Nachrichtenheader für den aktiven <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Use this property to add reply headers that are sent by a service operation or request headers that are sent by a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.</source>
          <target state="translated">Fügen Sie mit dieser Eigenschaft die Antwortheader hinzu, die von einem Dienstvorgang gesendet werden, beziehungsweise Anforderungsheader, die von einem <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Clientobjekt gesendet werden.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">Im nachstehenden Beispiel ist dargestellt, wie mit dem <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> ein neuer Kontext in einer Clientanwendung erstellt werden kann, um der ausgehenden Nachricht einen benutzerdefinierten Header hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Gets the message properties for the outbound message in the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Ruft die Nachrichteneigenschaften für die ausgehende Nachricht im aktiven <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the outbound message.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph>-Objekt, das die Nachrichteneigenschaften für die ausgehende Nachricht enthält.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</source>
          <target state="translated">Fügen Sie mit dieser Eigenschaft Nachrichteneigenschaften für eine Antwortnachricht von einem Dienstvorgang oder Nachrichteneigenschaften für eine Anforderungsnachricht von einem Clientproxy hinzu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation for this method.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>-Implementierung für diese Methode ab oder legt sie fest.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation, or null if there is no request context.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>-Implementierung oder NULL, wenn kein Anforderungskontext vorhanden ist.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>One-way operations are do not have a request context.</source>
          <target state="translated">Unidirektionale Vorgänge verfügen über keinen Anforderungskontext.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> within which this method executes.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> ab, in dem Methode ausgeführt wird, oder legt ihn fest.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used to identify the current session.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> ab, die zur Identifizierung der aktuellen Sitzung verwendet wird.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>The session identifier.</source>
          <target state="translated">Die Sitzungs-ID.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Commits the currently executing transaction.</source>
          <target state="translated">Führt einen Commit für die aktuell ausführende Transaktion aus.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>This is only useful in operations that set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Dies ist nur für Vorgänge sinnvoll, für die für <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">`false`</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Typically, services do this on some but not all operations.</source>
          <target state="translated">Dies wird von Diensten normalerweise für einige aber nicht für alle Vorgänge durchgeführt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> is false the transaction completes automatically.</source>
          <target state="translated">Weist <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> den Wert false auf, wird die Transaktion automatisch abgeschlossen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</source>
          <target state="translated">Verwenden Sie in den Fällen, in denen während der Entwurfszeit nicht festgelegt werden kann, ob ein Vorgang die Transaktion abschießen muss, <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>There is no transaction in the context.</source>
          <target state="translated">Der Kontext enthält keine Transaktion.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> des Typs <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>A collection of security tokens.</source>
          <target state="translated">Eine Auflistung von Sicherheitstokens.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>