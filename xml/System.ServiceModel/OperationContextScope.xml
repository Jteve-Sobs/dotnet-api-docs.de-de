<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContextScope.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac592b68d48771b6c7c4987c3fb267fd7fc41d167e5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92b68d48771b6c7c4987c3fb267fd7fc41d167e5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Creates a block within which an <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object is in scope.</source>
          <target state="translated">Erstellt einen Block, in dessen Bereich sich ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>-Objekt befindet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> class to create a scope for a specific <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or a scope for a new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object using a specified <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> object.</source>
          <target state="translated">Verwenden Sie die <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>-Klasse zur Erstellung eines Bereichs für ein bestimmtes <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Objekt oder einen Bereich für ein neues <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Objekt mit einem angegebenen <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> can be used in a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service or <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client application.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> kann in einem <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Dienst oder einer <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Clientanwendung verwendet werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Once the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object has established the current operation context, you can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> to:</source>
          <target state="translated">Sobald das <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>-Objekt den aktuellen Vorgangskontext hergestellt hat, können Sie den <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> zu Folgendem verwenden:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access and modify incoming and outgoing message headers and other properties.</source>
          <target state="translated">Greifen Sie auf eingehende und ausgehenden Nachrichtenheader und andere Eigenschaften zu, und ändern Sie sie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the runtime, including dispatchers, the host, channel, and extensions.</source>
          <target state="translated">Greifen Sie auf die Laufzeit, einschließlich Verteiler, Host, Kanal und Erweiterungen zu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access other types of contexts, such as security, instance, and request contexts.</source>
          <target state="translated">Greifen Sie auf andere Kontexttypen zu, wie zum Beispiel Sicherheit, Instanz und Anforderungskontexte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the channel associated with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or (if the channel implements <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph>) the associated channel's session identifier.</source>
          <target state="translated">Greifen Sie auf den dem <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>-Objekt zugeordneten Kanal oder (wenn der Kanal <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph> implementiert) die Sitzungs-ID des zugeordneten Kanals zu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is created, the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is stored and the new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> becomes the one returned by the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> erstellt wurde, wird der aktuelle <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> gespeichert, und der neue <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> wird von der <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>-Eigenschaft zurückgegeben.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is disposed, the original <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is restored.</source>
          <target state="translated">Wenn der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> verworfen wird, wird der ursprüngliche <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> wiederhergestellt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Do not use the asynchronous "await" pattern within a OperationContextScope block.</source>
          <target state="translated">Verwenden Sie nicht das asynchrone Muster der "await" in einem OperationContextScope-Block.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</source>
          <target state="translated">Bei die Fortsetzung wird es in einem anderen Thread ausgeführt werden kann, und OperationContextScope ist bestimmten Thread.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>If you need to call "await" for an async call, use it outside of the OperationContextScope block.</source>
          <target state="translated">Wenn Sie "await" für einen asynchronen Aufruf aufrufen müssen, verwenden Sie diese außerhalb der OperationContextScope-Block.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application to add a custom header to the outgoing message.</source>
          <target state="translated">Im nachstehenden Beispiel ist dargestellt, wie mit dem <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> ein neuer Kontext in einer Clientanwendung erstellt und der ausgehenden Nachricht ein benutzerdefinierter Header hinzugefügt werden kann.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel to use when creating the scope for a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Der bei der Erstellung des Bereichs für einen neuen <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> zu verwendende Kanal.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> to create a new <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the scope.</source>
          <target state="translated">Initalisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>-Klasse, die mit dem angegebenen <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> einen neuen <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> für den Bereich erstellt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">Verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph>-Konstruktor zur Erstellung eines neuen <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> für einen Clientkanal, mit dem ausgehende Nachrichtenheader hinzugefügt oder geändert werden können, eingehende Nachrichtenheader gelesen werden können oder auf andere Laufzeiteigenschaften des <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The headers added to the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph> property of the newly created <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> apply only to the channel that was passed to the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Die der <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph>-Eigenschaft des neu erstellten <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> hinzugefügten Headers werden nur auf den Kanal angewendet, der an den <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph>-Konstruktor übergeben wurde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</source>
          <target state="translated">Erstellt der Benutzer einen neuen Kanal innerhalb dieses Bereichs, werden die Header nicht auf Nachrichten angewendet, die an den neuen Kanal gesendet werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">Im nachstehenden Beispiel ist dargestellt, wie mit dem <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> ein neuer Kontext in einer Clientanwendung erstellt werden kann, um der ausgehenden Nachricht einen benutzerdefinierten Header hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>The active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> in the created scope.</source>
          <target state="translated">Der aktive <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> im erstellten Bereich.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class to create a scope for the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>-Klasse zur Erstellung eines Bereichs für das angegebene <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a code block within which the specified <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object is the current scope.</source>
          <target state="translated">Verwenden Sie den <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph>-Konstruktor zur Erstellung eines Codeblocks, der das angegebene <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>-Objekt als aktuellen Bereich enthält.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.Dispose">
          <source>Restores the original <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> to the active context and recycles the <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> object.</source>
          <target state="translated">Stellt den ursprünglichen <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> wieder als aktiven Kontext her und verwendet das <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>-Objekt wieder.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>