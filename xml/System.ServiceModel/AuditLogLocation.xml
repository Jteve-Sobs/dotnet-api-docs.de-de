<Type Name="AuditLogLocation" FullName="System.ServiceModel.AuditLogLocation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c25827429ba8a77f9bfd3525df90c759a9a1a67" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36412348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum AuditLogLocation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AuditLogLocation extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.AuditLogLocation" />
  <TypeSignature Language="VB.NET" Value="Public Enum AuditLogLocation" />
  <TypeSignature Language="C++ CLI" Value="public enum class AuditLogLocation" />
  <TypeSignature Language="F#" Value="type AuditLogLocation = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt den Speicherort an, in den sicherheitsbezogene Ereignisprotokolle geschrieben werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen einer Windows Communication Foundation (WCF)-Anwendung, die Authentifizierung und/oder Autorisierung der Aufrufer erforderlich ist, können Sie angeben, dass sicherheitsbezogene Ereignisse zu Erfolg, Fehler oder beides aufgezeichnet werden. Der Speicherort des Protokolls wird durch diese Enumeration bestimmt.  
  
 Die Ebene des Überwachungsprotokolls wird angegeben, indem die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel%2A>-Eigenschaft oder die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel%2A>-Eigenschaft der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse auf einen der <xref:System.ServiceModel.AuditLevel>-Werte festgelegt wird.  
  
 Sie können auch angeben, Audit Verhalten mithilfe der [ &lt;ServiceSecurityAudit&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md) Bindung.  
  
> [!IMPORTANT]
>  Wenn die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation%2A> Eigenschaftensatz zu Sicherheit und `Audit Object Access` nicht festgelegt ist, der `Local Security Policy`, Überwachungsereignisse werden nicht in das Sicherheitsprotokoll geschrieben. Es wird zwar kein Fehler zurückgegeben, doch die Überwachungseinträge werden nicht in das Sicherheitsprotokoll geschrieben. Außerdem muss dem aufrufenden Thread `SeAuditPrivilege` zugewiesen sein, um in das Sicherheitsprotokoll schreiben zu können.  
  
## <a name="default-dependent-on-operating-system"></a>Standardwert hängt vom Betriebssystem ab  
 Wenn die Eigenschaft auf den Standardwert festlegen, bestimmt das Betriebssystem an, welches Protokoll geschrieben wird. Weitere Informationen finden Sie unter [Überwachung](~/docs/framework/wcf/feature-details/auditing-security-events.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation%2A>-Eigenschaft auf einen der <xref:System.ServiceModel.AuditLogLocation.Default>-Werte festgelegt.  
  
 [!code-csharp[AuditingSecurityEvents#1](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#1)]
 [!code-vb[AuditingSecurityEvents#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior" />
    <altmember cref="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel" />
    <altmember cref="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel" />
    <altmember cref="T:System.ServiceModel.AuditLevel" />
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="Application" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.AuditLogLocation Application = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.AuditLogLocation.Application" />
      <MemberSignature Language="VB.NET" Value="Application" />
      <MemberSignature Language="C++ CLI" Value="Application" />
      <MemberSignature Language="F#" Value="Application = 1" Usage="System.ServiceModel.AuditLogLocation.Application" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLogLocation</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Gibt das Anwendungsprotokoll im Ereignisprotokoll an.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.AuditLogLocation Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.AuditLogLocation.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.ServiceModel.AuditLogLocation.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLogLocation</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Gibt den Standardspeicherort an, der vom Betriebssystem bestimmt wird. Wenn das Schreiben in das Sicherheitsprotokoll unterstützt wird (z.B. unter [!INCLUDE[wv](~/includes/wv-md.md)] und [!INCLUDE[ws2003](~/includes/ws2003-md.md)] und späteren Plattformen), entspricht das Sicherheitsprotokoll dem Standardspeicherort. Andernfalls (z.B. in [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)]) entspricht das Anwendungsprotokoll dem Standardspeicherort.</summary>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="Security" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.AuditLogLocation Security = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.AuditLogLocation.Security" />
      <MemberSignature Language="VB.NET" Value="Security" />
      <MemberSignature Language="C++ CLI" Value="Security" />
      <MemberSignature Language="F#" Value="Security = 2" Usage="System.ServiceModel.AuditLogLocation.Security" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLogLocation</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Gibt das Sicherheitsprotokoll im Ereignisprotokoll an. Dem aufrufenden Thread muss <see langword="SeAuditPrivilege" /> zugewiesen sein, um in das Sicherheitsprotokoll schreiben zu können.</summary>
      </Docs>
    </Member>
  </Members>
</Type>