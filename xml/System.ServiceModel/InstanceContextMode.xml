<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3079ebf12bb7013ba2dfd7da4de97434fc3b896" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686378" /></Metadata><TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt die Anzahl von Dienstinstanzen an, die verfügbar sind, um die in eingehenden Nachrichten enthaltenen Aufrufe zu behandeln.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

Die <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> -Klasse verwaltet die Zuordnung zwischen dem Kanal und den benutzerdefinierten Dienst Objekten. Verwenden Sie die `InstanceContextMode`-Enumeration mit der <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType>-Eigenschaft, um die Lebensdauer des <xref:System.ServiceModel.InstanceContext>-Objekts anzugeben. Windows Communication Foundation (WCF) kann ein neues <xref:System.ServiceModel.InstanceContext> -Objekt für jeden-Befehl, jede Sitzung, erstellen oder angeben, dass das <xref:System.ServiceModel.InstanceContext> Objekt an ein einzelnes Dienst Objekt gebunden ist. Ein funktionierendes Beispiel finden Sie unter [Instancing](~/docs/framework/wcf/samples/instancing.md).  
  
Der `Single`-Wert gibt an, dass ein einzelnes <xref:System.ServiceModel.InstanceContext>-Objekt für die gesamte Lebensdauer des Dienstes verwendet werden sollte. Mit dem `Single` Wert sind mehrere Einschränkungen verknüpft:

- Wenn der <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> Wert auf `Single`festgelegt ist, kann der Dienst nur eine Nachricht gleichzeitig verarbeiten, es sei denn, <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithtype> Sie legen <xref:System.ServiceModel.ConcurrencyMode.Multiple?displayProperty=nameWithType>auch den Wert auf fest.  

- Beim Laufzeitverhalten von Singleton-Klassen (z.&#160;B. wenn die Hostanwendung den <xref:System.ServiceModel.ServiceHost.%23ctor%2A?displayProperty=nameWithType>-Konstruktor aufruft und ein Objekt zur Verwendung als Dienst übergibt), muss die Serviceklasse <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> auf `Single` festlegen, oder es wird eine Ausnahme ausgelöst, wenn der Diensthost geöffnet wird.  

## Examples  
 Am folgenden Code ist zu erkennen, wie <xref:System.ServiceModel.InstanceContextMode> für eine Dienstklasse angegeben wird:  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Ein neues <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird vor jedem Aufruf erstellt und im Anschluss wiederverwendet.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Ein neues <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird zu jeder Sitzung erstellt. Wenn der Kanal keine Sitzung erstellt, verhält sich dieser Wert wie <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Nur ein <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird für alle eingehenden Aufrufe verwendet und nicht bei den nachfolgenden Aufrufen wiederverwendet. Wenn ein Dienstobjekt nicht vorhanden ist, wird eins erstellt.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
