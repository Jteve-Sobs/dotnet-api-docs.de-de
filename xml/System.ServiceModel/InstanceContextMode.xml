<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3079ebf12bb7013ba2dfd7da4de97434fc3b896" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70680492" /></Metadata><TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="40a8e-101">Gibt die Anzahl von Dienstinstanzen an, die verfügbar sind, um die in eingehenden Nachrichten enthaltenen Aufrufe zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="40a8e-101">Specifies the number of service instances available for handling calls that are contained in incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="40a8e-102">Die <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> -Klasse verwaltet die Zuordnung zwischen dem Kanal und den benutzerdefinierten Dienst Objekten.</span><span class="sxs-lookup"><span data-stu-id="40a8e-102">The <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> class manages the association between the channel and the user-defined service objects.</span></span> <span data-ttu-id="40a8e-103">Verwenden Sie die `InstanceContextMode`-Enumeration mit der <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType>-Eigenschaft, um die Lebensdauer des <xref:System.ServiceModel.InstanceContext>-Objekts anzugeben.</span><span class="sxs-lookup"><span data-stu-id="40a8e-103">Use the `InstanceContextMode` enumeration with the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property to specify the lifetime of the <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="40a8e-104">Windows Communication Foundation (WCF) kann ein neues <xref:System.ServiceModel.InstanceContext> -Objekt für jeden-Befehl, jede Sitzung, erstellen oder angeben, dass das <xref:System.ServiceModel.InstanceContext> Objekt an ein einzelnes Dienst Objekt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="40a8e-104">Windows Communication Foundation (WCF) can create a new <xref:System.ServiceModel.InstanceContext> object for every call, every session, or specify that the <xref:System.ServiceModel.InstanceContext> object is bound to a single service object.</span></span> <span data-ttu-id="40a8e-105">Ein funktionierendes Beispiel finden Sie unter [Instancing](~/docs/framework/wcf/samples/instancing.md).</span><span class="sxs-lookup"><span data-stu-id="40a8e-105">For a working example, see [Instancing](~/docs/framework/wcf/samples/instancing.md).</span></span>  
  
<span data-ttu-id="40a8e-106">Der `Single`-Wert gibt an, dass ein einzelnes <xref:System.ServiceModel.InstanceContext>-Objekt für die gesamte Lebensdauer des Dienstes verwendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="40a8e-106">The `Single` value specifies that a single <xref:System.ServiceModel.InstanceContext> object should be used for the lifetime of the service.</span></span> <span data-ttu-id="40a8e-107">Mit dem `Single` Wert sind mehrere Einschränkungen verknüpft:</span><span class="sxs-lookup"><span data-stu-id="40a8e-107">Several caveats are associated with the `Single` value:</span></span>

- <span data-ttu-id="40a8e-108">Wenn der <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> Wert auf `Single`festgelegt ist, kann der Dienst nur eine Nachricht gleichzeitig verarbeiten, es sei denn, <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithtype> Sie legen <xref:System.ServiceModel.ConcurrencyMode.Multiple?displayProperty=nameWithType>auch den Wert auf fest.</span><span class="sxs-lookup"><span data-stu-id="40a8e-108">If the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> value is set to `Single`, your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithtype> value to <xref:System.ServiceModel.ConcurrencyMode.Multiple?displayProperty=nameWithType>.</span></span>  

- <span data-ttu-id="40a8e-109">Beim Laufzeitverhalten von Singleton-Klassen (z.&#160;B. wenn die Hostanwendung den <xref:System.ServiceModel.ServiceHost.%23ctor%2A?displayProperty=nameWithType>-Konstruktor aufruft und ein Objekt zur Verwendung als Dienst übergibt), muss die Serviceklasse <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> auf `Single` festlegen, oder es wird eine Ausnahme ausgelöst, wenn der Diensthost geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="40a8e-109">For singleton lifetime behavior (for example, if the host application calls the <xref:System.ServiceModel.ServiceHost.%23ctor%2A?displayProperty=nameWithType> constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> to `Single`, or an exception is thrown when the service host is opened.</span></span>  

## Examples  
 <span data-ttu-id="40a8e-110">Am folgenden Code ist zu erkennen, wie <xref:System.ServiceModel.InstanceContextMode> für eine Dienstklasse angegeben wird:</span><span class="sxs-lookup"><span data-stu-id="40a8e-110">The following code illustrates how to set the <xref:System.ServiceModel.InstanceContextMode> for a service class:</span></span>  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40a8e-111">Ein neues <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird vor jedem Aufruf erstellt und im Anschluss wiederverwendet.</span><span class="sxs-lookup"><span data-stu-id="40a8e-111">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created prior to and recycled subsequent to each call.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40a8e-112">Ein neues <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird zu jeder Sitzung erstellt.</span><span class="sxs-lookup"><span data-stu-id="40a8e-112">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created for each session.</span></span> <span data-ttu-id="40a8e-113">Wenn der Kanal keine Sitzung erstellt, verhält sich dieser Wert wie <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</span><span class="sxs-lookup"><span data-stu-id="40a8e-113">If the channel does not create a session this value behaves as if it were <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40a8e-114">Nur ein <see cref="T:System.ServiceModel.InstanceContext" />-Objekt wird für alle eingehenden Aufrufe verwendet und nicht bei den nachfolgenden Aufrufen wiederverwendet.</span><span class="sxs-lookup"><span data-stu-id="40a8e-114">Only one <see cref="T:System.ServiceModel.InstanceContext" /> object is used for all incoming calls and is not recycled subsequent to the calls.</span></span> <span data-ttu-id="40a8e-115">Wenn ein Dienstobjekt nicht vorhanden ist, wird eins erstellt.</span><span class="sxs-lookup"><span data-stu-id="40a8e-115">If a service object does not exist, one is created.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
