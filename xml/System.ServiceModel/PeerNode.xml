<Type Name="PeerNode" FullName="System.ServiceModel.PeerNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4450eaf14b417463c34f6281cf9be08c55020c9" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331752" /></Metadata><TypeSignature Language="C#" Value="public sealed class PeerNode : System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PeerNode extends System.Object implements class System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerNode&#xA;Implements IOnlineStatus" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNode sealed : System::ServiceModel::IOnlineStatus" />
  <TypeSignature Language="F#" Value="type PeerNode = class&#xA;    interface IOnlineStatus" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IOnlineStatus</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="11648-101">Definiert die Instanz eines Peerknotens, der von einer Anwendung verwendet wird, die Teil eines bestimmten Peermeshs ist.</span><span class="sxs-lookup"><span data-stu-id="11648-101">Defines the instance of of a peer node used by an application participating in a specific peer mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11648-102">Ein Peerknoten kann als Host für mehrere Peerkanäle innerhalb des Meshs fungieren, sofern sie eine gemeinsame URI und einen gemeinsamen Hostnamen haben, die bzw. der der Bindung für jeden Kanal durch <xref:System.ServiceModel.EndpointAddress> bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="11648-102">A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.</span></span>  
  
 <span data-ttu-id="11648-103">Wenn zwei oder mehr der für einen Peerknoten definierten Peerkanäle mit separaten Bindungen erstellt werden, müssen die Eigenschaften <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A> und <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> identisch bei allen Bindungen sein.</span><span class="sxs-lookup"><span data-stu-id="11648-103">If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.</span></span>  
  
 <span data-ttu-id="11648-104">Wenn nach der ersten Kanalbindung eine weitere Kanalbindung für die gleiche Peerknoteninstanz erstellt wird, muss die <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>-Eigenschaft für diese und nachfolgende Bindungen kleiner oder gleich dem Wert der <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>-Eigenschaft sein, der für die erste Kanalbindung festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="11648-104">If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.ServiceModel.PeerNode.IsOnline" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IOnlineStatus.IsOnline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11648-105">Ruft einen Wert ab, der angibt, ob der Peerknoten online und in der Lage ist, Nachrichten an benachbarte Knoten im Peermesh zu senden.</span><span class="sxs-lookup"><span data-stu-id="11648-105">Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.</span></span></summary>
        <value><span data-ttu-id="11648-106"><see langword="true" />, wenn der Peerknoten online ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11648-106"><see langword="true" /> if the peer node is online; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11648-107">"Online" gibt an, dass ein Peerknoten über Nachbarknoten verfügt.</span><span class="sxs-lookup"><span data-stu-id="11648-107">"Online" indicates that a peer node has available neighbor nodes.</span></span> <span data-ttu-id="11648-108">"Offline" gibt an, dass ein Peerknoten nicht über Nachbarknoten verfügt.</span><span class="sxs-lookup"><span data-stu-id="11648-108">"Offline" indicates that a peer node has no available neighbors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagePropagationFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessagePropagationFilter As PeerMessagePropagationFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerMessagePropagationFilter ^ MessagePropagationFilter { System::ServiceModel::PeerMessagePropagationFilter ^ get(); void set(System::ServiceModel::PeerMessagePropagationFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessagePropagationFilter : System.ServiceModel.PeerMessagePropagationFilter with get, set" Usage="System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerMessagePropagationFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11648-109">Ruft einen benutzerdefinierten Filter für Nachrichten ab, die über den Peerkanal empfangen werden, oder legt diese fest</span><span class="sxs-lookup"><span data-stu-id="11648-109">Gets or sets a custom filter for messages received over the peer channel.</span></span></summary>
        <value><span data-ttu-id="11648-110"><see cref="T:System.ServiceModel.PeerMessagePropagationFilter" />, der einen benutzerdefinierten Nachrichtenfilter enthält.</span><span class="sxs-lookup"><span data-stu-id="11648-110"><see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> that contains a custom message filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11648-111">Der Nachrichtenfilter muss ein abgeleiteter Typ sein und sollte in diesen Typ umgewandelt werden, um alle dafür definierten benutzerdefinierten Funktionen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="11648-111">The message filter must be a derived type and should be recast to that type to use any custom features defined on it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11648-112">Kein Kanal ist geöffnet zum Abhören.</span><span class="sxs-lookup"><span data-stu-id="11648-112">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offline">
      <MemberSignature Language="C#" Value="public event EventHandler Offline;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Offline" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Offline" />
      <MemberSignature Language="VB.NET" Value="Public Event Offline As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Offline;" />
      <MemberSignature Language="F#" Value="member this.Offline : EventHandler " Usage="member this.Offline : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Offline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11648-113">Gibt an, wenn der Peerknoten das Peermesh verlässt (offline geht).</span><span class="sxs-lookup"><span data-stu-id="11648-113">Signals when the peer node goes offline from the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11648-114">Ein Offlinepeerknoten verfügt über keine Nachbarknoten innerhalb des Peermeshs, mit dem es eine Verbindung herstellen kann.</span><span class="sxs-lookup"><span data-stu-id="11648-114">An offline peer node has no neighbor nodes within the peer mesh to which it can connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Online">
      <MemberSignature Language="C#" Value="public event EventHandler Online;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Online" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Online" />
      <MemberSignature Language="VB.NET" Value="Public Event Online As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Online;" />
      <MemberSignature Language="F#" Value="member this.Online : EventHandler " Usage="member this.Online : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Online</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11648-115">Gibt an, wenn ein Peerknoten Teil des Peermeshs wird (online geht).</span><span class="sxs-lookup"><span data-stu-id="11648-115">Signals when a peer node comes online within the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11648-116">Ein Onlinepeerknoten verfügt über mindestens einen Nachbarknoten innerhalb des Peermeshs, mit dem es verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="11648-116">An online peer node has at least one neighbor node within the peer mesh to which it is connected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.ServiceModel.PeerNode.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11648-117">Ruft den Netzwerkport ab, den der Peerknoten abhört.</span><span class="sxs-lookup"><span data-stu-id="11648-117">Gets the network port on which the peer node is listening.</span></span></summary>
        <value><span data-ttu-id="11648-118"><see cref="T:System.Int32" />, die den Netzwerkport angibt, den der Peerknoten abhört.</span><span class="sxs-lookup"><span data-stu-id="11648-118"><see cref="T:System.Int32" /> that specifies the network port on which the peer node is listening.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11648-119">Kein Kanal ist geöffnet zum Abhören.</span><span class="sxs-lookup"><span data-stu-id="11648-119">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshConnection">
      <MemberSignature Language="C#" Value="public void RefreshConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.RefreshConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshConnection();" />
      <MemberSignature Language="F#" Value="member this.RefreshConnection : unit -&gt; unit" Usage="peerNode.RefreshConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11648-120">Aktualisiert die Verbindung mit dem Peermesh.</span><span class="sxs-lookup"><span data-stu-id="11648-120">Refreshes the connection with the peer mesh.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11648-121">Kein Kanal ist geöffnet zum Abhören.</span><span class="sxs-lookup"><span data-stu-id="11648-121">No channel is open for listening.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="11648-122">Es ist ein Timeout für den Aktualisierungsvorgang aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="11648-122">The refresh operation timed out.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="11648-123">Ein Netzwerkfehler ist während des Aktualisierungsversuchs aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="11648-123">A network error occurred during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException"><span data-ttu-id="11648-124">Die Verbindung wurde während des Aktualisierungsversuchs abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="11648-124">The connection aborted during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="11648-125">Bei der Verbindung ist während des Aktualisierungsversuchs ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="11648-125">The connection faulted during the refresh attempt.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11648-126">Stellt eine Zeichenfolgenentsprechung eines Peerknotens bereit.</span><span class="sxs-lookup"><span data-stu-id="11648-126">Provides a string representation of a peer node.</span></span></summary>
        <returns><span data-ttu-id="11648-127"><see cref="T:System.String" />-Wert, der die Mesh-ID des Peerknotens enthält, wenn die Mesh-ID festgelegt ist; andernfalls wird der Typ zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="11648-127"><see cref="T:System.String" /> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>