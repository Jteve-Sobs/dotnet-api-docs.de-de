<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="362ab32f223eb767fc048a2710ba78c05b09a279" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68392468" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt das lokale Ausführungsverhalten einer Dienstmethode an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie das <xref:System.ServiceModel.OperationBehaviorAttribute>-Attribut, um anzugeben, welches operationsspezifische Ausführungsverhalten wann ausgeführt worden ist. (Um das Ausführungsverhalten auf Dienstebene anzugeben, verwenden Sie das <xref:System.ServiceModel.ServiceBehaviorAttribute>-Attribut.)  
  
> [!NOTE]
>  Sie können auch <xref:System.ServiceModel.OperationBehaviorAttribute> verwenden, um in einer Duplexclientanwendung einen Rückrufvertragsvorgang zu konfigurieren. Die <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft muss bei Verwendung im Rahmen eines Rückrufvorgangs auf <xref:System.ServiceModel.ReleaseInstanceMode.None> eingestellt sein. Andernfalls wird während der Laufzeit eine <xref:System.InvalidOperationException>-Ausnahme ausgelöst.  
  
 Das <xref:System.ServiceModel.OperationBehaviorAttribute> -Attribut ist ein Windows Communication Foundation (WCF)-Programmiermodell Feature, das allgemeine Funktionen ermöglicht, die Entwickler andernfalls selbst implementieren müssen.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>-Eigenschaft steuert, ob an einen Vorgang übergebene Parameterobjekte verworfen werden, wenn der Vorgang abgeschlossen ist.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft legt fest, ob die Transaktion, in der die Methode ausgeführt wird, automatisch ausgeführt wird, wenn keine nicht behandelten Ausnahmen ausgelöst werden.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft gibt an, ob eine Methode innerhalb einer Transaktion ausgeführt werden muss.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>-Eigenschaft gibt an, ob der Dienstvorgang die Identität des Aufrufers annehmen kann, annehmen muss oder nicht annehmen kann.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft gibt an, wann Dienstobjekte während des Methodenaufrufprozesses wiederverwendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Vorgang veranschaulicht, der innerhalb einer erforderlichen verteilten Transaktion ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft gibt an, dass die Methode im Rahmen der Transaktion des Aufrufers ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft gibt an, dass die Transaktion automatisch ausgeführt wird, wenn keine nicht behandelten Ausnahmen auftreten. Wenn eine nicht behandelte Ausnahme auftritt, wird die Transaktion abgebrochen.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parameter lose Konstruktor erstellt eine Instanz der-Klasse mit den folgenden Standardwerten:  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft ist `true`.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft ist `false`.  
  
-   Die <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft ist <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> ist <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Parameter automatisch verworfen werden sollen, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Parameter automatisch verworfen werden sollen. <see langword="false" />andernfalls.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft legt fest, ob der Dienst alle verwerfbaren Parameter (Eingabe-, Ausgabe- oder Referenzparameter) verwirft, die beim Verarbeiten einer Nachricht erstellt wurden. Der Standardwert ist `true`sein. Legen Sie diese Eigenschaft auf `false` fest, um zu verhindern, dass das System Ressourcen verwirft, und um diese bei Bedarf zwischenzuspeichern.  
  
 Wenn beispielsweise <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>`false` ist, dann ist der Absender auf seiner Seite für das Schließen des Streams verantwortlich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der die Ebene des Anruferidentitätswechsels angibt, die vom Vorgang unterstützt wird.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.ImpersonationOption" />-Werte. Die Standardeinstellung ist <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>-Eigenschaft (zusammen mit einer Bindungskonfiguration, die den Identitätswechsel unterstützt), um bestimmte Methoden (bei denen die <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>-Eigenschaft auf <xref:System.ServiceModel.ImpersonationOption.Allowed> oder <xref:System.ServiceModel.ImpersonationOption.Required> festgelegt ist) unter der Identität des Aufrufers auszuführen. Weitere Informationen, einschließlich der Art des Identitäts Wechsels bei der <xref:System.ServiceModel.ImpersonationOption.Allowed> Verwendung von zusammen <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> mit der-Eigenschaft, finden Sie unter [ [Delegierung und](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) Identitätswechsel und Gewusst wie: Annehmen der Identität eines Clients für einen](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md)Dienst.  
  
> [!NOTE]
>  Beim programmgesteuerten Hinzufügen eines Dienstendpunkts, der einen Identitätswechsel ausführt, muss entweder eine der <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A>-Methoden oder die <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType>-Methode verwendet werden, um den Vertrag ordnungsgemäß in ein neues <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>-Objekt zu laden. Das Verwenden einer Konfigurationsdatei erfordert keinen zusätzlichen Schritt.  
  
 Es gibt möglicherweise bestimmte Szenarien, bei denen Identitätswechsel nicht unterstützt werden. Weitere Informationen finden Sie unter [nicht unterstützte Szenarien](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 Das folgende Dienstcodebeispiel erfordert einen Identitätswechsel durch Einstellen der <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>-Eigenschaft auf den Wert <xref:System.ServiceModel.ImpersonationOption.Required>.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A>-Eigenschaft zum Festlegen der Anmeldeinformationen für die Clientanwendung vor dem Auslösen des Vorgangs, der diese Anmeldeinformationen für den Identitätswechsel benötigt.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, wann das Dienstobjekt im Verlauf eines Vorgangsaufrufs wiederverwendet werden soll.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.ReleaseInstanceMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> die-Eigenschaft, um anzugeben, wann Windows Communication Foundation (WCF) ein Dienst Objekt im Verlauf der Ausführung einer Methode wieder verwenden. Das Standardverhalten besteht darin, gemäß dem <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>-Wert ein Dienstobjekt wiederzuverwenden. Durch das Einstellen der <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft wird das Standardverhalten geändert.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> garantiert kein Threading. Wenn Sie beim Ausführen Ihres Diensts ein neues, nicht modifiziertes Objekt benötigen, legen Sie die <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>-Eigenschaft auf <xref:System.ServiceModel.InstanceContextMode.PerCall> fest.  
  
 In Transaktionsszenarien wird die <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft oft verwendet, um sicherzustellen, dass alte, dem Dienstobjekt zugeordnete Daten vor dem Verarbeiten eines Methodenaufrufs bereinigt werden. Sie können auch sicherstellen, dass Dienstobjekte, die Transaktionen zugeordnet sind, nach dem erfolgreichen Abschluss der Transaktion wiederverwendet werden. Legen Sie hierzu die <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>-Eigenschaft auf `true` fest.  
  
 Sie können zwischen folgenden Verhaltensweisen wählen:  
  
-   Wiederverwenden eines Dienstobjekts, bevor ein Vorgang aufgerufen wird  
  
-   Wiederverwenden eines Dienstobjekts, nachdem ein Vorgang aufgerufen wurde  
  
-   Wiederverwenden eines Dienstobjekts sowohl vor als auch nach dem Aufrufen eines Vorgangs  
  
-   Kein Wiederverwenden  
  
 Sie können auch <xref:System.ServiceModel.OperationBehaviorAttribute> verwenden, um in einer Duplexclientanwendung einen Rückrufvertragsvorgang zu konfigurieren. Die <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>-Eigenschaft muss bei Verwendung im Rahmen eines Rückrufvorgangs auf <xref:System.ServiceModel.ReleaseInstanceMode.None> eingestellt sein. Andernfalls wird während der Laufzeit eine <xref:System.InvalidOperationException>-Ausnahme ausgelöst.  
  
 Darüber hinaus ist es wichtig, zu bedenken, dass wenn der Dienst durch Übergabe eines Dienstobjekts an den <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType>-Konstruktor erstellt wird, der Wert dieser Eigenschaft so behandelt wird, als wäre er auf <xref:System.ServiceModel.ReleaseInstanceMode.None> festgelegt.  
  
   
  
## Examples  
 Mit dem folgenden Beispielcode wird die Nutzung von <xref:System.ServiceModel.ReleaseInstanceMode> zum Wiederverwenden von Dienstobjekten vor und nach dem Aufruf gezeigt.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist keiner der <see cref="T:System.ServiceModel.ReleaseInstanceMode" />-Werte.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Die zur Unterstützung von <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />-Eigenschaften geänderte Vorgangsbeschreibung.</param>
        <param name="parameters">Die zur Unterstützung von Bindungsverhalten übergebenen Bindungsparameter.</param>
        <summary>Implementiert die <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />-Methode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Die zur Unterstützung von <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />-Eigenschaften geänderte Vorgangsbeschreibung.</param>
        <param name="proxy">Der Erweiterbarkeitszugangspunkt zum Einfügen benutzerdefinierter Clientänderungen für diesen Vorgang.</param>
        <summary>Implementiert das Vorgangsverhalten des Clients.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Die zur Unterstützung von <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />-Eigenschaften geänderte Vorgangsbeschreibung.</param>
        <param name="dispatch">Der Erweiterbarkeitspunkt zum Einfügen benutzerdefinierter Dienständerungen für diesen Vorgang.</param>
        <summary>Implementiert das Dienstvorgangsverhalten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Die zu validierende Vorgangsbeschreibung.</param>
        <summary>Implementiert das Validierungsverhalten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der aktuelle Transaktionsbereich automatisch abgeschlossen werden soll, wenn keine unbehandelten Ausnahmen auftreten.</summary>
        <value><see langword="true" />, um bei erfolgreicher Ausführung des Vorgangs den Transaktionsbereich automatisch abzuschließen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft auf `false` fest, um Transaktionen direkt im Vorgangscode abzuschließen oder abzubrechen.  
  
 Behandelte Ausnahmen können im Verlauf des Vorgangs ausgelöst werden, ohne die Transaktion automatisch abzubrechen. Nur nicht behandelte Ausnahmen lösen einen automatischen Abbruch aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Vorgang veranschaulicht, der innerhalb einer erforderlichen verteilten Transaktion ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft gibt an, dass der Vorgang im Rahmen eines Transaktionsbereichs ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft gibt an, dass der Transaktionsbereich automatisch abgeschlossen wird, wenn keine nicht behandelten Ausnahmen auftreten. Wenn eine nicht behandelte Ausnahme auftritt, wird die Transaktion abgebrochen.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für die Ausführung der Methode ein Transaktionsbereich erforderlich ist.</summary>
        <value><see langword="true" />, wenn die Methode für die Ausführung einen Transaktionsbereich benötigt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> auf `true` fest, um einzustellen, dass Ihr Vorgang innerhalb eines Transaktionsbereichs ausgeführt werden muss. Wenn ein Transaktionsfluss verfügbar ist, wird der Vorgang innerhalb dieser Transaktion ausgeführt. Wenn kein Transaktionsfluss verfügbar ist, wird eine neue Transaktion erstellt und für die Vorgangsausführung verwendet. Die im Endpunkt angegebene Bindung steuert, ob Transaktionsflüsse unterstützt werden. Daher müssen Sie die Interaktion zwischen Bindung und <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft kennen und wissen, ob Transaktionsflüsse unterstützt werden, um das passende Verhalten zu erhalten. In der folgenden Tabelle sind die möglichen Verhaltensweisen aufgeführt.  
  
|TransactionScopeRequired|Bindung gestattet Transaktionsfluss|Aufrufer übergibt Transaktion|Ergebnis|  
|-|-|-|-|  
|False|False|Nein|Die Methode wird ohne eine Transaktion ausgeführt.|  
|True|False|Nein|Die Methode wird erstellt und innerhalb einer neuen Transaktion ausgeführt.|  
|True oder False|False|Ja|Ein SOAP-Fehler wird für den Transaktionsheader zurückgegeben.|  
|False|True|Ja|Die Methode wird ohne eine Transaktion ausgeführt.|  
|True|True|Ja|Die Methode wird unter dem Transaktionsfluss ausgeführt.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Vorgang veranschaulicht, der innerhalb einer erforderlichen verteilten Transaktion ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>-Eigenschaft gibt an, dass der Vorgang im Rahmen eines Transaktionsbereichs ausgeführt wird. Die <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>-Eigenschaft gibt an, dass der Transaktionsbereich automatisch abgeschlossen wird, wenn keine nicht behandelten Ausnahmen auftreten. Wenn eine nicht behandelte Ausnahme auftritt, wird die Transaktion abgebrochen.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>