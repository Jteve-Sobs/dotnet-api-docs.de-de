<Type Name="DoubleAnimationUsingPath" FullName="System.Windows.Media.Animation.DoubleAnimationUsingPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fa5bbbd49b3df98463d8f2c67c941f60f3d5f3f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39898878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DoubleAnimationUsingPath extends System.Windows.Media.Animation.DoubleAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
  <TypeSignature Language="VB.NET" Value="Public Class DoubleAnimationUsingPath&#xA;Inherits DoubleAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DoubleAnimationUsingPath : System::Windows::Media::Animation::DoubleAnimationBase" />
  <TypeSignature Language="F#" Value="type DoubleAnimationUsingPath = class&#xA;    inherit DoubleAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.DoubleAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Erstellt eine Animation des Werts einer <see cref="T:System.Double" />-Eigenschaft zwischen mindestens zwei Zielwerten unter Verwendung einer <see cref="T:System.Windows.Media.PathGeometry" /> zum Angeben dieser Werte. Diese Animation kann verwendet werden, um ein visuelles Objekt entlang eines Pfads zu verschieben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath> verwendet lineare Interpolation für eine angegebene <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.  
  
 <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath> ist vergleichbar mit <xref:System.Windows.Media.Animation.DoubleAnimation> , verwendet jedoch eine <xref:System.Windows.Media.PathGeometry> zum Interpolieren über zwei oder mehr Werte und nicht zwischen nur zwei Werten wie <xref:System.Windows.Media.Animation.DoubleAnimation>. Obwohl <xref:System.Windows.Media.Animation.DoubleAnimation> wird verwendet, für die meisten einfachen Animationen einen Double-Wert, <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath> eignet sich besonders gut zum Animieren der Position eines Objekts auf dem Bildschirm.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimation" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleAnimationUsingPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt keinen Standardwert <xref:System.Windows.Media.PathGeometry> , damit der Benutzer muss eine angegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.DoubleAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DoubleAnimationUsingPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::DoubleAnimationUsingPath ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.DoubleAnimationUsingPath" Usage="doubleAnimationUsingPath.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.DoubleAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen änderbaren Klon der <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />, indem tiefe Kopien von den Werten dieses Objekts erzeugt werden. Beim Kopieren von Abhängigkeitseigenschaften kopiert diese Methode Ressourcenverweise und Datenbindungen (die aber möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</summary>
        <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />. Dies ist auch dann der Fall, wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> war.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien zu erzeugen fixierten <xref:System.Windows.Freezable> Objekte (oder ein beliebiges <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="doubleAnimationUsingPath.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implementierung von <see cref="M:System.Windows.Freezable.CreateInstanceCore" />.</summary>
        <returns>Das neu erstellte <see cref="T:System.Windows.Freezable" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 GetCurrentValueCore(float64 defaultOriginValue, float64 defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double GetCurrentValueCore(double defaultOriginValue, double defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueCore : double * double * System.Windows.Media.Animation.AnimationClock -&gt; double" Usage="doubleAnimationUsingPath.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Double" />
        <Parameter Name="defaultDestinationValue" Type="System.Double" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">Der empfohlene Ursprungswert, der verwendet wird, wenn die Animation über keinen explizit festgelegten Anfangswert verfügt.</param>
        <param name="defaultDestinationValue">Der empfohlene Zielwert, der verwendet wird, wenn die Animation über keinen explizit festgelegten Endwert verfügt.</param>
        <param name="animationClock">Eine <see cref="T:System.Windows.Media.Animation.AnimationClock" />, die die <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> oder den <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> generiert, die bzw. der von der Animation verwendet wird.</param>
        <summary>Berechnet einen Wert, der den aktuellen Wert der zu animierenden Eigenschaft darstellt, wie durch die <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> bestimmt.</summary>
        <returns>Der berechnete Wert der Eigenschaft, wie von der aktuellen Animation bestimmt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `defaultOriginValue` ist der erste in der Kompositionskette ist, wird dieser Wert der Momentaufnahmenwert (sofern verfügbar) oder den Wert der Basiseigenschaft sein; andernfalls wird dieser Wert den Rückgabewert von der vorherigen Animation in der Kette mit einer <xref:System.Windows.Media.Animation.AnimationClock> nicht < C4 > <xref:System.Windows.Media.Animation.Clock.Stopped%2A> .  
  
 Die `defaultDestinationValue` ist der Basiswert, wenn die Animation, die in der ersten Kompositionsebene der Animationen für eine Eigenschaft ist; andernfalls ist des Werts der Ausgabewert der vorherigen Kompositionsebene der Animationen für die Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAdditive : bool with get, set" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dem Anfangswert der Animation der aktuelle Wert der Zieleigenschaft hinzugefügt werden soll, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn dem Anfangswert dieser Animation der aktuelle Wert der Zieleigenschaft hinzugefügt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Additive"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|None|  
  
> [!NOTE]
>  Diese Abhängigkeitseigenschaft ist ungewöhnlich, da das Bezeichnerfeld dafür stammt <xref:System.Windows.Media.Animation.AnimationTimeline>, und verschiedene abgeleitete Klassen freigegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCumulative">
      <MemberSignature Language="C#" Value="public bool IsCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCumulative : bool with get, set" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Wert der Animation bei einer Wiederholung der Animation gesammelt wird, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" /> Wenn die Werte der Animation gesammelt bei dessen <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> Eigenschaft bewirkt, dass ihre einfache Dauer wiederholt. Andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf festgelegt ist `true`, Werte nur gesammelt, wenn die Animation Ausgabe der Animation <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> Eigenschaft bewirkt, dass ihre einfache Dauer wiederholt. Die Werte werden nicht gesammelt, wenn diese neu gestartet wird, da das übergeordnete Element wiederholt oder weil die Uhr neu gestartet wurde, aus einem <xref:System.Windows.Media.Animation.ClockController.Begin%2A> aufrufen.  
  
<a name="dependencyPropertyInfo_Cumulative"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|None|  
  
> [!NOTE]
>  Diese Abhängigkeitseigenschaft ist ungewöhnlich, da das Bezeichnerfeld dafür stammt <xref:System.Windows.Media.Animation.AnimationTimeline>, und verschiedene abgeleitete Klassen freigegeben ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="doubleAnimationUsingPath.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird aufgerufen, wenn dieser <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> geändert wird.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Finden Sie unter <see cref="M:System.Windows.Freezable.OnChanged" /> Informationen zum Überschreiben dieser Methode.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.OnChanged" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property PathGeometry As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathGeometry ^ PathGeometry { System::Windows::Media::PathGeometry ^ get(); void set(System::Windows::Media::PathGeometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathGeometry : System.Windows.Media.PathGeometry with get, set" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Geometrie an, die zum Generieren der Ausgabewerte dieser Animation verwendet wird.</summary>
        <value>Der zum Generieren der Ausgabewerte dieser Animation verwendete Pfad. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], Sie können eine spezielle abgekürzte Syntax verwenden, um den Pfad zu beschreiben.  
  
 [!code-xaml[PathAnimationGallery_snippet#DoubleAnimationUsingPathAttributeSyntaxExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/doubleanimationusingpathattributesyntaxexample.xaml#doubleanimationusingpathattributesyntaxexample)] 
  
 Weitere Informationen zu <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry%2A> Markupsyntax, finden Sie unter [Pfadmarkupsyntax](~/docs/framework/wpf/graphics-multimedia/path-markup-syntax.md). Weitere Beispiele für einen Pfad mithilfe von Markup oder Code erstellen, finden Sie unter <xref:System.Windows.Media.PathGeometry>.  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathGeometryProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathGeometryProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathGeometryProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert die <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.PathAnimationSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As PathAnimationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::PathAnimationSource Source { System::Windows::Media::Animation::PathAnimationSource get(); void set(System::Windows::Media::Animation::PathAnimationSource value); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Windows.Media.Animation.PathAnimationSource with get, set" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.PathAnimationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Aspekt der <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> dieser Animation ab, die deren Ausgabewert bestimmt, oder legt diese fest.</summary>
        <value>Der Aspekt der <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> dieser Animation, die deren Ausgabewert bestimmt. Der Standardwert ist <see cref="F:System.Windows.Media.Animation.PathAnimationSource.X" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert die <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>