<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Animatable.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ea9713148e10c8f9a95421b6bcd7b78a6cb4d56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea9713148e10c8f9a95421b6bcd7b78a6cb4d56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">Eine abstrakte Klasse, die Unterstützung für Animationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Animates the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</source>
          <target state="translated">Animiert die angegebene <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The property to animate.</source>
          <target state="translated">Die zu animierende Eigenschaft.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">Der Takt, mit dem die angegebene Eigenschaft animiert werden soll.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> gleich <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, werden alle Animationen aus der angegebenen Eigenschaft entfernt (jedoch nicht angehalten).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Wendet einen <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> auf die angegebene <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If the property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">Wenn die Eigenschaft bereits animiert wird, wird das <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>-Übergabeverhalten verwendet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">Beachten Sie, dass die Verwendung dieser Methode zum Entfernen von Uhren aus einer Eigenschaft die Uhren nicht angehalten.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">Die zu animierende Eigenschaft.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">Der Takt, mit dem die angegebene Eigenschaft animiert werden soll.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> aufweist und <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> <ph id="ph2">&lt;see langword="null" /&gt;</ph> ist, werden alle Animationen aus der angegebenen Eigenschaft entfernt (jedoch nicht angehalten).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> and clock is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method has no effect.</source>
          <target state="translated">Wenn für <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> aufweist und clock <ph id="ph2">&lt;see langword="null" /&gt;</ph> ist, hat diese Methode keine Auswirkungen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Ein Wert, der angibt, wie die neue Animation ggf. mit aktuellen Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Wendet einen <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> auf die angegebene <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">Wenn die Eigenschaft bereits animiert wird, wird das angegebene <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">Beachten Sie, dass die Verwendung dieser Methode zum Entfernen von Uhren aus einer Eigenschaft die Uhren nicht angehalten.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Mit dem Verfassen HandoffBehavior</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">Beim Anwenden einer <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, oder <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> mit einer Eigenschaft mithilfe der <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, stellen alle <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, die Zeitsteuerungssystems geschieht dies nicht Entfernen Sie diese Uhren automatisch.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> -Methode des animierten Objekts.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Geben Sie die Eigenschaft als erster Parameter animierten und <ph id="ph1">`null`</ph> als das zweite.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Dies entfernt alle Animationsuhren aus der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Zum Entfernen einer bestimmten <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> , aus einer Liste von Uhren verwenden die <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> Eigenschaft der <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> abgerufen eine <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, rufen Sie anschließend die <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> Methode der <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Dies erfolgt in der Regel in der <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> -Ereignishandler für eine Uhr.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; das <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> Eigenschaft einer untergeordneten Uhr gibt zurück, <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Beachten Sie auch, dass die <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> Ereignis wird nicht aufgerufen werden, wenn die effektive Dauer der Uhr endlos ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">In diesem Fall müssen die Benutzer zum Ermitteln, wann Aufrufen <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Wenn ein Objekt an den Garbage Collector übergeben wird, werden auch die Uhren getrennt und an den Garbage Collector übergeben.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Uhr Objekten finden Sie unter der <bpt id="p1">[</bpt>Animationen und zeitlichen Steuerung Systemübersicht<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animation clocks using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie Animationsuhren mit verschiedenen anzuwendende <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> Einstellungen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Wendet eine Animation auf die angegebene <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The property to animate.</source>
          <target state="translated">Die zu animierende Eigenschaft.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">Die Animation, mit der die angegebene Eigenschaft animiert werden soll.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> der Animation <ph id="ph2">&lt;see langword="null" /&gt;</ph> ist, werden aktuelle Animationen entfernt, und der aktuelle Wert der Eigenschaft wird beibehalten.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Wendet eine Animation auf die angegebene <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">Die Animation wird gestartet, wenn der nächste Frame gerendert wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the specified property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">Wenn die angegebene Eigenschaft bereits animiert wird, wird das <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>-Übergabeverhalten verwendet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Wenn die Animation wurde eine <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> größer als 0 (null), der Animation an, nach dem angegebenen Zeitraum aus der Zeit verstrichen ist der nächste Frame gerendert wird.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">Die zu animierende Eigenschaft.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">Die Animation, mit der die angegebene Eigenschaft animiert werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and the animation's <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> aufweist und die <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> der Animation <ph id="ph3">&lt;see langword="null" /&gt;</ph> ist, werden aktuelle Animationen entfernt, und der aktuelle Werte der Eigenschaft wird beibehalten.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> aufweist und <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> ein <ph id="ph2">&lt;see langword="null" /&gt;</ph>-Verweis ist, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert der Eigenschaft zurückgesetzt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, this method will have no effect if the animation or its <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> aufweist und die Animation oder ihre <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> <ph id="ph3">&lt;see langword="null" /&gt;</ph> ist, hat diese Methode keine Auswirkungen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Ein Wert, der angibt, wie die neue Animation ggf. mit aktuellen Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Wendet eine Animation auf die angegebene <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">Die Animation wird gestartet, wenn der nächste Frame gerendert wird.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the specified property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">Wenn die angegebene Eigenschaft bereits animiert wird, wird das angegebene <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Wenn die Animation wurde eine <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> größer als 0 (null), der Animation an, nach dem angegebenen Zeitraum aus der Zeit verstrichen ist der nächste Frame gerendert wird.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Mit dem Verfassen HandoffBehavior</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">Beim Anwenden einer <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, oder <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> mit einer Eigenschaft mithilfe der <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, stellen alle <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, die Zeitsteuerungssystems geschieht dies nicht Entfernen Sie diese Uhren automatisch.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> -Methode des animierten Objekts.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Geben Sie die Eigenschaft als erster Parameter animierten und <ph id="ph1">`null`</ph> als das zweite.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Dies entfernt alle Animationsuhren aus der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Zum Entfernen einer bestimmten <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> , aus einer Liste von Uhren verwenden die <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> Eigenschaft der <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> abgerufen eine <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, rufen Sie anschließend die <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> Methode der <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Dies erfolgt in der Regel in der <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> -Ereignishandler für eine Uhr.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; das <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> Eigenschaft einer untergeordneten Uhr gibt zurück, <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Beachten Sie auch, dass die <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> Ereignis wird nicht aufgerufen werden, wenn die effektive Dauer der Uhr endlos ist.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">In diesem Fall müssen die Benutzer zum Ermitteln, wann Aufrufen <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Wenn ein Objekt an den Garbage Collector übergeben wird, werden auch die Uhren getrennt und an den Garbage Collector übergeben.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Uhr Objekten finden Sie unter der <bpt id="p1">[</bpt>Animationen und zeitlichen Steuerung Systemübersicht<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animations using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Anwenden von Animationen mit verschiedenen <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> Einstellungen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">Erstellt einen änderbaren Klon dieser <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, indem tiefe Kopien der Werte dieses Objekts erzeugt werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">Beim Kopieren von Abhängigkeitseigenschaften dieses Objekts kopiert diese Methode Ressourcenverweise und Datenbindungen (die jedoch möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">Ein änderbarer Klon dieser Instanz.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">Bei dem zurückgegebenen Klon handelt es sich im Grunde um eine tiefe Kopie des aktuellen Objekts.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The clone's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph>-Eigenschaft des Klons ist <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> Methode kann verwendet werden, um änderbare Kopien erzeugen fixierte <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>For convenience, this method shadows the inherited <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.</source>
          <target state="translated">Der Einfachheit halber diese Methode führt Shadowing für die geerbte <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> Methode, um eine stark typisierte Implementierung bereitzustellen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Methode lediglich bestimmen soll, ob diese Instanz eingefroren werden kann.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn diese Instanz bei einem Aufruf dieser Methode tatsächlich fixiert werden soll.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Makes this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">Legt dieses <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>-Objekt als nicht änderbar fest oder bestimmt, ob es als nicht änderbar festgelegt werden kann.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> can be made unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> den Wert <ph id="ph2">&lt;see langword="true" /&gt;</ph> aufweist, gibt diese Methode <ph id="ph3">&lt;see langword="true" /&gt;</ph> zurück, wenn dieses <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>-Objekt als nicht änderbar festgelegt werden kann, oder <ph id="ph5">&lt;see langword="false" /&gt;</ph>, wenn es nicht als nicht änderbar festgelegt werden kann.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> is now unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph><ph id="ph2">&lt;see langword="false" /&gt;</ph> ist und dieser <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> jetzt nicht änderbar ist, gibt diese Methode <ph id="ph3">&lt;see langword="true" /&gt;</ph> zurück, oder sie gibt <ph id="ph5">&lt;see langword="false" /&gt;</ph> zurück, wenn er nicht als nicht änderbar festgelegt werden kann, mit dem Nebeneffekt, dass begonnen wurde, den fixierten Status des Objekts zu ändern.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">Von dieser Methode zurückgegeben <bpt id="p1">**</bpt>"false"<ept id="p1">**</ept> Wenn <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> ist <bpt id="p2">**</bpt>"true"<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">Rufen Sie diese Methode direkt (außer beim Aufrufen der Basis in einer Implementierung) nicht.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method is called internally by <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id="ph2">`isChecking`</ph> equal to <ph id="ph3">`true`</ph>) and  <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id="ph5">`isChecking`</ph> equal to <ph id="ph6">`false`</ph>).</source>
          <target state="translated">Diese Methode wird intern von aufgerufen <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (mit <ph id="ph2">`isChecking`</ph> gleich <ph id="ph3">`true`</ph>) und <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (mit <ph id="ph5">`isChecking`</ph> gleich <ph id="ph6">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> must override this method when the class contains data that is not stored using dependency properties.</source>
          <target state="translated">Abgeleitete Klassen <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> müssen diese Methode überschreiben, wenn die Klasse Daten enthält, die nicht mit Abhängigkeitseigenschaften gespeichert werden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>A typical implementation would call the base implementation, then call the static <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> method on all <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> typed properties that the class contains, returning <ph id="ph3">&lt;see langword="true" /&gt;</ph> only if all properties were frozen (or could have been frozen, in the case of passing through a <ph id="ph4">&lt;see langword="false" /&gt;</ph> value for <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</source>
          <target state="translated">Eine typische Implementierung die basisimplementierung aufrufen würde, und rufen Sie die statische <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> -Methode bei allen <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> typisierte Eigenschaften, die die Klasse zurückgeben enthält, <ph id="ph3">&lt;see langword="true" /&gt;</ph> nur, wenn alle Eigenschaften fixiert waren (oder konnte fixiert, in der Groß-/Kleinschreibung der Umweg über ein <ph id="ph4">&lt;see langword="false" /&gt;</ph> Wert für <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">Bezeichnet die Eigenschaft, deren Basiswert (nicht animiert) abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Returns the non-animated value of the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Gibt den nicht animierten Wert der angegebenen <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">Der Wert, der zurückgegeben wird, wenn die angegebene Eigenschaft nicht animiert ist.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>If the specified property is not animated, this method returns the same result as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</source>
          <target state="translated">Wenn die angegebene Eigenschaft nicht animiert wird, gibt diese Methode das gleiche Ergebnis wie <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>In the following example, the non-animated values of animated properties are retrieved and displayed.</source>
          <target state="translated">Im folgenden Beispiel werden die Werte nicht animiert animierten Eigenschaften abgerufen und angezeigt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>Gets a value that indicates whether one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob einer der Abhängigkeitseigenschaften dieses Objekts ein oder mehrere <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>-Objekte zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>"true"<ept id="p1">**</ept> eine oder mehrere <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> Objekte ist von Abhängigkeitseigenschaften dieses Objekts zugeordnet ist, andernfalls <bpt id="p2">**</bpt>"false"<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">Diese Eigenschaft gibt keine, ob dieses Objekt über animierte Unterobjekte enthält.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Stellt ein Objekt dar, das im Abhängigkeitseigenschaftensystem teilnimmt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">Gibt an, ob ein Abhängigkeitsobjekt serialisiert werden soll.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um <ph id="ph2">&lt;paramref name="target" /&gt;</ph> zu serialisieren; andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> method to determine if a property should be serialized.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> -Klasse verwendet die <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> Methode, um zu bestimmen, ob eine Eigenschaft serialisiert werden soll.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>