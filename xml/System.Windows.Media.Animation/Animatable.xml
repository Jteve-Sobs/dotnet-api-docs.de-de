<Type Name="Animatable" FullName="System.Windows.Media.Animation.Animatable">
  <TypeSignature Language="C#" Value="public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animatable extends System.Windows.Freezable implements class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Animatable&#xA;Inherits Freezable&#xA;Implements IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Animatable abstract : System::Windows::Freezable, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a2708-101">Eine abstrakte Klasse, die Unterstützung für Animationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a2708-101">Abstract class that provides animation support.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animatable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Animatable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2708-102">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Animation.Animatable" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a2708-102">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Animatable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2708-103">Animiert die angegebene <see cref="T:System.Windows.DependencyProperty" /> mit der angegebenen <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span><span class="sxs-lookup"><span data-stu-id="a2708-103">Animates the specified <see cref="T:System.Windows.DependencyProperty" /> using the specified <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a2708-104">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-104">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="a2708-105">Der Takt, mit dem die angegebene Eigenschaft animiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-105">The clock with which to animate the specified property.</span></span> <span data-ttu-id="a2708-106">Wenn <c>clock</c> gleich <see langword="null" /> ist, werden alle Animationen aus der angegebenen Eigenschaft entfernt (jedoch nicht angehalten).</span><span class="sxs-lookup"><span data-stu-id="a2708-106">If <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span></span></param>
        <summary><span data-ttu-id="a2708-107">Wendet einen <see cref="T:System.Windows.Media.Animation.AnimationClock" /> auf die angegebene <see cref="T:System.Windows.DependencyProperty" /> an.</span><span class="sxs-lookup"><span data-stu-id="a2708-107">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="a2708-108">Wenn die Eigenschaft bereits animiert wird, wird das <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />-Übergabeverhalten verwendet.</span><span class="sxs-lookup"><span data-stu-id="a2708-108">If the property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-109">Beachten Sie, dass die Verwendung dieser Methode zum Entfernen von Uhren aus einer Eigenschaft die Uhren nicht angehalten.</span><span class="sxs-lookup"><span data-stu-id="a2708-109">Note that using this method to removing clocks from a property does not stop those clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a2708-110">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-110">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="a2708-111">Der Takt, mit dem die angegebene Eigenschaft animiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-111">The clock with which to animate the specified property.</span></span> <span data-ttu-id="a2708-112">Wenn <c>handoffBehavior</c> den Wert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> aufweist und <c>clock</c> <see langword="null" /> ist, werden alle Animationen aus der angegebenen Eigenschaft entfernt (jedoch nicht angehalten).</span><span class="sxs-lookup"><span data-stu-id="a2708-112">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span></span> <span data-ttu-id="a2708-113">Wenn für <c>handoffBehavior</c> den Wert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> aufweist und clock <see langword="null" /> ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="a2708-113">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> and clock is <see langword="null" />, this method has no effect.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="a2708-114">Ein Wert, der angibt, wie die neue Animation ggf. mit aktuellen Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</span><span class="sxs-lookup"><span data-stu-id="a2708-114">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="a2708-115">Wendet einen <see cref="T:System.Windows.Media.Animation.AnimationClock" /> auf die angegebene <see cref="T:System.Windows.DependencyProperty" /> an.</span><span class="sxs-lookup"><span data-stu-id="a2708-115">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="a2708-116">Wenn die Eigenschaft bereits animiert wird, wird das angegebene <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="a2708-116">If the property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-117">Beachten Sie, dass die Verwendung dieser Methode zum Entfernen von Uhren aus einer Eigenschaft die Uhren nicht angehalten.</span><span class="sxs-lookup"><span data-stu-id="a2708-117">Note that using this method to remove clocks from a property does not stop those clocks.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="a2708-118">Mit dem Verfassen HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="a2708-118">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="a2708-119">Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, die Zeitsteuerungssystems geschieht dies nicht Entfernen Sie diese Uhren automatisch.</span><span class="sxs-lookup"><span data-stu-id="a2708-119">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="a2708-120">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</span><span class="sxs-lookup"><span data-stu-id="a2708-120">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="a2708-121">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="a2708-121">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="a2708-122">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="a2708-122">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="a2708-123">Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite.</span><span class="sxs-lookup"><span data-stu-id="a2708-123">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="a2708-124">Dies entfernt alle Animationsuhren aus der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-124">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="a2708-125">Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="a2708-125">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="a2708-126">Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr.</span><span class="sxs-lookup"><span data-stu-id="a2708-126">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="a2708-127">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt zurück, `null`.</span><span class="sxs-lookup"><span data-stu-id="a2708-127">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="a2708-128">Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen werden, wenn die effektive Dauer der Uhr endlos ist.</span><span class="sxs-lookup"><span data-stu-id="a2708-128">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="a2708-129">In diesem Fall müssen die Benutzer zum Ermitteln, wann Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2708-129">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="a2708-130">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</span><span class="sxs-lookup"><span data-stu-id="a2708-130">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="a2708-131">Wenn ein Objekt an den Garbage Collector übergeben wird, werden auch die Uhren getrennt und an den Garbage Collector übergeben.</span><span class="sxs-lookup"><span data-stu-id="a2708-131">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="a2708-132">Weitere Informationen zu Uhr Objekten finden Sie unter der [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a2708-132">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2708-133">Im folgende Beispiel wird gezeigt, wie Animationsuhren mit verschiedenen anzuwendende <xref:System.Windows.Media.Animation.HandoffBehavior> Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="a2708-133">The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2708-134">Wendet eine Animation auf die angegebene <see cref="T:System.Windows.DependencyProperty" /> an.</span><span class="sxs-lookup"><span data-stu-id="a2708-134">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a2708-135">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-135">The property to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="a2708-136">Die Animation, mit der die angegebene Eigenschaft animiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-136">The animation used to animate the specified property.</span></span>  
  
 <span data-ttu-id="a2708-137">Wenn die <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> der Animation <see langword="null" /> ist, werden aktuelle Animationen entfernt, und der aktuelle Wert der Eigenschaft wird beibehalten.</span><span class="sxs-lookup"><span data-stu-id="a2708-137">If the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span></span>  
  
 <span data-ttu-id="a2708-138">Wenn <c>animation</c> <see langword="null" /> ist, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="a2708-138">If <c>animation</c> is <see langword="null" />, all animations will be removed from the property and the property value will revert back to its base value.</span></span></param>
        <summary><span data-ttu-id="a2708-139">Wendet eine Animation auf die angegebene <see cref="T:System.Windows.DependencyProperty" /> an.</span><span class="sxs-lookup"><span data-stu-id="a2708-139">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="a2708-140">Die Animation wird gestartet, wenn der nächste Frame gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a2708-140">The animation is started when the next frame is rendered.</span></span> <span data-ttu-id="a2708-141">Wenn die angegebene Eigenschaft bereits animiert wird, wird das <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />-Übergabeverhalten verwendet.</span><span class="sxs-lookup"><span data-stu-id="a2708-141">If the specified property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-142">Wenn die Animation wurde eine <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> größer als 0 (null), der Animation an, nach dem angegebenen Zeitraum aus der Zeit verstrichen ist der nächste Frame gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a2708-142">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a2708-143">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-143">The property to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="a2708-144">Die Animation, mit der die angegebene Eigenschaft animiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-144">The animation used to animate the specified property.</span></span>  
  
 <span data-ttu-id="a2708-145">Wenn <c>handoffBehavior</c> den Wert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> aufweist und die <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> der Animation <see langword="null" /> ist, werden aktuelle Animationen entfernt, und der aktuelle Werte der Eigenschaft wird beibehalten.</span><span class="sxs-lookup"><span data-stu-id="a2708-145">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span></span>  
  
 <span data-ttu-id="a2708-146">Wenn <c>handoffBehavior</c> den Wert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> aufweist und <c>animation</c> ein <see langword="null" />-Verweis ist, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert der Eigenschaft zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="a2708-146">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>animation</c> is a <see langword="null" /> reference, all animations will be removed from the property and the property value will revert back to its base value.</span></span>  
  
 <span data-ttu-id="a2708-147">Wenn <c>handoffBehavior</c> den Wert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> aufweist und die Animation oder ihre <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> <see langword="null" /> ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="a2708-147">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, this method will have no effect if the animation or its <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="a2708-148">Ein Wert, der angibt, wie die neue Animation ggf. mit aktuellen Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</span><span class="sxs-lookup"><span data-stu-id="a2708-148">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="a2708-149">Wendet eine Animation auf die angegebene <see cref="T:System.Windows.DependencyProperty" /> an.</span><span class="sxs-lookup"><span data-stu-id="a2708-149">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="a2708-150">Die Animation wird gestartet, wenn der nächste Frame gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a2708-150">The animation is started when the next frame is rendered.</span></span> <span data-ttu-id="a2708-151">Wenn die angegebene Eigenschaft bereits animiert wird, wird das angegebene <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="a2708-151">If the specified property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-152">Wenn die Animation wurde eine <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> größer als 0 (null), der Animation an, nach dem angegebenen Zeitraum aus der Zeit verstrichen ist der nächste Frame gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a2708-152">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="a2708-153">Mit dem Verfassen HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="a2708-153">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="a2708-154">Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, die Zeitsteuerungssystems geschieht dies nicht Entfernen Sie diese Uhren automatisch.</span><span class="sxs-lookup"><span data-stu-id="a2708-154">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="a2708-155">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</span><span class="sxs-lookup"><span data-stu-id="a2708-155">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="a2708-156">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="a2708-156">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="a2708-157">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="a2708-157">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="a2708-158">Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite.</span><span class="sxs-lookup"><span data-stu-id="a2708-158">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="a2708-159">Dies entfernt alle Animationsuhren aus der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a2708-159">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="a2708-160">Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="a2708-160">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="a2708-161">Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr.</span><span class="sxs-lookup"><span data-stu-id="a2708-161">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="a2708-162">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt zurück, `null`.</span><span class="sxs-lookup"><span data-stu-id="a2708-162">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="a2708-163">Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen werden, wenn die effektive Dauer der Uhr endlos ist.</span><span class="sxs-lookup"><span data-stu-id="a2708-163">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="a2708-164">In diesem Fall müssen die Benutzer zum Ermitteln, wann Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2708-164">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="a2708-165">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</span><span class="sxs-lookup"><span data-stu-id="a2708-165">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="a2708-166">Wenn ein Objekt an den Garbage Collector übergeben wird, werden auch die Uhren getrennt und an den Garbage Collector übergeben.</span><span class="sxs-lookup"><span data-stu-id="a2708-166">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="a2708-167">Weitere Informationen zu Uhr Objekten finden Sie unter der [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a2708-167">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2708-168">Im folgende Beispiel wird gezeigt, wie zum Anwenden von Animationen mit verschiedenen <xref:System.Windows.Media.Animation.HandoffBehavior> Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="a2708-168">The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/cpp/VS_Snippets_Wpf/animateproperty/CPP/InteractiveExample.cpp#interactiveanimationexamplewholepage)]
 [!code-csharp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animateproperty/CSharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]
 [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateproperty/VisualBasic/InteractiveExample.vb#interactiveanimationexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Animatable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Animatable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Animatable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Animatable ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Animatable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2708-169">Erstellt einen änderbaren Klon dieser <see cref="T:System.Windows.Media.Animation.Animatable" />, indem tiefe Kopien der Werte dieses Objekts erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="a2708-169">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Animatable" />, making deep copies of this object's values.</span></span> <span data-ttu-id="a2708-170">Beim Kopieren von Abhängigkeitseigenschaften dieses Objekts kopiert diese Methode Ressourcenverweise und Datenbindungen (die jedoch möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</span><span class="sxs-lookup"><span data-stu-id="a2708-170">When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="a2708-171">Ein änderbarer Klon dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="a2708-171">A modifiable clone of this instance.</span></span> <span data-ttu-id="a2708-172">Bei dem zurückgegebenen Klon handelt es sich im Grunde um eine tiefe Kopie des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="a2708-172">The returned clone is effectively a deep copy of the current object.</span></span> <span data-ttu-id="a2708-173">Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des Klons ist **FALSE**.</span><span class="sxs-lookup"><span data-stu-id="a2708-173">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is **false**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-174">Die <xref:System.Windows.Media.Animation.Animatable.Clone%2A> Methode kann verwendet werden, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte.</span><span class="sxs-lookup"><span data-stu-id="a2708-174">The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="a2708-175">Der Einfachheit halber diese Methode führt Shadowing für die geerbte <xref:System.Windows.Freezable.Clone%2A> Methode, um eine stark typisierte Implementierung bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="a2708-175">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="a2708-176"><see langword="true" />, wenn die Methode lediglich bestimmen soll, ob diese Instanz eingefroren werden kann.</span><span class="sxs-lookup"><span data-stu-id="a2708-176"><see langword="true" /> if this method should simply determine whether this instance can be frozen.</span></span> <span data-ttu-id="a2708-177"><see langword="false" />, wenn diese Instanz bei einem Aufruf dieser Methode tatsächlich fixiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-177"><see langword="false" /> if this instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="a2708-178">Legt dieses <see cref="T:System.Windows.Media.Animation.Animatable" />-Objekt als nicht änderbar fest oder bestimmt, ob es als nicht änderbar festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="a2708-178">Makes this <see cref="T:System.Windows.Media.Animation.Animatable" /> object unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="a2708-179">Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn dieses <see cref="T:System.Windows.Media.Animation.Animatable" />-Objekt als nicht änderbar festgelegt werden kann, oder <see langword="false" />, wenn es nicht als nicht änderbar festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="a2708-179">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span></span>  
  
 <span data-ttu-id="a2708-180">Wenn <paramref name="isChecking" /><see langword="false" /> ist und dieser <see cref="T:System.Windows.Media.Animation.Animatable" /> jetzt nicht änderbar ist, gibt diese Methode <see langword="true" /> zurück, oder sie gibt <see langword="false" /> zurück, wenn er nicht als nicht änderbar festgelegt werden kann, mit dem Nebeneffekt, dass begonnen wurde, den fixierten Status des Objekts zu ändern.</span><span class="sxs-lookup"><span data-stu-id="a2708-180">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-181">Von dieser Methode zurückgegeben **"false"** Wenn <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> ist **"true"**.</span><span class="sxs-lookup"><span data-stu-id="a2708-181">This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.</span></span>  
  
 <span data-ttu-id="a2708-182">Rufen Sie diese Methode direkt (außer beim Aufrufen der Basis in einer Implementierung) nicht.</span><span class="sxs-lookup"><span data-stu-id="a2708-182">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="a2708-183">Diese Methode wird intern von aufgerufen <xref:System.Windows.Freezable.CanFreeze%2A> (mit `isChecking` gleich `true`) und <xref:System.Windows.Freezable.Freeze%2A> (mit `isChecking` gleich `false`).</span><span class="sxs-lookup"><span data-stu-id="a2708-183">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a2708-184">Abgeleitete Klassen <see cref="T:System.Windows.Media.Animation.Animatable" /> müssen diese Methode überschreiben, wenn die Klasse Daten enthält, die nicht mit Abhängigkeitseigenschaften gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="a2708-184">Classes that derive from <see cref="T:System.Windows.Media.Animation.Animatable" /> must override this method when the class contains data that is not stored using dependency properties.</span></span>  
  
 <span data-ttu-id="a2708-185">Eine typische Implementierung die basisimplementierung aufrufen würde, und rufen Sie die statische <see cref="M:System.Windows.Freezable.Freeze" /> -Methode bei allen <see cref="T:System.Windows.Freezable" /> typisierte Eigenschaften, die die Klasse zurückgeben enthält, <see langword="true" /> nur, wenn alle Eigenschaften fixiert waren (oder konnte fixiert, in der Groß-/Kleinschreibung der Umweg über ein <see langword="false" /> Wert für <paramref name="isChecking" />).</span><span class="sxs-lookup"><span data-stu-id="a2708-185">A typical implementation would call the base implementation, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a2708-186">Bezeichnet die Eigenschaft, deren Basiswert (nicht animiert) abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-186">Identifies the property whose base (non-animated) value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a2708-187">Gibt den nicht animierten Wert der angegebenen <see cref="T:System.Windows.DependencyProperty" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="a2708-187">Returns the non-animated value of the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span></summary>
        <returns><span data-ttu-id="a2708-188">Der Wert, der zurückgegeben wird, wenn die angegebene Eigenschaft nicht animiert ist.</span><span class="sxs-lookup"><span data-stu-id="a2708-188">The value that would be returned if the specified property were not animated.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-189">Wenn die angegebene Eigenschaft nicht animiert wird, gibt diese Methode das gleiche Ergebnis wie <xref:System.Windows.DependencyObject.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2708-189">If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2708-190">Im folgenden Beispiel werden die Werte nicht animiert animierten Eigenschaften abgerufen und angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a2708-190">In the following example, the non-animated values of animated properties are retrieved and displayed.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2708-191">Ruft einen Wert ab, der angibt, ob einer der Abhängigkeitseigenschaften dieses Objekts ein oder mehrere <see cref="T:System.Windows.Media.Animation.AnimationClock" />-Objekte zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="a2708-191">Gets a value that indicates whether one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties.</span></span></summary>
        <value><span data-ttu-id="a2708-192">**"true"** eine oder mehrere <see cref="T:System.Windows.Media.Animation.AnimationClock" /> Objekte ist von Abhängigkeitseigenschaften dieses Objekts zugeordnet ist, andernfalls **"false"**.</span><span class="sxs-lookup"><span data-stu-id="a2708-192">**true** if one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties; otherwise, **false**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-193">Diese Eigenschaft gibt keine, ob dieses Objekt über animierte Unterobjekte enthält.</span><span class="sxs-lookup"><span data-stu-id="a2708-193">This property does not indicate whether this object contains animated sub-objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStoredWeakReference">
      <MemberSignature Language="C#" Value="public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSerializeStoredWeakReference(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShouldSerializeStoredWeakReference (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ShouldSerializeStoredWeakReference(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a2708-194">Stellt ein Objekt dar, das im Abhängigkeitseigenschaftensystem teilnimmt.</span><span class="sxs-lookup"><span data-stu-id="a2708-194">Represents an object that participates in the dependency property system.</span></span></param>
        <summary><span data-ttu-id="a2708-195">Gibt an, ob ein Abhängigkeitsobjekt serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-195">Specifies whether a dependency object should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="a2708-196"><see langword="true" />, um <paramref name="target" /> zu serialisieren; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2708-196"><see langword="true" /> to serialize <paramref name="target" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2708-197">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2708-197">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2708-198">Die <xref:System.ComponentModel.TypeDescriptor> -Klasse verwendet die <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> Methode, um zu bestimmen, ob eine Eigenschaft serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a2708-198">The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>