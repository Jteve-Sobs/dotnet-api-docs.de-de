<Type Name="CircleEase" FullName="System.Windows.Media.Animation.CircleEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd3712bd05abaec9bf8076976850ad4dd709e088" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656854" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CircleEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CircleEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.CircleEase" />
  <TypeSignature Language="VB.NET" Value="Public Class CircleEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CircleEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Beschleunigungsfunktion dar, die eine Animation erstellt, die mithilfe einer Kreisfunktion beschleunigt und/oder verlangsamt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können steuern, ob die Animation beschleunigt verlangsamt wird, oder beidem durch Angabe der <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. Das folgende Diagramm veranschaulicht die unterschiedlichen Werte von <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, wobei *f*(*t*) den Animationsstatus und *t* Uhrzeit darstellt.  
  
 ![CircleEase EasingMode-Diagramme. ] (~/add/media/circleease-graph.png "CircleEase EasingMode-Diagramme.")  
  
 Die Formel für diese Funktion verwendet, lautet wie folgt.  
  
 ![Mathematische Formel für CircleEase](~/add/media/circleease-formula.png "mathematische Formel für CircleEase")  
  
 Die gültigen Werte für *t* sind -1 < = *t* < = 1. Werte größer als 1 als 1 ausgewertet werden, und Werte kleiner als-1 werden als-1 ausgewertet. Dies bedeutet, dass für die Werte außerhalb dieses Intervall, die Animation wird fortgesetzt, aber die Beschleunigungsfunktion wird angehalten, wenn er in der Domäne ungültig wird, und setzt es fort, nachdem sie die ungültige Domäne verlässt.  
  
 Es gibt mehrere andere Beschleunigungsfunktionen neben <xref:System.Windows.Media.Animation.CircleEase> die Sie mit dem folgenden Silverlight-Beispiel untersuchen können.  
  
 [Dieses Beispiel ausführen](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 Zusätzlich zur Verwendung der in der Laufzeit enthaltenen Beschleunigungsfunktionen, können Sie eigene benutzerdefinierten Beschleunigungsfunktionen erstellen, durch Vererben von <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
<a name="xamlObjectElementUsage_CircleEase"></a>   
## <a name="xaml-object-element-usage"></a>Verwendung von XAML-Objektelementen  
  
```  
<CircleEase .../>  
```  
  
   
  
## Examples  
 Das folgende Beispiel wendet eine <xref:System.Windows.Media.Animation.CircleEase> Beschleunigungsfunktionen-Funktion, um eine <xref:System.Windows.Media.Animation.DoubleAnimation> zum Erstellen einer Animation verlangsamt wird.  
  
 [!code-xaml[CircleEase#CircleEase](~/samples/snippets/csharp/VS_Snippets_Wpf/circleease/CS/window1.xaml#circleease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CircleEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CircleEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Animation.CircleEase" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der aus <see cref="T:System.Windows.Freezable" /> abgeleiteten Klasse. Beim Erstellen einer abgeleiteten Klasse muss diese Methode überschrieben werden.</summary>
        <returns>Die neue Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Animation-Klassen erben indirekt von <xref:System.Windows.Freezable>. Aus diesem Grund müssen Sie überschreiben die <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> Methode zum Erstellen einer benutzerdefinierten Animation-Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine typische Implementierung der <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Die normalisierte Zeit (Fortschritt) der Animation.</param>
        <summary>Stellt die Logik der Beschleunigungsfunktion bereit, die überschrieben werden kann, um den <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" />-Modus der benutzerdefinierten Beschleunigungsfunktion zu erzeugen.</summary>
        <returns>Ein Double-Wert, der den transformierten Fortschritt darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode transformiert die normalisierte Zeit zu steuern, der die Geschwindigkeit der Animation für die <xref:System.Windows.Media.Animation.EasingMode.EaseIn> der Groß-/Kleinschreibung <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 Müssen nur die Beschleunigungsfunktion für angeben der <xref:System.Windows.Media.Animation.EasingMode.EaseIn> Fall, da die Implementierung der <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> Methode Transformationen `normalizedTime` für die <xref:System.Windows.Media.Animation.EasingMode.EaseOut> und <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> Fällen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>