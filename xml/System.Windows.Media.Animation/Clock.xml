<Type Name="Clock" FullName="System.Windows.Media.Animation.Clock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="829cbcd67b4a6736053ec04245b9b87181268348" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Clock : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Clock extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Clock" />
  <TypeSignature Language="VB.NET" Value="Public Class Clock&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clock : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6010a-101">Verwaltet den Laufzeitzustand der zeitlichen Steuerung für eine <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6010a-101">Maintains run-time timing state for a <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-102">Ein <xref:System.Windows.Media.Animation.Timeline>, alleine erfolgt jedoch nicht durch alle Elemente außer beschreiben einen Zeitabschnitt.</span><span class="sxs-lookup"><span data-stu-id="6010a-102">A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time.</span></span> <span data-ttu-id="6010a-103">Es handelt sich um der Zeitachse <xref:System.Windows.Media.Animation.Clock> -Objekt, das die eigentliche Arbeit übernimmt: Es verwaltet zeitbezogenen Laufzeitzustand der Zeitachse.</span><span class="sxs-lookup"><span data-stu-id="6010a-103">It's the timeline's <xref:System.Windows.Media.Animation.Clock> object that does the real work: it maintains timing-related run-time state for the timeline.</span></span>  
  
 <span data-ttu-id="6010a-104">In den meisten Fällen wird eine Uhr automatisch für den Zeitplan erstellt.</span><span class="sxs-lookup"><span data-stu-id="6010a-104">In most cases, a clock is created automatically for your timeline.</span></span> <span data-ttu-id="6010a-105">Wenn Sie Animationen mit einer <xref:System.Windows.Media.Animation.Storyboard> oder die <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> -Methode, Uhren automatisch für die Zeitachsen und Animationen erstellt und auf die Zieleigenschaften angewendet.</span><span class="sxs-lookup"><span data-stu-id="6010a-105">When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</span></span> <span data-ttu-id="6010a-106">Beispiele finden Sie unter [Vorgehensweise: Animieren einer Eigenschaft eines Drehbuchs mit](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) und [Vorgehensweise: Animieren einer Eigenschaft ohne Verwendung eines Storyboards](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span><span class="sxs-lookup"><span data-stu-id="6010a-106">For examples, see [How to: Animate a Property by Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) and [How to: Animate a Property Without Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="6010a-107">Sie können auch erstellen eine <xref:System.Windows.Media.Animation.Clock> explizit mithilfe der <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6010a-107">You can also create a <xref:System.Windows.Media.Animation.Clock> explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method.</span></span> <span data-ttu-id="6010a-108">Im ressourcenintensiven Szenarien, z. B. animieren zahlreiche ähnliche Objekte verwalten Ihren eigenen <xref:System.Windows.Media.Animation.Clock> verwenden kann Leistungsvorteile bieten.</span><span class="sxs-lookup"><span data-stu-id="6010a-108">In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <xref:System.Windows.Media.Animation.Clock> use can provide performance benefits.</span></span>  
  
 <span data-ttu-id="6010a-109">Uhren in Strukturen, die die Struktur der entsprechen angeordnet sind die <xref:System.Windows.Media.Animation.Timeline> Objektstruktur, aus der sie erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="6010a-109">Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created.</span></span> <span data-ttu-id="6010a-110">Die Stammuhr einer solchen Zeitstruktur kann interaktiv bearbeitet werden (angehalten, fortgesetzt, angehalten usw.) durch das Abrufen von dessen <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span><span class="sxs-lookup"><span data-stu-id="6010a-110">The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span></span> <span data-ttu-id="6010a-111">Nicht-Root Uhren können nicht direkt gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="6010a-111">Non-root clocks cannot be directly controlled.</span></span>  
  
 <span data-ttu-id="6010a-112">Nachdem Sie erstellt haben, kann keine Uhr geändert werden (jedoch bearbeitet werden können).</span><span class="sxs-lookup"><span data-stu-id="6010a-112">Once created, a clock cannot be modified (but it can be manipulated).</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="6010a-113">Verwenden eine Zeitachse als Zeitgeber</span><span class="sxs-lookup"><span data-stu-id="6010a-113">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="6010a-114">Uhr einer Zeitachse wird nur ausgeführt, wenn ein Ereignishandler zugeordnet oder (im Fall von einem <xref:System.Windows.Media.Animation.AnimationClock> Objekt) eine Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="6010a-114">A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="6010a-115">Aus diesem Grund (und andere), wird nicht empfohlen, Sie verwenden eine <xref:System.Windows.Media.Animation.Timeline> als Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="6010a-115">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="6010a-116">Abgeleitete Klassen implementieren sollten <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> Wenn wie Zeit dieser Uhr fließt geändert werden soll.</span>
        <span class="sxs-lookup">
          <span data-stu-id="6010a-116">Derived classes should implement <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> if they want to modify how time flows for this clock.</span>
        </span>
        <span data-ttu-id="6010a-117">Abgeleitete Klassen können erfolgen, damit die weiteren Schritte beim Uhr wiederholt, überspringt, Suchvorgängen, beginnt, angehalten, fortgesetzt wird, oder durch Überschreiben Beenden der <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, und <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> Methoden.</span>
        <span class="sxs-lookup">
          <span data-stu-id="6010a-117">Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, and <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> methods.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal Clock (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Clock(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <span data-ttu-id="6010a-118">Die <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />, anhand der diese Uhr erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-118">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this clock should be constructed.</span>
          </span>
          <span data-ttu-id="6010a-119">Uhren werden nicht für untergeordnete <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />-Objekte erstellt, wenn solche vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-119">Clocks are not created for any child <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> objects, if they exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6010a-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Animation.Clock" />-Klasse unter Verwendung der angegebenen <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> als Vorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-120">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Clock" /> class, using the specified <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> as a template.</span>
          </span>
          <span data-ttu-id="6010a-121">Das neue <see cref="T:System.Windows.Media.Animation.Clock" />-Objekt verfügt über keine untergeordneten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-121">The new <see cref="T:System.Windows.Media.Animation.Clock" /> object has no children.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-122">Tritt auf, wenn das Ausführen dieser Uhr vollständig beendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-122">Occurs when this clock has completely finished playing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-123">Wenn die Uhr die Stammuhr einer Uhr-Struktur ist, hat es abgeschlossen, spielen nach des Endes der aktive Dauer erreichen (einschließlich Wiederholungen) und aller diesem untergeordneten Elemente am Ende ihrer aktiven Dauer erreicht haben.</span><span class="sxs-lookup"><span data-stu-id="6010a-123">If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</span></span> <span data-ttu-id="6010a-124">Wenn die Uhr einer untergeordneten Uhr ist, gilt es vollständig abgeschlossen ist wiedergegeben, wenn die Stammuhr der Uhrenstruktur, die zu der sie erreicht gehört das Ende der aktiven Duration "und" alle untergeordneten Uhren Wiedergabe beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="6010a-124">If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</span></span>  
  
 <span data-ttu-id="6010a-125">Beim Beenden einer Uhr das abgeschlossene Ereignis nicht ausgelöst, jedoch ist es auf den Füllzeitraum Vorlauf.</span><span class="sxs-lookup"><span data-stu-id="6010a-125">Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockController Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.ClockController Controller" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Controller" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controller As ClockController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockController ^ Controller { System::Windows::Media::Animation::ClockController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-126">Ruft einen <see cref="T:System.Windows.Media.Animation.ClockController" /> ab, der zum Starten, Anhalten, Fortsetzen, Suchen, Überspringen, Beenden oder Entfernen dieser <see cref="T:System.Windows.Media.Animation.Clock" /> verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-126">Gets a <see cref="T:System.Windows.Media.Animation.ClockController" /> that can be used to start, pause, resume, seek, skip, stop, or remove this <see cref="T:System.Windows.Media.Animation.Clock" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-127">Ein <see cref="T:System.Windows.Media.Animation.ClockController" />, wenn dies eine Stammuhr ist, anderenfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-127">A <see cref="T:System.Windows.Media.Animation.ClockController" /> if this is a root clock; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-128">Nur Stammuhren können interaktiv gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="6010a-128">Only root clocks can be interactively controlled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Begin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentGlobalSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentGlobalSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentGlobalSpeed As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentGlobalSpeed { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-129">Ruft die Rate ab, mit der die Zeit einer Uhr gegenwärtig im Verhältnis zur tatsächlichen Zeit fortschreitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-129">Gets the rate at which the clock's time is currently progressing, compared to real-world time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-130">Die Rate, mit der die Zeit dieser Uhr gegenwärtig im Verhältnis zur tatsächlichen Zeit fortschreitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-130">The rate at which this clock's time is current progressing, compared to real-world time.</span>
          </span>
          <span data-ttu-id="6010a-131">Wenn die Uhr angehalten wird, gibt diese Eigenschaft <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-131">If the clock is stopped, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-132">Tritt auf, wenn die Taktfrequenz aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-132">Occurs when the clock's speed is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-133">Anhalten, fortsetzen, umkehren, beschleunigen, verlangsamen, Suchvorgänge, beenden oder Änderung einer Uhr der interaktiven beschleunigen mithilfe einer <xref:System.Windows.Media.Animation.ClockController> löst dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6010a-133">Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.</span></span>  
  
 <span data-ttu-id="6010a-134">Obwohl dieses Ereignis tritt auf, wenn die <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> Eigenschaft ist ungültig, die nicht unbedingt der geänderten Eigenschaft bedeutet.</span><span class="sxs-lookup"><span data-stu-id="6010a-134">Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalTime">
      <MemberSignature Language="C#" Value="protected TimeSpan CurrentGlobalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentGlobalTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentGlobalTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TimeSpan CurrentGlobalTime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-135">Ruft die aktuelle globale Zeit ab, wie vom [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]-Zeitsteuerungssystem eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-135">Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-136">Die aktuelle globale Zeit für das [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]-Zeitsteuerungssystem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-136">The current global time for the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CurrentIteration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CurrentIteration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentIteration As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CurrentIteration { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-137">Ruft die aktuelle Iteration dieser Uhr ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-137">Get the current iteration of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-138">Die aktuelle Iteration der Uhr in ihrem aktuellen Aktivitätszeitraum oder <see langword="null" />, wenn die Uhr beendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-138">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-139">Erste Iteration einer Uhr hat den Wert 1.</span><span class="sxs-lookup"><span data-stu-id="6010a-139">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="6010a-140">Wenn diese Uhr Zeitachse verfügt ein <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> Festlegen von `true`, eine vollständige Iteration besteht aus einem Vorwärts-Rückwärts-Paar, nicht nur eines dieser Segmente.</span><span class="sxs-lookup"><span data-stu-id="6010a-140">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="6010a-141">Unabhängig von der aktuellen Iteration Gibt beim Durchsuchen einer Uhr die aktuellen Iteration 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="6010a-141">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="6010a-142">Beim Neustarten einer Uhr gibt auch die aktuelle Iteration 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="6010a-142">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="CurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentProgress As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentProgress { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-143">Ruft den aktuellen Status dieser <see cref="T:System.Windows.Media.Animation.Clock" /> innerhalb der aktuellen Iteration ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-143">Gets the current progress of this <see cref="T:System.Windows.Media.Animation.Clock" /> within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-144">
            <see langword="null" />, wenn die Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> ist, oder 0,0, wenn die Uhr aktiv ist und die <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> ihrer <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> den Wert <see cref="P:System.Windows.Duration.Forever" /> aufweist. Andernfalls ein Wert zwischen 0,0 und 1,0, der den aktuellen Fortschritt der Uhr in ihrer aktuellen Iteration angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-144">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</span>
          </span>
          <span data-ttu-id="6010a-145">Der Wert 0,0 gibt keinen Fortschritt an, und der Wert 1,0 gibt an, dass die Uhr das Ende ihrer aktuellen Iteration erreicht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-145">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-146">Der Wert dieser Eigenschaft gibt die <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalisiert durch die <xref:System.Windows.Media.Animation.Timeline.Duration%2A> dieser Uhr <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="6010a-146">The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span></span>  
  
 <span data-ttu-id="6010a-147">Eine Uhr, ist <xref:System.Windows.Media.Animation.ClockState.Filling> verfügt über eine <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> 1,0.</span><span class="sxs-lookup"><span data-stu-id="6010a-147">A clock that is <xref:System.Windows.Media.Animation.ClockState.Filling> has a <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> of 1.0.</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="6010a-148">Verwenden eine Zeitachse als Zeitgeber</span><span class="sxs-lookup"><span data-stu-id="6010a-148">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="6010a-149">Uhr einer Zeitachse wird nur ausgeführt, wenn ein Ereignishandler zugeordnet ist oder (im Fall von einem <xref:System.Windows.Media.Animation.AnimationClock> Objekt) eine Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="6010a-149">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="6010a-150">Aus diesem Grund (und andere), wird nicht empfohlen, Sie verwenden eine <xref:System.Windows.Media.Animation.Timeline> als Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="6010a-150">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.ClockState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockState CurrentState { System::Windows::Media::Animation::ClockState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-151">Ruft einen Wert ab, der angibt, ob die Uhr aktuell <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> oder <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-151">Gets a value indicating whether the clock is currently <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-152">Der aktuelle Zustand der Uhr: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> oder <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-152">The current state of the clock: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-153">Beachten Sie der Uhr <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> Eigenschaft keine geben Aufschluss darüber, ob er angehalten wurde.</span><span class="sxs-lookup"><span data-stu-id="6010a-153">Note the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property doesn't tell you whether it's paused.</span></span> <span data-ttu-id="6010a-154">Um zu bestimmen, ob eine Uhr angehalten wurde, verwenden Sie die <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6010a-154">To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.</span></span>  
  
 <span data-ttu-id="6010a-155">Die <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> tritt auf, wenn der Wert dieser Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="6010a-155">The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-156">Tritt auf, wenn die <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />-Eigenschaft der Uhr aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-156">Occurs when the clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-157">Verwenden der <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignis, wenn Sie möchten, um benachrichtigt zu werden, wenn die Uhr beginnt, beendet oder ausgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="6010a-157">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills.</span></span> <span data-ttu-id="6010a-158">Die <xref:System.Object> Parameter von der <xref:System.EventHandler> -Ereignishandler ist der <xref:System.Windows.Media.Animation.Clock> , deren Zustand ungültig war.</span><span class="sxs-lookup"><span data-stu-id="6010a-158">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.</span></span>  
  
 <span data-ttu-id="6010a-159">Durch das Anhalten einer <xref:System.Windows.Media.Animation.Clock> ändert nicht ihre <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span><span class="sxs-lookup"><span data-stu-id="6010a-159">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="6010a-160">Um benachrichtigt zu werden, wenn eine Uhr angehalten wird, verwenden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6010a-160">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="6010a-161">Obwohl dieses Ereignis tritt auf, wenn die <xref:System.Windows.Media.Animation.ClockState> ungültig, die nicht unbedingt bedeutet der <xref:System.Windows.Media.Animation.ClockState> geändert: eine <xref:System.Windows.Media.Animation.Clock> , wechselt von <xref:System.Windows.Media.Animation.ClockState.Active> zu <xref:System.Windows.Media.Animation.ClockState.Filling> und dann zurück in <xref:System.Windows.Media.Animation.ClockState.Active> am selben Teilstrich führt dazu, dass Dieses Ereignis ausgelöst wird, aber seine <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> Eigenschaft wird nicht tatsächlich ändern.</span><span class="sxs-lookup"><span data-stu-id="6010a-161">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="T:System.Windows.Media.Animation.ClockState" />
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; CurrentTime { Nullable&lt;TimeSpan&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-162">Ruft die aktuelle Zeit dieser Uhr für die aktuelle Iteration ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-162">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-163">
            <see langword="null" />, wenn diese Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> ist, andernfalls die aktuelle Zeit dieser Uhr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-163">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of this clock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="6010a-164">Verwenden eine Zeitachse als Zeitgeber</span><span class="sxs-lookup"><span data-stu-id="6010a-164">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="6010a-165">Uhr einer Zeitachse wird nur ausgeführt, wenn ein Ereignishandler zugeordnet ist oder (im Fall von einem <xref:System.Windows.Media.Animation.AnimationClock> Objekt) eine Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="6010a-165">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="6010a-166">Aus diesem Grund (und andere), wird nicht empfohlen, Sie verwenden eine <xref:System.Windows.Media.Animation.Timeline> als Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="6010a-166">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-167">Tritt auf, wenn die <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> dieser Uhr ungültig wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-167">Occurs when this clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> becomes invalid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-168">Einer Uhr <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> wird ungültig, wenn die Uhr ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="6010a-168">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses.</span></span> <span data-ttu-id="6010a-169">Die folgenden interaktiven Vorgänge zudem das CurrentTimeInvalidated-Ereignis ausgelöst: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, und <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="6010a-169">The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscontinuousTimeMovement">
      <MemberSignature Language="C#" Value="protected virtual void DiscontinuousTimeMovement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscontinuousTimeMovement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscontinuousTimeMovement ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscontinuousTimeMovement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6010a-170">Wird stets beim Implementieren in einer abgeleiteten Klasse aufgerufen, wenn eine Uhr wiederholt, übersprungen oder gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-170">When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCanSlip">
      <MemberSignature Language="C#" Value="protected virtual bool GetCanSlip ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetCanSlip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCanSlip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCanSlip () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetCanSlip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6010a-171">Gibt zurück, ob die <see cref="T:System.Windows.Media.Animation.Clock" /> eine eigene externe Zeitquelle besitzt. In diesem Fall ist möglicherweise eine Synchronisierung mit dem Zeitsteuerungssystem erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-171">Returns whether the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external time source, which may require synchronization with the timing system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6010a-172">Gibt **TRUE** zurück, wenn das <see cref="T:System.Windows.Media.Animation.Clock" />-Objekt eine eigene externe Zeitquelle besitzt. In diesem Fall ist möglicherweise eine Synchronisierung mit dem Zeitsteuerungssystem erforderlich; andernfalls **FALSE**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-172">Returns **true** if the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external source for time, which may require synchronization with the timing system; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-173">Medien mit wiedergegeben wird <xref:System.Windows.Media.MediaTimeline> innerhalb einer <xref:System.Windows.Media.Animation.Storyboard> ist ein Beispiel zum Erstellen einer <xref:System.Windows.Media.Animation.Clock> müsste, die eine externen Zeitquelle (z. B. eines Videoclips) die Synchronisierung mit anderen Zeitplänen im erfordern möglicherweise die <xref:System.Windows.Media.Animation.Storyboard>.</span><span class="sxs-lookup"><span data-stu-id="6010a-173">Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="6010a-174">Weitere Informationen finden Sie unter <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span><span class="sxs-lookup"><span data-stu-id="6010a-174">See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTimeCore">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan GetCurrentTimeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.TimeSpan GetCurrentTimeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCurrentTimeCore () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TimeSpan GetCurrentTimeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6010a-175">Ruft die aktuelle Zeit dieser Uhr für die aktuelle Iteration ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-175">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6010a-176">Die aktuelle Zeit dieser Uhr, wenn diese aktiv ist oder ausfüllt wird, andernfalls <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-176">The current time of this clock if it is active or filling; otherwise, <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-177">Diese Methode wird verwendet, in der Implementierung der <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> Methode und sollte nicht direkt aus Ihrem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="6010a-177">This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6010a-178">Abgeleitete Klassen sollten diese Methode überschreiben, wenn sie ändern, wie sie die aktuelle Uhrzeit bestimmen möchten.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6010a-178">Derived classes should override this method if they want to modify how they determine the current time.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="HasControllableRoot">
      <MemberSignature Language="C#" Value="public bool HasControllableRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasControllableRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.HasControllableRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasControllableRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasControllableRoot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-179">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Windows.Media.Animation.Clock" /> Teil einer steuerbaren Uhrenstruktur ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-179">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" /> is part of a controllable clock tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-180">
            <see langword="true" /> , wenn diese Uhr zu einer Uhrenstruktur mit einer steuerbaren Stammuhr gehört oder diese Uhr selbst eine steuerbare Stammuhr ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-180">
              <see langword="true" /> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-181">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Windows.Media.Animation.Clock" /> oder eines ihrer übergeordneten Elemente angehalten wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-181">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" />, or any of its parents, is paused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-182">
            <see langword="true" />, wenn diese <see cref="T:System.Windows.Media.Animation.Clock" /> oder eines ihrer übergeordneten Elemente angehalten wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-182">
              <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Clock" /> or any of its parents is paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-183">Ruft die interne Dauer der <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> dieser Uhr ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-183">Gets the natural duration of this clock's <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-184">Die interne Dauer dieser Uhr, wie von deren <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-184">The natural duration of this clock, as determined by its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-185">Weitere Informationen zur internen Dauer finden Sie unter der <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="6010a-185">For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Parent { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-186">Ruft die Uhr ab, die das übergeordnete Element dieser Uhr bildet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-186">Gets the clock that is the parent of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-187">Das übergeordnete Element dieser Uhr oder <see langword="null" />, wenn diese Uhr eine Stammuhr ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-187">The parent of this clock or <see langword="null" /> if this clock is a root.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-188">Tritt auf, wenn für diese <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> oder eine ihrer übergeordneten Uhren die <see cref="T:System.Windows.Media.Animation.Clock" />-Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-188">Occurs when the <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> method is called on this <see cref="T:System.Windows.Media.Animation.Clock" /> or one of its parent clocks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedChanged">
      <MemberSignature Language="C#" Value="protected virtual void SpeedChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SpeedChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.SpeedChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SpeedChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SpeedChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6010a-189">Wird stets beim Implementieren in einer abgeleiteten Klasse aufgerufen, wenn eine Uhr gestartet, übersprungen, angehalten oder wieder aufgenommen oder wenn die <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> der Uhr bearbeitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-189">When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="protected virtual void Stopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Stopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.Stopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Stopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Stopped();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6010a-190">Wird stets beim Implementieren in einer abgeleiteten Klasse aufgerufen, wenn eine Uhr mit der <see cref="M:System.Windows.Media.Animation.ClockController.Stop" />-Methode beendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-190">When implemented in a derived class, will be invoked whenever a clock is stopped using the <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeline">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Timeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Timeline Timeline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Timeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeline As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Timeline ^ Timeline { System::Windows::Media::Animation::Timeline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6010a-191">Ruft die <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> ab, aus der diese <see cref="T:System.Windows.Media.Animation.Clock" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-191">Gets the <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6010a-192">Die <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />, aus der diese <see cref="T:System.Windows.Media.Animation.Clock" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6010a-192">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6010a-193">Ändern einer Uhr <xref:System.Windows.Media.MediaTimeline> aktualisiert sich nicht auf die Uhr; muss eine neue Uhr erstellt werden von der geänderten <xref:System.Windows.Media.Animation.Timeline>.</span><span class="sxs-lookup"><span data-stu-id="6010a-193">Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>