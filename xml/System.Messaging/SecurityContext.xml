<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8603ce5f07fd6e5af55344297829a0937d45e5a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="38f46-101">Stellt den Sicherheitskontext für eine Meldung in einer Warteschlange dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="38f46-101">Represents the security context for a message in a queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f46-102">Der Sicherheitskontext enthält zwischengespeicherte Sicherheitsinformationen, wie z. B. ein internes Zertifikat, den entsprechenden privaten Schlüssel, die SID des Benutzers, erforderlich, um ein Zertifikat und die Absender-ID an eine Nachricht angefügt werden, wenn Authentifizierung anfordert.</span><span class="sxs-lookup"><span data-stu-id="38f46-102">The security context contains cached security information such as an internal certificate, the corresponding private key, the user's SID, needed to attach a certificate and the sender identifier to a message when requesting authentication.</span></span>  
  
 <span data-ttu-id="38f46-103">Wenn ein Client, z. B. eine ASP.NET-Anwendung nimmt die Identität eines Benutzers zum Senden einer Nachricht an eine Warteschlange, wird die Identität des Benutzers verwendet, auf die Warteschlange zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="38f46-103">If a client, such as an ASP.NET application, impersonates a user to send a message to a queue, the identity of the user is used to access the queue.</span></span> <span data-ttu-id="38f46-104">Wenn die Warteschlange remote ist, werden diese Anmeldeinformationen zwischengespeichert und verwendet für Nachrichten, die anschließend an die Warteschlange gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="38f46-104">If the queue is remote, these credentials are cached and used for messages that are subsequently sent to the queue.</span></span> <span data-ttu-id="38f46-105">Deshalb wird die SID in nachfolgenden Nachrichten die zwischengespeicherte Identität des ersten Benutzers sein, die eine Nachricht an die Warteschlange gesendet.</span><span class="sxs-lookup"><span data-stu-id="38f46-105">Therefore, the SID in subsequent messages will be the cached identity of the first user that sent a message to the queue.</span></span> <span data-ttu-id="38f46-106">Die zwischengespeicherte Identität des ersten Benutzers, der eine Nachricht an die Warteschlange gesendet wird für nachfolgende Benutzer verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="38f46-106">The cached identity of the first user that sent a message to the queue will be used for subsequent users.</span></span>  
  
 <span data-ttu-id="38f46-107">Um dieses Problem zu umgehen, legen Sie den Sicherheitskontext mit <xref:System.Messaging.Message.SecurityContext%2A> vor dem Senden einer Nachricht auf eine Remotewarteschlange an, um sicherzustellen, dass die Anmeldeinformationen des aktuellen Benutzers für den Zugriff auf die Warteschlange verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="38f46-107">To overcome this problem, set the security context using <xref:System.Messaging.Message.SecurityContext%2A> before sending a message to a remote queue to ensure that the current user's credentials are used to gain access to the queue.</span></span> <span data-ttu-id="38f46-108">Allerdings wird die empfohlene Methode, um:</span><span class="sxs-lookup"><span data-stu-id="38f46-108">However, the suggested best practice is to:</span></span>  
  
1.  <span data-ttu-id="38f46-109">Stellen Sie der Warteschlange authentifizierte Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="38f46-109">Make the queue an authenticated queue.</span></span>  
  
2.  <span data-ttu-id="38f46-110">Führen Sie die ASP.NET-Anwendung als Domänenidentität, und autorisieren Sie diese Anwendung zum Schreiben in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="38f46-110">Run the ASP.NET application as a domain identity and authorize that application to write to the queue.</span></span>  
  
3.  <span data-ttu-id="38f46-111">Führen Sie nicht die Identität des Benutzers beim Verwenden der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="38f46-111">Do not impersonate the user when using the queue.</span></span> <span data-ttu-id="38f46-112">Rufen Sie stattdessen die Identität des Aufrufers, und führen Sie die autorisierungsüberprüfung in der ASP.NET-Anwendung oder schließen Sie die Identität des Aufrufers als Teil der Nachricht und autorisierungsüberprüfung in der empfängeranwendung ausführen.</span><span class="sxs-lookup"><span data-stu-id="38f46-112">Instead, get the caller’s identity and either perform authorization checking in the ASP.NET application or include the caller’s identity as part of the message and perform authorization checking in the receiver application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38f46-113">Gibt alle vom <see cref="T:System.Messaging.SecurityContext" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38f46-113">Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>