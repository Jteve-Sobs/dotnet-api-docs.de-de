<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="606b0f7492088e4785a8d9beb805a9a976740b95" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70572781" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt den Sicherheitskontext für eine Meldung in einer Warteschlange dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Sicherheitskontext enthält zwischengespeicherte Sicherheitsinformationen, wie z. b. ein internes Zertifikat, den entsprechenden privaten Schlüssel, die SID des Benutzers, der zum Anfügen eines Zertifikats und des Absender Bezeichners an eine Nachricht bei der Anforderung der Authentifizierung erforderlich ist.  
  
 Wenn ein Client, z. b. eine ASP.NET-Anwendung, die Identität eines Benutzers annimmt, um eine Nachricht an eine Warteschlange zu senden, wird die Identität des Benutzers für den Zugriff auf die Warteschlange verwendet. Wenn die Warteschlange Remote ist, werden diese Anmelde Informationen zwischengespeichert und für Nachrichten verwendet, die anschließend an die Warteschlange gesendet werden. Daher ist die SID in nachfolgenden Nachrichten die zwischengespeicherte Identität des ersten Benutzers, der eine Nachricht an die Warteschlange gesendet hat. Die zwischengespeicherte Identität des ersten Benutzers, der eine Nachricht an die Warteschlange gesendet hat, wird für nachfolgende Benutzer verwendet.  
  
 Um dieses Problem zu beheben, legen Sie den Sicherheits <xref:System.Messaging.Message.SecurityContext%2A> Kontext mithilfe von vor dem Senden einer Nachricht an eine Remote Warteschlange fest, um sicherzustellen, dass die Anmelde Informationen des aktuellen Benutzers verwendet werden, um auf die Warteschlange zuzugreifen Es wird jedoch empfohlen, Folgendes zu tun:  
  
1.  Stellen Sie die Warteschlange in eine authentifizierte Warteschlange.  
  
2.  Führen Sie die Anwendung ASP.net als Domänen Identität aus, und autorisieren Sie diese Anwendung, in die Warteschlange zu schreiben.  
  
3.  Nehmen Sie die Identität des Benutzers nicht an, wenn Sie die Warteschlange verwenden. Verwenden Sie stattdessen die Identität des Aufrufers, und führen Sie entweder eine Autorisierungs Überprüfung in der ASP.NET-Anwendung aus, oder fügen Sie die Identität des Aufrufers als Teil der Nachricht ein, und führen Sie die Autorisierungs Überprüfung  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Messaging.SecurityContext" /> verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SecurityContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="securityContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
