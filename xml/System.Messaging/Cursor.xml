<Type Name="Cursor" FullName="System.Messaging.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca8faf8b875b983522d635021eb53e7e0a003ea3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70670132" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Beim Lesen der Meldungen einer Warteschlange wird mit einem <see cref="T:System.Messaging.Cursor" /> eine bestimmte Position in dieser <see cref="T:System.Messaging.MessageQueue" /> beizubehalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um einen Cursor für eine <xref:System.Messaging.MessageQueue>abzurufen, müssen Sie die <xref:System.Messaging.MessageQueue.CreateCursor%2A> -Methode für diese Warteschlange abrufen.  
  
 Eine <xref:System.Messaging.Cursor> wird mit <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> Methoden wie und <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> verwendet, wenn Sie Nachrichten lesen müssen, die sich nicht am Anfang der Warteschlange befinden. Dies schließt das synchrone oder asynchrone Lesen von Nachrichten ein. Cursor müssen nicht verwendet werden, um nur die erste Nachricht in einer Warteschlange zu lesen.  
  
 Beim Lesen von Nachrichten innerhalb einer Transaktion führt Message Queuing kein Rollback der Cursor Bewegung aus, wenn die Transaktion abgebrochen wird. Nehmen wir beispielsweise an, es gibt eine Warteschlange mit zwei Nachrichten, a1 und a2. Wenn Sie die Nachricht a1 während einer Transaktion entfernen, verschiebt Message Queuing den Cursor in die Meldung a2. Wenn die Transaktion jedoch aus irgendeinem Grund abgebrochen wird, wird die Nachricht a1 zurück in die Warteschlange eingefügt, aber der Cursor verweist weiterhin auf die Meldung a2.  
  
 Um den Cursor zu schließen, <xref:System.Messaging.Cursor.Close%2A>wird aufgerufen.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="cursor.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den Cursor und ermöglicht es Message Queuing, die zugeordneten Ressourcen freizugeben.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Messaging.Cursor" /> verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Cursor ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cursor.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
