<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f04357c6e48afbb6e4a1a2529f7135892ad4e2a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70670152" /></Metadata><TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type ActiveXMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Serialisiert bzw. deserialisiert primitive Datentypen und andere Objekte aus oder in den Text einer Message Queuing-Meldung. Dabei wird ein Format verwendet, das mit der ActiveX-Komponente von MSMQ kompatibel ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.ActiveXMessageFormatter> ist kompatibel mit Nachrichten, die mit Message Queuing com-Komponenten gesendet werden, und ermöglicht Interoperabilität mit Anwendungen, die das MSMQ COM-Steuerelement verwenden.  
  
 Der <xref:System.Messaging.ActiveXMessageFormatter> kann die meisten primitiven und Objekte, die die `IPersistStream` OLE-Schnittstelle implementieren, serialisieren. Sie kann denselben Satz von primitiven deserialisieren, erfordert jedoch beim Deserialisieren eines COM-Objekts (z. b. ein mit Visual Basic 6,0 erstelltes Objekt), das implementiert `IPersistStream`, einen weiteren Aufwand. Das zu deserialisierende Objekt muss sich im Arbeitsspeicher befinden, indem das Objekt zuerst in eine .NET Framework Anwendung importiert wird.  
  
 Wenn eine Anwendung eine Nachricht mithilfe einer Instanz der <xref:System.Messaging.MessageQueue> -Klasse an die Warteschlange sendet, serialisiert der Formatierer das Objekt in einen Stream und fügt es in den Nachrichtentext ein. Beim Lesen aus einer Warteschlange mit <xref:System.Messaging.MessageQueue>einem deserialisiert der Formatierer die Nachrichten Daten in die <xref:System.Messaging.Message.Body%2A> -Eigenschaft eines <xref:System.Messaging.Message>.  
  
 Die ActiveX-Serialisierung ist sehr kompakt, wodurch die <xref:System.Messaging.ActiveXMessageFormatter> Verwendung des-Steuer Elements und des MSMQ com-Steuer Elements eine sehr schnelle Serialisierungsmethode ist.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Messaging.ActiveXMessageFormatter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="activeXMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">Die zu untersuchende <see cref="T:System.Messaging.Message" />.</param>
        <summary>Bestimmt, ob das Formatierungsprogramm den Inhalt der Meldung deserialisieren kann.</summary>
        <returns><see langword="true" />, wenn der <see cref="T:System.Messaging.ActiveXMessageFormatter" /> die Meldung deserialisieren kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A>gibt `false` zurück, wenn der Nachrichtentext kein primitiver ist, den das Message Queuing ActiveX-Steuerelement deserialisieren kann, oder `IPersistStream` , wenn es die-Schnittstelle nicht implementiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="message" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="activeXMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz der <see cref="T:System.Messaging.ActiveXMessageFormatter" />-Klasse, die mit dem aktuellen <see cref="T:System.Messaging.ActiveXMessageFormatter" /> übereinstimmt.</summary>
        <returns>Ein Objekt, dessen Eigenschaften mit denen dieses <see cref="T:System.Messaging.ActiveXMessageFormatter" /> übereinstimmen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.Messaging.MessageQueue> -Klasse verwendet, um mehrere Nachrichten gleichzeitig zu empfangen (z. b. wenn die Anwendung asynchron empfängt). Sie müssen diese Methode in der Regel nicht im Anwendungscode aufzurufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberSignature Language="F#" Value="static member InitStreamedObject : obj -&gt; unit" Usage="System.Messaging.ActiveXMessageFormatter.InitStreamedObject streamedObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">Ein OLE-Objekt, das <see langword="IPersistStreamInit" /> implementiert.</param>
        <summary>Stellt ein Dienstprogramm für die Serialisierung von COM-Objekten bereit, die <see langword="IPersistStream" /> implementieren und einen Aufruf von <see langword="IPersistStreamInit" /> erfordern.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="activeXMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">Die zu deserialisierende <see cref="T:System.Messaging.Message" /> im Format des ActiveX-Steuerelements von MSMQ.</param>
        <summary>Liest den Inhalt aus der angegebenen Meldung und erstellt ein Objekt, das die deserialisierte Meldung enthält.</summary>
        <returns>Die deserialisierte Meldung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Text der Nachricht einen primitiven Typ darstellt, muss die- <xref:System.Messaging.Message.BodyType%2A> Eigenschaft der Nachricht einer der in der folgenden Tabelle verwalteten Typen sein.  
  
|BodyType-Wert|Verwalteter Typ|  
|--------------------|------------------|  
|VT_LPSTR|<xref:System.Char>Array (deserialisiert mit ASCII-Codierung)|  
|VT_BSTR, VT_LPWSTR|<xref:System.String>(deserialisiert mit Unicode-Codierung)|  
|VT_VECTOR &#124; VT_UI1|<xref:System.Byte>-Array|  
|VT_BOOL|<xref:System.Boolean>|  
|VT_CLSID|<xref:System.Guid>|  
|VT_CY|<xref:System.Decimal>|  
|VT_DATE|<xref:System.DateTime>|  
|VT_I1, VT_UI1|<xref:System.Byte>|  
|VT_I2|<xref:System.Int16>|  
|VT_UI2|<xref:System.UInt16>|  
|VT_I4|<xref:System.Int32>|  
|VT_UI4|<xref:System.UInt32>|  
|VT_I8|<xref:System.Int64>|  
|VT_UI8|<xref:System.UInt64>|  
|VT_R4|<xref:System.Single>|  
|VT_R8|<xref:System.Double>|  
|VT_NULL|`null`|  
|VT_STREAMED_OBJECT|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Messaging.Message.BodyType" />-Eigenschaft der als Parameter übergebenen <paramref name="message" /> kann keinem primitiven Typ zugeordnet werden und stellt kein Objekt in einem Stream dar.</exception>
        <exception cref="T:System.NotSupportedException">Der Text stellt ein gespeichertes Objekt dar. Der <see cref="T:System.Messaging.ActiveXMessageFormatter" /> unterstützt keine Deserialisierung gespeicherter Objekte.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="message" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="activeXMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Die <see cref="T:System.Messaging.Message" />, deren <see cref="P:System.Messaging.Message.Body" />-Eigenschaft das serialisierte Objekt aufnimmt.</param>
        <param name="obj">Das in den Meldungstext zu serialisierende Objekt.</param>
        <summary>Serialisiert ein Objekt in den Textkörper der Meldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle wird die Beziehung zwischen verwalteten Typen und <xref:System.Messaging.Message.BodyType%2A> der-Eigenschaft angezeigt. Das Objekt, das Sie serialisieren, muss einer dieser verwalteten Typen sein oder muss die OLE `IPersistStream` -Schnittstelle implementieren.  
  
|BodyType-Wert|Verwalteter Typ|  
|--------------------|------------------|  
|VT_LPSTR|<xref:System.Char>|  
|VT_BSTR, VT_LPWSTR|<xref:System.String>|  
|VT_VECTOR &#124; VT_UI1|<xref:System.Byte>|  
|VT_BOOL|<xref:System.Boolean>|  
|VT_CLSID|<xref:System.Guid>|  
|VT_CY|<xref:System.Decimal>|  
|VT_DATE|<xref:System.DateTime>|  
|VT_I1, VT_UI1|<xref:System.Byte>|  
|VT_I2|<xref:System.Int16>|  
|VT_UI2|<xref:System.UInt16>|  
|VT_I4|<xref:System.Int32>|  
|VT_UI4|<xref:System.UInt32>|  
|VT_I8|<xref:System.Int64>|  
|VT_UI8|<xref:System.UInt64>|  
|VT_R4|<xref:System.Single>|  
|VT_R8|<xref:System.Double>|  
|VT_NULL|`null`|  
|VT_STREAMED_OBJECT|`IPersistStream`Schieren<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das zu serialisierende Objekt ist weder ein primitiver Typ noch ein in einem Stream befindliches Objekt, das die <see langword="IPersistStream" />-OLE-Schnittstelle implementiert.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="message" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
