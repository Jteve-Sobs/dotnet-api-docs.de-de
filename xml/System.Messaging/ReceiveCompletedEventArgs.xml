<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479102" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />-Ereignis bereit. Beim Aufruf eines Ereignishandlers durch eine asynchrone Receive-Methode wird eine Instanz dieser Klasse an den Handler übergeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die ereignisbenachrichtigung verwenden, um Nachrichten asynchron aus der Warteschlange zu empfangen, müssen Sie eine Methode erstellen, die die Nachrichtenverarbeitung verarbeitet. Muss im Code aufgerufen <xref:System.Messaging.MessageQueue.BeginReceive%2A> um die asynchrone Verarbeitung zu beginnen. Wenn eine Nachricht empfangen wird, wird die Anwendung benachrichtigt, über die <xref:System.Messaging.MessageQueue.ReceiveCompleted> Ereignis. Eine Instanz von <xref:System.Messaging.ReceiveCompletedEventArgs> übergeben wird, an den Ereignisdelegaten, der den Ereignishandler aufruft. Die zugeordneten Daten die <xref:System.Messaging.MessageQueue.ReceiveCompleted> Ereignis ist Bestandteil des Delegaten <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> Parameter.  
  
 Es gibt zwei Möglichkeiten, Benachrichtigung über den Abschluss des Ereignisses bereitzustellen: ereignisbenachrichtigung und den angegebenen Rückrufen. <xref:System.Messaging.ReceiveCompletedEventArgs> wird nur mit einer ereignisbenachrichtigung verwendet werden. Informationen zum Vergleich von Rückrufen und ereignisbenachrichtigungen finden Sie unter "Ereignisse im Vergleich zu Rückrufe"auf MSDN.  
  
 <xref:System.Messaging.ReceiveCompletedEventArgs> ermöglicht den Zugriff auf die Meldung, die den Abschluss des asynchronen initiiert hat receive, über die <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> Member. Dies ist eine alternative Zugriff auf die Nachricht und verhält sich ähnlich wie ein Aufruf von <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen Ereignishandler für die <xref:System.Messaging.MessageQueue.ReceiveCompleted> Ereignis- und ordnet es mit dem Ereignis delegieren, indem Sie mit der <xref:System.Messaging.ReceiveCompletedEventHandler>. Der Ereignishandler `MyReceiveCompleted`, empfängt eine Nachricht aus einer Warteschlange und gibt deren Text auf dem Bildschirm.  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ergebnis der angeforderten asynchronen Operation ab oder legt dieses fest.</summary>
        <value>
          <see cref="T:System.IAsyncResult" /> enthält die der Receive-Methode zugeordneten Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifiziert die laufende oder abgeschlossene asynchrone Vorgänge. Die Eigenschaft enthält Daten, die ermitteln, welche von mehreren möglichen asynchronen Operationen abgeschlossen werden, und wenn an den Ereignishandler übergeben wird, ermöglicht <xref:System.Messaging.MessageQueue.EndReceive%2A> auf die Nachricht, die den abgeschlossenen Vorgang zugeordnet.  
  
 Beim Aufruf <xref:System.Messaging.MessageQueue.BeginReceive%2A>, <xref:System.IAsyncResult> wird sofort zurückgegeben, obwohl ggf. vorhandenen eigenschaftennamenparameter, eine Nachricht noch nicht abgerufen wurde, da der Vorgang nicht abgeschlossen ist. Die <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> gibt den Status des asynchronen Vorgangs. <xref:System.Messaging.MessageQueue.BeginReceive%2A> erstellt das Objekt, das während der Operation bis geändert wird <xref:System.Messaging.MessageQueue.EndReceive%2A> schließt sie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die der asynchronen Receive-Methode zugeordnete Nachricht ab.</summary>
        <value>
          <see cref="T:System.Messaging.Message" /> stellt das Endergebnis der asynchronen Receive-Methode dar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> -Eigenschaft ermöglicht das Abrufen der Meldung, die das Ende des asynchronen initiiert receive-Methode.  
  
 <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> das erste Mal aufgerufen, die <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> -Eigenschaft schreibgeschützt ist, daher es nicht notwendig ist, <xref:System.Messaging.MessageQueue.EndReceive%2A> vor dem Abrufen des Werts dieser Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Die <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> konnte nicht abgerufen werden. Möglicherweise wurde der Timeout für den asynchronen Vorgang überschritten.</exception>
      </Docs>
    </Member>
  </Members>
</Type>