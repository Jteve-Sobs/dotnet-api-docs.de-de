<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9738e92d7b8a310ccbfc821359163880970679" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />-Ereignis bereit. Beim Aufruf eines Ereignishandlers durch die asynchrone Leseanweisung wird eine Instanz dieser Klasse an den Handler übergeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ereignisbenachrichtigung auf (ohne Entfernen gelesen) einsehen von Nachrichten asynchron aus der Warteschlange verwenden, müssen Sie eine Methode erstellen, die die Verarbeitung von Nachrichten behandelt. Muss Ihr Code aufgerufen <xref:System.Messaging.MessageQueue.BeginPeek%2A> um die asynchrone Verarbeitung zu beginnen. Nach dem Lesen einer Nachricht wird die Anwendung benachrichtigt, über die <xref:System.Messaging.MessageQueue.PeekCompleted> Ereignis. Eine Instanz von <xref:System.Messaging.PeekCompletedEventArgs> übergeben wird, in der Ereignisdelegat, der den Ereignishandler aufruft. Die zugeordneten Daten der <xref:System.Messaging.MessageQueue.PeekCompleted> Ereignis ist Bestandteil des Delegaten <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> Parameter.  
  
 Es gibt zwei Möglichkeiten, um eine Benachrichtigung der Beendigung des Ereignisses bereitzustellen: Rückrufe und ereignisbenachrichtigung. <xref:System.Messaging.PeekCompletedEventArgs> wird nur mit einer ereignisbenachrichtigung verwendet werden. Informationen zum Vergleich von Rückrufen und ereignisbenachrichtigungen finden Sie unter "im Vergleich zu Ereignissen. Callbacks" on MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs> ermöglicht den Zugriff auf die Nachricht, die über das Ende der asynchronen Lesevorgang gestartet der <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Member. Dies ist eine alternative Zugriff auf die Nachricht und verhält sich ähnlich wie ein Aufruf von <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen Ereignishandler für das <xref:System.Messaging.MessageQueue.PeekCompleted> Ereignis und ordnet es mit dem Ereignis delegieren, indem Sie mit der <xref:System.Messaging.PeekCompletedEventHandler>. Der Ereignishandler `MyPeekCompleted`, sieht eine Nachricht und schreibt die Bezeichnung auf dem Bildschirm.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ergebnis der angeforderten asynchronen Operation ab oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.IAsyncResult" /> enthält die der Receive-Methode zugeordneten Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifiziert einer laufenden oder abgeschlossenen asynchronen Vorgänge. Die Eigenschaft enthält Daten, die der Identifikation ermitteln, welche mehrere potenzielle asynchrone Vorgänge abgeschlossen sind, und wenn an den Ereignishandler übergeben wird, ermöglicht <xref:System.Messaging.MessageQueue.EndPeek%2A> auf die Meldung, die dem abgeschlossenen Vorgang zugeordnete zugreifen.  
  
 Beim Aufruf <xref:System.Messaging.MessageQueue.BeginPeek%2A>ein <xref:System.IAsyncResult> wird sofort zurückgegeben, obwohl falls vorhanden, eine Nachricht noch nicht abgerufen wurde, da der Vorgang nicht abgeschlossen ist. Die <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> gibt den Status des asynchronen Vorgangs. <xref:System.Messaging.MessageQueue.BeginPeek%2A> erstellt das Objekt, das geändert wird, während der Operation bis <xref:System.Messaging.MessageQueue.EndPeek%2A> wird der Vorgang abgeschlossen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die der asynchronen Leseanweisung zugeordnete Nachricht ab.</summary>
        <value>Die <see cref="T:System.Messaging.Message" /> stellt das Endergebnis des asynchronen Einsehvorgangs dar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Eigenschaft bietet eine Möglichkeit zum Abrufen der Nachricht, die den Abschluss des asynchronen Lesevorgangs initiiert hat.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> die erste Mal aufgerufen, die <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> -Eigenschaft schreibgeschützt ist, daher ist es nicht notwendig, <xref:System.Messaging.MessageQueue.EndPeek%2A> vor dem Abrufen des Werts dieser Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Die <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> konnte nicht abgerufen werden. Möglicherweise wurde der Timeout für den asynchronen Vorgang überschritten.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>