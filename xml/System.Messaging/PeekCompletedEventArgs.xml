<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06d7d0e11493b9c6ffec8fc3198ba8fa4a7120ba" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70696042" /></Metadata><TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />-Ereignis bereit. Beim Aufruf eines Ereignishandlers durch die asynchrone Leseanweisung wird eine Instanz dieser Klasse an den Handler übergeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Ereignis Benachrichtigung verwenden, um Nachrichten asynchron aus der Warteschlange zu lesen (ohne Sie zu entfernen), müssen Sie eine Methode erstellen, die die Nachrichtenverarbeitung verarbeitet. Der Code muss aufzurufen <xref:System.Messaging.MessageQueue.BeginPeek%2A> , um die asynchrone Verarbeitung zu starten. Wenn eine Nachricht mit einem beliebigen Wert angezeigt wird, wird die Anwendung über <xref:System.Messaging.MessageQueue.PeekCompleted> das Ereignis benachrichtigt. Eine Instanz von <xref:System.Messaging.PeekCompletedEventArgs> wird an den Ereignis Delegaten, der den Ereignishandler aufruft, übermittelt. Die dem <xref:System.Messaging.MessageQueue.PeekCompleted> Ereignis zugeordneten Daten sind im- <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> Parameter des Delegaten enthalten.  
  
 Es gibt zwei Möglichkeiten, eine Benachrichtigung über den Abschluss des Ereignisses bereitzustellen: Ereignis Benachrichtigung und Rückrufe. <xref:System.Messaging.PeekCompletedEventArgs>wird nur bei der Ereignis Benachrichtigung verwendet. Informationen zum Vergleichen von Rückrufen und der Ereignis Benachrichtigung finden Sie unter "Events vs. Rückrufe" auf MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs>ermöglicht den Zugriff auf die Nachricht, die das Ende des asynchronen Peek-Vorgangs durch den <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> -Member initiiert hat. Dies ist ein alternativer Zugriff auf die Nachricht und verhält sich ähnlich wie ein Aufrufen von <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird <xref:System.Messaging.MessageQueue.PeekCompleted> <xref:System.Messaging.PeekCompletedEventHandler>ein Ereignishandler für das-Ereignis erstellt und mit dem Ereignis Delegaten verknüpft. Der Ereignishandler `MyPeekCompleted`,, sieht eine Meldung aus und schreibt seine Bezeichnung auf den Bildschirm.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ergebnis der angeforderten asynchronen Operation ab oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.IAsyncResult" /> enthält die der Receive-Methode zugeordneten Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A>identifiziert laufende oder abgeschlossene asynchrone Vorgänge. Die-Eigenschaft enthält Daten, mit deren Hilfe ermittelt werden kann, welche der möglichen asynchronen Vorgänge abgeschlossen werden müssen. Wenn Sie an <xref:System.Messaging.MessageQueue.EndPeek%2A> den-Ereignishandler übermittelt wird, ermöglicht den Zugriff auf die Meldung, die dem abgeschlossenen Vorgang zugeordnet ist.  
  
 Wenn Sie aufzurufen <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.IAsyncResult> wird eine sofort zurückgegeben, obwohl eine Meldung, sofern vorhanden, noch nicht abgerufen wurde, weil der Vorgang nicht abgeschlossen wurde. Der <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> gibt den Zustand des asynchronen Vorgangs an. <xref:System.Messaging.MessageQueue.BeginPeek%2A>erstellt das-Objekt, das während des Vorgangs geändert wird <xref:System.Messaging.MessageQueue.EndPeek%2A> , bis es abgeschlossen ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die der asynchronen Leseanweisung zugeordnete Nachricht ab.</summary>
        <value>Die <see cref="T:System.Messaging.Message" /> stellt das Endergebnis des asynchronen Einsehvorgangs dar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> -Eigenschaft ermöglicht das Abrufen der Nachricht, die das Ende des asynchronen Peek-Vorgangs initiiert hat.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>wird aufgerufen, wenn die <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> -Eigenschaft zum ersten mal gelesen wird. Daher ist es nicht notwendig, vor dem Abrufen des Werts dieser Eigenschaft aufzurufen. <xref:System.Messaging.MessageQueue.EndPeek%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Die <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> konnte nicht abgerufen werden. Möglicherweise wurde der Timeout für den asynchronen Vorgang überschritten.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>
