<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2169da977692b3e7ae0fe99175aa7991d83a31df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460834" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht das Installieren und Konfigurieren einer Warteschlange, die für das Ausführen einer Anwendung benötigt wird. Diese Klasse wird vom Installationsprogramm, z. B. InstallUtil.exe, beim Installieren einer <see cref="T:System.Messaging.MessageQueue" /> aufgerufen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.MessageQueueInstaller> werden vom Installationsprogramm um Registrierungswerte zu schreiben, die der Warteschlange zugeordnet sind. Weitere Informationen über Installationsprogramme finden Sie unter [Installutil.exe (Installer-Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  
  
 Um eine Warteschlange zu installieren, erstellen Sie eine Projekt Installerklasse, die von erben die <xref:System.Configuration.Install.Installer>, und legen Sie die <xref:System.ComponentModel.RunInstallerAttribute> für die Klasse, um `true`. Erstellen Sie in Ihrem Projekt eine <xref:System.Messaging.MessageQueueInstaller> Instanz für jede Warteschlange in der Installation, und fügen Sie die Instanz der Installer-Klasse.  
  
 Beim Erstellen einer <xref:System.Messaging.MessageQueueInstaller> Instanz, Sie können optional übergeben, eine vorhandene <xref:System.Messaging.MessageQueue> (z. B. von einem Testserver) auf die <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> Konstruktor. Dieser Ansatz bietet automatisch die Konfigurationseinstellungen für die neue Warteschlange, indem Sie spiegeln die Einstellungen der Warteschlange übergeben. Alternativ können Sie die Eigenschaften manuell festlegen, der <xref:System.Messaging.MessageQueueInstaller> Instanz um die Zustände, Sie möchten, und den Standardkonstruktor aufrufen.  
  
 Wenn das Installationsprogramm aufgerufen wird, sucht es nach der <xref:System.ComponentModel.RunInstallerAttribute>. Wird jedoch `true`, das Hilfsprogramm installiert alle Warteschlangen in der <xref:System.Configuration.Install.Installer.Installers%2A> Auflistung zugeordnet ist, in den Projekt-Installer. Wenn <xref:System.ComponentModel.RunInstallerAttribute> ist `false`, ignoriert das Dienstprogramm den Projekt-Installer.  
  
 Ändern Sie andere Eigenschaften des eine <xref:System.Messaging.MessageQueueInstaller> Instanz vor oder nach dem Hinzufügen der Instanz, die <xref:System.Configuration.Install.Installer.Installers%2A> Auflistung von Ihrem Projekt Installer. Z. B. einer Warteschlange <xref:System.Messaging.MessageQueue.Path%2A> muss festgelegt werden, bevor das Installationsprogramm ausgeführt wird.  
  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm installutil.exe. Ruft das Hilfsprogramm automatisch die <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode während des Installationsvorgangs und Aufrufe <xref:System.Messaging.MessageQueueInstaller.Commit%2A> , wenn die Installation nicht auf eine Ausnahme ausgelöst hat. Fehler werden behoben, bei Bedarf durch den Aufruf <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> für das Objekt, das die Ausnahme generiert hat.  
  
 Installationsroutine einer Anwendung verwendet die Projekt-Installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatisch Informationen zu den Komponenten zu verwalten, die bereits installiert wurden. Diese Statusinformationen wird ständig aktualisiert, als jede <xref:System.Messaging.MessageQueueInstaller> Instanz mit dem Hilfsprogramm installiert ist. Es ist nicht in der Regel für Ihren Code so ändern Sie die Statusinformationen explizit erforderlich.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Messaging.MessageQueueInstaller" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Messaging.MessageQueueInstaller" />-Klasse. Legt keine Instanzeigenschaften fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">Die <see cref="T:System.Messaging.MessageQueue" />-Komponente, deren Einstellungen die Eigenschafteneinstellungen der neu installierten Warteschlange bestimmen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Messaging.MessageQueueInstaller" />-Klasse. Dabei werden die Installationseinstellungen mit denen einer vorhandenen <see cref="T:System.Messaging.MessageQueue" />-Instanz initialisiert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die zu installierende Warteschlange nur authentifizierte Meldungen akzeptiert, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Warteschlange nur authentifizierte Meldungen akzeptiert, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine nicht authentifizierte Nachricht an eine Warteschlange gesendet wird, die nur authentifizierte Nachrichten akzeptiert werden, wird die Nachricht abgelehnt. Die sendende Anwendung kann Benachrichtigungen zu einer Ablehnung der Nachricht anfordern, indem die <xref:System.Messaging.Message.AcknowledgeType%2A> für die Nachricht. Andernfalls entsteht keinen Hinweis darauf, dass die Nachricht abgelehnt wurde, damit die Nachricht verloren gehen kann, wenn es an die Dead Letter-Warteschlange zu senden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Basispriorität an, die beim Weiterleiten von Meldungen einer öffentlichen Warteschlange über das Netzwerk verwendet wird, oder legt diese fest.</summary>
        <value>Die einzige Basispriorität für alle an die öffentliche Warteschlange gesendeten Meldungen. Der Standardwert ist null (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> für das routing von Nachrichten in die Warteschlange über das Netzwerk verwendet wird. Verwenden der <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> so erteilen Sie die Nachrichten an die Warteschlange, die eine höhere oder niedrigere Priorität als die für Nachrichten an andere Warteschlangen gesendet. Wenn eine Warteschlange Basispriorität festgelegt ist, werden alle an ihn gesendeten Nachrichten eine höhere Priorität als die, die Nachrichten an Warteschlangen mit einer niedrigeren Priorität für die Basis angegeben. Die Warteschlange Basispriorität wirkt sich nicht Reihenfolge der Nachrichten in der Warteschlange oder wie Nachrichten aus der Warteschlange gelesen werden.  
  
 Die <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> betrifft nur öffentliche Warteschlangen, die über den Domänencontroller zugegriffen werden (also das Format des öffentlichen Namen verwenden). Die Basispriorität von privaten Warteschlangen und der direkte Zugriff auf Öffentliche Warteschlangen ist immer 0 (null).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen implementierungsspezifischen Warteschlangentyp ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Guid" />, die die Kategorie der Warteschlange (Message Queuing-Typenbezeichner) darstellt und mit der eine Anwendung ihre Warteschlangen nach Verwendungsart kategorisieren kann. Der Standardwert ist <see langword="Guid.empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kategorie der Warteschlange ermöglicht einer Anwendung zugeordneten Warteschlangen entsprechend der zugriffsweise zu kategorisieren, die sie verwendet werden. Die <xref:System.Messaging.MessageQueue.Category%2A> kann ein null-Verweis sein. Sie können auch eine neue Kategorie definieren.  
  
 Die <xref:System.Messaging.MessageQueue.Category%2A> Eigenschaft ermöglicht den Zugriff auf die Message Queuing-Bezeichner Typeigenschaft, die einer bestimmten Warteschlange zugeordnet ist, und Lese-/Schreibzugriff ist. Sie können die <xref:System.Guid.NewGuid%2A> Methode, um einen Kategoriewert zu erstellen, die garantiert in allen eindeutig sein <xref:System.Guid> Werte. Es ist jedoch nur für die Kategorie-Wert aus anderen Kategorien, die nicht von allen anderen unterscheiden erforderlich <xref:System.Guid> Werte. Sie können z. B. Festlegen der <xref:System.Messaging.MessageQueue.Category%2A> für eine Gruppe von Warteschlangen und {00000000-0000-0000-0000-000000000001} und die <xref:System.Messaging.MessageQueue.Category%2A> für eine andere Gruppe {00000000-0000-0000-0000-000000000002}.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Collections.IDictionary" />, das den Zustand des Computers nach der Installation enthält.</param>
        <summary>Schließt den Installationsprozess durch Übernehmen der <see cref="T:System.Messaging.MessageQueue" />-Installationsinformationen ab, die von der <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />-Methode in die Registrierung geschrieben wurden. Diese Methode ist für Installationstools vorgesehen, die die entsprechenden Methoden automatisch aufrufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm installutil.exe. Ruft das Hilfsprogramm automatisch die <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode während der Installation. Installation ist transaktional, daher ist es ein Fehler in der jeder Komponente während der Installation, die zuvor installierten Komponenten in ihren Zustand vor der Installation Rollback ausgeführt werden. Dies erfolgt durch Aufrufen der einzelnen Komponenten <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Methode.  
  
 Nach eine erfolgreiche Installation aller Komponenten, die mit dem Installations-Projekt verknüpft sind aufgetreten ist, das Installationsprogramm die Installationen ein Commit ausgeführt wird. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Schließt die Installation von der <xref:System.Messaging.MessageQueue> durch Festlegen der Warteschlangenobjekts auf den entsprechenden ursprünglichen Zustand. Wenn die Warteschlange, wird angegeben die <xref:System.Messaging.MessageQueueInstaller.Path%2A> Eigenschaft bereits vorhanden ist und Nachrichten enthält <xref:System.Messaging.MessageQueueInstaller.Commit%2A> löscht die Nachrichten. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, anstatt <xref:System.Messaging.MessageQueueInstaller.Install%2A>, löscht die Nachrichten, da die Act die Nachrichten löschen ein Rollback ausgeführt werden kann.  
  
 Installationsroutine einer Anwendung verwendet die Projekt-Installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatisch Informationen zu den Komponenten zu verwalten, die bereits installiert wurden. Diese Statusinformationen, die übergeben werden <xref:System.Messaging.MessageQueueInstaller.Commit%2A> als die `savedState` -Parameter wird ständig aktualisiert werden, wie das Hilfsprogramm jedes führt einen Commit für <xref:System.Messaging.MessageQueueInstaller> Instanz. In der Regel ist es nicht erforderlich für Ihren Code so ändern Sie diese Statusinformationen explizit. Wenn die Warteschlange gelöscht wurde, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> sendet einen Protokolleintrag, um die `savedState` , die Installation zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Eine <see cref="T:System.ComponentModel.IComponent" />¸ die als Vorlage für den <see cref="T:System.Messaging.MessageQueueInstaller" /> verwendet werden soll.</param>
        <summary>Kopiert die Eigenschaftswerte einer <see cref="T:System.Messaging.MessageQueue" />-Komponente, die bei der Installation einer Meldungswarteschlange benötigt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm installutil.exe. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> wird vom Installationsprogramm dazu verwendet, legen Sie die Eigenschaftswerte für die <xref:System.Messaging.MessageQueueInstaller> auf die Werte eines vorhandenen <xref:System.Messaging.MessageQueue>.  
  
 Wenn die <xref:System.Messaging.MessageQueue.Path%2A> von der <xref:System.Messaging.MessageQueue> also übergeben, ist eine leere Zeichenfolge (""), müssen Sie festlegen der <xref:System.Messaging.MessageQueue.Path%2A> Eigenschaft auf einen nicht leeren Wert vor der Ausführung des Installationsprogramms.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die diesem <see cref="T:System.Messaging.MessageQueueInstaller" /> zugeordnete Komponente ist keine <see cref="T:System.Messaging.MessageQueue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Warteschlange nur private, d. h. verschlüsselte Meldungen akzeptiert, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Messaging.EncryptionRequired" />-Werte, der die für Meldungen an die Warteschlange erforderliche Verschlüsselungsstufe angibt. Der Standardwert ist <see langword="Optional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Verschlüsselung angegeben ist, nur die <xref:System.Messaging.Message.Body%2A> einer Nachricht verschlüsselt ist. Andere Eigenschaften, z. B. die <xref:System.Messaging.Message.Label%2A>, werden nicht verschlüsselt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Ein <see cref="T:System.Collections.IDictionary" />, in dem die zum Ausführen eines Commit-, Rollback- oder Deinstallationsvorgangs erforderlichen Daten gespeichert werden.</param>
        <summary>Führt die Installation durch und schreibt Meldungswarteschlangeninformationen in die Registrierung. Diese Methode ist für Installationstools vorgesehen, die die entsprechenden Methoden automatisch aufrufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode zur Registrierung schreibt, und ordnet die <xref:System.Messaging.MessageQueue> Instanz einer Warteschlange, die sich am angegeben Pfad befindet der <xref:System.Messaging.MessageQueueInstaller.Path%2A> Eigenschaft. Wenn die Warteschlange nicht bereits vorhanden ist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> eine Transaktionswarteschlange erstellt. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Legt die Eigenschaften der neuen oder vorhandenen Warteschlange auf solche, die Sie angegeben haben die <xref:System.Messaging.MessageQueueInstaller>. Wenn die Warteschlange bereits vorhanden ist, werden dessen Eigenschaften mit denen von zurückgesetzt der <xref:System.Messaging.MessageQueueInstaller>. Wenn die vorhandene Warteschlange nicht transaktional ist, wird sie gelöscht und dann neu erstellt, als eine transaktionale Warteschlange.  
  
> [!CAUTION]
>  Wenn es erforderlich, um die Warteschlange erneut zu erstellen ist, werden Nachrichten in der Warteschlange verloren gehen.  
  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm installutil.exe. Ruft das Hilfsprogramm automatisch die <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode während des Installationsvorgangs Registrierungsinformationen zu schreiben, die die Nachrichtenwarteschlange installierenden zugeordnet ist. Installation ist transaktional, daher ist es ein Fehler in der jeder Komponente während der Installation, die zuvor installierten Komponenten in ihren Zustand vor der Installation Rollback ausgeführt werden. Dies erfolgt durch Aufrufen der einzelnen Komponenten <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Methode.  
  
 Nach eine erfolgreiche Installation aller Komponenten, die mit dem Installations-Projekt verknüpft sind aufgetreten ist, das Installationsprogramm die Installationen ein Commit ausgeführt wird. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Schließt die Installation von der <xref:System.Messaging.MessageQueue> durch Festlegen der Warteschlangenobjekts auf den entsprechenden ursprünglichen Zustand. Wenn die Warteschlange, wird angegeben die <xref:System.Messaging.MessageQueueInstaller.Path%2A> Eigenschaft bereits vorhanden ist und Nachrichten enthält <xref:System.Messaging.MessageQueueInstaller.Commit%2A> löscht die Nachrichten. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, anstatt <xref:System.Messaging.MessageQueueInstaller.Install%2A>, löscht die Nachrichten, da die Act die Nachrichten löschen ein Rollback ausgeführt werden kann.  
  
 Installationsroutine einer Anwendung verwendet die Projekt-Installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatisch Informationen zu den Komponenten zu verwalten, die bereits installiert wurden. Diese Statusinformationen, die übergeben werden <xref:System.Messaging.MessageQueueInstaller.Install%2A> als die `stateSaver` -Parameter wird ständig aktualisiert, während das Hilfsprogramm installiert wird, jede <xref:System.Messaging.MessageQueueInstaller> Instanz. In der Regel ist es nicht erforderlich für Ihren Code so ändern Sie diese Statusinformationen explizit.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Das zu vergleichende Installationsprogramm.</param>
        <summary>Bestimmt, ob das angegebene Installationsprogramm die gleiche Art von Installation wie dieses Installationsprogramm durchführen kann.</summary>
        <returns>
          <see langword="true" />, wenn dieses Installationsprogramm und das durch den <paramref name="otherInstaller" />-Parameter angegebene Installationsprogramm die gleiche Art von Installation durchführen können, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> gibt `true` nur, wenn dieses Installationsprogramm und die vom angegebenen der `otherInstaller` Parameter vom selben Typ sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung der Warteschlange ab oder legt diese fest.</summary>
        <value>Die Bezeichnung, die die Meldungswarteschlange beschreibt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.MessageQueue.Label%2A> Eigenschaft muss nicht für Warteschlangen eindeutig sein.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Größe des der Warteschlange zugeordneten Journals ab oder legt diese fest.</summary>
        <value>Die maximale Größe der Journalwarteschlange in KB, in der die aus der Warteschlange entfernten Meldungen aufgezeichnet werden. In der Standardeinstellung für Message Queuing ist keine Grenze festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Warteschlange erstellt wird, erstellt Message Queuing automatisch eine Warteschlangenjournals am gleichen Speicherort wie die neue Warteschlange. Warteschlangenjournals wird verwendet, um die Nachrichten zu verfolgen, die aus der Warteschlange entfernt werden.  
  
 Zwei Arten von Nachrichten verbleiben verfolgte: solche, die aus der Warteschlange entfernt werden, da ihre Zeit auf den Empfang der Zeitgeber ist abgelaufen, und solche, die aus der Warteschlange gelöscht werden.  
  
 Anwendungen können nicht in die Journalwarteschlange Nachrichten senden. Allerdings müssen Sie in regelmäßigen Abständen löschen die Warteschlange, um die Nachrichten zu entfernen, die nicht mehr benötigt werden. Nachrichten, die im Journal Warteschlangen Anzahl gegen das Kontingent für den Computer, auf dem die Warteschlangen befinden, gespeichert werden. (Das Computerkontingent wird vom Administrator festgelegt.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Größe der Warteschlange ab oder legt diese fest.</summary>
        <value>Die maximale Größe der Warteschlange in KB. In der Standardeinstellung für Message Queuing ist keine Grenze festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Warteschlangengröße wird zum Zeitpunkt der Erstellung der Warteschlange, in der Regel festgelegt, obwohl sie später zurückgesetzt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eingeführt in MSMQ 3.0. Ruft die der Warteschlange zugeordnete Multicastadresse ab oder oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.String" /> mit einer gültigen Multicastadresse (im nachfolgend angegebenen Format) oder <see langword="null" />. Letzteres gibt an, dass die Warteschlange keiner Multicastadresse zugeordnet ist.  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 ist nicht installiert.</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position der Warteschlange ab, auf die dieses Objekt verweist, oder legt diese fest.</summary>
        <value>Der Pfad, der die Position der Warteschlange im Netzwerk darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Syntax für die <xref:System.Messaging.MessageQueue.Path%2A> Eigenschaft hängt vom Typ der Warteschlange es Verweise. Die folgende Tabelle zeigt die Syntax, für Warteschlangen verschiedener Typen zu verwenden.  
  
|Warteschlangentyp|Syntax|  
|----------------|------------|  
|öffentliche Warteschlange|`machineName`\\`queueName`|  
|private Warteschlange|`machineName`\\`Private$`\\`queueName`|  
|Journalwarteschlange|`machineName`\\`queueName`\\`Journal$`|  
|Computer-Journalwarteschlange|`machineName`\\`Journal$`|  
|Computer, Warteschlange für unzustellbare|`machineName`\\`Deadletter$`|  
|Computer Transaktionswarteschlange für unzustellbare|`machineName`\\`XactDeadletter$`|  
  
 Verwenden "." für den lokalen Computer.  
  
 Sie können auch die <xref:System.Messaging.MessageQueue.FormatName%2A> oder <xref:System.Messaging.MessageQueue.Label%2A> eines Objekts des Message Queuing-Anwendung zum Beschreiben des Warteschlangenpfads. Die folgende Tabelle zeigt die korrekte Syntax für jeden Typ des Verweises.  
  
|Referenz|Syntax|  
|---------------|------------|  
|Formatname|FormatName: [ *Formatnamen* ]|  
|Bezeichnung|Label:[ *label* ]|  
  
 Wenn Sie offline arbeiten, müssen Sie den Formatnamen verwenden, um die Warteschlange zu definieren <xref:System.Messaging.MessageQueue.Path%2A>. Wenn Sie nicht, die Anwendung löst eine Ausnahme aus, da der primäre Domänencontroller auflösen nicht verfügbar ist die <xref:System.Messaging.MessageQueue.Path%2A> in der <xref:System.Messaging.MessageQueue.FormatName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> ist ungültig. Möglicherweise wurde eine ungültige Syntax verwendet.  
  
 - oder -   
  
 <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Berechtigungen ab, die der Warteschlange zugeordnet sind, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Messaging.AccessControlList" /> mit mindestens einem Zugriffsteuerungseintrag, der Vertrauensnehmer und erteilte Berechtigungen für die Warteschlange angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird standardmäßig der Ersteller des eine öffentliche oder private Warteschlange verfügt über Vollzugriff und der Domänengruppe "Jeder" über die Berechtigung zum Abrufen von Eigenschaften für eine Warteschlange, Berechtigungen und Schreiben in die Warteschlange hat. Message Queuing greift dann auf jede Liste Berechtigungseintrag bis findet, die für den aktuellen Benutzer sowie die aktuelle versuchte Aktion gilt. Können Sie, wie mit den Betriebssystem-Berechtigungen, die Rechte, die Sie speziell für einem Benutzer verweigern Vorrang.  
  
 Bei der Erstellung der <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> Eigenschaft hinzufügen <xref:System.Messaging.AccessControlEntry> -Instanzen Ihrer <xref:System.Messaging.AccessControlList> Auflistung. Beim Erstellen jedes Zugriffssteuerungseintrag können Sie generische oder "standard" Zugriffsrechte angeben. Die Rechte für eine Warteschlange können eine beliebige Kombination der folgenden sein:  
  
-   Löschen  
  
-   Sicherheit lesen  
  
-   Schreiben Sie die Sicherheit  
  
-   Synchronisieren  
  
-   Besitzer ändern  
  
-   Lesen  
  
-   Write  
  
-   Ausführen  
  
-   Erforderlich  
  
-   Alle  
  
-   Keiner  
  
 Diese Rechte sind ein Satz von Bitflags, die Sie kombinieren können, verwenden den bitweisen OR-Operator:  
  
-   Vollzugriff  
  
-   Nachricht löschen  
  
-   Fehlermeldung  
  
-   Peek-Nachricht  
  
-   Meldung für die Erfassung  
  
-   Abrufen von Eigenschaften für eine Warteschlange  
  
-   Festlegen von Eigenschaften  
  
-   Abrufen von Berechtigungen  
  
-   Festlegen von Berechtigungen  
  
-   Besitz übernehmen  
  
-   Schreiben der Nachricht  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Collections.IDictionary" />, das den Zustand des Computers vor der Installation enthält.</param>
        <summary>Versetzt den Computer durch Rollback der Warteschlangeninformationen, die von der Installationsprozedur in die Registrierung geschrieben wurden, in den Zustand vor der Installation zurück. Diese Methode ist für Installationstools vorgesehen, die die entsprechenden Methoden automatisch aufrufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Methode macht die Auswirkungen der <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> wird aufgerufen, wenn die Installation der Komponenten in das Projekt für die Installation schlägt fehl. Die <xref:System.Messaging.MessageQueueInstaller.Install%2A> Methode erstellt, oder legt die Eigenschaften für eine Warteschlange fest. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Löscht die Warteschlange oder setzt die Eigenschaften einer vorhandenen Warteschlange auf die Werte vor der Installation.  
  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm InstallUtil.exe. Ruft das Hilfsprogramm automatisch die <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> -Methode auf, nachdem ein Installationsfehler alle rückgängig machen, die sich während des Installationsvorgangs wurde bereits vorgenommen.  
  
 Installationsroutine einer Anwendung verwendet die Projekt-Installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatisch Informationen zu den Komponenten zu verwalten, die bereits installiert wurden. Diese Statusinformationen, die übergeben werden <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> als die `savedState` -Parameter wird ständig aktualisiert werden, wie das Hilfsprogramm führt ein Sichern <xref:System.Messaging.MessageQueueInstaller> Instanz. In der Regel ist es nicht erforderlich für Ihren Code so ändern Sie diese Statusinformationen explizit.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Warteschlange nur Meldungen akzeptiert, die als Teil einer Transaktion gesendet wurden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Warteschlange nur Meldungen akzeptiert, die als Teil einer Transaktion gesendet wurden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachrichten können über eine lokale Transaktionswarteschlange mit oder ohne Verwendung einer Transaktion abgerufen werden. Wenn Sie einen bereits verwendeten Transaktionskontext nicht angeben, erstellt das Message Queuing eine einzelne, interne Transaktion für Sie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Collections.IDictionary" />, das den Zustand des Computers nach der Installation enthält.</param>
        <summary>Entfernt eine Installation durch Entfernen der Warteschlangeninformationen aus der Registrierung. Diese Methode ist für Deinstallationstools vorgesehen, die die entsprechenden Methoden automatisch aufrufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> ist `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> löscht auch die zugeordnete Warteschlange die <xref:System.Messaging.MessageQueue>.  
  
 In der Regel rufen Sie nicht die Methoden der <xref:System.Messaging.MessageQueueInstaller> von innerhalb des Codes; sie werden in der Regel aufgerufen nur vom Installationsprogramm InstallUtil.exe (im Deinstallationsmodus). Ruft das Hilfsprogramm automatisch die <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> Methode, um die Teile des Systems wiederherzustellen, die durch die Installation in ihren Zustand vor der Installation betroffen sind. Dies schließt das Löschen der Registrierungsinformationen, die die zu deinstallierenden MessageQueue zugeordnet ist.  
  
 Deinstallieren Sie eine Anwendung routinemäßige verwendet des Projektinstallationsprogramms <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatisch Informationen zu den Komponenten zu verwalten, die bereits deinstalliert wurden. Diese Statusinformationen, die übergeben werden <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> als die `savedState` -Parameter wird ständig aktualisiert werden, wie das Hilfsprogramm jedes deinstalliert <xref:System.Messaging.MessageQueueInstaller> Instanz. In der Regel ist es nicht erforderlich für Ihren Code so ändern Sie diese Statusinformationen explizit.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie das Installationsprogramm beim Deinstallieren mit der Warteschlange verfahren soll: entfernen, den Zustand vor der Installation wiederherstellen oder sie in dem gegenwärtigen Zustand belassen.</summary>
        <value>Einer der <see cref="T:System.Configuration.Install.UninstallAction" />-Werte, der angibt, in welchem Zustand die Warteschlange bei der Deinstallation der <see cref="T:System.Messaging.MessageQueue" /> hinterlassen werden soll. Der Standardwert ist <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Warteschlange installieren, können Sie optional eine vorhandene Warteschlange verwenden. Wenn Sie dies tun, müssen Sie entscheiden, ob die Warteschlange in den Zustand vor der Installation zurück oder in seinem aktuellen Zustand nach der Installation verbleiben soll. Wenn Sie festlegen, die Warteschlange den Status vor der Installation wiederherstellen ob, werden Nachrichten, die aus der Warteschlange, während der Installation gelöscht wurden nicht wiederhergestellt. Sie können nur Eigenschaften für eine Warteschlange, die zugeordnet sind Zurücksetzen der <xref:System.Messaging.MessageQueueInstaller> auf ihre Werte vor der Installation.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob aus der Warteschlange abgerufene Meldungen auch in die zugeordnete Journalwarteschlange kopiert werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn aus der Warteschlange abgerufene Meldungen in die Journalwarteschlange kopiert werden sollen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Journalwarteschlange können Sie verfolgen Nachrichten selbst, wenn sie aus der Warteschlange abgerufen wurden. Zwei Typen von Nachrichten verbleiben jedoch nicht verfolgte: solche, die aus der Warteschlange entfernt werden, wenn ihre Zeit auf den empfangen-Zeitgeber abläuft, und solche, die aus der Warteschlange gelöscht werden.  
  
 Eine Journalwarteschlange sollen in regelmäßigen Abständen gelöscht werden, um Nachrichten zu entfernen, die nicht mehr benötigt werden. Nachrichten in der Erfassung Warteschlangenanzahl gegen das Kontingent für den Computer, auf dem die Erfassung befindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>