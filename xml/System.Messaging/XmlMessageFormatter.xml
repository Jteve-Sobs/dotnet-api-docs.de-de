<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563e678b40760a20036da2630095cb8b05f461de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460734" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7af6e-101">Serialisiert und deserialisiert mithilfe des auf XSD (XML Schema Definition) beruhenden XML-Formats Objekte in den oder aus dem Textkörper einer Meldung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7af6e-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-102">Die <xref:System.Messaging.XmlMessageFormatter> der Standardformatierer ist, eine Instanz von <xref:System.Messaging.MessageQueue> verwendet, um in die Warteschlange geschriebenen Nachrichten zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="7af6e-103">Beim Erstellen einer Instanz von <xref:System.Messaging.MessageQueue>, eine Instanz von <xref:System.Messaging.XmlMessageFormatter> für Sie erstellt und zugeordnet wird die <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="7af6e-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7af6e-104">Sie können ein anderes Formatierungsprogramm angeben, indem es in Ihrem Code erstellen und Zuweisen der <xref:System.Messaging.MessageQueue.Formatter%2A> Eigenschaft Ihrer <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="7af6e-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="7af6e-105">Eine Warteschlange Standard <xref:System.Messaging.XmlMessageFormatter> Instanz kann zum Schreiben in die Warteschlange verwendet werden, aber es kann nicht verwendet werden, um aus der Warteschlange zu lesen, bis Sie festlegen, die <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> oder <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft für den Formatierer.</span><span class="sxs-lookup"><span data-stu-id="7af6e-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="7af6e-106">Sie können entweder eine oder beide der folgenden Werte auf der Standardinstanz für den Formatierer festlegen oder Sie erstellen eine neue Instanz des Formatierungsprogramms und die Werte automatisch festlegen, indem sie in die entsprechenden als Argumente übergeben können <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="7af6e-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="7af6e-107">Beim Angeben von <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> statt <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, Typ vorhanden ist wird zur Kompilierzeit statt Lesezeit, reduzieren die Möglichkeit, dass Fehler überprüft.</span><span class="sxs-lookup"><span data-stu-id="7af6e-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="7af6e-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag angeben des Assemblynamens vollständig qualifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="7af6e-109">Darüber hinaus muss bei der Arbeit mit mehrere parallele Versionen die Versionsnummer auch zieltypnamen sowie angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="7af6e-110">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-111">Dadurch wird das Formatierungsprogramm der Nachrichtentext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="7af6e-112">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-113">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-114">Muss nur eine der beiden Eigenschaften festgelegt werden, beim Lesen aus der Warteschlange, aber Sie können beide festlegen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="7af6e-115">Der Satz von Typen wird der kombinierte Satz aus zwei Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="7af6e-116">Die Entscheidung, welche Eigenschaft zu verwenden, bezieht sich auf Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="7af6e-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="7af6e-117">Wenn der Nachrichtentext ein Typs enthält, deren Schema nicht mit den Typen im Array für beide Eigenschaften übereinstimmt, wird eine Ausnahme ausgelöst werden, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="7af6e-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="7af6e-118">Die <xref:System.Messaging.XmlMessageFormatter> ist eine wichtige Komponente von lose verbundenen XML-basiertem messaging.</span><span class="sxs-lookup"><span data-stu-id="7af6e-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="7af6e-119">Das Dienstprogramm XSD.exe verwendet, die das XML-Format, zum Generieren von XML-Schema verwendet wird, z. B. bei Verwendung des Hilfsprogramms zur Serialisierung einer Klasse, die von Ihrer Anwendung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7af6e-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="7af6e-120">Die Klasse muss über einen Standardkonstruktor verfügen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="7af6e-121">Das Format wird verwendet, wieder in dieser Prozess umgekehrt, wenn das Hilfsprogramm eine Klasse, die basierend auf dem Schema generiert Sie verteilen, um die Klassendaten beschreiben.</span><span class="sxs-lookup"><span data-stu-id="7af6e-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="7af6e-122">Die Verwendung des Hilfsprogramms und das XML-Schema generierten können Sie redistributing.dll Dateien zu vermeiden, jedes Mal, wenn Sie eine Klasse erneut kompilieren, nachdem die Implementierung der Klasse geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="7af6e-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="7af6e-123">Solange das Schema nicht auf dem Client oder Server ändern, wirken andere Änderungen auf beiden Seiten der anderen sich nicht.</span><span class="sxs-lookup"><span data-stu-id="7af6e-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7af6e-124">Das folgende Codebeispiel enthält drei Arten von Code: eine Serverkomponente, eine Order-Klasse, und Clientcode.</span><span class="sxs-lookup"><span data-stu-id="7af6e-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="7af6e-125">Die Order-Klasse kann zum Generieren von Schemas, die die Server in eingehenden Nachrichten erkennt vom Dienstprogramm XSD.exe verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="7af6e-126">Das Schema ist eine XML-formatierte Datei, die "Shape" der Klasse beschreibt.</span><span class="sxs-lookup"><span data-stu-id="7af6e-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="7af6e-127">Dieses Schema kann dann auf der Clientseite verwendet werden, um eine clientspezifische Order-Klasse zu generieren, die gemeinsam das gleiche Schema wie die Server-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7af6e-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="7af6e-128">Das folgende Codebeispiel stellt eine Serverkomponente, die Bestellungen über eine Warteschlange empfängt.</span><span class="sxs-lookup"><span data-stu-id="7af6e-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="7af6e-129">Der Text der Nachricht sollte ein Order-Objekt, dessen Schema der Klasse Order.cs übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="7af6e-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="7af6e-130">Der Serverprozess bzw. welche Anwendung deserialisiert die Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="7af6e-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="7af6e-131">Das folgende Codebeispiel stellt die Order-Klasse, die ein Schema für die Order-Objekte bereitstellt, die die Anwendung auf dem Server empfangen und deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="7af6e-132">Jede Clientanwendung, die Interaktion mit der Anwendung auf dem Server muss Nachrichten durch serialisieren Informationen in eine lokal definierte Order-Klasse in den Nachrichtentext an den Server senden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="7af6e-133">Die lokal definierte Order-Klasse muss das gleiche Schema wie die Server definierte Order-Klasse haben, in dem die Anwendung auf dem Server versucht, den Nachrichtentext deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="7af6e-134">Das Dienstprogramm XSD.exe kann die Manager der Anwendung auf dem Server erstellen und Verteilen des Schemas, die der Client verwenden muss, um an den Server gesendete Nachrichten zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="7af6e-135">Erhalt der Manager der Clientanwendung das Schema für die Order-Klasse, wird das Dienstprogramm XSD.exe erneut verwendet, um eine clientspezifische Order-Klasse aus dem Schema zu generieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="7af6e-136">Es wird diese Klasse, die im Client-Codebeispiel unten nicht Order-Klasse mit dem Server verwendet wird (das Dienstprogramm XSD.exe bewirkt, dass die schemagenerierter-Klasse, um den gleichen Namen wie die ursprüngliche Klasse haben).</span><span class="sxs-lookup"><span data-stu-id="7af6e-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="7af6e-137">Diese neue Order-Klasse wird verwendet, um die Reihenfolge in den Nachrichtentext zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="7af6e-138">Im folgenden Codebeispiel wird die clientseitige Verarbeitung, die zum Serialisieren einer Bestellung und senden Sie die Informationen, die die Reihenfolge an eine Warteschlange zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="7af6e-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="7af6e-139">Der Code ordnet Element, Menge und Adressinformationen Elemente des Schemas, die vom Dienstprogramm XSD.exe für die Klasse Order.cs generiert wurden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="7af6e-140">Eine Bestellung wird an die Warteschlange "Orders" auf dem lokalen Computer gesendet.</span><span class="sxs-lookup"><span data-stu-id="7af6e-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="7af6e-141">Nachdem das Schema aus der Order-Klasse, auf dem Server generiert wird, können Sie die Klasse ändern.</span><span class="sxs-lookup"><span data-stu-id="7af6e-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="7af6e-142">Wenn das Schema ändert, müssen Sie nicht das Schema zu verteilen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="7af6e-143">Nach der das Schema und generiert eine clientseitige Order-Klasse, kann dieser Clientklasse unabhängig von dem Server Order-Klasse auch geändert werden, solange das Schema selbst nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="7af6e-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="7af6e-144">Die beiden Klassen sind lose miteinander verbunden werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7af6e-145">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7af6e-146">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse ohne Angabe einer Gruppe von Zieltypen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-147">Diese Überladung des Konstruktors wird am häufigsten verwendet beim Schreiben in die Warteschlange, da Zieltypen nicht erforderlich, beim Schreiben von sind.</span><span class="sxs-lookup"><span data-stu-id="7af6e-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="7af6e-148">Lesen eine Nachricht aus einer Warteschlange mit einer Instanz von <xref:System.Messaging.XmlMessageFormatter> mit diesem Konstruktor erstellt, müssen Sie festlegen, die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> oder <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften, damit der Formatierer weiß, welche Typen zu deserialisierenden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="7af6e-149">Beim Erstellen einer neuen <xref:System.Messaging.MessageQueue>, den Standardwert <xref:System.Messaging.XmlMessageFormatter> Instanz erstellt werden, ohne den Zielsatz für Typen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="7af6e-150">Wie bei der ein Formatierungsprogramm, die Verwendung dieses Konstruktors erstellt wird, müssen Sie Zieltypen für diese Instanz des Formatierungsprogramms festlegen, wenn Sie aus der Warteschlange lesen möchten.</span><span class="sxs-lookup"><span data-stu-id="7af6e-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames">
          <span data-ttu-id="7af6e-151">Ein Array vom Typ <see cref="T:System.String" />, das die Gruppe der möglichen Typen angibt, die vom Formatierungsprogramm aus der jeweiligen Meldung deserialisiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
          <span data-ttu-id="7af6e-152">Diese Werte müssen voll gekennzeichnet sein, z. B. "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7af6e-153">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse und legt die übergebenen Zieltypen als ein Array von (voll gekennzeichneten) Zeichenfolgenwerten fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-154">Die Konstruktoren mit Parametern für den Ziel werden am häufigsten verwendet werden, beim Lesen aus der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="7af6e-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="7af6e-155">Beim Schreiben von ist es nicht notwendig, dass Zieltypen angeben.</span><span class="sxs-lookup"><span data-stu-id="7af6e-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="7af6e-156">Diese Überladung von der <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktor legt die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft, um auf die Arraywerte durch Übergeben der `targetTypeNames` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7af6e-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="7af6e-157">Einstellung, die diese Eigenschaft ermöglicht eine <xref:System.Messaging.MessageQueue> mit diesem <xref:System.Messaging.XmlMessageFormatter> Instanz zum Lesen von Nachrichten, die mit Objekten des angegebenen Typen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="7af6e-158">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-159">Dadurch wird das Formatierungsprogramm der Nachrichtentext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="7af6e-160">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-161">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-162">Muss nur eine der beiden Eigenschaften festgelegt werden, beim Lesen aus der Warteschlange, aber Sie können beide festlegen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="7af6e-163">Der Satz von Typen wird der kombinierte Satz aus zwei Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="7af6e-164">Die Entscheidung zu verwenden ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="7af6e-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="7af6e-165">Wenn der Nachrichtentext ein Typs enthält, deren Schema nicht mit den Typen im Array für beide Eigenschaften übereinstimmt, wird eine Ausnahme am Lesezeit ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-166">Der <paramref name="targetTypeNames" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes">
          <span data-ttu-id="7af6e-167">Ein Array vom Typ <see cref="T:System.Type" />, das die Gruppe der möglichen Typen angibt, die vom Formatierungsprogramm aus der jeweiligen Meldung deserialisiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7af6e-168">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse und legt die übergebenen Zieltypen als ein Array von Objekttypen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-169">Die Konstruktoren mit Parametern für den Ziel werden am häufigsten verwendet werden, beim Lesen aus der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="7af6e-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="7af6e-170">Beim Schreiben von ist es nicht notwendig, dass Zieltypen angeben.</span><span class="sxs-lookup"><span data-stu-id="7af6e-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="7af6e-171">Diese Überladung von der <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktor legt die <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft, um auf die Arraywerte durch Übergeben der `targetTypes` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7af6e-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="7af6e-172">Die Einstellung dieser Eigenschaft können eine <xref:System.Messaging.MessageQueue> mit diesem <xref:System.Messaging.XmlMessageFormatter> Instanz zum Lesen von Nachrichten, die Objekte des angegebenen Typs enthält.</span><span class="sxs-lookup"><span data-stu-id="7af6e-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="7af6e-173">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-174">Dadurch wird das Formatierungsprogramm der Nachrichtentext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="7af6e-175">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-176">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-177">Muss nur eine der beiden Eigenschaften festgelegt werden, beim Lesen aus der Warteschlange, aber Sie können beide festlegen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="7af6e-178">Der Satz von Typen wird der kombinierte Satz aus zwei Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="7af6e-179">Die Entscheidung zu verwenden ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="7af6e-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="7af6e-180">Wenn der Nachrichtentext ein Typs enthält, deren Schema nicht mit den Typen im Array für beide Eigenschaften übereinstimmt, wird eine Ausnahme am Lesezeit ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="7af6e-181">Beim Angeben von <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> statt <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, Typ vorhanden ist wird zur Kompilierzeit statt Lesezeit, reduzieren die Möglichkeit, dass Fehler überprüft.</span><span class="sxs-lookup"><span data-stu-id="7af6e-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="7af6e-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag angeben des Assemblynamens vollständig qualifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="7af6e-183">Darüber hinaus muss bei der Arbeit mit mehrere parallele Versionen die Versionsnummer auch zieltypnamen sowie angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="7af6e-184">Bei Verwendung <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, Sie können jedes Objekt hinzufügen (z. B. `MyClass`) zur Liste auf eine Weise, die im folgenden C#-Code veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="7af6e-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-185">Der <paramref name="targetTypes" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7af6e-186">Die zu untersuchende <see cref="T:System.Messaging.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7af6e-187">Ermittelt, ob das Formatierprogramm die Meldung deserialisieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-187">Determines whether the formatter can deserialize the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7af6e-188">
            <see langword="true" />, wenn das XML-Formatierungsprogramm die Meldung deserialisieren kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-188">
              <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-189">Wenn <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> aufgerufen wird, wird der Formatierer versucht zu bestimmen, ob der Inhalt der Nachricht werden deserialisieren kann.</span><span class="sxs-lookup"><span data-stu-id="7af6e-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="7af6e-190">Das Formatierungsprogramm kann nur die Nachricht deserialisieren, wenn der Typ im Nachrichtentext das gleiche Schema wie einer der Typen im Array dargestellte besitzt die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="7af6e-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Gibt `false` in den folgenden zwei Situationen:</span><span class="sxs-lookup"><span data-stu-id="7af6e-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="7af6e-192">Die Nachricht wurde nicht mit formatiert die <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="7af6e-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="7af6e-193">Das Schema des Nachrichtentexts ist nicht in den aufgelisteten entweder in der <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> oder <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7af6e-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="7af6e-194">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> -Eigenschaft geben das Formatierungsprogramm welche Arten von Objekten zum Deserialisieren können muss.</span><span class="sxs-lookup"><span data-stu-id="7af6e-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="7af6e-195">Wenn beliebiger Typ aus der Liste fehlt noch sich innerhalb der Nachricht befindet <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="7af6e-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7af6e-196">Es wurde weder die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft noch die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-197">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7af6e-198">Erstellt eine Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse, das dieselben Lese-/Schreibeigenschaften (die Gruppe von Zieltypen) besitzt wie die aktuelle <see cref="T:System.Messaging.XmlMessageFormatter" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7af6e-199">Ein Objekt, dessen Eigenschaften mit denen dieser <see cref="T:System.Messaging.XmlMessageFormatter" />-Instanz übereinstimmen, dessen Metadaten es jedoch nicht als Instanz der Formatierungsprogrammklasse beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-200">Diese Methode erstellt eine Kopie des Formatierungsprogramms und initialisiert alle seine Eigenschaften mit den Werten dieses <xref:System.Messaging.XmlMessageFormatter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7af6e-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7af6e-201">Die zu deserialisierende <see cref="T:System.Messaging.Message" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7af6e-202">Liest den Inhalt aus der angegebenen Meldung und erstellt ein Objekt, das die deserialisierte Meldung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7af6e-203">Die deserialisierte Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-203">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-204">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-205">Eine dieser Eigenschaften muss festgelegt werden, bevor die Nachricht deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7af6e-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="7af6e-206">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-207">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-208">Zieltypen müssen nicht angegeben werden, um in die Warteschlange geschrieben.</span><span class="sxs-lookup"><span data-stu-id="7af6e-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7af6e-209">Es wurde weder die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft noch die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
          <span data-ttu-id="7af6e-210">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-210">-or-</span>
          </span>
          <span data-ttu-id="7af6e-211">Die im Meldungstext serialisierte Instanz entspricht keinem der Schemas, die von den Typen in der <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft und der <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft dargestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-212">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-212">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7af6e-213">Gibt die Gruppe der möglichen Typen an, die vom Formatierungsprogramm aus der bereitgestellten Meldung deserialisiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7af6e-214">Ein Array vom Typ <see cref="T:System.String" />, das die Objekttypen angibt, die beim Lesen der Meldung aus dem Meldungstext deserialisiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-215">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-216">Dadurch wird das Formatierungsprogramm der Nachrichtentext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="7af6e-217">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-218">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-219">Muss nur eine der beiden Eigenschaften festgelegt werden, beim Lesen aus der Warteschlange, aber Sie können beide festlegen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="7af6e-220">Der Satz von Typen wird der kombinierte Satz aus zwei Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="7af6e-221">Die Entscheidung, welche Eigenschaft zu verwenden, bezieht sich auf Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="7af6e-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="7af6e-222">Wenn der Nachrichtentext ein Typs enthält, deren Schema nicht mit den Typen im Array für beide Eigenschaften übereinstimmt, wird eine Ausnahme ausgelöst werden, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="7af6e-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="7af6e-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag angeben des Assemblynamens vollständig qualifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="7af6e-224">Darüber hinaus muss bei der Arbeit mit mehrere parallele Versionen die Versionsnummer auch zieltypnamen sowie angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="7af6e-225">Die Zieltypen sind nur erforderlich, wenn aus der Warteschlange zu lesen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="7af6e-226">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften müssen nicht zum Schreiben in die Warteschlange festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-227">Die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7af6e-228">Gibt die Gruppe der möglichen Typen an, die vom Formatierungsprogramm aus der bereitgestellten Meldung deserialisiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7af6e-229">Ein Array vom Typ <see cref="T:System.Type" />, das die Objekttypen angibt, die beim Lesen der Meldung aus dem Meldungstext deserialisiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-230">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften der Formatierungsprogramm mitgeteilt, welche Schemas versucht, eine Übereinstimmung, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="7af6e-231">Dadurch wird das Formatierungsprogramm der Nachrichtentext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="7af6e-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="7af6e-232">In dem Textkörper der serialisierten Instanz muss eines der Schemas dargestellt, die in den Typarray entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="7af6e-233">Beim Lesen der Nachricht mit der <xref:System.Messaging.MessageQueue.Receive%2A> -Methode, die Methode erstellt ein Objekt des Typs, der dem bezeichneten Schema entspricht, und liest den Nachrichtentext hinein.</span><span class="sxs-lookup"><span data-stu-id="7af6e-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="7af6e-234">Muss nur eine der beiden Eigenschaften festgelegt werden, beim Lesen aus der Warteschlange, aber Sie können beide festlegen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="7af6e-235">Der Satz von Typen wird der kombinierte Satz aus zwei Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="7af6e-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="7af6e-236">Die Entscheidung, welche Eigenschaft zu verwenden, bezieht sich auf Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="7af6e-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="7af6e-237">Wenn der Nachrichtentext ein Typs enthält, deren Schema nicht mit den Typen im Array für beide Eigenschaften übereinstimmt, wird eine Ausnahme ausgelöst werden, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="7af6e-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="7af6e-238">Die Zieltypen sind nur erforderlich, wenn aus der Warteschlange zu lesen.</span><span class="sxs-lookup"><span data-stu-id="7af6e-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="7af6e-239">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> und <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften müssen nicht zum Schreiben in die Warteschlange festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="7af6e-240">Beim Angeben von <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> statt <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, Typ vorhanden ist wird zur Kompilierzeit statt Lesezeit, reduzieren die Möglichkeit, dass Fehler überprüft.</span><span class="sxs-lookup"><span data-stu-id="7af6e-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="7af6e-241">Bei Verwendung <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, Sie können jedes Objekt hinzufügen (z. B. `MyClass`) zur Liste auf eine Weise, die vom C#-Code veranschaulicht `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="7af6e-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7af6e-242">Im folgenden Codebeispiel sendet und empfängt eine Nachricht, die eine Bestellung in und aus einer Warteschlange enthält.</span><span class="sxs-lookup"><span data-stu-id="7af6e-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-243">Die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7af6e-244">Die <see cref="T:System.Messaging.Message" />, deren <see cref="P:System.Messaging.Message.Body" />-Eigenschaft das serialisierte Objekt aufnimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="7af6e-245">Das <see cref="T:System.Object" />, das in den Meldungstext serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7af6e-246">Serialisiert ein Objekt in den Textkörper der Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-246">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af6e-247">Zieltypen müssen nicht angegeben werden, an die Warteschlange geschrieben werden soll, wie es beim Lesen von sein muss.</span><span class="sxs-lookup"><span data-stu-id="7af6e-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="7af6e-248">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> oder <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft wird vom Formatierungsprogramm verwendet, nur, wenn eine Nachricht zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="7af6e-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="7af6e-249">Die <xref:System.Messaging.XmlMessageFormatter> nutzt die <xref:System.Xml.Serialization.XmlSerializer> Klasse, die definiert, was serialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7af6e-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="7af6e-250">Nur können öffentliche Felder und öffentliche Eigenschaften serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="7af6e-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="7af6e-251">Strukturen, Strukturen mit Arrays und Arrays von Strukturen sind alle serialisierbaren, solange das Codierungsformat keine mit dem SOAP-Protokoll verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7af6e-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7af6e-252">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-252">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7af6e-253">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-253">-or-</span>
          </span>
          <span data-ttu-id="7af6e-254">Der <paramref name="obj" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7af6e-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>