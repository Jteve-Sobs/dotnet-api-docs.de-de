<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16514590acdfe601cbe38ade0f4b024e24d61907" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86810830" /></Metadata><TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="96adb-101">Serialisiert und deserialisiert mithilfe des auf XSD (XML Schema Definition) beruhenden XML-Formats Objekte in den oder aus dem Textkörper einer Meldung.</span><span class="sxs-lookup"><span data-stu-id="96adb-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-102"><xref:System.Messaging.XmlMessageFormatter>Ist das Standardformatierer, das eine Instanz von <xref:System.Messaging.MessageQueue> zum Serialisieren von Nachrichten verwendet, die in die Warteschlange geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="96adb-103">Wenn Sie eine Instanz von erstellen <xref:System.Messaging.MessageQueue> , wird eine Instanz von <xref:System.Messaging.XmlMessageFormatter> für Sie erstellt und der zugeordnet <xref:System.Messaging.MessageQueue> .</span><span class="sxs-lookup"><span data-stu-id="96adb-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="96adb-104">Sie können ein anderes Formatierungsprogramm angeben, indem Sie es im Code erstellen und es der- <xref:System.Messaging.MessageQueue.Formatter%2A> Eigenschaft der zuweisen <xref:System.Messaging.MessageQueue> .</span><span class="sxs-lookup"><span data-stu-id="96adb-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="96adb-105">Die Standard Instanz einer Warteschlange <xref:System.Messaging.XmlMessageFormatter> kann zum Schreiben in die Warteschlange verwendet werden. Sie kann jedoch erst verwendet werden, wenn Sie die- <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft oder die- <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft für den Formatierer festgelegt haben.</span><span class="sxs-lookup"><span data-stu-id="96adb-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="96adb-106">Sie können entweder einen oder beide Werte für die Standard-formatiererinstanz festlegen, oder Sie können eine neue Instanz des Formatierers erstellen und die Werte automatisch festlegen, indem Sie Sie als Argumente an den entsprechenden <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="96adb-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="96adb-107">Wenn <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Sie anstelle von angeben <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> , wird das vorhanden sein des Typs zur Kompilierzeit anstelle der Lesezeit überprüft, wodurch die Fehlerwahrscheinlichkeit verringert wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="96adb-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag voll qualifiziert wird, wobei der Assemblyname angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="96adb-109">Außerdem muss die Versionsnummer beim Arbeiten mit mehreren gleichzeitigen Versionen ebenfalls an den Zieltyp Namen angehängt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="96adb-110">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften und teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-111">Dadurch kann der Formatierer den Nachrichtentext interpretieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="96adb-112">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-113">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-114">Beim Lesen aus der Warteschlange muss nur eine der beiden Eigenschaften festgelegt werden, aber Sie können beides festlegen.</span><span class="sxs-lookup"><span data-stu-id="96adb-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="96adb-115">Der Satz von Typen ist die kombinierte Menge aus den beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="96adb-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="96adb-116">Die Entscheidung, welche Eigenschaft verwendet werden soll, ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="96adb-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="96adb-117">Wenn der Nachrichtentext einen Typ enthält, dessen Schema keinem der Typen im Array für eine der Eigenschaften entspricht, wird eine Ausnahme ausgelöst, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="96adb-118"><xref:System.Messaging.XmlMessageFormatter>Ist eine wichtige Komponente des lose verknüpften XML-basierten Messaging.</span><span class="sxs-lookup"><span data-stu-id="96adb-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="96adb-119">Das XSD.exe-Hilfsprogramm verwendet das XML-Format, das zum Generieren eines XML-Schemas verwendet wird, z. b. Wenn Sie das Hilfsprogramm zum Serialisieren einer von der Anwendung verwendeten Klasse verwenden</span><span class="sxs-lookup"><span data-stu-id="96adb-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="96adb-120">Die Klasse muss einen parameterlosen Konstruktor haben.</span><span class="sxs-lookup"><span data-stu-id="96adb-120">The class must have a parameterless constructor.</span></span>  
  
 <span data-ttu-id="96adb-121">Das Format wird im umgekehrten Prozess wieder verwendet, wenn das Hilfsprogramm eine Klasse basierend auf dem Schema generiert, das Sie zur Beschreibung der Klassen Daten verteilen.</span><span class="sxs-lookup"><span data-stu-id="96adb-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="96adb-122">Durch die Verwendung des-Hilfsprogramms und des generierten XML-Schemas können Sie redistributing.dll Dateien vermeiden, wenn Sie eine Klasse neu kompilieren, nachdem sich die Implementierung der Klasse geändert hat.</span><span class="sxs-lookup"><span data-stu-id="96adb-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="96adb-123">Solange das Schema auf dem Client oder dem Server nicht geändert wird, wirken sich andere Änderungen auf beiden Seiten nicht auf das andere aus.</span><span class="sxs-lookup"><span data-stu-id="96adb-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96adb-124">Das folgende Codebeispiel enthält drei Code Elemente: eine Serverkomponente, eine Order-Klasse und Client Code.</span><span class="sxs-lookup"><span data-stu-id="96adb-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="96adb-125">Die Order-Klasse kann vom XSD.exe Hilfsprogramm verwendet werden, um ein Schema zu generieren, das der Server in eingehenden Nachrichten erkennt.</span><span class="sxs-lookup"><span data-stu-id="96adb-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="96adb-126">Das Schema ist eine XML-formatierte Datei, die die Form der-Klasse beschreibt.</span><span class="sxs-lookup"><span data-stu-id="96adb-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="96adb-127">Dieses Schema kann dann auf der Clientseite verwendet werden, um eine Client spezifische Order-Klasse zu generieren, die das gleiche Schema wie die Serverklasse verwendet.</span><span class="sxs-lookup"><span data-stu-id="96adb-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="96adb-128">Das folgende Codebeispiel stellt eine Serverkomponente dar, die Aufträge über eine Nachrichten Warteschlange empfängt.</span><span class="sxs-lookup"><span data-stu-id="96adb-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="96adb-129">Der Nachrichtentext muss ein Order-Objekt sein, dessen Schema mit der Order.cs-Klasse unten übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="96adb-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="96adb-130">Der Server Prozess oder die Anwendung deserialisiert die Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="96adb-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="96adb-131">Das folgende Codebeispiel stellt die Order-Klasse dar, die ein Schema für die Order-Objekte bereitstellt, die von der Anwendung auf dem Server empfangen und deserialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="96adb-132">Jede Client Anwendung, die mit der Anwendung auf dem Server interagiert, muss Nachrichten an den Server senden, indem Informationen in einer lokal definierten Order-Klasse in den Nachrichtentext serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="96adb-133">Die lokal definierte Order-Klasse muss das gleiche Schema wie die Server definierte Order-Klasse aufweisen, in der die Anwendung auf dem Server versucht, den Nachrichtentext zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="96adb-134">Mit dem XSD.exe-Hilfsprogramm kann der Manager der Anwendung auf dem Server das Schema erstellen und verteilen, das vom Client zum Serialisieren von Nachrichten an den Server verwendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="96adb-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="96adb-135">Wenn der Manager der Client Anwendung das Schema für die Order-Klasse empfängt, wird das XSD.exe-Hilfsprogramm erneut verwendet, um eine Client spezifische Order-Klasse aus dem Schema zu generieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="96adb-136">Diese Klasse wird im folgenden Client Codebeispiel verwendet, nicht die Order-Klasse des Servers (das XSD.exe-Hilfsprogramm bewirkt, dass die Schema generierte Klasse denselben Namen wie die ursprüngliche Klasse hat).</span><span class="sxs-lookup"><span data-stu-id="96adb-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="96adb-137">Diese neue Order-Klasse wird verwendet, um die Reihenfolge in den Nachrichtentext zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="96adb-138">Das folgende Codebeispiel ist die Client seitige Verarbeitung, die zum Serialisieren einer Bestellung und zum Senden der der Bestellung zugeordneten Informationen an eine Warteschlange verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="96adb-139">Der Code ordnet Element-, Mengen-und Adressinformationen Elementen des Schemas zu, die durch das XSD.exe-Hilfsprogramm für die Order.cs-Klasse generiert wurden.</span><span class="sxs-lookup"><span data-stu-id="96adb-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="96adb-140">Eine Bestellung wird an die Auftrags Warteschlange auf dem lokalen Computer gesendet.</span><span class="sxs-lookup"><span data-stu-id="96adb-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="96adb-141">Nachdem das Schema aus der Order-Klasse auf dem Server generiert wurde, können Sie die-Klasse ändern.</span><span class="sxs-lookup"><span data-stu-id="96adb-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="96adb-142">Wenn das Schema nicht geändert wird, müssen Sie das Schema nicht neu verteilen.</span><span class="sxs-lookup"><span data-stu-id="96adb-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="96adb-143">Nachdem Sie das Schema verteilt und eine Client seitige Order-Klasse generiert haben, kann diese Client Klasse auch unabhängig von der Order-Klasse des Servers geändert werden, solange das Schema selbst nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="96adb-144">Die beiden Klassen sind lose gekoppelt.</span><span class="sxs-lookup"><span data-stu-id="96adb-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96adb-145">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96adb-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96adb-146">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse ohne Angabe einer Gruppe von Zieltypen.</span><span class="sxs-lookup"><span data-stu-id="96adb-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-147">Diese Überladung des Konstruktors wird am häufigsten beim Schreiben in die Warteschlange verwendet, da Zieltypen beim Schreiben nicht erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="96adb-148">Zum Lesen einer Nachricht aus einer Warteschlange mithilfe einer Instanz von <xref:System.Messaging.XmlMessageFormatter> , die mit diesem Konstruktor erstellt wurde, müssen Sie die-Eigenschaft oder die-Eigenschaft festlegen, <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> damit der Formatierer weiß, welche Typen Sie deserialisieren möchten.</span><span class="sxs-lookup"><span data-stu-id="96adb-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="96adb-149">Wenn Sie ein neues erstellen <xref:System.Messaging.MessageQueue> , wird eine Standard <xref:System.Messaging.XmlMessageFormatter> Instanz erstellt, ohne dass die Zieltypen festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="96adb-150">Wie bei einem Formatierer, der mit diesem Konstruktor erstellt wurde, müssen Sie Zieltypen für diese formatiererinstanz festlegen, wenn Sie aus der Warteschlange lesen möchten.</span><span class="sxs-lookup"><span data-stu-id="96adb-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames"><span data-ttu-id="96adb-151">Ein Array vom Typ <see cref="T:System.String" />, das die Gruppe der möglichen Typen angibt, die vom Formatierungsprogramm aus der jeweiligen Meldung deserialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="96adb-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span> <span data-ttu-id="96adb-152">Diese Werte müssen voll gekennzeichnet sein, z. B. "MyNamespace.MyOrders, MyOrdersAssemblyName".</span><span class="sxs-lookup"><span data-stu-id="96adb-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span></span></param>
        <summary><span data-ttu-id="96adb-153">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse und legt die übergebenen Zieltypen als ein Array von (voll gekennzeichneten) Zeichenfolgenwerten fest.</span><span class="sxs-lookup"><span data-stu-id="96adb-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-154">Die Konstruktoren mit Zieltyp Parametern werden am häufigsten beim Lesen aus der Warteschlange verwendet.</span><span class="sxs-lookup"><span data-stu-id="96adb-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="96adb-155">Beim Schreiben ist es nicht notwendig, Zieltypen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="96adb-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="96adb-156">Diese Überladung des <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktors legt die- <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft auf die Array Werte fest, die über den-Parameter übergeben werden `targetTypeNames` .</span><span class="sxs-lookup"><span data-stu-id="96adb-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="96adb-157">Das Festlegen dieser Eigenschaft ermöglicht einem <xref:System.Messaging.MessageQueue> mithilfe dieser <xref:System.Messaging.XmlMessageFormatter> Instanz das Lesen von Nachrichten, die Objekte eines bestimmten Typs enthalten.</span><span class="sxs-lookup"><span data-stu-id="96adb-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="96adb-158">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft als auch die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-159">Dadurch kann der Formatierer den Nachrichtentext interpretieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="96adb-160">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-161">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-162">Beim Lesen aus der Warteschlange muss nur eine der beiden Eigenschaften festgelegt werden, aber Sie können beides festlegen.</span><span class="sxs-lookup"><span data-stu-id="96adb-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="96adb-163">Der Satz von Typen ist die kombinierte Menge aus den beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="96adb-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="96adb-164">Die Entscheidung, welche verwendet werden soll, ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="96adb-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="96adb-165">Wenn der Nachrichtentext einen Typ enthält, dessen Schema keinem der Typen im Array für eine der Eigenschaften entspricht, wird eine Ausnahme zur Lesezeit ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="96adb-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-166">Der <paramref name="targetTypeNames" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes"><span data-ttu-id="96adb-167">Ein Array vom Typ <see cref="T:System.Type" />, das die Gruppe der möglichen Typen angibt, die vom Formatierungsprogramm aus der jeweiligen Meldung deserialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="96adb-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></param>
        <summary><span data-ttu-id="96adb-168">Initialisiert eine neue Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse und legt die übergebenen Zieltypen als ein Array von Objekttypen fest.</span><span class="sxs-lookup"><span data-stu-id="96adb-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-169">Die Konstruktoren mit Zieltyp Parametern werden am häufigsten beim Lesen aus der Warteschlange verwendet.</span><span class="sxs-lookup"><span data-stu-id="96adb-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="96adb-170">Beim Schreiben ist es nicht notwendig, Zieltypen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="96adb-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="96adb-171">Diese Überladung des <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> Konstruktors legt die- <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft auf die Array Werte fest, die über den-Parameter übergeben werden `targetTypes` .</span><span class="sxs-lookup"><span data-stu-id="96adb-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="96adb-172">Wenn diese Eigenschaft festgelegt wird, kann eine <xref:System.Messaging.MessageQueue> mit dieser <xref:System.Messaging.XmlMessageFormatter> Instanz Nachrichten lesen, die Objekte der angegebenen Typen enthalten.</span><span class="sxs-lookup"><span data-stu-id="96adb-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="96adb-173">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft als auch die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-174">Dadurch kann der Formatierer den Nachrichtentext interpretieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="96adb-175">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-176">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-177">Beim Lesen aus der Warteschlange muss nur eine der beiden Eigenschaften festgelegt werden, aber Sie können beides festlegen.</span><span class="sxs-lookup"><span data-stu-id="96adb-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="96adb-178">Der Satz von Typen ist die kombinierte Menge aus den beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="96adb-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="96adb-179">Die Entscheidung, welche verwendet werden soll, ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="96adb-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="96adb-180">Wenn der Nachrichtentext einen Typ enthält, dessen Schema keinem der Typen im Array für eine der Eigenschaften entspricht, wird eine Ausnahme zur Lesezeit ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="96adb-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="96adb-181">Wenn <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Sie anstelle von angeben <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> , wird das vorhanden sein des Typs zur Kompilierzeit anstelle der Lesezeit überprüft, wodurch die Fehlerwahrscheinlichkeit verringert wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="96adb-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag voll qualifiziert wird, wobei der Assemblyname angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="96adb-183">Außerdem muss die Versionsnummer beim Arbeiten mit mehreren gleichzeitigen Versionen ebenfalls an den Zieltyp Namen angehängt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="96adb-184">Wenn <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Sie verwenden, können Sie jedes Objekt (z. b. `MyClass` ) der Liste auf eine Weise hinzufügen, die im folgenden c#-Code veranschaulicht wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-185">Der <paramref name="targetTypes" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRead (message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96adb-186">Die zu untersuchende <see cref="T:System.Messaging.Message" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="96adb-187">Ermittelt, ob das Formatierprogramm die Meldung deserialisieren kann.</span><span class="sxs-lookup"><span data-stu-id="96adb-187">Determines whether the formatter can deserialize the message.</span></span></summary>
        <returns><span data-ttu-id="96adb-188"><see langword="true" />, wenn das XML-Formatierungsprogramm die Meldung deserialisieren kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-188"><see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-189">Wenn <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> aufgerufen wird, versucht das Formatierungs Programm zu ermitteln, ob der Inhalt der Nachricht etwas deserialisieren kann.</span><span class="sxs-lookup"><span data-stu-id="96adb-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="96adb-190">Der Formatierer kann die Nachricht nur deserialisieren, wenn der Typ im Nachrichtentext das gleiche Schema hat wie einer der Typen im Array, der durch die-Eigenschaft und die-Eigenschaft dargestellt wird <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> .</span><span class="sxs-lookup"><span data-stu-id="96adb-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="96adb-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> wird `false` in den folgenden zwei Fällen zurückgegeben:</span><span class="sxs-lookup"><span data-stu-id="96adb-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="96adb-192">Die Nachricht wurde nicht mit dem formatiert <xref:System.Messaging.XmlMessageFormatter> .</span><span class="sxs-lookup"><span data-stu-id="96adb-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="96adb-193">Das Schema des Nachrichten Texts gehört nicht zu den in der- <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft oder der- <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft aufgelisteten.</span><span class="sxs-lookup"><span data-stu-id="96adb-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="96adb-194">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaften und teilen dem Formatierer mit, welche Typen von Objekten er Deserialisieren muss.</span><span class="sxs-lookup"><span data-stu-id="96adb-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="96adb-195">Wenn ein beliebiger Typ in der Liste fehlt, aber in der Nachricht gefunden wird, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> gibt zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="96adb-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="96adb-196">Es wurde weder die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft noch die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="96adb-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-197">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-197">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96adb-198">Erstellt eine Instanz der <see cref="T:System.Messaging.XmlMessageFormatter" />-Klasse, das dieselben Lese-/Schreibeigenschaften (die Gruppe von Zieltypen) besitzt wie die aktuelle <see cref="T:System.Messaging.XmlMessageFormatter" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="96adb-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="96adb-199">Ein Objekt, dessen Eigenschaften mit denen dieser <see cref="T:System.Messaging.XmlMessageFormatter" />-Instanz übereinstimmen, dessen Metadaten es jedoch nicht als Instanz der Formatierungsprogrammklasse beschreiben.</span><span class="sxs-lookup"><span data-stu-id="96adb-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-200">Diese Methode erstellt eine Kopie der Formatierer und initialisiert alle zugehörigen Eigenschaften mit den Werten dieses <xref:System.Messaging.XmlMessageFormatter> Objekts.</span><span class="sxs-lookup"><span data-stu-id="96adb-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (message As Message) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96adb-201">Die zu deserialisierende <see cref="T:System.Messaging.Message" /> im XML-Format.</span><span class="sxs-lookup"><span data-stu-id="96adb-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="96adb-202">Liest den Inhalt aus der angegebenen Meldung und erstellt ein Objekt, das die deserialisierte Meldung enthält.</span><span class="sxs-lookup"><span data-stu-id="96adb-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="96adb-203">Die deserialisierte Meldung.</span><span class="sxs-lookup"><span data-stu-id="96adb-203">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-204">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft als auch die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-205">Eine dieser Eigenschaften muss festgelegt werden, bevor die Nachricht deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96adb-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="96adb-206">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-207">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-208">Die Zieltypen müssen nicht angegeben werden, um in die Warteschlange zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="96adb-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="96adb-209">Es wurde weder die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft noch die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="96adb-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span>  
  
<span data-ttu-id="96adb-210">- oder -</span><span class="sxs-lookup"><span data-stu-id="96adb-210">-or-</span></span> 
<span data-ttu-id="96adb-211">Die im Meldungstext serialisierte Instanz entspricht keinem der Schemas, die von den Typen in der <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft und der <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-212">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-212">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96adb-213">Gibt die Gruppe der möglichen Typen an, die vom Formatierungsprogramm aus der bereitgestellten Meldung deserialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="96adb-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="96adb-214">Ein Array vom Typ <see cref="T:System.String" />, das die Objekttypen angibt, die beim Lesen der Meldung aus dem Meldungstext deserialisiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="96adb-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-215">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft als auch die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-216">Dadurch kann der Formatierer den Nachrichtentext interpretieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="96adb-217">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-218">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-219">Beim Lesen aus der Warteschlange muss nur eine der beiden Eigenschaften festgelegt werden, aber Sie können beides festlegen.</span><span class="sxs-lookup"><span data-stu-id="96adb-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="96adb-220">Der Satz von Typen ist die kombinierte Menge aus den beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="96adb-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="96adb-221">Die Entscheidung, welche Eigenschaft verwendet werden soll, ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="96adb-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="96adb-222">Wenn der Nachrichtentext einen Typ enthält, dessen Schema keinem der Typen im Array für eine der Eigenschaften entspricht, wird eine Ausnahme ausgelöst, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="96adb-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> erfordert, dass jeder Eintrag voll qualifiziert wird, wobei der Assemblyname angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="96adb-224">Außerdem muss die Versionsnummer beim Arbeiten mit mehreren gleichzeitigen Versionen ebenfalls an den Zieltyp Namen angehängt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="96adb-225">Die Zieltypen sind nur beim Lesen aus der Warteschlange erforderlich.</span><span class="sxs-lookup"><span data-stu-id="96adb-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="96adb-226">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft und die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> müssen nicht zum Schreiben in die Warteschlange festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-227">Die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />-Eigenschaft ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("XmlMsgTargetTypes")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("XmlMsgTargetTypes")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96adb-228">Gibt die Gruppe der möglichen Typen an, die vom Formatierungsprogramm aus der bereitgestellten Meldung deserialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="96adb-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="96adb-229">Ein Array vom Typ <see cref="T:System.Type" />, das die Objekttypen angibt, die beim Lesen der Meldung aus dem Meldungstext deserialisiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="96adb-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-230">Sowohl die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft als auch die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> teilen dem Formatierer mit, welche Schemas beim Deserialisieren einer Nachricht zu vergleichen sind.</span><span class="sxs-lookup"><span data-stu-id="96adb-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="96adb-231">Dadurch kann der Formatierer den Nachrichtentext interpretieren.</span><span class="sxs-lookup"><span data-stu-id="96adb-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="96adb-232">Die im Nachrichtentext serialisierte-Instanz muss einem der im typanray dargestellten Schemas entsprechen.</span><span class="sxs-lookup"><span data-stu-id="96adb-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="96adb-233">Wenn Sie die Nachricht mithilfe der- <xref:System.Messaging.MessageQueue.Receive%2A> Methode lesen, erstellt die-Methode ein Objekt vom Typ, das dem identifizierten Schema entspricht, und liest den Nachrichtentext in diese ein.</span><span class="sxs-lookup"><span data-stu-id="96adb-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="96adb-234">Beim Lesen aus der Warteschlange muss nur eine der beiden Eigenschaften festgelegt werden, aber Sie können beides festlegen.</span><span class="sxs-lookup"><span data-stu-id="96adb-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="96adb-235">Der Satz von Typen ist die kombinierte Menge aus den beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="96adb-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="96adb-236">Die Entscheidung, welche Eigenschaft verwendet werden soll, ist spezifisch für Ihre Anwendung.</span><span class="sxs-lookup"><span data-stu-id="96adb-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="96adb-237">Wenn der Nachrichtentext einen Typ enthält, dessen Schema keinem der Typen im Array für eine der Eigenschaften entspricht, wird eine Ausnahme ausgelöst, wenn die Nachricht gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="96adb-238">Die Zieltypen sind nur beim Lesen aus der Warteschlange erforderlich.</span><span class="sxs-lookup"><span data-stu-id="96adb-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="96adb-239">Die <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> -Eigenschaft und die-Eigenschaft <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> müssen nicht zum Schreiben in die Warteschlange festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="96adb-240">Wenn <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Sie anstelle von angeben <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> , wird das vorhanden sein des Typs zur Kompilierzeit anstelle der Lesezeit überprüft, wodurch die Fehlerwahrscheinlichkeit verringert wird.</span><span class="sxs-lookup"><span data-stu-id="96adb-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="96adb-241">Wenn <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Sie verwenden, können Sie jedes Objekt (z. b. `MyClass` ) der Liste auf eine Weise hinzufügen, die durch den c#-Code veranschaulicht wird `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};` .</span><span class="sxs-lookup"><span data-stu-id="96adb-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96adb-242">Im folgenden Codebeispiel wird eine Nachricht gesendet und empfangen, die eine Bestellung zu und aus einer Warteschlange enthält.</span><span class="sxs-lookup"><span data-stu-id="96adb-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-243">Die <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />-Eigenschaft ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As Message, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96adb-244">Die <see cref="T:System.Messaging.Message" />, deren <see cref="P:System.Messaging.Message.Body" />-Eigenschaft das serialisierte Objekt aufnimmt.</span><span class="sxs-lookup"><span data-stu-id="96adb-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="96adb-245">Das <see cref="T:System.Object" />, das in den Meldungstext serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="96adb-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="96adb-246">Serialisiert ein Objekt in den Textkörper der Meldung.</span><span class="sxs-lookup"><span data-stu-id="96adb-246">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96adb-247">Die Zieltypen müssen nicht so angegeben werden, dass Sie in die Warteschlange geschrieben werden, da Sie beim Lesen vorliegen müssen.</span><span class="sxs-lookup"><span data-stu-id="96adb-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="96adb-248">Die- <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Eigenschaft oder die- <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Eigenschaft wird vom Formatierer nur beim Deserialisieren einer Nachricht verwendet.</span><span class="sxs-lookup"><span data-stu-id="96adb-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="96adb-249">Die <xref:System.Messaging.XmlMessageFormatter> verwendet die- <xref:System.Xml.Serialization.XmlSerializer> Klasse, die definiert, was serialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96adb-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="96adb-250">Es können nur öffentliche Felder und öffentliche Eigenschaften serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="96adb-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="96adb-251">Strukturen, Strukturen mit Arrays und Arrays von Strukturen sind alle serialisierbar, sofern Sie nicht den codierten Stil mit dem SOAP-Protokoll verwenden.</span><span class="sxs-lookup"><span data-stu-id="96adb-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96adb-252">Der <paramref name="message" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-252">The <paramref name="message" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="96adb-253">- oder -</span><span class="sxs-lookup"><span data-stu-id="96adb-253">-or-</span></span> 
<span data-ttu-id="96adb-254">Der <paramref name="obj" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96adb-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
