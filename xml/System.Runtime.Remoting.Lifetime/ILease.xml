<Type Name="ILease" FullName="System.Runtime.Remoting.Lifetime.ILease">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03b1c106b34acd9b0bf000ddda1760ed525fb1e2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51861888" /></Metadata><TypeSignature Language="C#" Value="public interface ILease" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILease" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.ILease" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILease" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILease" />
  <TypeSignature Language="F#" Value="type ILease = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cb658-101">Definiert ein Lebensdauerlease-Objekt, das vom Remoting-Lebensdauerdienst verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="cb658-101">Defines a lifetime lease object that is used by the remoting lifetime service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-102">Verteilte Garbage Collection-Steuerelemente, bei serveranwendungen gelöscht werden können.</span><span class="sxs-lookup"><span data-stu-id="cb658-102">Distributed garbage collection controls when server applications can be deleted.</span></span> <span data-ttu-id="cb658-103">In der Vergangenheit verwendet verteilte Garbagecollection, Verweiszähler als auch für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="cb658-103">Traditionally, distributed garbage collection uses reference counts and pinging for control.</span></span> <span data-ttu-id="cb658-104">Dies funktioniert gut, wenn einige Clients pro Objekt funktioniert jedoch nicht gut, wenn es Tausende von Clients pro jedes Objekt gibt.</span><span class="sxs-lookup"><span data-stu-id="cb658-104">This works well when there are a few clients per object, but does not work well when there are thousands of clients per each object.</span></span> <span data-ttu-id="cb658-105">Der Lebensdauerdienst kann die Funktion von einem herkömmlichen verteilte Garbage Collector und Skalen in davon ausgehen, gut, wenn die Anzahl der Clients erhöht.</span><span class="sxs-lookup"><span data-stu-id="cb658-105">The lifetime service can assume the function of a traditional distributed garbage collector, and scales well when the number of clients increases.</span></span>  
  
 <span data-ttu-id="cb658-106">Der Lebensdauerdienst ordnet eine Lease mit jedem Remote aktivierter Objekt.</span><span class="sxs-lookup"><span data-stu-id="cb658-106">The lifetime service associates a lease with each remotely activated object.</span></span> <span data-ttu-id="cb658-107">Wenn die Lease abläuft, wird das Objekt entfernt.</span><span class="sxs-lookup"><span data-stu-id="cb658-107">When the lease expires, the object is removed.</span></span> <span data-ttu-id="cb658-108">Ein Objekt eine unendliche Lebensdauer hat kann eine Lease angeben.</span><span class="sxs-lookup"><span data-stu-id="cb658-108">A lease can specify that an object has an infinite lifetime.</span></span>  
  
 <span data-ttu-id="cb658-109">Jede <xref:System.AppDomain> enthält einen Lease-Manager, die die Leases in der Domäne verwaltet.</span><span class="sxs-lookup"><span data-stu-id="cb658-109">Each <xref:System.AppDomain> contains a lease manager that administers the leases in the domain.</span></span> <span data-ttu-id="cb658-110">Die Lease-Manager überprüft in regelmäßigen Abständen die Leasedauer für Ablaufzeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="cb658-110">The lease manager periodically examines the leases for time expiration.</span></span> <span data-ttu-id="cb658-111">Wenn eine Lease abgelaufen ist, möglich entweder durch Entfernen des Verweises auf die Lease abgebrochen, oder durch den Aufruf eine oder mehrere der Sponsoren mit der Lease erneuert.</span><span class="sxs-lookup"><span data-stu-id="cb658-111">If a lease has expired, it can either be canceled by removing its reference to the lease, or renewed by invoking one or more of the lease's sponsors.</span></span>  
  
 <span data-ttu-id="cb658-112">Eine Lease enthält Eigenschaften, die bestimmen, die Richtlinien und Methoden, die die Lease zu erneuern.</span><span class="sxs-lookup"><span data-stu-id="cb658-112">A lease contains properties that determine its policies, and methods that renew the lease time.</span></span> <span data-ttu-id="cb658-113">Die Lease macht die <xref:System.Runtime.Remoting.Lifetime.ILease> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="cb658-113">The lease exposes the <xref:System.Runtime.Remoting.Lifetime.ILease> interface.</span></span>  
  
 <span data-ttu-id="cb658-114">Ein Beispiel zur Verwendung der <xref:System.Runtime.Remoting.Lifetime.ILease> Schnittstelle finden Sie unter [Lebensdauer](https://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa).</span><span class="sxs-lookup"><span data-stu-id="cb658-114">For an example showing how to use the <xref:System.Runtime.Remoting.Lifetime.ILease> interface see [Lifetimes](https://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan CurrentLeaseTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CurrentLeaseTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentLeaseTime : TimeSpan" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb658-115">Ruft die für den Lease verbleibende Zeitspanne ab.</span><span class="sxs-lookup"><span data-stu-id="cb658-115">Gets the amount of time remaining on the lease.</span></span></summary>
        <value><span data-ttu-id="cb658-116">Die für den Lease verbleibende Zeitspanne.</span><span class="sxs-lookup"><span data-stu-id="cb658-116">The amount of time remaining on the lease.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-117">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-117">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-118">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-118">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-119">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-119">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Remoting.Lifetime.LeaseState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As LeaseState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Lifetime::LeaseState CurrentState { System::Runtime::Remoting::Lifetime::LeaseState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Runtime.Remoting.Lifetime.LeaseState" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Lifetime.LeaseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb658-120">Ruft den aktuellen <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> des Lease ab.</span><span class="sxs-lookup"><span data-stu-id="cb658-120">Gets the current <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> of the lease.</span></span></summary>
        <value><span data-ttu-id="cb658-121">Der aktuelle <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> des Lease.</span><span class="sxs-lookup"><span data-stu-id="cb658-121">The current <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> of the lease.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-122">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-122">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-123">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-123">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-124">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-124">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />
      </Docs>
    </Member>
    <Member MemberName="InitialLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan InitialLeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InitialLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InitialLeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InitialLeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb658-125">Ruft die Anfangsdauer für den Lease ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="cb658-125">Gets or sets the initial time for the lease.</span></span></summary>
        <value><span data-ttu-id="cb658-126">Die Anfangsdauer für den Lease.</span><span class="sxs-lookup"><span data-stu-id="cb658-126">The initial time for the lease.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-127">Wenn die <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> -Eigenschaftensatz auf <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, klicken Sie dann die Lease nie ab, und das Objekt zugeordnet wird eine unbegrenzte Lebensdauer haben.</span><span class="sxs-lookup"><span data-stu-id="cb658-127">If the <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, then the lease will never time out and the object associated with it will have an infinite lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-128">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-128">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-129">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-129">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-130">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-130">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb658-131">Registriert einen Sponsor für den Lease.</span><span class="sxs-lookup"><span data-stu-id="cb658-131">Registers a sponsor for the lease.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Register obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cb658-132">Das Rückrufobjekt des Sponsors.</span><span class="sxs-lookup"><span data-stu-id="cb658-132">The callback object of the sponsor.</span></span></param>
        <summary><span data-ttu-id="cb658-133">Registriert einen Sponsor für den Lease, ohne den Lease zu erneuern.</span><span class="sxs-lookup"><span data-stu-id="cb658-133">Registers a sponsor for the lease without renewing the lease.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-134">Wenn ein Sponsor mit der aktuellen Methode registriert ist, wird die Lease nicht erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="cb658-134">If a sponsor is registered with the current method, the lease is not renewed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-135">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-135">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-136">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-136">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-137">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-137">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj, valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor, renewalTime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj, TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor * TimeSpan -&gt; unit" Usage="iLease.Register (obj, renewalTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cb658-138">Das Rückrufobjekt des Sponsors.</span><span class="sxs-lookup"><span data-stu-id="cb658-138">The callback object of the sponsor.</span></span></param>
        <param name="renewalTime"><span data-ttu-id="cb658-139">Die Zeitspanne, um die der Lease erneuert wird.</span><span class="sxs-lookup"><span data-stu-id="cb658-139">The length of time to renew the lease by.</span></span></param>
        <summary><span data-ttu-id="cb658-140">Registriert einen Sponsor für den Lease und erneuert ihn um die angegebene <see cref="T:System.TimeSpan" />.</span><span class="sxs-lookup"><span data-stu-id="cb658-140">Registers a sponsor for the lease, and renews it by the specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-141">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-141">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-142">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-142">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-143">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public TimeSpan Renew (TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renew(valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renew (renewalTime As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Renew(TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Renew : TimeSpan -&gt; TimeSpan" Usage="iLease.Renew renewalTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="renewalTime"><span data-ttu-id="cb658-144">Die Zeitspanne, um die der Lease erneuert wird.</span><span class="sxs-lookup"><span data-stu-id="cb658-144">The length of time to renew the lease by.</span></span></param>
        <summary><span data-ttu-id="cb658-145">Erneuert einen Lease für die angegebene Zeit.</span><span class="sxs-lookup"><span data-stu-id="cb658-145">Renews a lease for the specified time.</span></span></summary>
        <returns><span data-ttu-id="cb658-146">Die neue Ablaufzeit des Lease.</span><span class="sxs-lookup"><span data-stu-id="cb658-146">The new expiration time of the lease.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-147">Die Leasedauer wird festgelegt, um die maximale Anzahl von der <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> oder die aktuelle Zeit plus der Erneuerungszeit.</span><span class="sxs-lookup"><span data-stu-id="cb658-147">The lease time is set to the maximum of the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> or the current time plus the renewal time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-148">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-148">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-149">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-149">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-150">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb658-151">Ruft die Zeitspanne ab, um die ein Aufruf des Remoteobjekts die <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> erneuert, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="cb658-151">Gets or sets the amount of time by which a call to the remote object renews the <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</span></span></summary>
        <value><span data-ttu-id="cb658-152">Die Zeitspanne, um die ein Aufruf des Remoteobjekts die <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> erneuert.</span><span class="sxs-lookup"><span data-stu-id="cb658-152">The amount of time by which a call to the remote object renews the <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-153">Der Lebensdauerdienst fügt hinzu, wenn Sie einen Aufruf eines Remoteobjekts vornehmen, die <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> auf die <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> nur, wenn die <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> wurde gelöscht, unter der <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb658-153">When you make a call to a remote object, the lifetime service adds the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> to the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> only if the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> has dropped below the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>.</span></span> <span data-ttu-id="cb658-154">Sequenzieller Aufrufe aus diesem Grund erhöhen Sie nicht die <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> grenzenlos.</span><span class="sxs-lookup"><span data-stu-id="cb658-154">Sequential calls therefore do not increase the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> without bound.</span></span> <span data-ttu-id="cb658-155">Stattdessen sofort nach jedem Aufruf, der <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> ist garantiert die <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> oder länger dauern.</span><span class="sxs-lookup"><span data-stu-id="cb658-155">Instead, immediately after any call, the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> is guaranteed to be the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> or longer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-156">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-156">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-157">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-157">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-158">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-158">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb658-159">Ruft die Zeitspanne ab, die gewartet werden soll, bis der Sponsor die Erneuerungszeit für den Lease zurückgibt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="cb658-159">Gets or sets the amount of time to wait for a sponsor to return with a lease renewal time.</span></span></summary>
        <value><span data-ttu-id="cb658-160">Die Zeitspanne, die gewartet werden soll, bis der Sponsor die Erneuerungszeit für den Lease zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="cb658-160">The amount of time to wait for a sponsor to return with a lease renewal time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb658-161">Wenn die <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> ist <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, und klicken Sie dann die Lease keine Sponsoren dauert.</span><span class="sxs-lookup"><span data-stu-id="cb658-161">If the <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, then this lease will not take sponsors.</span></span>  
  
 <span data-ttu-id="cb658-162">Wenn ein Sponsor nicht auf einen Aufruf zum Verlängern einer Lease innerhalb des Timeoutzeitraums antwortet, wird als inaktiv und aus der Liste der Sponsoren für die aktuelle Lease entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="cb658-162">If a sponsor does not respond to a call to renew a lease within the time-out period, it is assumed to be dead and is removed from the list of sponsors for the current lease.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-163">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-163">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-164">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-164">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-165">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-165">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Unregister obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cb658-166">Der Leasesponsor, dessen Registrierung aufgehoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="cb658-166">The lease sponsor to unregister.</span></span></param>
        <summary><span data-ttu-id="cb658-167">Entfernt einen Sponsor aus der Sponsorenliste.</span><span class="sxs-lookup"><span data-stu-id="cb658-167">Removes a sponsor from the sponsor list.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb658-168">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="cb658-168">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb658-169">für den Betrieb mit Infrastrukturcode.</span><span class="sxs-lookup"><span data-stu-id="cb658-169">for operating with infrastructure code.</span></span> <span data-ttu-id="cb658-170">Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="cb658-170">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>