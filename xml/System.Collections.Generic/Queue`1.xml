<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Queue`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">037e736f-f76f-422a-bcb7-5d2d599f851d1c2d7dc7812858c06960c802e58fd6d4ceab1e0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c2d7dc7812858c06960c802e58fd6d4ceab1e0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc53860cd2661bb7bde6e4b2858fcda4ec4c889</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Specifies the type of elements in the queue.</source>
          <target state="translated">Gibt den Typ der Elemente in der Warteschlange an.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Queue`1">
          <source>Represents a first-in, first-out collection of objects.</source>
          <target state="translated">Stellt eine FIFO-Auflistung (First-In-First-Out) von Objekten dar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>This class implements a generic queue as a circular array.</source>
          <target state="translated">Diese Klasse implementiert eine generische Warteschlange als zirkuläre Array.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Objects stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> are inserted at one end and removed from the other.</source>
          <target state="translated">In gespeicherten Objekte einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> an einem Ende eingefügt und von der anderen entfernt werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</source>
          <target state="translated">Warteschlangen und Stapel sind nützlich, wenn Sie die temporäre Speicherung für Informationen benötigen; d. h., wenn sein soll ein Element zu verwerfen, sobald dessen Wert abgerufen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> if you need to access the information in the same order that it is stored in the collection.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> Wenn müssen Sie die Informationen in der gleichen Reihenfolge zugegriffen werden, dass er in der Auflistung gespeichert wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> if you need to access the information in reverse order.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> Wenn Sie die Informationen in umgekehrter Reihenfolge zugreifen müssen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> if you need to access the collection from multiple threads concurrently.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> Wenn Sie die Sammlung von mehreren Threads gleichzeitig zugreifen müssen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Three main operations can be performed on a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> and its elements:</source>
          <target state="translated">Drei wichtigsten Operationen ausgeführt werden können, auf eine <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> und seine Elemente:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> adds an element to the end of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Fügt ein Element am Ende der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> removes the oldest element from the start of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Entfernt das älteste Element vom Anfang der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> peek returns the oldest element that is at the start of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> but does not remove it from the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Peek gibt das älteste Element am Anfang der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> jedoch nicht aus entfernt die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> ist die Anzahl der Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Öffentliche statische (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) Member dieses Typs sind threadsicher.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> Unterstützung für mehrere Reader gleichzeitig, solange die Auflistung nicht geändert wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Deshalb ist die Enumeration einer Auflistung systemintern kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Queue`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Klasse, die die Standardanfangskapazität aufweist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The following code example demonstrates this constructor and several other methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, diesen Konstruktor und mehrere andere Methoden, die von der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Die Auflistung, deren Elemente in die neue <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> kopiert werden.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> of the collection.</source>
          <target state="translated">Die Elemente kopiert werden, auf die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> in der gleichen Reihenfolge, die sie gelesen werden, indem Sie die <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> der Auflistung.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`collection`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The following code example demonstrates this constructor and several other methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, diesen Konstruktor und mehrere andere Methoden, die von der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> can contain.</source>
          <target state="translated">Die anfängliche Anzahl von Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> class that is empty and has the specified initial capacity.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Klasse, die die angegebene Anfangskapazität aufweist.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt alle Objekte aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> ist auf 0 (null) festgelegt, und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">Die Kapazität bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität des Zurücksetzen der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, rufen Sie <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob sich ein Element in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> befindet.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;paramref name="item" /&gt;</ph> in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> gefunden wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the queue.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Warteschlange.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Kopiert die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Elemente in ein vorhandenes eindimensionales <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, beginnend beim angegebenen Arrayindex.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, um die <ph id="ph1">&lt;xref:System.Array&gt;</ph> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente, die in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can store.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> speichern können.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität ist immer größer als oder gleich <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> überschreitet die Kapazität beim Hinzufügen von Elementen, die Kapazität wird erhöht, indem automatisch Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The following code example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, mehrere Eigenschaften und Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>Removes and returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Objekt am Anfang der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> und gibt es zurück.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The object that is removed from the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Das Objekt, das vom Anfang der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> entfernt wird.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Diese Methode ähnelt der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph>-Methode, aber <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> ändert die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> nicht.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>If type <ph id="ph1">`T`</ph> is a reference type, <ph id="ph2">`null`</ph> can be added to the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> as a value.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> ist ein Verweistyp <ph id="ph2">`null`</ph> hinzugefügt werden können, um die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> als Wert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Dequeue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Das Objekt, das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Fügt am Ende der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> ein Objekt hinzu.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> bereits gleich der Kapazität, die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> wird von automatisch Neuzuordnen des internen Arrays erhöht und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> ist kleiner als die Kapazität des internen Arrays, diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn des internen Arrays neu zugeordnet werden, um das neue Element aufzunehmen muss, wird diese Methode eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Sie können <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Wenn die Auflistung zwischen Aufrufen geändert wird <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> -Methode und Abrufen des Werts von der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> -Eigenschaft, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> sind nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The following code example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class is enumerable.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, dass die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generische Klasse aufzählbar ist.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) is used to enumerate the queue.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> Anweisung (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++) wird verwendet, um die Auflistung der Warteschlange.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>Returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> without removing it.</source>
          <target state="translated">Gibt das Objekt am Anfang der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> zurück, ohne es zu entfernen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Das Objekt am Anfang der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.</source>
          <target state="translated">Diese Methode ähnelt der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph>-Methode, aber <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> ändert die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> nicht.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>If type <ph id="ph1">`T`</ph> is a reference type, <ph id="ph2">`null`</ph> can be added to the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> as a value.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> ist ein Verweistyp <ph id="ph2">`null`</ph> hinzugefügt werden können, um die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> als Wert.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Sie können <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Wenn die Auflistung zwischen Aufrufen geändert wird <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> -Methode und Abrufen des Werts von der <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> -Eigenschaft, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> sind nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Kopiert die Elemente der <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, beginnend bei einem bestimmten <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>-Index.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Wenn der Typ der Quelle <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> kann nicht automatisch in den Typ des Ziels umgewandelt werden <ph id="ph2">`array`</ph>, die nicht generische Implementierungen von <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> auslösen <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, während die Implementierungen die generischen auslösen <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist mehrdimensional.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> hat keine nullbasierte Indizierung.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="index" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> kann nicht automatisch in den Typ des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Zugriff auf das <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert (threadsicher) ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">In der Standardimplementierung von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> sind nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> gibt ein Objekt zurück, mit dem der Zugriff auf <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor der Zugriff auf die Auflistung.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, mit dem der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">In der Standardimplementierung der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> sind nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> gibt ein Objekt zurück, mit dem der Zugriff auf <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor der Zugriff auf die Auflistung.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">Der folgende Code zeigt die Verwendung der <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> -Eigenschaft für c#, C++ und Visual Basic.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Wenn die Auflistung zwischen Aufrufen geändert wird <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> -Methode und Abrufen des Werts von der <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> -Eigenschaft, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> sind nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> elements to a new array.</source>
          <target state="translated">Kopiert die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>-Elemente in ein neues Array.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>A new array containing elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Ein neues Array mit Elementen, die aus <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> kopiert werden.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> is not modified.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The order of the elements in the new array is the same as the order of the elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to its end.</source>
          <target state="translated">Die Reihenfolge der Elemente im neuen Array entspricht der Reihenfolge der Elemente vom Anfang der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> bis Ende.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The following code example demonstrates several methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht verschiedene Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The code example creates a queue of strings with default capacity and uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> method to queue five strings.</source>
          <target state="translated">Das Codebeispiel erstellt eine Warteschlange von Zeichenfolgen mit Standardkapazität und verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enqueue%2A&gt;</ph> Methode, um fünf Zeichenfolgen in die Warteschlange.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The elements of the queue are enumerated, which does not change the state of the queue.</source>
          <target state="translated">Die Elemente der Warteschlange werden aufgelistet, die ändert nicht den Status der Warteschlange.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue the first string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um die erste Zeichenfolge aus der Warteschlange entfernen.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> method is used to look at the next item in the queue, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> method is used to dequeue it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Peek%2A&gt;</ph> Methode wird verwendet, um mit dem nächsten Element in der Warteschlange zu suchen und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Dequeue%2A&gt;</ph> Methode wird verwendet, um aus der Warteschlange entfernt.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> method is used to create an array and copy the queue elements to it, then the array is passed to the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor that takes <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, creating a copy of the queue.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.ToArray%2A&gt;</ph> Methode wird verwendet, um ein Array erstellen, und kopieren sie die Elemente der Warteschlange und dann das Array übergeben wird, um die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor, akzeptiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, erstellen eine Kopie der Warteschlange.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The elements of the copy are displayed.</source>
          <target state="translated">Die Elemente des Kopiervorgangs werden angezeigt.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>An array twice the size of the queue is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> method is used to copy the array elements beginning at the middle of the array.</source>
          <target state="translated">Ein Array mit der zweimal der Größe der Warteschlange erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.CopyTo%2A&gt;</ph> Methode wird verwendet, um die Elemente des Arrays in der Mitte des Arrays ab.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.%23ctor%2A&gt;</ph> Konstruktor wird erneut verwendet, um eine zweite Kopie der Warteschlange mit drei null Elementen am Anfang zu erstellen.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> method is used to show that the string "four" is in the first copy of the queue, after which the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method clears the copy and the <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> property shows that the queue is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Contains%2A&gt;</ph> Methode wird verwendet, um anzuzeigen, dass die Zeichenfolge "4" in der ersten Kopie der Warteschlange ab, nach dem die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode löscht das Kopieren und die <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph> Eigenschaft zeigt, dass die Warteschlange leer ist.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>, if that number is less than 90 percent of current capacity.</source>
          <target state="translated">Legt die Kapazität auf die Anzahl der tatsächlich im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> befindlichen Elemente fest, sofern diese Anzahl unter 90 Prozent der aktuellen Kapazität liegt.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Diese Methode kann verwendet werden, um Speicher für eine Auflistung Mehraufwand zu minimieren, wenn die Auflistung keine neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>The cost of reallocating and copying a large <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> can be considerable, however, so the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> method does nothing if the list is at more than 90 percent of capacity.</source>
          <target state="translated">Die Kosten erneut zugewiesen werden, und Kopieren einer großen <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> jedoch sehr aufwändig sein kann daher die <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> Methode bewirkt nichts, wenn die Liste an mehr als 90 % der Kapazität ist.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This avoids incurring a large reallocation cost for a relatively small gain.</source>
          <target state="translated">Dadurch wird vermieden, für einen relativ kleinen zu großen neuzuordnungen Kosten anfallen.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> method.</source>
          <target state="translated">Zurücksetzen einer <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> Aufrufen auf ihren ursprünglichen Zustand der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Clear%2A&gt;</ph> Methode vor dem Aufruf <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.TrimExcess%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.TrimExcess">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>