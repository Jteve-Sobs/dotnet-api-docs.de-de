<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61e63626b0ffa63451d93d574b0dc718df93ae7a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="0ce69-101">Der Typ der zu vergleichenden Objekte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce69-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="0ce69-102">Stellt eine Basisklasse für Implementierungen der generischen <see cref="T:System.Collections.Generic.IComparer`1" />-Schnittstelle bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce69-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce69-103">Ableiten von dieser Klasse, die eine benutzerdefinierte Implementierung von der <xref:System.Collections.Generic.IComparer%601> Schnittstelle für die Verwendung mit Auflistungsklassen, z. B. die <xref:System.Collections.Generic.SortedList%602> und <xref:System.Collections.Generic.SortedDictionary%602> generische Klassen.</span><span class="sxs-lookup"><span data-stu-id="0ce69-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="0ce69-104">Der Unterschied zwischen der Ableitung von der <xref:System.Collections.Generic.Comparer%601> Klasse und Implementieren der <xref:System.IComparable?displayProperty=nameWithType> Schnittstelle lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="0ce69-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="0ce69-105">Angeben, wie zwei Objekte standardmäßig verglichen werden sollen, implementieren die <xref:System.IComparable?displayProperty=nameWithType> Schnittstelle in der Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="0ce69-106">Dadurch wird sichergestellt, dass Sortiervorgänge den Standardcode für den Vergleich verwendet, den Sie bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="0ce69-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="0ce69-107">Zum Definieren eines Vergleichs anstelle der Standardvergleich verwendet Ableiten der <xref:System.Collections.Generic.Comparer%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="0ce69-108">Sie können dieses Vergleichs klicken Sie dann in Sortiervorgänge verwenden, die einen Vergleich als Parameter akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="0ce69-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="0ce69-109">Das zurückgegebene Objekt der <xref:System.Collections.Generic.Comparer%601.Default%2A> Eigenschaft verwendet die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle (`IComparable<T>` in c# `IComparable(Of T)` in Visual Basic) um zwei Objekte zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="0ce69-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="0ce69-110">Wenn Typ `T` implementiert nicht die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstellen, die <xref:System.Collections.Generic.Comparer%601.Default%2A> Eigenschaft gibt eine <xref:System.Collections.Generic.Comparer%601> , verwendet die <xref:System.IComparable?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="0ce69-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce69-111">Im folgende Beispiel wird eine Klasse abgeleitet `BoxLengthFirst`, aus der <xref:System.Collections.Generic.Comparer%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="0ce69-112">Dieser Vergleich vergleicht zwei Objekte des Typs `Box`.</span><span class="sxs-lookup"><span data-stu-id="0ce69-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="0ce69-113">Sortiert zuerst nach Länge, und klicken Sie dann durch die Höhe und dann nach Breite.</span><span class="sxs-lookup"><span data-stu-id="0ce69-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="0ce69-114">Die `Box` -Klasse implementiert die <xref:System.IComparable%601> Schnittstelle zum Steuern der Standardvergleich zwischen zwei `Box` Objekte.</span><span class="sxs-lookup"><span data-stu-id="0ce69-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="0ce69-115">Diese Standardimplementierung wird zuerst sortiert, durch die Höhe, und klicken Sie dann durch die Länge und dann nach Breite.</span><span class="sxs-lookup"><span data-stu-id="0ce69-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="0ce69-116">Das Beispiel zeigt die Unterschiede zwischen den zwei Vergleiche beim Sortieren einer Liste der `Box` Objekte zunächst mithilfe der `BoxLengthFirst` Vergleich und mithilfe des Standardcomparers.</span><span class="sxs-lookup"><span data-stu-id="0ce69-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="0ce69-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> und <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> möglicherweise im Hinblick auf die Berücksichtigung von Kultur und Groß-/Kleinschreibung unterschiedlich Verhalten.  Für Zeichenfolgenvergleiche die <see cref="T:System.StringComparer" /> Klasse vorzuziehen <c>Vergleich&lt;Zeichenfolge&gt;</c>.  Eigenschaften der <see cref="T:System.StringComparer" /> Klasse zurückgeben, vordefinierte Instanzen, die Zeichenfolgenvergleiche mit verschiedenen Kombinationen der Berücksichtigung von Kultur und Groß-/Kleinschreibung durchzuführen.  Die Groß-und Kleinschreibung und Berücksichtigung der Kultur entsprechen den Namen der Elemente des gleichen <see cref="T:System.StringComparer" /> Instanz.  Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <see cref="N:System.Globalization" /> Namespace und [Globalisierung und Localization](~/docs/standard/globalization-localization/index.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce69-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce69-118">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.Comparer`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0ce69-119">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0ce69-120">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce69-121">Vergleicht beim Überschreiben in einer abgeleiteten Klasse zwei Objekte gleichen Typs und gibt über den zurückgegebenen Wert an, ob das eine Objekt kleiner, größer oder gleich dem anderen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ce69-122">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="0ce69-123">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedeutung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist kleiner als <paramref name="y" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist gleich <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist größer als <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce69-124">Implementieren Sie diese Methode zum Bereitstellen einer benutzerdefinierten Vergleich für den Typ der Sortierreihenfolge `T`.</span><span class="sxs-lookup"><span data-stu-id="0ce69-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce69-125">Das folgende Beispiel definiert einen Vergleich eines `Box` Objekte, die statt der Standardvergleich verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="0ce69-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="0ce69-126">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.Comparer%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ce69-127">Der Typ <paramref name="T" /> implementiert weder die generische <see cref="T:System.IComparable`1" />-Schnittstelle noch die <see cref="T:System.IComparable" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0ce69-128">
            <para>Vergleichen von <see langword="null" /> mit einem beliebigen Verweistyp ist zulässig und löst keine Ausnahme. Ein null-Verweis gilt als kleiner als jedes beliebige Verweis handeln, der nicht null ist.  Informationen über kulturabhängige Vergleiche finden Sie unter der <see cref="N:System.Globalization" /> Namespace und [Globalisierung und Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="0ce69-129">Der Vergleich, der verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce69-130">Erstellt mithilfe des angegebenen Vergleichs einen Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ce69-131">Der neue Comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce69-132">Gibt für den vom generischen Argument angegebenen Typ einen Standardvergleich für die Sortierreihenfolgen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce69-133">Ein Objekt, das <see cref="T:System.Collections.Generic.Comparer`1" /> erbt und als Sortierreihenfolgenvergleich für den Typ <paramref name="T" /> fungiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce69-134">Die <xref:System.Collections.Generic.Comparer%601> von dieser Eigenschaft zurückgegebene verwendet die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle (`IComparable<T>` in c# `IComparable(Of T)` in Visual Basic), zwei Objekte zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="0ce69-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="0ce69-135">Wenn Typ `T` implementiert nicht die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstellen, die diese Eigenschaft gibt eine <xref:System.Collections.Generic.Comparer%601> , verwendet die <xref:System.IComparable?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="0ce69-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce69-136">Das folgende Beispiel zeigt, wie Sie die <xref:System.Collections.Generic.Comparer%601.Default%2A> Eigenschaft, um ein Objekt abzurufen, die den Standardvergleich ausführt.</span><span class="sxs-lookup"><span data-stu-id="0ce69-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="0ce69-137">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.Comparer%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="0ce69-138">
            <para>Für Zeichenfolgenvergleiche die <see cref="T:System.StringComparer" /> Klasse vorzuziehen <c>Vergleich&lt;Zeichenfolge&gt; </c> (<c>Vergleich (der Zeichenfolge)</c> in Visual Basic).  Eigenschaften der <see cref="T:System.StringComparer" /> Klasse zurückgeben, vordefinierte Instanzen, die Zeichenfolgenvergleiche mit verschiedenen Kombinationen der Berücksichtigung von Kultur und Groß-/Kleinschreibung durchzuführen.  Die Groß-und Kleinschreibung und Berücksichtigung der Kultur entsprechen den Namen der Elemente des gleichen <see cref="T:System.StringComparer" /> Instanz.  Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <see cref="N:System.Globalization" /> Namespace und [Globalisierung und Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0ce69-139">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0ce69-140">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce69-141">Vergleicht zwei Objekte und gibt einen Wert zurück, der angibt, ob ein Wert niedriger, gleich oder größer als der andere Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ce69-142">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="0ce69-143">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedeutung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist kleiner als <paramref name="y" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist gleich <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="x" /> ist größer als <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce69-144">Diese Methode ist ein Wrapper für die <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> Methode, sodass `obj` müssen in den vom generischen Argument angegebenen Typ umgewandelt werden `T` der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="0ce69-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="0ce69-145">Wenn es in umgewandelt werden kann `T`, wird eine <xref:System.ArgumentException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0ce69-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="0ce69-146">Vergleichen von `null` mit einem beliebigen Verweistyp ist zulässig und löst keine Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="0ce69-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="0ce69-147">Beim Sortieren `null` gilt als kleiner als ein anderes Objekt sein.</span><span class="sxs-lookup"><span data-stu-id="0ce69-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce69-148">Das folgende Beispiel zeigt, wie Sie die <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> Methode, um zwei Objekte zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="0ce69-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="0ce69-149">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.Comparer%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="0ce69-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ce69-150">
            <paramref name="x" /> oder <paramref name="y" /> weist einen Typ auf, der nicht in den Typ <paramref name="T" /> umgewandelt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="0ce69-151">Oder:  <paramref name="x" /> und <paramref name="y" /> implementieren weder die generische <see cref="T:System.IComparable`1" />-Schnittstelle noch die <see cref="T:System.IComparable" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0ce69-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> und <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> im Hinblick auf die Berücksichtigung von Kultur und Groß-/Kleinschreibung unterschiedlich Verhalten.  Für Zeichenfolgenvergleiche die <see cref="T:System.StringComparer" /> Klasse vorzuziehen <c>Vergleich&lt;Zeichenfolge&gt;</c>.  Eigenschaften der <see cref="T:System.StringComparer" /> Klasse zurückgeben, vordefinierte Instanzen, die Zeichenfolgenvergleiche mit verschiedenen Kombinationen der Berücksichtigung von Kultur und Groß-/Kleinschreibung durchzuführen.  Die Groß-und Kleinschreibung und Berücksichtigung der Kultur entsprechen den Namen der Elemente des gleichen <see cref="T:System.StringComparer" /> Instanz.  Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <see cref="N:System.Globalization" /> Namespace und [Globalisierung und Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce69-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>