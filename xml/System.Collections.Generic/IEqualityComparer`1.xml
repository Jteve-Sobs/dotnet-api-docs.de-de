<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78f5f880c2576871a23da87bc920a24623252c3e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70526511" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Der Typ der zu vergleichenden Objekte.</typeparam>
    <summary>Definiert Methoden, die den Vergleich von Objekten auf Gleichheit unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht die Implementierung des angepassten Gleichheits Vergleichs für Auflistungen. Das heißt, Sie können eine eigene Definition der Gleichheit für den- `T`Typ erstellen und angeben, dass diese Definition mit einem Sammlungstyp verwendet werden <xref:System.Collections.Generic.IEqualityComparer%601> soll, der die generische-Schnittstelle annimmt. Im .NET Framework akzeptieren Konstruktoren des <xref:System.Collections.Generic.Dictionary%602> generischen Auflistungs Typs diese Schnittstelle.  
  
 Eine Standard Implementierung dieser Schnittstelle wird von der <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> -Eigenschaft <xref:System.Collections.Generic.EqualityComparer%601> der generischen-Klasse bereitgestellt. Die <xref:System.StringComparer> -Klasse <xref:System.Collections.Generic.IEqualityComparer%601> implementiert den <xref:System.String>-Typ.  
  
 Diese Schnittstelle unterstützt nur Gleichheits Vergleiche. Die Anpassung von vergleichen für Sortierung und Sortierung wird von der <xref:System.Collections.Generic.IComparer%601> generischen-Schnittstelle bereitgestellt.  
  
 Es wird empfohlen, dass Sie von <xref:System.Collections.Generic.EqualityComparer%601> der-Klasse ableiten, <xref:System.Collections.Generic.IEqualityComparer%601> anstatt die-Schnitt <xref:System.Collections.Generic.EqualityComparer%601> Stelle zu implementieren, da die <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> -Klasse mithilfe der <xref:System.Object.Equals%2A?displayProperty=nameWithType> -Methode anstelle der-Methode auf Gleichheit prüft. Dies entspricht `Contains`den Methoden, `LastIndexOf` `IndexOf`, und `Remove` der <xref:System.Collections.Generic.Dictionary%602> -Klasse und anderen generischen Auflistungen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden einer `Box` Wörterbuch Auflistung benutzerdefinierte-Objekte hinzugefügt. Die `Box` Objekte werden als gleich betrachtet, wenn ihre Dimensionen identisch sind.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Das erste zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
        <param name="y">Das zweite zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
        <summary>Bestimmt, ob die angegebenen Objekte gleich sind.</summary>
        <returns><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um einen angepassten Gleichheits Vergleich `T`für den Typ bereitzustellen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Implementierungen sind erforderlich, um sicherzustellen, <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> dass <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> <paramref name="x" /> <see langword="true" /> der Wert, der von <paramref name="y" />der-Methode für <paramref name="x" /> zurückgegeben wird, gleich dem Wert ist, der für <paramref name="y" />.  
  
Die <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Methode ist reflexiv, symmetrisch und transitiv. Das heißt, es wird <see langword="true" /> zurückgegeben, wenn es zum Vergleichen eines Objekts mit sich selbst verwendet wird. <see langword="true" /> <paramref name="y" /> für zwei <see langword="true" />  - <paramref name="x" /> Objekte <paramref name="y" /> und, wenn Sie für und <paramref name="x" /> und für zwei- <paramref name="x" /> Objekte und <paramref name="z" />  für <see langword="true" />  <see langword="true" />  <paramref name="x" /> und und auch <see langword="true" />  für <paramref name="z" /> und. <paramref name="y" /> <paramref name="y" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
        <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
        <returns>Ein Hashcode für das angegebene Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um einen angepassten Hashcode für `T`den Typ bereitzustellen, der dem von der <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> -Methode bereitgestellten angepassten Gleichheits Vergleich entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Implementierungen sind erforderlich, um sicherzustellen, <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> dass <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> <paramref name="x" /> <see langword="true" /> der Wert, der von <paramref name="y" />der-Methode für <paramref name="x" /> zurückgegeben wird, gleich dem Wert ist, der für <paramref name="y" />.</para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
