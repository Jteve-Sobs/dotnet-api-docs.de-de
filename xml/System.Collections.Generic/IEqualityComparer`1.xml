<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="decdea94bd4918ad36e9d8241556edcec5d23176" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375845" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Der Typ der zu vergleichenden Objekte.</typeparam>
    <summary>Definiert Methoden zur Unterstützung der Gleichheitsüberprüfung von Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht die Implementierung des angepassten Gleichheits Vergleichs für Auflistungen. Das heißt, Sie können eine eigene Definition der Gleichheit für den Typ `T`erstellen und angeben, dass diese Definition mit einem Sammlungstyp verwendet werden soll, der die generische <xref:System.Collections.Generic.IEqualityComparer%601>-Schnittstelle annimmt. Im .NET Framework akzeptieren Konstruktoren des <xref:System.Collections.Generic.Dictionary%602> generischen Auflistungs Typs diese Schnittstelle.  
  
 Eine Standard Implementierung dieser Schnittstelle wird von der <xref:System.Collections.Generic.EqualityComparer%601.Default%2A>-Eigenschaft der generischen Klasse <xref:System.Collections.Generic.EqualityComparer%601> bereitgestellt. Die <xref:System.StringComparer>-Klasse implementiert <xref:System.Collections.Generic.IEqualityComparer%601> vom Typ <xref:System.String>.  
  
 Diese Schnittstelle unterstützt nur Gleichheits Vergleiche. Die Anpassung von vergleichen für Sortierung und Sortierung wird durch die <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle bereitgestellt.  
  
 Es wird empfohlen, dass Sie von der <xref:System.Collections.Generic.EqualityComparer%601>-Klasse ableiten, anstatt die <xref:System.Collections.Generic.IEqualityComparer%601>-Schnittstelle zu implementieren, da die <xref:System.Collections.Generic.EqualityComparer%601>-Klasse mit der <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>-Methode anstelle der <xref:System.Object.Equals%2A?displayProperty=nameWithType>-Methode auf Gleichheit prüft. Dies entspricht den Methoden `Contains`, `IndexOf`, `LastIndexOf`und `Remove` der <xref:System.Collections.Generic.Dictionary%602>-Klasse und anderer generischer Auflistungen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden einer Wörterbuch Auflistung benutzerdefinierte `Box`-Objekte hinzugefügt. Die `Box` Objekte werden als gleich betrachtet, wenn ihre Dimensionen identisch sind.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Das erste zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
        <param name="y">Das zweite zu vergleichende Objekt vom Typ <paramref name="T" />.</param>
        <summary>Bestimmt, ob die angegebenen Objekte gleich sind.</summary>
        <returns><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um einen angepassten Gleichheits Vergleich für den Typ `T`bereitzustellen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Implementierungen sind erforderlich, um sicherzustellen, dass der Wert, der von der <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />-Methode für <paramref name="x" /> zurückgegeben wird, mit dem für <paramref name="y" />zurückgegebenen Wert übereinstimmt, wenn die <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Methode <see langword="true" /> für zwei-Objekte zurückgibt <paramref name="x" /> und <paramref name="y" />.  
  
Die <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />-Methode ist reflexiv, symmetrisch und transitiv. Das heißt, es wird <see langword="true" /> zurückgegeben, wenn es zum Vergleichen eines Objekts mit sich selbst verwendet wird. <see langword="true" /> für zwei Objekte <paramref name="x" /> und <paramref name="y" />, wenn es <see langword="true" /> für <paramref name="y" /> und <paramref name="x" />ist. und <see langword="true" /> für zwei Objekte <paramref name="x" /> und <paramref name="z" />, wenn es <see langword="true" /> für <paramref name="x" /> und <paramref name="y" /> ist und für <see langword="true" /> und <paramref name="y" /> <paramref name="z" />ist.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
        <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
        <returns>Ein Hashcode für das angegebene Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um einen angepassten Hashcode für den Typ `T`bereitzustellen, der dem angepassten Gleichheits Vergleich der <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A>-Methode entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Implementierungen sind erforderlich, um sicherzustellen, dass der Wert, der von der <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />-Methode für <paramref name="x" /> zurückgegeben wird, mit dem für <paramref name="y" />zurückgegebenen Wert übereinstimmt, wenn die <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Methode <see langword="true" /> für zwei-Objekte zurückgibt <paramref name="x" /> und <paramref name="y" />.</para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
