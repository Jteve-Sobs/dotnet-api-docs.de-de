<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5409aafaaeb1a45def93fc63cf77604f971545e0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645565" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Der Typ der zu vergleichenden Objekte.</typeparam>
    <summary>Definiert Methoden zur Unterstützung der Gleichheitsüberprüfung von Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht die Implementierung des benutzerdefinierten Gleichheitsvergleich für Sammlungen. D. h. Sie können eigene Definition auf Wertgleichheit für den Typ erstellen `T`, und geben an, dass diese Definition mit einem Auflistungstyp verwendet wird, akzeptiert der <xref:System.Collections.Generic.IEqualityComparer%601> generische Schnittstelle. In .NET Framework, Konstruktoren, der die <xref:System.Collections.Generic.Dictionary%602> generischer Auflistungstyp akzeptieren Sie diese Schnittstelle.  
  
 Eine standardmäßige Implementierung dieser Schnittstelle wird bereitgestellt, indem Sie die <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> Eigenschaft von der <xref:System.Collections.Generic.EqualityComparer%601> generische Klasse. Die <xref:System.StringComparer> -Klasse implementiert <xref:System.Collections.Generic.IEqualityComparer%601> vom Typ <xref:System.String>.  
  
 Diese Schnittstelle unterstützt nur Übereinstimmungsvergleiche. Die Anpassung der Vergleiche für sortierungs- und reihenfolgensematik der <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle.  
  
 Es wird empfohlen, dass beim Ableiten von der <xref:System.Collections.Generic.EqualityComparer%601> Klasse anstatt zu implementieren die <xref:System.Collections.Generic.IEqualityComparer%601> Schnittstelle, da die <xref:System.Collections.Generic.EqualityComparer%601> -Klasse Tests für die Verwendung von Gleichheit der <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> -Methode anstelle der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode. Dies ist konsistent mit der `Contains`, `IndexOf`, `LastIndexOf`, und `Remove` Methoden die <xref:System.Collections.Generic.Dictionary%602> Klassen- und andere generischen Auflistungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die benutzerdefinierte `Box` Objekte ein Dictionary-Auflistung. Die `Box` Objekte werden als gleich betrachtet, wenn ihre Dimensionen identisch sind.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Das erste zu vergleichende Objekt vom Typ <c>T</c>.</param>
        <param name="y">Das zweite zu vergleichende Objekt vom Typ <c>T</c>.</param>
        <summary>Bestimmt, ob die angegebenen Objekte gleich sind.</summary>
        <returns>
          <see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode zum Bereitstellen eines benutzerdefinierten Gleichheitsvergleich für den Typ `T`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Implementierungen sind erforderlich, um sicherzustellen, dass bei der <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> -Methode zurückkehrt <see langword="true" /> für zwei Objekte <c>x</c> und <c>y</c>, klicken Sie dann den Rückgabewert von der <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> Methode zum <c>x</c> für zurückgegebenen Wert muss gleich <c>y</c>.  Die <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Methode ist reflexiv, symmetrisch und transitiv. Das heißt, die Rückgabe <see langword="true" /> Wenn verwendet, um ein Objekt mit sich selbst; verglichen werden soll. <see langword="true" /> für zwei Objekte <c>x</c> und <c>y</c> wird jedoch <see langword="true" /> für <c>y</c> und <c>x</c>; und <see langword="true" /> für zwei Objekte <c>x</c> und <c>z</c> wird jedoch <see langword="true" /> für <c>x</c> und <c>y</c> sowie <see langword="true" /> für <c>y</c> und <c>z</c>.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
        <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
        <returns>Ein Hashcode für das angegebene Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um einen benutzerdefinierten Hashcode für den Typ bereitstellen `T`, entspricht der benutzerdefinierten Gleichheitsvergleich gemäß der <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Implementierungen sind erforderlich, um sicherzustellen, dass bei der <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> -Methode zurückkehrt <see langword="true" /> für zwei Objekte <c>x</c> und <c>y</c>, klicken Sie dann den Rückgabewert von der <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> Methode zum <c>x</c> für zurückgegebenen Wert muss gleich <c>y</c>.</para>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>