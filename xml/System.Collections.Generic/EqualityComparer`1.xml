<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="10326-101">Der Typ der zu vergleichenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="10326-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="10326-102">Stellt eine Basisklasse für Implementierungen der generischen <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Schnittstelle bereit.</span><span class="sxs-lookup"><span data-stu-id="10326-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10326-103">Ableiten von dieser Klasse, die eine benutzerdefinierte Implementierung von der <xref:System.Collections.Generic.IEqualityComparer%601> generische Schnittstelle für die Verwendung mit Auflistung Klassen wie der <xref:System.Collections.Generic.Dictionary%602> generische Klasse oder mit Methoden wie z. B. <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="10326-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="10326-104">Die <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> -Eigenschaft überprüft, ob der Typ `T` implementiert die <xref:System.IEquatable%601?displayProperty=nameWithType> generische Schnittstelle und gibt Sie zurück, wenn dies der Fall ist, ein <xref:System.Collections.Generic.EqualityComparer%601> , die die Implementierung der aufruft die <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="10326-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="10326-105">Andernfalls gibt es eine <xref:System.Collections.Generic.EqualityComparer%601>, vom bereitgestellten `T`.</span><span class="sxs-lookup"><span data-stu-id="10326-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="10326-106">Es wird empfohlen, dass beim Ableiten von der <xref:System.Collections.Generic.EqualityComparer%601> Klasse anstatt zu implementieren die <xref:System.Collections.Generic.IEqualityComparer%601> Schnittstelle, da die <xref:System.Collections.Generic.EqualityComparer%601> -Klasse Tests für die Verwendung von Gleichheit der <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> -Methode anstelle der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="10326-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="10326-107">Dies ist konsistent mit der `Contains`, `IndexOf`, `LastIndexOf`, und `Remove` Methoden die <xref:System.Collections.Generic.Dictionary%602> Klassen- und andere generischen Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="10326-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10326-108">Das folgende Beispiel erstellt eine Dictionary-Auflistung von Objekten des Typs `Box` mit einen Gleichheitsvergleich.</span><span class="sxs-lookup"><span data-stu-id="10326-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="10326-109">Zwei Felder als gleich betrachtet, wenn ihre Dimensionen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="10326-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="10326-110">Anschließend werden der Auflistung der Felder hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10326-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="10326-111">Das Wörterbuch wird neu erstellt, mit einem Gleichheitsvergleich, der Gleichheit auf eine andere Weise definiert: zwei Felder werden als gleich betrachtet, wenn ihre Volumes identisch sind.</span><span class="sxs-lookup"><span data-stu-id="10326-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10326-112">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.EqualityComparer`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="10326-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10326-113">Gibt für den vom generischen Argument angegebenen Typ einen Standardgleichheitsvergleich zurück.</span><span class="sxs-lookup"><span data-stu-id="10326-113">Returns a default equality comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="10326-114">Die Standardinstanz der <see cref="T:System.Collections.Generic.EqualityComparer`1" />-Klasse für den Typ <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="10326-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10326-115">Die <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> -Eigenschaft überprüft, ob der Typ `T` implementiert die <xref:System.IEquatable%601?displayProperty=nameWithType> Schnittstelle, und wenn dies der Fall ist, gibt eine <xref:System.Collections.Generic.EqualityComparer%601> , diese Implementierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="10326-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="10326-116">Zurückgegeben, andernfalls ein <xref:System.Collections.Generic.EqualityComparer%601> , verwendet das Überschreibungsverhalten für <xref:System.Object.Equals%2A?displayProperty=nameWithType> und <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> gebotenen `T`.</span><span class="sxs-lookup"><span data-stu-id="10326-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10326-117">Das folgende Beispiel erstellt zwei wörterbuchsammlungen vom Typ `Box`.</span><span class="sxs-lookup"><span data-stu-id="10326-117">The following example creates two dictionary collections of type `Box`.</span></span> <span data-ttu-id="10326-118">Beide Wörterbücher werden erstellt, mit dem Konstruktor, verwendet eine <xref:System.Collections.Generic.EqualityComparer%601> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="10326-118">Both dictionaries are created with the constructor that takes an <xref:System.Collections.Generic.EqualityComparer%601> as a parameter.</span></span>  
  
 <span data-ttu-id="10326-119">Bestimmen die Gleichheit der Wörterbuchschlüssel, die `boxesByDim` Wörterbuch verwendet einen Gleichheitsvergleich (`BoxEqDimensions`), verwendet die Implementierung von der <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> Methode in der `Box` Klasse.</span><span class="sxs-lookup"><span data-stu-id="10326-119">To determine the equality of dictionary keys, the `boxesByDim` dictionary uses an equality comparer (`BoxEqDimensions`) that uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="10326-120">Zwei Felder als gleich betrachtet, wenn ihre Dimensionen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="10326-120">Two boxes are considered equal if their dimensions are the same.</span></span>  
  
 <span data-ttu-id="10326-121">Die `boxesByVol` Wörterbuch verwendet einen Gleichheitsvergleich (`BoxEqVolume`), der auf Gleichheit nach Volume definiert.</span><span class="sxs-lookup"><span data-stu-id="10326-121">The `boxesByVol` dictionary uses an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="10326-122">Zwei Felder als gleich betrachtet, wenn ihre Volumes identisch sind.</span><span class="sxs-lookup"><span data-stu-id="10326-122">Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-cpp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cpp/program.cpp#1)]
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="10326-123">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="10326-124">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="10326-125">Ermittelt beim Überschreiben in einer abgeleiteten Klasse, ob zwei Objekte vom Typ <typeparamref name="T" /> gleich sind.</span><span class="sxs-lookup"><span data-stu-id="10326-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="10326-126"><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10326-126"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10326-127">Die <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> Methode ist reflexiv, symmetrisch und transitiv.</span><span class="sxs-lookup"><span data-stu-id="10326-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="10326-128">Das heißt, die Rückgabe `true` Wenn verwendet, um ein Objekt mit sich selbst; verglichen werden soll. `true` für zwei Objekte `x` und `y` wird jedoch `true` für `y` und `x`; und `true` für zwei Objekte `x` und `z` wird jedoch `true` für `x` und `y` sowie `true` für `y` und `z`.</span><span class="sxs-lookup"><span data-stu-id="10326-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="10326-129">Implementierungen sind erforderlich, um sicherzustellen, dass bei der <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> -Methode zurückkehrt <see langword="true" /> für zwei Objekte <c>x</c> und <c>y</c>, klicken Sie dann den Rückgabewert von der <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> Methode zum <c>x</c> für zurückgegebenen Wert muss gleich <c>y</c>.</span><span class="sxs-lookup"><span data-stu-id="10326-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="10326-130">Das Objekt, für das ein Hashcode abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10326-130">The object for which to get a hash code.</span></span></param>
        <summary><span data-ttu-id="10326-131">Dient beim Überschreiben in einer abgeleiteten Klasse für das angegebene Objekt als Hashfunktion für Hashalgorithmen und Datenstrukturen wie Hashtabellen.</span><span class="sxs-lookup"><span data-stu-id="10326-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="10326-132">Ein Hashcode für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-132">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10326-133">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="10326-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="10326-134">Implementierungen sind erforderlich, um sicherzustellen, dass bei der <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> -Methode zurückkehrt <see langword="true" /> für zwei Objekte <c>x</c> und <c>y</c>, klicken Sie dann den Rückgabewert von der <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> Methode zum <c>x</c> für zurückgegebenen Wert muss gleich <c>y</c>.</span><span class="sxs-lookup"><span data-stu-id="10326-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="10326-135">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-135">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="10326-136">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-136">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="10326-137">Bestimmt, ob die angegebenen Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="10326-137">Determines whether the specified objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="10326-138"><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10326-138"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10326-139">Diese Methode ist ein Wrapper für die <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> Methode, sodass `obj` müssen in den vom generischen Argument angegebenen Typ umgewandelt werden `T` der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="10326-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="10326-140">Wenn es in umgewandelt werden kann `T`, wird eine <xref:System.ArgumentException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="10326-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="10326-141">Vergleichen von `null` ist zulässig und löst keine Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="10326-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10326-142"><paramref name="x" /> oder <paramref name="y" /> weist einen Typ auf, der nicht in den Typ <typeparamref name="T" /> umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="10326-142"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="10326-143">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="10326-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="10326-144">Gibt einen Hashcode für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="10326-144">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="10326-145">Ein Hashcode für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="10326-145">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10326-146">Diese Methode ist ein Wrapper für die <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> Methode, sodass `obj` muss ein Typ, der in den vom generischen Argument angegebenen Typ umgewandelt werden kann `T` der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="10326-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10326-147">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="10326-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="10326-148">- oder - </span><span class="sxs-lookup"><span data-stu-id="10326-148">-or-</span></span>  
  
 <span data-ttu-id="10326-149"><paramref name="obj" /> weist einen Typ auf, der nicht in den Typ <typeparamref name="T" /> umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="10326-149"><paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>