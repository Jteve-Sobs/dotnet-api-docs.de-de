<Type Name="IReadOnlySet&lt;T&gt;" FullName="System.Collections.Generic.IReadOnlySet&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91c6ed6d6c2b8a9c92fed55338e3cd6044a9c4c0" /><Meta Name="ms.sourcegitcommit" Value="33e02e7ca014dd816ff6ce61b258bf6d8f4d4d9f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/19/2020" /><Meta Name="ms.locfileid" Value="88609276" /></Metadata><TypeSignature Language="C#" Value="public interface IReadOnlySet&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlySet`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IReadOnlySet`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlySet(Of T)&#xA;Implements IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IReadOnlySet : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IReadOnlySet&lt;'T&gt; = interface&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="d14be-101">Der Typ der Elemente in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="d14be-101">The type of elements in the set.</span></span></typeparam>
    <summary><span data-ttu-id="d14be-102">Stellt eine schreibgeschützte Abstraktion einer Gruppe bereit.</span><span class="sxs-lookup"><span data-stu-id="d14be-102">Provides a readonly abstraction of a set.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iReadOnlySet.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d14be-103">Das Element, dessen Vorhandensein in der Gruppe überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-103">The item to check if the set contains.</span></span></param>
        <summary><span data-ttu-id="d14be-104">Ermittelt, ob die Gruppe ein bestimmtes Element enthält</span><span class="sxs-lookup"><span data-stu-id="d14be-104">Determines if the set contains a specific item</span></span></summary>
        <returns><span data-ttu-id="d14be-105"><see langword="true" />, sofern gefunden. andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-105"><see langword="true" /> if found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.IsProperSubsetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-106">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-106">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="d14be-107">Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="d14be-107">Determines whether the current set is a proper (strict) subset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="d14be-108"><see langword="true" />, wenn die aktuelle Gruppe eine tatsächliche Teilmenge einer anderen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-108"><see langword="true" /> if the current set is a proper subset of other; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-109"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-109"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.IsProperSupersetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-110">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-110">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="d14be-111">Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="d14be-111">Determines whether the current set is a proper (strict) superset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="d14be-112"><see langword="true" />, wenn die Sammlung eine tatsächliche Obermenge einer anderen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-112"><see langword="true" /> if the collection is a proper superset of other; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-113"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-113"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.IsSubsetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-114">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-114">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="d14be-115">Ermittelt, ob die aktuelle Gruppe eine Teilmenge einer angegebenen Sammlung ist.</span><span class="sxs-lookup"><span data-stu-id="d14be-115">Determine whether the current set is a subset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="d14be-116"><see langword="true" />, wenn die aktuelle Gruppe eine Teilmenge einer anderen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-116"><see langword="true" /> if the current set is a subset of other; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-117"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-117"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.IsSupersetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-118">Die Sammlung, die mit der aktuellen Gruppe verglichen werden soll</span><span class="sxs-lookup"><span data-stu-id="d14be-118">The collection to compare to the current set</span></span></param>
        <summary><span data-ttu-id="d14be-119">Ermittelt, ob die aktuelle Gruppe eine Obermenge einer angegebenen Sammlung ist.</span><span class="sxs-lookup"><span data-stu-id="d14be-119">Determine whether the current set is a super set of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="d14be-120"><see langword="true" />, wenn die aktuelle Gruppe eine Teilmenge einer anderen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-120"><see langword="true" /> if the current set is a subset of other; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-121"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-121"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Overlaps : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.Overlaps other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-122">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-122">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="d14be-123">Bestimmt, ob sich die aktuelle Gruppe und die angegebene Auflistung überschneiden.</span><span class="sxs-lookup"><span data-stu-id="d14be-123">Determines whether the current set overlaps with the specified collection.</span></span></summary>
        <returns><span data-ttu-id="d14be-124"><see langword="true" />, wenn die aktuelle Gruppe mindestens ein gemeinsames Element mit einer anderen gemeinsam hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-124"><see langword="true" />if the current set and other share at least one common element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-125"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-125"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member SetEquals : seq&lt;'T&gt; -&gt; bool" Usage="iReadOnlySet.SetEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d14be-126">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d14be-126">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="d14be-127">Bestimmt, ob die aktuelle Gruppe und die angegebene Auflistung dieselben Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="d14be-127">Determines whether the current set and the specified collection contain the same elements.</span></span></summary>
        <returns><span data-ttu-id="d14be-128"><see langword="true" />, wenn die aktuelle Gruppe mit einer anderen identisch ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-128"><see langword="true" /> if the current set is equal to other; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d14be-129"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d14be-129"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
