<Type Name="SortedList&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedList&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bde0c771083dc5db3d5f11d0db6d0ec9f50638b" /><Meta Name="ms.sourcegitcommit" Value="57ccffdf8fe8e719b7e778b859bf1ca216879f31" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/28/2020" /><Meta Name="ms.locfileid" Value="87329471" /></Metadata><TypeSignature Language="C#" Value="public class SortedList&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SortedList`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedList`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedList : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SortedList&lt;'Key, 'Value&gt; = class&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&#xA;    interface IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class SortedList&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.IDictionary" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue))" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedList : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::IDictionary" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type SortedList&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SortedList&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SortedList&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Count = {Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Count = {Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="06f56-101">Der Typ der Schlüssel in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="06f56-101">The type of keys in the collection.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="06f56-102">Der Typ der Werte in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="06f56-102">The type of values in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="06f56-103">Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, die auf Grundlage der zugeordneten <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung nach den Schlüsseln sortiert sind.</span><span class="sxs-lookup"><span data-stu-id="06f56-103">Represents a collection of key/value pairs that are sorted by key based on the associated <see cref="T:System.Collections.Generic.IComparer`1" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-104">Die <xref:System.Collections.Generic.SortedList%602> generische Klasse ist ein Array von Schlüssel-Wert-Paaren mit O ( `n` Log)-Abruf, wobei n die Anzahl der Elemente im Wörterbuch ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-104">The <xref:System.Collections.Generic.SortedList%602> generic class is an array of key/value pairs with O(log `n`) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="06f56-105">In diesem Fall ähnelt Sie der <xref:System.Collections.Generic.SortedDictionary%602> generischen-Klasse.</span><span class="sxs-lookup"><span data-stu-id="06f56-105">In this, it is similar to the <xref:System.Collections.Generic.SortedDictionary%602> generic class.</span></span> <span data-ttu-id="06f56-106">Die beiden Klassen verfügen über ähnliche Objekt Modelle, und beide verfügen über einen O (log `n` )-Abruf.</span><span class="sxs-lookup"><span data-stu-id="06f56-106">The two classes have similar object models, and both have O(log `n`) retrieval.</span></span> <span data-ttu-id="06f56-107">Dabei unterscheiden sich die beiden Klassen in der Arbeitsspeicher Nutzung und der Geschwindigkeit des Einfügens und Entfernens:</span><span class="sxs-lookup"><span data-stu-id="06f56-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="06f56-108"><xref:System.Collections.Generic.SortedList%602> verwendet weniger Arbeitsspeicher als <xref:System.Collections.Generic.SortedDictionary%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="06f56-109"><xref:System.Collections.Generic.SortedDictionary%602> verfügt über schnellere Einfüge-und Entfernungs Vorgänge für unsortierte Daten, o (log `n` ) im Gegensatz zu o ( `n` ) für <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data, O(log `n`) as opposed to O(`n`) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="06f56-110">Wenn die Liste aus sortierten Daten gleichzeitig ausgefüllt wird, <xref:System.Collections.Generic.SortedList%602> ist schneller als <xref:System.Collections.Generic.SortedDictionary%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="06f56-111">Ein weiterer Unterschied zwischen der <xref:System.Collections.Generic.SortedDictionary%602> -Klasse und der- <xref:System.Collections.Generic.SortedList%602> Klasse besteht darin, dass das <xref:System.Collections.Generic.SortedList%602> effiziente indizierte Abrufen von Schlüsseln und Werten über die von den <xref:System.Collections.Generic.SortedList%602.Keys%2A> Eigenschaften und zurückgegebenen Sammlungen <xref:System.Collections.Generic.SortedList%602.Values%2A></span><span class="sxs-lookup"><span data-stu-id="06f56-111">Another difference between the <xref:System.Collections.Generic.SortedDictionary%602> and <xref:System.Collections.Generic.SortedList%602> classes is that <xref:System.Collections.Generic.SortedList%602> supports efficient indexed retrieval of keys and values through the collections returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> and <xref:System.Collections.Generic.SortedList%602.Values%2A> properties.</span></span> <span data-ttu-id="06f56-112">Beim Zugriff auf die Eigenschaften ist es nicht notwendig, die Listen neu zu generieren, da die Listen nur Wrapper für die internen Arrays von Schlüsseln und Werten sind.</span><span class="sxs-lookup"><span data-stu-id="06f56-112">It is not necessary to regenerate the lists when the properties are accessed, because the lists are just wrappers for the internal arrays of keys and values.</span></span> <span data-ttu-id="06f56-113">Der folgende Code zeigt die Verwendung der- <xref:System.Collections.Generic.SortedList%602.Values%2A> Eigenschaft für das indizierte Abrufen von Werten aus einer sortierten Liste von Zeichen folgen:</span><span class="sxs-lookup"><span data-stu-id="06f56-113">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp" id="Snippet11":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb" id="Snippet11":::
  
 <span data-ttu-id="06f56-114"><xref:System.Collections.Generic.SortedList%602> wird als Array von Schlüssel-Wert-Paaren implementiert, sortiert nach dem Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-114"><xref:System.Collections.Generic.SortedList%602> is implemented as an array of key/value pairs, sorted by the key.</span></span>  <span data-ttu-id="06f56-115">Jedes Element kann als-Objekt abgerufen werden <xref:System.Collections.Generic.KeyValuePair%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-115">Each element can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="06f56-116">Schlüssel Objekte müssen unveränderlich sein, solange Sie als Schlüssel in der verwendet werden <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-116">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-117">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-117">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique.</span></span> <span data-ttu-id="06f56-118">Ein Schlüssel kann nicht sein `null` , aber ein Wert kann sein, wenn der Typ der Werte in der Liste, `TValue` , ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-118">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="06f56-119"><xref:System.Collections.Generic.SortedList%602> erfordert eine Vergleich-Implementierung zum Sortieren und zum Durchführen von vergleichen.</span><span class="sxs-lookup"><span data-stu-id="06f56-119"><xref:System.Collections.Generic.SortedList%602> requires a comparer implementation to sort and to perform comparisons.</span></span>  <span data-ttu-id="06f56-120">Der Standardcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-120">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-121">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-121">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-122">Wenn der Schlüsseltyp `TKey` keine der beiden Schnittstellen implementiert, können Sie eine- <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> Implementierung in einer Konstruktorüberladung angeben, die einen- `comparer` Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-122">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="06f56-123">Die Kapazität eines <xref:System.Collections.Generic.SortedList%602> ist die Anzahl der Elemente, die in der <xref:System.Collections.Generic.SortedList%602> enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="06f56-123">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements the <xref:System.Collections.Generic.SortedList%602> can hold.</span></span> <span data-ttu-id="06f56-124">Wenn Elemente zu einem hinzugefügt werden <xref:System.Collections.Generic.SortedList%602> , wird die Kapazität bei Bedarf automatisch erhöht, indem das interne Array neu zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-124">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="06f56-125">Die Kapazität kann verringert werden, indem Sie aufrufen <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> oder indem Sie die- <xref:System.Collections.Generic.SortedList%602.Capacity%2A> Eigenschaft explizit festlegen.</span><span class="sxs-lookup"><span data-stu-id="06f56-125">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="06f56-126">Durch das Verringern der Kapazität wird der Arbeitsspeicher neu zugewiesen und alle Elemente in kopiert <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-126">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-127">**Nur .NET Framework:** Bei sehr großen <xref:System.Collections.Generic.SortedList%602> Objekten können Sie die maximale Kapazität auf 2 Milliarden Elemente in einem 64-Bit-System erhöhen, indem Sie das- `enabled` Attribut des- [`<gcAllowVeryLargeObjects>`](/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) Konfigurations Elements `true` in der Laufzeitumgebung auf festlegen.</span><span class="sxs-lookup"><span data-stu-id="06f56-127">**.NET Framework only:** For very large <xref:System.Collections.Generic.SortedList%602> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="06f56-128">Die- `foreach` Anweisung der c#-Sprache ( `for each` in C++, `For Each` in Visual Basic) gibt ein Objekt des Typs der Elemente in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-128">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="06f56-129">Da es sich bei den Elementen der um <xref:System.Collections.Generic.SortedList%602> Schlüssel-Wert-Paare handelt, ist der Elementtyp nicht der Typ des Schlüssels oder der Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="06f56-129">Since the elements of the <xref:System.Collections.Generic.SortedList%602> are key/value pairs, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="06f56-130">Stattdessen ist der Elementtyp <xref:System.Collections.Generic.KeyValuePair%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-130">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="06f56-131">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="06f56-131">For example:</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp" id="Snippet12":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs"  id="Snippet12":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb" id="Snippet12":::  
  
 <span data-ttu-id="06f56-132">Bei der- `foreach` Anweisung handelt es sich um einen Wrapper um den Enumerator, der nur das Lesen von, das Schreiben in die Auflistung ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="06f56-132">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-133">Im folgenden Codebeispiel wird eine leere <xref:System.Collections.Generic.SortedList%602> Zeichenfolge mit Zeichen folgen Schlüsseln erstellt, und die-Methode wird verwendet <xref:System.Collections.Generic.SortedList%602.Add%2A> , um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-133">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="06f56-134">Das Beispiel zeigt, dass die- <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode eine auslöst, <xref:System.ArgumentException> Wenn versucht wird, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-134">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="06f56-135">Im Beispiel wird die- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft (der Indexer in c#) zum Abrufen von Werten verwendet, um darzustellen, dass eine ausgelöst <xref:System.Collections.Generic.KeyNotFoundException> wird, wenn ein angeforderter Schlüssel nicht vorhanden ist, und zeigt an, dass der Wert, der einem Schlüssel zugeordnet ist, ersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-135">The example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="06f56-136">Das Beispiel zeigt, wie die Methode <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> als effizientere Möglichkeit zum Abrufen von Werten verwendet wird, wenn ein Programm häufig Schlüsselwerte ausprobiert, die nicht in der sortierten Liste enthalten sind, und zeigt, wie die Methode <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> verwendet wird, um vor dem Aufruf zu testen, ob ein Schlüssel vorhanden ist die <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="06f56-136">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list, and it shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="06f56-137">Das Beispiel zeigt, wie die Schlüssel und Werte in der sortierten Liste aufgelistet werden und wie die Schlüssel und Werte allein mithilfe der <xref:System.Collections.Generic.SortedList%602.Keys%2A> -Eigenschaft und der- <xref:System.Collections.Generic.SortedList%602.Values%2A> Eigenschaft aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-137">The example shows how to enumerate the keys and values in the sorted list and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedList%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="06f56-138">Im Beispiel wird die- <xref:System.Collections.Generic.SortedList%602.Remove%2A> Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="06f56-138">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 [!code-cpp[Generic.SortedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.SortedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#1)]
 [!code-vb[Generic.SortedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="06f56-139">Öffentliche statische ( <see langword="Shared" /> in Visual Basic) Member dieses Typs sind Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="06f56-139">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="06f56-140">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span><span class="sxs-lookup"><span data-stu-id="06f56-140">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="06f56-141">Ein <see cref="T:System.Collections.Generic.SortedList`2" /> kann mehrere Leser gleichzeitig unterstützen, solange die Auflistung nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-141">A <see cref="T:System.Collections.Generic.SortedList`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="06f56-142">Obwohl das Auflisten durch eine Auflistung intrinsisch nicht eine Thread sichere Prozedur ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-142">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="06f56-143">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-143">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06f56-144">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-144">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Generic.IDictionary`2" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.Generic.SortedDictionary`2" />
    <altmember cref="T:System.Collections.Generic.KeyValuePair`2" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06f56-145">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="06f56-145">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-146">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse mit der Standardanfangskapazität und dem Standard-<see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-146">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-147">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem Standardcomparer eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-147">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="06f56-148">Dieser Konstruktor verwendet den Standardwert für die anfängliche Kapazität von <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-148">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-149">Verwenden Sie den-Konstruktor, um die anfängliche Kapazität festzulegen <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> .</span><span class="sxs-lookup"><span data-stu-id="06f56-149">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="06f56-150">Wenn die endgültige Größe der Auflistung geschätzt werden kann, entfällt beim Angeben der anfänglichen Kapazität das Ausführen einer Reihe von Größenänderung beim Hinzufügen von Elementen zum <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-150">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-151">Dieser Konstruktor verwendet den Standardcomparer für `TKey` .</span><span class="sxs-lookup"><span data-stu-id="06f56-151">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="06f56-152">Um einen Vergleich anzugeben, verwenden Sie den- <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="06f56-152">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="06f56-153">Der Standardcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-153">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-154">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-154">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-155">Wenn der Schlüsseltyp `TKey` keine der beiden Schnittstellen implementiert, können Sie eine- <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> Implementierung in einer Konstruktorüberladung angeben, die einen- `comparer` Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-155">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="06f56-156">Dieser Konstruktor ist ein O (1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-157">Im folgenden Codebeispiel wird eine leere <xref:System.Collections.Generic.SortedList%602> Zeichenfolge mit Zeichen folgen Schlüsseln erstellt, und die-Methode wird verwendet <xref:System.Collections.Generic.SortedList%602.Add%2A> , um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-157">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="06f56-158">Das Beispiel zeigt, dass die- <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode eine auslöst, <xref:System.ArgumentException> Wenn versucht wird, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-158">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="06f56-159">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-159">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; comparer" />
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IComparer&lt;TKey&gt;? comparer);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="06f56-160">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-160">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="06f56-161">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-161">-or-</span></span> 
 <span data-ttu-id="06f56-162"><see langword="null" />, um den Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für den Schlüsseltyp zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="06f56-162"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="06f56-163">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse mit der Standardanfangskapazität und dem angegebenen <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-163">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-164">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem angegebenen Comparer eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-164">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="06f56-165">Dieser Konstruktor verwendet den Standardwert für die anfängliche Kapazität von <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-165">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-166">Verwenden Sie den-Konstruktor, um die anfängliche Kapazität festzulegen <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> .</span><span class="sxs-lookup"><span data-stu-id="06f56-166">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="06f56-167">Wenn die endgültige Größe der Auflistung geschätzt werden kann, entfällt beim Angeben der anfänglichen Kapazität das Ausführen einer Reihe von Größenänderung beim Hinzufügen von Elementen zum <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-167">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-168">Dieser Konstruktor ist ein O (1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-168">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-169">Im folgenden Codebeispiel wird eine sortierte Liste mit einem Vergleich ohne Berücksichtigung der Groß-/Kleinschreibung für die aktuelle Kultur erstellt.</span><span class="sxs-lookup"><span data-stu-id="06f56-169">The following code example creates a sorted list with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="06f56-170">Im Beispiel werden vier-Elemente, einige mit Kleinbuchstaben und einige mit Großbuchstaben, hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06f56-170">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="06f56-171">Im Beispiel wird dann versucht, ein Element mit einem Schlüssel hinzuzufügen, der sich von einem vorhandenen Schlüssel nur in der Groß-/Kleinschreibung unterscheidet, die resultierende Ausnahme abfängt und eine Fehlermeldung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="06f56-171">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="06f56-172">Schließlich werden die Elemente in der Sortierreihenfolge ohne Beachtung der Groß-/Kleinschreibung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="06f56-172">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/VB/source.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="06f56-173">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in das neue <see cref="T:System.Collections.Generic.SortedList`2" /> kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-173">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="06f56-174">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopierte Elemente enthält, über eine der Anzahl der kopierten Elemente entsprechende Kapazität verfügt sowie den Standard-<see cref="T:System.Collections.Generic.IComparer`1" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="06f56-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-175">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem Standardcomparer eindeutig sein. ebenso muss jeder Schlüssel in der Quelle `dictionary` entsprechend dem Standardcomparer eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-175">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer; likewise, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="06f56-176">Die Kapazität der neuen <xref:System.Collections.Generic.SortedList%602> wird auf die Anzahl der Elemente in festgelegt `dictionary` , sodass keine Änderung erfolgt, während die Liste aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-176">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="06f56-177">Dieser Konstruktor verwendet den Standardcomparer für `TKey` .</span><span class="sxs-lookup"><span data-stu-id="06f56-177">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="06f56-178">Um einen Vergleich anzugeben, verwenden Sie den- <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="06f56-178">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="06f56-179">Der Standardcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-179">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-180">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-180">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-181">Wenn der Schlüsseltyp `TKey` keine der beiden Schnittstellen implementiert, können Sie eine- <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> Implementierung in einer Konstruktorüberladung angeben, die einen- `comparer` Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-181">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="06f56-182">Wenn die Daten in `dictionary` sortiert sind, ist dieser Konstruktor ein O ( `n` )-Vorgang, wobei `n` die Anzahl der Elemente in ist `dictionary` .</span><span class="sxs-lookup"><span data-stu-id="06f56-182">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="06f56-183">Andernfalls handelt es sich um einen O ( `n` \* `n` )-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-183">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-184">Im folgenden Codebeispiel wird veranschaulicht, wie verwendet <xref:System.Collections.Generic.SortedList%602> wird, um eine sortierte Kopie der Informationen in einer <xref:System.Collections.Generic.Dictionary%602> zu erstellen, indem der <xref:System.Collections.Generic.Dictionary%602> an den- <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> Konstruktor übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-184">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> constructor.</span></span>  
   
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-185"><paramref name="dictionary" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-185"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-186"><paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-186"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : int -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="06f56-187">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Generic.SortedList`2" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-187">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="06f56-188">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse mit der angegebenen anfänglichen Kapazität und dem Standard-<see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-188">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-189">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem Standardcomparer eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-189">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="06f56-190">Die Kapazität eines <xref:System.Collections.Generic.SortedList%602> ist die Anzahl der Elemente, die das-Element <xref:System.Collections.Generic.SortedList%602> enthalten kann, bevor die Größe geändert wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-190">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="06f56-191">Wenn Elemente zu einem hinzugefügt werden <xref:System.Collections.Generic.SortedList%602> , wird die Kapazität bei Bedarf automatisch erhöht, indem das interne Array neu zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-191">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06f56-192">Wenn die Größe der Auflistung geschätzt werden kann, entfällt beim Angeben der anfänglichen Kapazität das Ausführen einer Reihe von Größenänderung beim Hinzufügen von Elementen zum <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-192">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-193">Die Kapazität kann verringert werden, indem Sie aufrufen <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> oder indem Sie die- <xref:System.Collections.Generic.SortedList%602.Capacity%2A> Eigenschaft explizit festlegen.</span><span class="sxs-lookup"><span data-stu-id="06f56-193">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="06f56-194">Durch das Verringern der Kapazität wird der Arbeitsspeicher neu zugewiesen und alle Elemente in kopiert <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-194">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-195">Dieser Konstruktor verwendet den Standardcomparer für `TKey` .</span><span class="sxs-lookup"><span data-stu-id="06f56-195">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="06f56-196">Um einen Vergleich anzugeben, verwenden Sie den- <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="06f56-196">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="06f56-197">Der Standardcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-197">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-198">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Schlüsseltyp `TKey` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-198">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-199">Wenn der Schlüsseltyp `TKey` keine der beiden Schnittstellen implementiert, können Sie eine- <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> Implementierung in einer Konstruktorüberladung angeben, die einen- `comparer` Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-199">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="06f56-200">Dieser Konstruktor ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist `capacity` .</span><span class="sxs-lookup"><span data-stu-id="06f56-200">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-201">Im folgenden Codebeispiel wird eine sortierte Liste mit einer Anfangskapazität von 4 erstellt und mit 4 Einträgen aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="06f56-201">The following code example creates a sorted list with an initial capacity of 4 and populates it with 4 entries.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/VB/source.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-202"><paramref name="capacity" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="06f56-202"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; (dictionary, comparer)" />
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt;? comparer);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="06f56-203">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in das neue <see cref="T:System.Collections.Generic.SortedList`2" /> kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-203">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="06f56-204">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-204">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="06f56-205">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-205">-or-</span></span> 
 <span data-ttu-id="06f56-206"><see langword="null" />, um den Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für den Schlüsseltyp zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="06f56-206"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="06f56-207">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopierte Elemente enthält, über eine der Anzahl der kopierten Elemente entsprechende Kapazität verfügt und den angegebenen <see cref="T:System.Collections.Generic.IComparer`1" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="06f56-207">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-208">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem angegebenen Comparer eindeutig sein. ebenso muss jeder Schlüssel in der Quelle `dictionary` entsprechend dem angegebenen Vergleich eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-208">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer; likewise, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="06f56-209">Die Kapazität der neuen <xref:System.Collections.Generic.SortedList%602> wird auf die Anzahl der Elemente in festgelegt `dictionary` , sodass keine Änderung erfolgt, während die Liste aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-209">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="06f56-210">Wenn die Daten in `dictionary` sortiert sind, ist dieser Konstruktor ein O ( `n` )-Vorgang, wobei `n` die Anzahl der Elemente in ist `dictionary` .</span><span class="sxs-lookup"><span data-stu-id="06f56-210">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="06f56-211">Andernfalls handelt es sich um einen O ( `n` \* `n` )-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-211">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-212">Im folgenden Codebeispiel wird veranschaulicht, wie verwendet <xref:System.Collections.Generic.SortedList%602> wird, um eine sortierte Kopie der Groß-/Kleinschreibung ohne Beachtung der Groß-/Kleinschreibung zu erstellen <xref:System.Collections.Generic.Dictionary%602> , indem <xref:System.Collections.Generic.Dictionary%602> an den- <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-212">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="06f56-213">In diesem Beispiel sind die Vergleiche ohne Berücksichtigung der Groß-und Kleinschreibung für die aktuelle Kultur vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="06f56-213">In this example, the case-insensitive comparers are for the current culture.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/VB/source.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-214"><paramref name="dictionary" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-214"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-215"><paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-215"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : int * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; (capacity, comparer)" />
      <MemberSignature Language="C#" Value="public SortedList (int capacity, System.Collections.Generic.IComparer&lt;TKey&gt;? comparer);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="06f56-216">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Generic.SortedList`2" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-216">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="06f56-217">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-217">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="06f56-218">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-218">-or-</span></span> 
 <span data-ttu-id="06f56-219"><see langword="null" />, um den Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für den Schlüsseltyp zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="06f56-219"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="06f56-220">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedList`2" />-Klasse mit der angegebenen Anfangskapazität und dem angegebenen <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-220">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-221">Jeder Schlüssel in einem <xref:System.Collections.Generic.SortedList%602> muss gemäß dem angegebenen Comparer eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-221">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="06f56-222">Die Kapazität eines <xref:System.Collections.Generic.SortedList%602> ist die Anzahl der Elemente, die das-Element <xref:System.Collections.Generic.SortedList%602> enthalten kann, bevor die Größe geändert wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-222">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="06f56-223">Wenn Elemente zu einem hinzugefügt werden <xref:System.Collections.Generic.SortedList%602> , wird die Kapazität bei Bedarf automatisch erhöht, indem das interne Array neu zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-223">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06f56-224">Wenn die Größe der Auflistung geschätzt werden kann, entfällt beim Angeben der anfänglichen Kapazität das Ausführen einer Reihe von Größenänderung beim Hinzufügen von Elementen zum <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-224">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-225">Die Kapazität kann verringert werden, indem Sie aufrufen <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> oder indem Sie die- <xref:System.Collections.Generic.SortedList%602.Capacity%2A> Eigenschaft explizit festlegen.</span><span class="sxs-lookup"><span data-stu-id="06f56-225">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="06f56-226">Durch das Verringern der Kapazität wird der Arbeitsspeicher neu zugewiesen und alle Elemente in kopiert <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-226">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-227">Dieser Konstruktor ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist `capacity` .</span><span class="sxs-lookup"><span data-stu-id="06f56-227">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-228">Im folgenden Codebeispiel wird eine sortierte Liste mit einer Anfangskapazität von 5 und einem Vergleich ohne Berücksichtigung der Groß-/Kleinschreibung für die aktuelle Kultur erstellt.</span><span class="sxs-lookup"><span data-stu-id="06f56-228">The following code example creates a sorted list with an initial capacity of 5 and a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="06f56-229">Im Beispiel werden vier-Elemente, einige mit Kleinbuchstaben und einige mit Großbuchstaben, hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06f56-229">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="06f56-230">Im Beispiel wird dann versucht, ein Element mit einem Schlüssel hinzuzufügen, der sich von einem vorhandenen Schlüssel nur in der Groß-/Kleinschreibung unterscheidet, die resultierende Ausnahme abfängt und eine Fehlermeldung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="06f56-230">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="06f56-231">Schließlich werden die Elemente in der Sortierreihenfolge ohne Beachtung der Groß-/Kleinschreibung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="06f56-231">Finally, the example displays the elements in case-insensitive sort order.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/VB/source.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-232"><paramref name="capacity" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="06f56-232"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit&#xA;override this.Add : 'Key * 'Value -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-233">Der Schlüssel des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06f56-233">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="06f56-234">Der Wert des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06f56-234">The value of the element to add.</span></span> <span data-ttu-id="06f56-235">Der Wert kann für Verweistypen <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-235">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="06f56-236">Fügt dem <see cref="T:System.Collections.Generic.SortedList`2" /> ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="06f56-236">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-237">Ein Schlüssel kann nicht sein `null` , aber ein Wert kann sein, wenn der Typ der Werte in der sortierten Liste, `TValue` , ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-237">A key cannot be `null`, but a value can be, if the type of values in the sorted list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="06f56-238">Sie können auch die <xref:System.Collections.Generic.SortedList%602.Item%2A> zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, die Eigenschaft ist nicht vorhanden, der <xref:System.Collections.Generic.SortedList%602>, z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="06f56-238">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="06f56-239">Wenn jedoch der angegebene Schlüssel bereits in vorhanden <xref:System.Collections.Generic.SortedList%602> ist, wird durch das Festlegen der- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft der alte Wert überschrieben.</span><span class="sxs-lookup"><span data-stu-id="06f56-239">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="06f56-240">Im Gegensatz dazu ändert die- <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode keine vorhandenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="06f56-240">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="06f56-241">Wenn <xref:System.Collections.Generic.SortedList%602.Count%2A> bereits entspricht <xref:System.Collections.Generic.SortedList%602.Capacity%2A> , wird die Kapazität des <xref:System.Collections.Generic.SortedList%602> erhöht, indem das interne Array automatisch neu zugewiesen wird und die vorhandenen Elemente in das neue Array kopiert werden, bevor das neue Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-241">If <xref:System.Collections.Generic.SortedList%602.Count%2A> already equals <xref:System.Collections.Generic.SortedList%602.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.SortedList%602> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="06f56-242">Bei dieser Methode handelt es sich um einen O ( `n` )-Vorgang für unsortierte Daten, wobei den Wert hat `n` <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-242">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-243">Es handelt sich um einen O (log `n` )-Vorgang, wenn das neue Element am Ende der Liste hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-243">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="06f56-244">Wenn das Einfügen eine Größenänderung bewirkt, ist der Vorgang O ( `n` ).</span><span class="sxs-lookup"><span data-stu-id="06f56-244">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-245">Im folgenden Codebeispiel wird eine leere <xref:System.Collections.Generic.SortedList%602> Zeichenfolge mit Zeichen folgen Schlüsseln erstellt, und die-Methode wird verwendet <xref:System.Collections.Generic.SortedList%602.Add%2A> , um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-245">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="06f56-246">Das Beispiel zeigt, dass die- <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode eine auslöst, <xref:System.ArgumentException> Wenn versucht wird, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-246">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="06f56-247">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-247">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#2)]
 [!code-csharp[Generic.SortedList#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#2)]
 [!code-vb[Generic.SortedList#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-248"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-248"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-249">In <see cref="T:System.Collections.Generic.SortedList`2" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span><span class="sxs-lookup"><span data-stu-id="06f56-249">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-250">Ruft die Anzahl der Elemente ab, die die <see cref="T:System.Collections.Generic.SortedList`2" /> enthalten kann, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-250">Gets or sets the number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></summary>
        <value><span data-ttu-id="06f56-251">Die anfängliche Anzahl von Elementen, die die <see cref="T:System.Collections.Generic.SortedList`2" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-251">The number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> die Anzahl der Elemente, die von der <xref:System.Collections.Generic.SortedList%602> gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="06f56-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="06f56-253"><xref:System.Collections.Generic.SortedList%602.Count%2A> die Anzahl der Elemente, die tatsächlich in der sind <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-253"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> ist immer größer als oder gleich <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-255">Wenn <xref:System.Collections.Generic.SortedList%602.Count%2A> <xref:System.Collections.Generic.SortedList%602.Capacity%2A> beim Hinzufügen von Elementen überschreitet, wird die Kapazität erhöht, indem das interne Array automatisch neu zugewiesen wird, bevor die alten Elemente kopiert und die neuen Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-255">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="06f56-256">Die Kapazität kann verringert werden, indem Sie aufrufen <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> oder indem Sie die- <xref:System.Collections.Generic.SortedList%602.Capacity%2A> Eigenschaft explizit festlegen.</span><span class="sxs-lookup"><span data-stu-id="06f56-256">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="06f56-257">Wenn der Wert von <xref:System.Collections.Generic.SortedList%602.Capacity%2A> explizit festgelegt wird, wird das interne Array ebenfalls neu zugeordnet, um der angegebenen Kapazität Rechnung zu tragen.</span><span class="sxs-lookup"><span data-stu-id="06f56-257">When the value of <xref:System.Collections.Generic.SortedList%602.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="06f56-258">Das Abrufen des Werts dieser Eigenschaft ist ein O (1)-Vorgang. das Festlegen der-Eigenschaft ist ein O ( `n` )-Vorgang, wobei `n` die neue Kapazität ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-258">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-259"><see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> ist auf einen Wert festgelegt, der kleiner als <see cref="P:System.Collections.Generic.SortedList`2.Count" /> ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-259"><see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="06f56-260">Im System ist nicht genügend Arbeitsspeicher verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-260">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-261">Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-261">Removes all elements from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-262"><xref:System.Collections.Generic.SortedList%602.Count%2A> ist auf null festgelegt, und Verweise auf andere Objekte von Elementen der Auflistung werden ebenfalls freigegeben.</span><span class="sxs-lookup"><span data-stu-id="06f56-262"><xref:System.Collections.Generic.SortedList%602.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="06f56-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="06f56-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="06f56-264">Zum Zurücksetzen der Kapazität des- <xref:System.Collections.Generic.SortedList%602> <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> Objekts, oder legen Sie die- <xref:System.Collections.Generic.SortedList%602.Capacity%2A> Eigenschaft direkt fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-264">To reset the capacity of the <xref:System.Collections.Generic.SortedList%602>, call <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or set the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property directly.</span></span> <span data-ttu-id="06f56-265">Durch Kürzen eines leeren wird <xref:System.Collections.Generic.SortedList%602> die Kapazität von <xref:System.Collections.Generic.SortedList%602> auf die Standardkapazität festgelegt.</span><span class="sxs-lookup"><span data-stu-id="06f56-265">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="06f56-266">Diese Methode ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-266">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IComparer&lt;'Key&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-267">Ruft den <see cref="T:System.Collections.Generic.IComparer`1" /> für die sortierte Liste ab.</span><span class="sxs-lookup"><span data-stu-id="06f56-267">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> for the sorted list.</span></span></summary>
        <value><span data-ttu-id="06f56-268">Der <see cref="T:System.IComparable`1" /> für die aktuelle <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-268">The <see cref="T:System.IComparable`1" /> for the current <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-269">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-269">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-270">Der im <see cref="T:System.Collections.Generic.SortedList`2" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-270">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="06f56-271">Stellt fest, ob der <see cref="T:System.Collections.Generic.SortedList`2" /> einen bestimmten Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-271">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="06f56-272"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedList`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-272"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-273">Diese Methode ist ein O (log `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-273">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-274">Im folgenden Codebeispiel wird gezeigt, wie die-Methode verwendet wird <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> , um zu testen, ob ein Schlüssel vor dem Aufrufen der-Methode vorhanden ist <xref:System.Collections.Generic.SortedList%602.Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-274">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span> <span data-ttu-id="06f56-275">Außerdem wird gezeigt, wie die- <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> Methode zum Abrufen von Werten verwendet wird. Dies ist eine effiziente Methode zum Abrufen von Werten, wenn ein Programm häufig Schlüssel verwendet, die nicht in der sortierten Liste enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="06f56-275">It also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="06f56-276">Zum Schluss zeigt es die niedrigste effiziente Methode, um zu testen, ob Schlüssel vorhanden sind, indem die- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft (der Indexer in c#) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-276">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="06f56-277">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-277">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#6)]
 [!code-csharp[Generic.SortedList#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#6)]
 [!code-vb[Generic.SortedList#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#6)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-278"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-278"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.ContainsValue : 'Value -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06f56-279">Der im <see cref="T:System.Collections.Generic.SortedList`2" /> zu suchende Wert.</span><span class="sxs-lookup"><span data-stu-id="06f56-279">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span> <span data-ttu-id="06f56-280">Der Wert kann für Verweistypen <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-280">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="06f56-281">Ermittelt, ob die <see cref="T:System.Collections.Generic.SortedList`2" /> einen bestimmten Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-281">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="06f56-282"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedList`2" /> ein Element mit dem angegebenen Wert enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-282"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-283">Diese Methode bestimmt die Gleichheit mithilfe des Standardcomparers <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> für den Werttyp `TValue` .</span><span class="sxs-lookup"><span data-stu-id="06f56-283">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="06f56-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Werttyp `TValue` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-285">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Werttyp `TValue` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-285">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-286">Wenn der Werttyp `TValue` keine der beiden Schnittstellen implementiert, verwendet diese Methode <xref:System.Object.Equals%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-286">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="06f56-287">Diese Methode führt eine lineare Suche aus. Daher ist die durchschnittliche Ausführungszeit proportional zu <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-288">Das heißt, diese Methode ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1">P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-289">Ruft die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedList`2" /> ab.</span><span class="sxs-lookup"><span data-stu-id="06f56-289">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <value><span data-ttu-id="06f56-290">Die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-290">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> die Anzahl der Elemente, die von der <xref:System.Collections.Generic.SortedList%602> gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="06f56-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="06f56-292"><xref:System.Collections.Generic.SortedList%602.Count%2A> die Anzahl der Elemente, die tatsächlich in der sind <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-292"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> ist immer größer als oder gleich <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-294">Wenn <xref:System.Collections.Generic.SortedList%602.Count%2A> <xref:System.Collections.Generic.SortedList%602.Capacity%2A> beim Hinzufügen von Elementen überschreitet, wird die Kapazität erhöht, indem das interne Array automatisch neu zugewiesen wird, bevor die alten Elemente kopiert und die neuen Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-294">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="06f56-295">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-295">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="sortedList.GetEnumerator " />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;? GetEnumerator ();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-296">Gibt einen Enumerator zurück, der das <see cref="T:System.Collections.Generic.SortedList`2" />-Objekt durchläuft.</span><span class="sxs-lookup"><span data-stu-id="06f56-296">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-297">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> vom Typ <see cref="T:System.Collections.Generic.KeyValuePair`2" /> für die <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-297">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> for the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-298">Die- `foreach` Anweisung der c#-Sprache ( `for each` in C++, `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="06f56-298">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="06f56-299">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="06f56-299">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="06f56-300">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-300">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="06f56-301">Das Wörterbuch wird mithilfe einer internen Struktur in sortierter Reihenfolge verwaltet.</span><span class="sxs-lookup"><span data-stu-id="06f56-301">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="06f56-302">Jedes neue Element wird an der richtigen Sortier Position positioniert, und die Struktur wird so angepasst, dass die Sortierreihenfolge beibehalten wird, wenn ein Element entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-302">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="06f56-303">Während der Aufzählung wird die Sortierreihenfolge beibehalten.</span><span class="sxs-lookup"><span data-stu-id="06f56-303">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="06f56-304">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="06f56-304">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="06f56-305">An dieser Position ist <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-305">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="06f56-306">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.Generic.IEnumerator%601.Current%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-306">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="06f56-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="06f56-308"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.Generic.IEnumerator%601.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-308"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="06f56-309">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-309">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="06f56-310">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe <xref:System.Collections.IEnumerator.MoveNext%2A> zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="06f56-310">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> return `false`.</span></span> <span data-ttu-id="06f56-311">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-311">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="06f56-312">Sie können <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="06f56-312">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="06f56-313">Ein Enumerator bleibt gültig, solange die Auflistung unverändert bleibt.</span><span class="sxs-lookup"><span data-stu-id="06f56-313">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="06f56-314">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, und der nächste Rückruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder löst <xref:System.Collections.IEnumerator.Reset%2A> eine aus <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="06f56-314">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="06f56-315">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="06f56-315">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="06f56-316">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-316">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06f56-317">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-317">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06f56-318">Standard Implementierungen von Auflistungen in <xref:System.Collections.Generic?displayProperty=nameWithType> werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-318">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="06f56-319">Diese Methode ist ein O (1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-319">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public int IndexOfKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfKey (key As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfKey(TKey key);" />
      <MemberSignature Language="F#" Value="member this.IndexOfKey : 'Key -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-320">Der im <see cref="T:System.Collections.Generic.SortedList`2" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-320">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="06f56-321">Sucht den angegebenen Schlüssel und gibt den nullbasierten Index innerhalb der gesamten <see cref="T:System.Collections.Generic.SortedList`2" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-321">Searches for the specified key and returns the zero-based index within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-322">Der nullbasierte Index des <paramref name="key" /> innerhalb der gesamten <see cref="T:System.Collections.Generic.SortedList`2" />, sofern er gefunden wird, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="06f56-322">The zero-based index of <paramref name="key" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-323">Diese Methode führt eine binäre Suche aus. Daher handelt es sich bei dieser Methode um einen O (log `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-323">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-324"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-324"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public int IndexOfValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfValue (value As TValue) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.IndexOfValue : 'Value -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06f56-325">Der im <see cref="T:System.Collections.Generic.SortedList`2" /> zu suchende Wert.</span><span class="sxs-lookup"><span data-stu-id="06f56-325">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span>  <span data-ttu-id="06f56-326">Der Wert kann für Verweistypen <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="06f56-326">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="06f56-327">Sucht den angegebenen Wert und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.Generic.SortedList`2" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-327">Searches for the specified value and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-328">Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.Collections.Generic.SortedList`2" />, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="06f56-328">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-329">Diese Methode bestimmt die Gleichheit mithilfe des Standardcomparers <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> für den Werttyp `TValue` .</span><span class="sxs-lookup"><span data-stu-id="06f56-329">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="06f56-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Werttyp `TValue` implementiert <xref:System.IComparable%601?displayProperty=nameWithType> und verwendet diese Implementierung, falls verfügbar.</span><span class="sxs-lookup"><span data-stu-id="06f56-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="06f56-331">Wenn nicht, wird <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Werttyp `TValue` implementiert <xref:System.IComparable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-331">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="06f56-332">Wenn der Werttyp `TValue` keine der beiden Schnittstellen implementiert, verwendet diese Methode <xref:System.Object.Equals%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-332">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="06f56-333">Diese Methode führt eine lineare Suche aus. Daher ist die durchschnittliche Ausführungszeit proportional zu <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-333">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-334">Das heißt, diese Methode ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-334">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-335">Der Schlüssel, dessen Wert abgerufen oder festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-335">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="06f56-336">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-336">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="06f56-337">Der dem angegebenen Schlüssel zugeordnete Wert.</span><span class="sxs-lookup"><span data-stu-id="06f56-337">The value associated with the specified key.</span></span> <span data-ttu-id="06f56-338">Wenn der angegebene Schlüssel nicht gefunden wird, löst ein Get-Vorgang eine <see cref="T:System.Collections.Generic.KeyNotFoundException" /> aus, und durch einen Set-Vorgang wird ein neues Element mit dem angegebenen Schlüssel erstellt.</span><span class="sxs-lookup"><span data-stu-id="06f56-338">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-339">Über diese Eigenschaft können Sie mithilfe der folgenden Syntax auf ein bestimmtes Element der Auflistung zugreifen: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="06f56-339">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="06f56-340">Ein Schlüssel kann nicht sein `null` , aber ein Wert kann sein, wenn der Typ der Werte in der Liste, `TValue` , ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-340">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="06f56-341">Wenn der Schlüssel beim Abrufen eines Werts nicht gefunden wird, wird ausgelöst <xref:System.Collections.Generic.KeyNotFoundException> .</span><span class="sxs-lookup"><span data-stu-id="06f56-341">If the key is not found when a value is being retrieved, <xref:System.Collections.Generic.KeyNotFoundException> is thrown.</span></span> <span data-ttu-id="06f56-342">Wenn der Schlüssel beim Festlegen eines Werts nicht gefunden wird, werden der Schlüssel und der Wert hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06f56-342">If the key is not found when a value is being set, the key and value are added.</span></span>  
  
 <span data-ttu-id="06f56-343">Sie können auch die <xref:System.Collections.Generic.SortedList%602.Item%2A> zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, die Eigenschaft ist nicht vorhanden, der <xref:System.Collections.Generic.SortedList%602>, z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="06f56-343">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="06f56-344">Wenn jedoch der angegebene Schlüssel bereits in vorhanden <xref:System.Collections.Generic.SortedList%602> ist, wird durch das Festlegen der- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft der alte Wert überschrieben.</span><span class="sxs-lookup"><span data-stu-id="06f56-344">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="06f56-345">Im Gegensatz dazu ändert die- <xref:System.Collections.Generic.SortedList%602.Add%2A> Methode keine vorhandenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="06f56-345">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="06f56-346">Die Programmiersprache c# verwendet das- [`this`](/dotnet/csharp/language-reference/keywords/this) Schlüsselwort, um die Indexer zu definieren, statt die-Eigenschaft zu implementieren <xref:System.Collections.Generic.SortedList%602.Item%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-346">The C# language uses the [`this`](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span> <span data-ttu-id="06f56-347">Visual Basic implementiert <xref:System.Collections.Generic.SortedList%602.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="06f56-347">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="06f56-348">Das Abrufen des Werts dieser Eigenschaft ist ein O (log `n` )-Vorgang, wobei n gleich ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-348">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-349">Das Festlegen der-Eigenschaft ist ein O (log `n` )-Vorgang, wenn der Schlüssel bereits in der vorhanden ist <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-349">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-350">Wenn der Schlüssel nicht in der Liste enthalten ist, ist das Festlegen der Eigenschaft ein O ( `n` )-Vorgang für unsortierte Daten oder O (log `n` ), wenn das neue Element am Ende der Liste hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-350">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="06f56-351">Wenn das Einfügen eine Größenänderung bewirkt, ist der Vorgang O ( `n` ).</span><span class="sxs-lookup"><span data-stu-id="06f56-351">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-352">Im folgenden Codebeispiel wird die- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft (der Indexer in c#) zum Abrufen von Werten verwendet. Dies zeigt, dass eine ausgelöst <xref:System.Collections.Generic.KeyNotFoundException> wird, wenn ein angeforderter Schlüssel nicht vorhanden ist, und dass der Wert, der einem Schlüssel zugeordnet ist, ersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-352">The following code example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="06f56-353">Das Beispiel zeigt auch, wie die- <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> Methode als effizientere Methode zum Abrufen von Werten verwendet wird, wenn ein Programm häufig Schlüsselwerte ausprobieren muss, die nicht in der sortierten Liste enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="06f56-353">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list.</span></span>  
  
 <span data-ttu-id="06f56-354">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-354">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#3)]
 [!code-csharp[Generic.SortedList#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#3)]
 [!code-vb[Generic.SortedList#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#3)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-355"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-355"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="06f56-356">Die Eigenschaft wird abgerufen, und <paramref name="key" /> ist in der Sammlung nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="06f56-356">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IList(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TKey&gt; ^ Keys { System::Collections::Generic::IList&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.IList&lt;'Key&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-357">Ruft eine Auflistung mit den Schlüsseln in der <see cref="T:System.Collections.Generic.SortedList`2" /> in sortierter Reihenfolge auf.</span><span class="sxs-lookup"><span data-stu-id="06f56-357">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />, in sorted order.</span></span></summary>
        <value><span data-ttu-id="06f56-358">Eine <see cref="T:System.Collections.Generic.IList`1" />, die die Schlüssel im <see cref="T:System.Collections.Generic.SortedList`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-358">A <see cref="T:System.Collections.Generic.IList`1" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-359">Die Reihenfolge der Schlüssel in <xref:System.Collections.Generic.IList%601> entspricht der Reihenfolge in <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-359">The order of the keys in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-360">Der zurückgegebene <xref:System.Collections.Generic.IList%601> ist keine statische Kopie, sondern <xref:System.Collections.Generic.IList%601> verweist auf die Schlüssel im ursprünglichen <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-360">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the keys in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-361">Aus diesem Grund werden Änderungen an der <xref:System.Collections.Generic.SortedList%602> weiterhin im widergespiegelt <xref:System.Collections.Generic.IList%601> .</span><span class="sxs-lookup"><span data-stu-id="06f56-361">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="06f56-362">Die Auflistung, die von der-Eigenschaft zurückgegeben wird <xref:System.Collections.Generic.SortedList%602.Keys%2A> , bietet eine effiziente Möglichkeit zum Abrufen von Schlüsseln nach Index.</span><span class="sxs-lookup"><span data-stu-id="06f56-362">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property provides an efficient way to retrieve keys by index.</span></span> <span data-ttu-id="06f56-363">Es ist nicht erforderlich, die Liste erneut zu generieren, wenn auf die Eigenschaft zugegriffen wird, da es sich bei der Liste lediglich um einen Wrapper für das interne Array von Schlüsseln handelt.</span><span class="sxs-lookup"><span data-stu-id="06f56-363">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of keys.</span></span> <span data-ttu-id="06f56-364">Der folgende Code zeigt die Verwendung der- <xref:System.Collections.Generic.SortedList%602.Keys%2A> Eigenschaft für den indizierten Abruf von Schlüsseln aus einer sortierten Liste von Elementen mit Zeichen folgen Schlüsseln:</span><span class="sxs-lookup"><span data-stu-id="06f56-364">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for indexed retrieval of keys from a sorted list of elements with string keys:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="06f56-365">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-365">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-366">Im folgenden Codebeispiel wird gezeigt, wie die Schlüssel in der sortierten Liste mithilfe der <xref:System.Collections.Generic.SortedList%602.Keys%2A> -Eigenschaft aufgelistet werden und wie die Schlüssel und Werte in der sortierten Liste aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-366">The following code example shows how to enumerate the keys in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="06f56-367">Das Beispiel zeigt auch, wie die- <xref:System.Collections.Generic.SortedList%602.Keys%2A> Eigenschaft für den effizienten indizierten Abruf von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-367">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for efficient indexed retrieval of keys.</span></span>  
  
 <span data-ttu-id="06f56-368">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-368">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="06f56-369">Siehe <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="06f56-369">See <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 [!code-cpp[Generic.SortedList#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#9)]
 [!code-csharp[Generic.SortedList#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#9)]
 [!code-vb[Generic.SortedList#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#9)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool&#xA;override this.Remove : 'Key -&gt; bool" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-370">Der Schlüssel des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06f56-370">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="06f56-371">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-371">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-372"><see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-372"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="06f56-373">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="key" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.SortedList`2" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="06f56-373">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-374">Diese Methode führt eine binäre Suche aus. die Elemente werden jedoch nach oben verschoben, um die öffnende Stelle auszufüllen, sodass diese Methode ein O ( `n` )-Vorgang ist, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-374">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-375">Im folgenden Codebeispiel wird gezeigt, wie Sie ein Schlüssel-Wert-Paar mithilfe der-Methode aus der sortierten Liste entfernen <xref:System.Collections.Generic.SortedList%602.Remove%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-375">The following code example shows how to remove a key/value pair from the sorted list using the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="06f56-376">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-376">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#10)]
 [!code-csharp[Generic.SortedList#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#10)]
 [!code-vb[Generic.SortedList#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-377"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-377"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="06f56-378">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06f56-378">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="06f56-379">Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-379">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-380">Diese Methode führt eine binäre Suche aus. die Elemente werden jedoch nach oben verschoben, um die öffnende Stelle auszufüllen, sodass diese Methode ein O ( `n` )-Vorgang ist, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-380">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-381"><paramref name="index" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="06f56-381"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="06f56-382">- oder -</span><span class="sxs-lookup"><span data-stu-id="06f56-382">-or-</span></span> 
 <span data-ttu-id="06f56-383"><paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-383"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; unit" Usage="sortedList.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06f56-384">Das <see cref="T:System.Collections.Generic.KeyValuePair`2" />, das in <see cref="T:System.Collections.Generic.ICollection`1" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-384">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="06f56-385">Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Schlüssel-Wert-Paar hinzu.</span><span class="sxs-lookup"><span data-stu-id="06f56-385">Adds a key/value pair to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool" Usage="sortedList.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06f56-386">Das <see cref="T:System.Collections.Generic.KeyValuePair`2" />, das in der <see cref="T:System.Collections.Generic.ICollection`1" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-386">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="06f56-387">Ermittelt, ob <see cref="T:System.Collections.Generic.ICollection`1" /> ein bestimmtes Element enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-387">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific element.</span></span></summary>
        <returns><span data-ttu-id="06f56-388"><see langword="true" />, wenn das <paramref name="keyValuePair" /> in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-388"><see langword="true" /> if <paramref name="keyValuePair" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit" Usage="sortedList.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="06f56-389">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-389">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span> <span data-ttu-id="06f56-390">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-390">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="06f56-391">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="06f56-391">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="06f56-392">Kopiert die Elemente der <see cref="T:System.Collections.Generic.ICollection`1" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</span><span class="sxs-lookup"><span data-stu-id="06f56-392">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-393"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-393"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-394"><paramref name="arrayIndex" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="06f56-394"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-395">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> ist größer als der verfügbare Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />s.</span><span class="sxs-lookup"><span data-stu-id="06f56-395">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-396">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-396">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="06f56-397"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-397"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06f56-398">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedList`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-398">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool" Usage="sortedList.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06f56-399">Der <see cref="T:System.Collections.Generic.KeyValuePair`2" />, der aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-399">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="06f56-400">Entfernt das erste Vorkommen eines bestimmten Schlüssel-Wert-Paares aus der <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-400">Removes the first occurrence of a specific key/value pair from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-401"><see langword="true" />, wenn <paramref name="keyValuePair" /> erfolgreich aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-401"><see langword="true" /> if <paramref name="keyValuePair" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06f56-402">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="keyValuePair" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="06f56-402">This method also returns <see langword="false" /> if <paramref name="keyValuePair" /> was not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-403">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-403">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06f56-404">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-404">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-405">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Werte im <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-405">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06f56-406">Ein-Objekt, das die Werte im enthält <see cref="T:System.Collections.Generic.IDictionary`2" /> .</span><span class="sxs-lookup"><span data-stu-id="06f56-406">An object containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="sortedList.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-407">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="06f56-407">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="06f56-408">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-408">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys : seq&lt;'Key&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-409">Ruft eine aufzählbare Auflistung ab, die die Schlüssel im schreibgeschützten Wörterbuch enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-409">Gets an enumerable collection that contains the keys in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="06f56-410">Eine aufzählbare Sammlung, die die Schlüssel im schreibgeschützten Wörterbuch enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-410">An enumerable collection that contains the keys in the read-only dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values : seq&lt;'Value&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-411">Ruft eine aufzählbare Auflistung ab, die die Werte im schreibgeschützten Wörterbuch enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-411">Gets an enumerable collection that contains the values in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="06f56-412">Eine aufzählbare Sammlung, die die Werte im schreibgeschützten Wörterbuch enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-412">An enumerable collection that contains the values in the read-only dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, arrayIndex As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="sortedList.System.Collections.ICollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="06f56-413">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-413">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="06f56-414">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-414">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="06f56-415">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="06f56-415">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="06f56-416">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</span><span class="sxs-lookup"><span data-stu-id="06f56-416">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="06f56-417">Wenn der Typ der Quelle <xref:System.Collections.ICollection> nicht automatisch in den Zieltyp umgewandelt werden kann, werden `array` die nicht generischen Implementierungen von <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw ausgelöst <xref:System.InvalidCastException> , während die generischen Implementierungen auslösen <xref:System.ArgumentException> .</span><span class="sxs-lookup"><span data-stu-id="06f56-417">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="06f56-418">Diese Methode ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-418">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-419"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-419"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06f56-420"><paramref name="arrayIndex" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="06f56-420"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-421"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="06f56-421"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="06f56-422">- oder -</span><span class="sxs-lookup"><span data-stu-id="06f56-422">-or-</span></span> 
 <span data-ttu-id="06f56-423"><paramref name="array" /> verwendet keine nullbasierte Indizierung.</span><span class="sxs-lookup"><span data-stu-id="06f56-423"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="06f56-424">- oder -</span><span class="sxs-lookup"><span data-stu-id="06f56-424">-or-</span></span> 
<span data-ttu-id="06f56-425">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />s.</span><span class="sxs-lookup"><span data-stu-id="06f56-425">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="06f56-426">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-426">-or-</span></span> 
<span data-ttu-id="06f56-427">Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-427">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-428">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-428">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="06f56-429"><see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-429"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="06f56-430">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedList`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-430">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-431">Standard Implementierungen von Auflistungen in <xref:System.Collections.Generic?displayProperty=nameWithType> werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-431">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="06f56-432">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="06f56-432">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="06f56-433">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-433">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06f56-434">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-434">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06f56-435">Die- <xref:System.Collections.ICollection.SyncRoot%2A> Eigenschaft gibt ein Objekt zurück, mit dem der Zugriff auf die synchronisiert werden kann <xref:System.Collections.ICollection> .</span><span class="sxs-lookup"><span data-stu-id="06f56-435">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="06f56-436">Die Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt Sperren, bevor Sie auf die Auflistung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="06f56-436">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="06f56-437">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-437">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-438">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-438">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="06f56-439">Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-439">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="06f56-440">In der Standardimplementierung der <see cref="T:System.Collections.Generic.SortedList`2" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-440">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-441">Standard Implementierungen von Auflistungen in <xref:System.Collections.Generic?displayProperty=nameWithType> werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-441">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="06f56-442">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="06f56-442">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="06f56-443">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-443">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="06f56-444">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-444">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06f56-445">Die- <xref:System.Collections.ICollection.SyncRoot%2A> Eigenschaft gibt ein Objekt zurück, mit dem der Zugriff auf die synchronisiert werden kann <xref:System.Collections.ICollection> .</span><span class="sxs-lookup"><span data-stu-id="06f56-445">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="06f56-446">Die Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt Sperren, bevor Sie auf die Auflistung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="06f56-446">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="06f56-447">Der folgende Code zeigt die Verwendung der <xref:System.Collections.ICollection.SyncRoot%2A> -Eigenschaft für c#, C++ und Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="06f56-447">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="06f56-448">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-448">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Add : obj * obj -&gt; unit&#xA;override this.System.Collections.IDictionary.Add : obj * obj -&gt; unit" Usage="sortedList.System.Collections.IDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-449">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-449">The <see cref="T:System.Object" /> to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="06f56-450">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-450">The <see cref="T:System.Object" /> to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="06f56-451">Fügt der <see cref="T:System.Collections.IDictionary" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="06f56-451">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-452">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="06f56-452">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="06f56-453">Wenn der angegebene Schlüssel jedoch bereits im Wörterbuch vorhanden ist, überschreibt das Festlegen der- <xref:System.Collections.IDictionary.Item%2A> Eigenschaft den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="06f56-453">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="06f56-454">Im Gegensatz dazu ändert die- <xref:System.Collections.IDictionary.Add%2A> Methode keine vorhandenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="06f56-454">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="06f56-455">Bei dieser Methode handelt es sich um einen O ( `n` )-Vorgang für unsortierte Daten, wobei den Wert hat `n` <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-455">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-456">Es handelt sich um einen O (log `n` )-Vorgang, wenn das neue Element am Ende der Liste hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-456">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="06f56-457">Wenn das Einfügen eine Größenänderung bewirkt, ist der Vorgang O ( `n` ).</span><span class="sxs-lookup"><span data-stu-id="06f56-457">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-458">Im folgenden Codebeispiel wird gezeigt, wie Sie <xref:System.Collections.Generic.SortedList%602> über die-Schnittstelle auf die-Klasse zugreifen <xref:System.Collections.IDictionary?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-458">The following code example shows how to access the <xref:System.Collections.Generic.SortedList%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="06f56-459">Im Codebeispiel wird eine leere <xref:System.Collections.Generic.SortedList%602> Zeichenfolge mit Zeichen folgen Schlüsseln erstellt, und die-Methode wird verwendet <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> , um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06f56-459">The code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="06f56-460">Das Beispiel zeigt, dass die- <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> Methode einen auslöst <xref:System.ArgumentException> , wenn versucht wird, einen doppelten Schlüssel hinzuzufügen, oder wenn ein Schlüssel oder Wert des falschen Datentyps angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-460">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="06f56-461">Das Codebeispiel veranschaulicht die Verwendung mehrerer anderer Member der- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="06f56-461">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-462"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-462"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-463"><paramref name="key" /> weist einen Typ auf, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-463"><paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="06f56-464">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-464">-or-</span></span> 
 <span data-ttu-id="06f56-465"><paramref name="value" /> weist einen Typ auf, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-465"><paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="06f56-466">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-466">-or-</span></span> 
<span data-ttu-id="06f56-467">In <see cref="T:System.Collections.IDictionary" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span><span class="sxs-lookup"><span data-stu-id="06f56-467">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Contains : obj -&gt; bool&#xA;override this.System.Collections.IDictionary.Contains : obj -&gt; bool" Usage="sortedList.System.Collections.IDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-468">Der im <see cref="T:System.Collections.IDictionary" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06f56-468">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span></span></param>
        <summary><span data-ttu-id="06f56-469">Ermittelt, ob das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem angegebenen Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-469">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="06f56-470"><see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-470"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-471">Diese Methode gibt `false` zurück `key` , wenn ein Typ ist, der dem Schlüsseltyp der nicht zugewiesen werden kann `TKey` <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-471">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-472">Diese Methode ist ein O (log `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-472">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-473">Im folgenden Codebeispiel wird gezeigt, wie die- <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> Methode der- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle mit einem verwendet wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-473">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-474">Das Beispiel zeigt, dass die-Methode zurückgibt, `false` Wenn ein Schlüssel mit dem falschen Datentyp bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-474">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="06f56-475">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-475">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedList.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-476"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-476"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.System.Collections.IDictionary.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="sortedList.System.Collections.IDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-477">Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-477">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="06f56-478">Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-478">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-479">Die- `foreach` Anweisung der c#-Sprache ( `for each` in C++, `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="06f56-479">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="06f56-480">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="06f56-480">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="06f56-481">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-481">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="06f56-482">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="06f56-482">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="06f56-483"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-483"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="06f56-484">An dieser Position ist <xref:System.Collections.IDictionaryEnumerator.Entry%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-484">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="06f56-485">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.IDictionaryEnumerator.Entry%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-485">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="06f56-486"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-486"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="06f56-487"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IDictionaryEnumerator.Entry%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-487"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="06f56-488">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-488">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="06f56-489">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-489">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="06f56-490">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-490">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="06f56-491">Um <xref:System.Collections.IDictionaryEnumerator.Entry%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="06f56-491">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="06f56-492">Ein Enumerator bleibt gültig, solange die Auflistung unverändert bleibt.</span><span class="sxs-lookup"><span data-stu-id="06f56-492">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="06f56-493">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, und der nächste Rückruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder löst <xref:System.Collections.IEnumerator.Reset%2A> eine aus <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="06f56-493">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="06f56-494">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="06f56-494">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="06f56-495">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-495">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06f56-496">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-496">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06f56-497">Standard Implementierungen von Auflistungen in <xref:System.Collections.Generic?displayProperty=nameWithType> werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-497">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="06f56-498">Diese Methode ist ein O (1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-498">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-499">Im folgenden Codebeispiel wird gezeigt, wie die Schlüssel-Wert-Paare in der sortierten Liste mithilfe der- `foreach` Anweisung ( `For Each` in Visual Basic `for each` in C++) aufgelistet werden, die die Verwendung des Enumerators verbirgt.</span><span class="sxs-lookup"><span data-stu-id="06f56-499">The following code example shows how to enumerate the key/value pairs in the sorted list by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="06f56-500">Beachten Sie insbesondere, dass der Enumerator für die- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle-Objekte anstelle von-Objekten zurückgibt <xref:System.Collections.DictionaryEntry> <xref:System.Collections.Generic.KeyValuePair%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-500">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="06f56-501">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-501">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.IsFixedSize : bool" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-502">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist.</span><span class="sxs-lookup"><span data-stu-id="06f56-502">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="06f56-503">Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-503"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="06f56-504">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedList`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-504">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-505">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu. Vorhandene Elemente können jedoch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-505">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="06f56-506">Eine Auflistung mit fester Größe ist einfach eine Sammlung mit einem Wrapper, der das Hinzufügen und Entfernen von Elementen verhindert. Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, einschließlich hinzufügen oder Entfernen von Elementen, reflektiert die Auflistung mit fester Größe diese Änderungen.</span><span class="sxs-lookup"><span data-stu-id="06f56-506">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="06f56-507">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-507">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.IsReadOnly : bool" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-508">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-508">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="06f56-509"><see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-509"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="06f56-510">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedList`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-510">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-511">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="06f56-511">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="06f56-512">Eine Auflistung, die schreibgeschützt ist, ist einfach eine Sammlung mit einem Wrapper, der das Ändern der Auflistung verhindert. Wenn also Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, reflektiert die schreibgeschützte Auflistung diese Änderungen.</span><span class="sxs-lookup"><span data-stu-id="06f56-512">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="06f56-513">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-513">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Item(obj) : obj with get, set" Usage="System.Collections.IDictionary.Item" />
      <MemberSignature Language="C#" Value="object? System.Collections.IDictionary.Item[object key] { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-514">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-514">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="06f56-515">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-515">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="06f56-516">Das Element mit dem angegebenen Schlüssel oder <see langword="null" />, wenn <paramref name="key" /> nicht im Wörterbuch enthalten ist oder <paramref name="key" /> einen Typ aufweist, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedList`2" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-516">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-517">Diese Eigenschaft gibt `null` zurück `key` , wenn ein Typ ist, der dem Schlüsseltyp der nicht zugewiesen werden kann `TKey` <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-517">This property returns `null` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-518">Über diese Eigenschaft können Sie mithilfe der folgenden Syntax auf ein bestimmtes Element der Auflistung zugreifen: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="06f56-518">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="06f56-519">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="06f56-519">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="06f56-520">Wenn der angegebene Schlüssel jedoch bereits im Wörterbuch vorhanden ist, überschreibt das Festlegen der- <xref:System.Collections.IDictionary.Item%2A> Eigenschaft den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="06f56-520">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="06f56-521">Im Gegensatz dazu ändert die- <xref:System.Collections.IDictionary.Add%2A> Methode keine vorhandenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="06f56-521">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="06f56-522">Die Programmiersprache c# verwendet das [this](/dotnet/csharp/language-reference/keywords/this) -Schlüsselwort zum Definieren der Indexer, anstatt die-Eigenschaft zu implementieren <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-522">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="06f56-523">Visual Basic implementiert <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="06f56-523">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="06f56-524">Das Abrufen des Werts dieser Eigenschaft ist ein O (log `n` )-Vorgang, wobei n gleich ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-524">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="06f56-525">Das Festlegen der-Eigenschaft ist ein O (log `n` )-Vorgang, wenn der Schlüssel bereits in der vorhanden ist <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-525">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-526">Wenn der Schlüssel nicht in der Liste enthalten ist, ist das Festlegen der Eigenschaft ein O ( `n` )-Vorgang für unsortierte Daten oder O (log `n` ), wenn das neue Element am Ende der Liste hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-526">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="06f56-527">Wenn das Einfügen eine Größenänderung bewirkt, ist der Vorgang O ( `n` ).</span><span class="sxs-lookup"><span data-stu-id="06f56-527">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-528">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> -Eigenschaft (der Indexer in c#) der <xref:System.Collections.IDictionary?displayProperty=nameWithType> -Schnittstelle mit einem verwendet <xref:System.Collections.Generic.SortedList%602> wird, und wie die-Eigenschaft von der-Eigenschaft abweicht <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="06f56-528">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06f56-529">Das Beispiel zeigt, dass die-Eigenschaft wie die- <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> Eigenschaft <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> den Wert ändern kann, der einem vorhandenen Schlüssel zugeordnet ist. Sie kann verwendet werden, um ein neues Schlüssel-Wert-Paar hinzuzufügen, wenn der angegebene Schlüssel nicht in der sortierten Liste enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-529">The example shows that, like the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the sorted list.</span></span> <span data-ttu-id="06f56-530">Das Beispiel zeigt auch, dass die-Eigenschaft im Gegensatz zur- <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> Eigenschaft <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> keine Ausnahme auslöst, wenn `key` sich nicht in der sortierten Liste befindet und stattdessen einen NULL-Verweis zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="06f56-530">The example also shows that unlike the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the sorted list, returning a null reference instead.</span></span> <span data-ttu-id="06f56-531">Das Beispiel zeigt, dass das erhalten der- <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> Eigenschaft einen NULL-Verweis zurückgibt `key` , wenn nicht der richtige Datentyp ist und das Festlegen der-Eigenschaft eine Ausnahme auslöst, wenn `key` nicht der richtige Datentyp ist.</span><span class="sxs-lookup"><span data-stu-id="06f56-531">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="06f56-532">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-532">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedList.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedList.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedList.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-533"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-533"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06f56-534">Es wird ein Wert zugewiesen, und <paramref name="key" /> ist ein Typ, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedList`2" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-534">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span>  
  
<span data-ttu-id="06f56-535">Oder</span><span class="sxs-lookup"><span data-stu-id="06f56-535">-or-</span></span> 
<span data-ttu-id="06f56-536">Es wird ein Wert zugewiesen, und <paramref name="value" /> ist ein Typ, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.Generic.SortedList`2" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-536">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Keys : System.Collections.ICollection" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-537">Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-537">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="06f56-538">Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-538">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-539">Die Reihenfolge der Schlüssel in <xref:System.Collections.ICollection> entspricht der Reihenfolge in <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-539">The order of the keys in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-540">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-540">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-541">Im folgenden Codebeispiel wird gezeigt, wie die- <xref:System.Collections.IDictionary.Keys%2A> Eigenschaft der- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle mit einem verwendet <xref:System.Collections.Generic.SortedDictionary%602> wird, um die Schlüssel im Wörterbuch aufzulisten.</span><span class="sxs-lookup"><span data-stu-id="06f56-541">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="06f56-542">Das Beispiel zeigt auch, wie die Schlüssel-Wert-Paare in der sortierten Liste aufgelistet werden. Beachten Sie, dass der Enumerator für die- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle-Objekte anstelle von-Objekten zurückgibt <xref:System.Collections.DictionaryEntry> <xref:System.Collections.Generic.KeyValuePair%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-542">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="06f56-543">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-543">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedList.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Remove : obj -&gt; unit&#xA;override this.System.Collections.IDictionary.Remove : obj -&gt; unit" Usage="sortedList.System.Collections.IDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-544">Der Schlüssel des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06f56-544">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="06f56-545">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-545">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-546">Diese Methode führt eine binäre Suche aus. die Elemente werden jedoch nach oben verschoben, um die öffnende Stelle auszufüllen, sodass diese Methode ein O ( `n` )-Vorgang ist, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-546">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-547">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> der- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle mit einem verwendet wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-547">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-548">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-548">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedList.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-549"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-549"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Values : System.Collections.ICollection" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-550">Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-550">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="06f56-551">Eine <see cref="T:System.Collections.ICollection" />, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-551">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-552">Die Reihenfolge der Werte in <xref:System.Collections.ICollection> entspricht der Reihenfolge in <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-552">The order of the values in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-553">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-553">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-554">Im folgenden Codebeispiel wird gezeigt, wie die- <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> Eigenschaft der- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle mit einem verwendet <xref:System.Collections.Generic.SortedList%602> wird, um die Werte in der sortierten Liste aufzulisten.</span><span class="sxs-lookup"><span data-stu-id="06f56-554">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, to list the values in the sorted list.</span></span> <span data-ttu-id="06f56-555">Das Beispiel zeigt auch, wie die Schlüssel-Wert-Paare in der sortierten Liste aufgelistet werden. Beachten Sie, dass der Enumerator für die- <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle-Objekte anstelle von-Objekten zurückgibt <xref:System.Collections.DictionaryEntry> <xref:System.Collections.Generic.KeyValuePair%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-555">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="06f56-556">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, die für die-Methode bereitgestellt wird <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-556">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedList.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="sortedList.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-557">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="06f56-557">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="06f56-558">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-558">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-559">Die- `foreach` Anweisung der c#-Sprache ( `for each` in C++, `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="06f56-559">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="06f56-560">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="06f56-560">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="06f56-561">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-561">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="06f56-562">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="06f56-562">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="06f56-563"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-563"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="06f56-564">An dieser Position ist <xref:System.Collections.IEnumerator.Current%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-564">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="06f56-565">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.IEnumerator.Current%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="06f56-565">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="06f56-566"><xref:System.Collections.IEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-566"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="06f56-567"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="06f56-567"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="06f56-568">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-568">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="06f56-569">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="06f56-569">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="06f56-570">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-570">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="06f56-571">Um <xref:System.Collections.IEnumerator.Current%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="06f56-571">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="06f56-572">Ein Enumerator bleibt gültig, solange die Auflistung unverändert bleibt.</span><span class="sxs-lookup"><span data-stu-id="06f56-572">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="06f56-573">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, und der nächste Rückruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder löst <xref:System.Collections.IEnumerator.Reset%2A> eine aus <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="06f56-573">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="06f56-574">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="06f56-574">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="06f56-575">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="06f56-575">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06f56-576">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="06f56-576">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06f56-577">Standard Implementierungen von Auflistungen in <xref:System.Collections.Generic?displayProperty=nameWithType> werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="06f56-577">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="06f56-578">Diese Methode ist ein O (1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-578">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="sortedList.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06f56-579">Legt die Kapazität auf die Anzahl der tatsächlich im <see cref="T:System.Collections.Generic.SortedList`2" /> befindlichen Elemente fest, sofern diese Anzahl unter 90 Prozent der aktuellen Kapazität liegt.</span><span class="sxs-lookup"><span data-stu-id="06f56-579">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.SortedList`2" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-580">Diese Methode kann verwendet werden, um den Arbeitsspeicher Aufwand einer Sammlung zu minimieren, wenn der Auflistung keine neuen Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-580">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="06f56-581">Die Kosten für das erneute zuordnen und Kopieren eines großen <xref:System.Collections.Generic.SortedList%602> kann jedoch beträchtlich sein, sodass die- <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> Methode nichts bewirkt, wenn die Liste mehr als 90 Prozent der Kapazität hat.</span><span class="sxs-lookup"><span data-stu-id="06f56-581">The cost of reallocating and copying a large <xref:System.Collections.Generic.SortedList%602> can be considerable, however, so the <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="06f56-582">Dadurch wird vermieden, dass für einen relativ kleinen Gewinn keine großen Kosten für die erneute Zuordnung anfallen.</span><span class="sxs-lookup"><span data-stu-id="06f56-582">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="06f56-583">Diese Methode ist ein O ( `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-583">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 <span data-ttu-id="06f56-584">Um einen <xref:System.Collections.Generic.SortedList%602> auf seinen ursprünglichen Zustand zurückzusetzen, rufen Sie die-Methode auf, bevor Sie die <xref:System.Collections.Generic.SortedList%602.Clear%2A> <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="06f56-584">To reset a <xref:System.Collections.Generic.SortedList%602> to its initial state, call the <xref:System.Collections.Generic.SortedList%602.Clear%2A> method before calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method.</span></span> <span data-ttu-id="06f56-585">Durch Kürzen eines leeren wird <xref:System.Collections.Generic.SortedList%602> die Kapazität von <xref:System.Collections.Generic.SortedList%602> auf die Standardkapazität festgelegt.</span><span class="sxs-lookup"><span data-stu-id="06f56-585">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="06f56-586">Die Kapazität kann auch mit der-Eigenschaft festgelegt werden <xref:System.Collections.Generic.SortedList%602.Capacity%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-586">The capacity can also be set using the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key * 'Value -&gt; bool&#xA;override this.TryGetValue : 'Key * 'Value -&gt; bool" Usage="sortedList.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06f56-587">Der Schlüssel, dessen Wert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="06f56-587">The key whose value to get.</span></span></param>
        <param name="value"><span data-ttu-id="06f56-588">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="06f56-588">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span></span> <span data-ttu-id="06f56-589">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="06f56-589">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="06f56-590">Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</span><span class="sxs-lookup"><span data-stu-id="06f56-590">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="06f56-591"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedList`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-591"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-592">Diese Methode kombiniert die Funktionalität der <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> -Methode und der- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="06f56-592">This method combines the functionality of the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="06f56-593">Wenn der Schlüssel nicht gefunden wird, ruft der `value` Parameter den entsprechenden Standardwert für den Werttyp ab, `TValue` z. b. 0 (null) für ganzzahlige Typen, `false` für boolesche Typen und `null` für Verweis Typen.</span><span class="sxs-lookup"><span data-stu-id="06f56-593">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, zero (0) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="06f56-594">Diese Methode führt eine binäre Suche aus. Daher handelt es sich bei dieser Methode um einen O (log `n` )-Vorgang, bei dem gleich `n` ist <xref:System.Collections.Generic.SortedList%602.Count%2A> .</span><span class="sxs-lookup"><span data-stu-id="06f56-594">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-595">Das Beispiel zeigt, wie die- <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> Methode als effizientere Methode zum Abrufen von Werten in einem Programm verwendet wird, das häufig auf Schlüssel zugreift, die nicht in der sortierten Liste enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="06f56-595">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="06f56-596">Im Gegensatz dazu zeigt das Beispiel auch, wie die- <xref:System.Collections.Generic.SortedList%602.Item%2A> Eigenschaft (der Indexer in c#) Ausnahmen auslöst, wenn versucht wird, nicht vorhandene Schlüssel abzurufen.</span><span class="sxs-lookup"><span data-stu-id="06f56-596">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="06f56-597">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-597">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
 [!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
 [!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06f56-598"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06f56-598"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TValue&gt; ^ Values { System::Collections::Generic::IList&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.IList&lt;'Value&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06f56-599">Ruft eine Auflistung ab, die die Werte im <see cref="T:System.Collections.Generic.SortedList`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-599">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <value><span data-ttu-id="06f56-600">Eine <see cref="T:System.Collections.Generic.IList`1" />, die die Werte im <see cref="T:System.Collections.Generic.SortedList`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06f56-600">A <see cref="T:System.Collections.Generic.IList`1" /> containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06f56-601">Die Reihenfolge der Werte in <xref:System.Collections.Generic.IList%601> entspricht der Reihenfolge in <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-601">The order of the values in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="06f56-602">Der zurückgegebene <xref:System.Collections.Generic.IList%601> ist keine statische Kopie, sondern <xref:System.Collections.Generic.IList%601> verweist auf die Werte in der ursprünglichen <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-602">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the values in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="06f56-603">Aus diesem Grund werden Änderungen an der <xref:System.Collections.Generic.SortedList%602> weiterhin im widergespiegelt <xref:System.Collections.Generic.IList%601> .</span><span class="sxs-lookup"><span data-stu-id="06f56-603">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="06f56-604">Die Auflistung, die von der-Eigenschaft zurückgegeben wird <xref:System.Collections.Generic.SortedList%602.Values%2A> , bietet eine effiziente Möglichkeit zum Abrufen von Werten nach Index.</span><span class="sxs-lookup"><span data-stu-id="06f56-604">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Values%2A> property provides an efficient way to retrieve values by index.</span></span> <span data-ttu-id="06f56-605">Es ist nicht erforderlich, die Liste erneut zu generieren, wenn auf die Eigenschaft zugegriffen wird, da es sich bei der Liste lediglich um einen Wrapper für das interne Array von Werten handelt.</span><span class="sxs-lookup"><span data-stu-id="06f56-605">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of values.</span></span> <span data-ttu-id="06f56-606">Der folgende Code zeigt die Verwendung der- <xref:System.Collections.Generic.SortedList%602.Values%2A> Eigenschaft für das indizierte Abrufen von Werten aus einer sortierten Liste von Zeichen folgen:</span><span class="sxs-lookup"><span data-stu-id="06f56-606">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="06f56-607">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="06f56-607">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06f56-608">Dieses Codebeispiel zeigt, wie die Werte in der sortierten Liste mithilfe der <xref:System.Collections.Generic.SortedList%602.Values%2A> -Eigenschaft aufgelistet werden und wie die Schlüssel und Werte in der sortierten Liste aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="06f56-608">This code example shows how to enumerate the values in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Values%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="06f56-609">Das Beispiel zeigt auch, wie die- <xref:System.Collections.Generic.SortedList%602.Values%2A> Eigenschaft für das effiziente indizierte Abrufen von-Werten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06f56-609">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for efficient indexed retrieval of values.</span></span>  
  
 <span data-ttu-id="06f56-610">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Collections.Generic.SortedList%602> .</span><span class="sxs-lookup"><span data-stu-id="06f56-610">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#8)]
 [!code-csharp[Generic.SortedList#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#8)]
 [!code-vb[Generic.SortedList#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#8)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>
