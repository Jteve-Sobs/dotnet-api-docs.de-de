<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f3b6eaa112a135b87821854f7ee6b50799fa3df" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51873490" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="d31eb-101">Der Typ der aufzulistenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="d31eb-101">The type of objects to enumerate.</span></span></typeparam>
    <summary><span data-ttu-id="d31eb-102">Macht den Enumerator verfügbar, der eine einfache Iteration durch eine Auflistung eines angegebenen Typs unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d31eb-102">Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31eb-103"><xref:System.Collections.Generic.IEnumerable%601> ist die Basisschnittstelle für Sammlungen in der <xref:System.Collections.Generic> Namespace wie <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, und <xref:System.Collections.Generic.Stack%601> und andere generischen Sammlungen wie <xref:System.Collections.ObjectModel.ObservableCollection%601> und <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="d31eb-103"><xref:System.Collections.Generic.IEnumerable%601> is the base interface for collections in the <xref:System.Collections.Generic> namespace such as <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, and <xref:System.Collections.Generic.Stack%601> and other generic collections such as <xref:System.Collections.ObjectModel.ObservableCollection%601> and <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span> <span data-ttu-id="d31eb-104">Sammlungen implementieren <xref:System.Collections.Generic.IEnumerable%601> aufgelistet werden kann, mit der `foreach` Anweisung.</span><span class="sxs-lookup"><span data-stu-id="d31eb-104">Collections that implement <xref:System.Collections.Generic.IEnumerable%601> can be enumerated by using the `foreach` statement.</span></span>  
  
 <span data-ttu-id="d31eb-105">Die nicht generische Version dieser Schnittstelle finden Sie unter <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d31eb-105">For the non-generic version of this interface, see <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d31eb-106"><xref:System.Collections.Generic.IEnumerable%601> enthält eine einzelne Methode implementieren müssen, wenn Sie diese Schnittstelle implementieren. <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, welche gibt ein <xref:System.Collections.Generic.IEnumerator%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d31eb-106"><xref:System.Collections.Generic.IEnumerable%601> contains a single method that you must implement when implementing this interface; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, which returns an <xref:System.Collections.Generic.IEnumerator%601> object.</span></span> <span data-ttu-id="d31eb-107">Der zurückgegebene <xref:System.Collections.Generic.IEnumerator%601> bietet die Möglichkeit zum Durchlaufen der Auflistung mithilfe einer <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d31eb-107">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d31eb-108">Das folgende Beispiel veranschaulicht das Implementieren der <xref:System.Collections.Generic.IEnumerable%601> Schnittstelle und wie Sie diese Implementierung eine LINQ-Abfrage erstellen.</span><span class="sxs-lookup"><span data-stu-id="d31eb-108">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and how to use that implementation to create a LINQ query.</span></span> <span data-ttu-id="d31eb-109">Beim Implementieren <xref:System.Collections.Generic.IEnumerable%601>, Sie müssen auch <xref:System.Collections.Generic.IEnumerator%601> für C# nur, verwenden Sie die [ergeben](~/docs/csharp/language-reference/keywords/yield.md) Schlüsselwort.</span><span class="sxs-lookup"><span data-stu-id="d31eb-109">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="d31eb-110">Implementieren <xref:System.Collections.Generic.IEnumerator%601> auch <xref:System.IDisposable> implementiert werden, die Sie in diesem Beispiel sehen.</span><span class="sxs-lookup"><span data-stu-id="d31eb-110">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="d31eb-111">Eine andere C# Beispiel für die Implementierung der <xref:System.Collections.Generic.IEnumerable%601> Benutzeroberfläche, siehe die [Generikabeispiel](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="d31eb-111">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="d31eb-112">In diesem Beispiel wird die `yield` Schlüsselwort anstatt <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="d31eb-112">This sample uses the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="d31eb-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" /> ist für die Parität mit nicht generischen Auflistungen enthalten. Implementieren von <see cref="T:System.Collections.Generic.IEnumerable\`1" /> kann eine generische Auflistung, an eine Methode übergeben werden, erwartet eine <see cref="T:System.Collections.IEnumerable" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d31eb-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" /> is included for parity with non-generic collections; implementing <see cref="T:System.Collections.Generic.IEnumerable\`1" /> allows a generic collection to be passed to a method that expects an <see cref="T:System.Collections.IEnumerable" /> object.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="d31eb-114">Exemplarische Vorgehensweise: Implementieren von IEnumerable(Of T) in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="d31eb-114">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="d31eb-115">Iteratoren (C# und Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d31eb-115">Iterators (C# and Visual Basic)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593"><span data-ttu-id="d31eb-116">Generikabeispiel</span><span class="sxs-lookup"><span data-stu-id="d31eb-116">Generics Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d31eb-117">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="d31eb-117">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="d31eb-118">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="d31eb-118">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31eb-119">Der zurückgegebene <xref:System.Collections.Generic.IEnumerator%601> bietet die Möglichkeit zum Durchlaufen der Auflistung mithilfe einer <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft. Enumeratoren können die Daten in einer Auflistung gelesen, jedoch nicht zum Ändern der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="d31eb-119">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>  
  
 <span data-ttu-id="d31eb-120">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="d31eb-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d31eb-121">An dieser Position ist <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="d31eb-121">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="d31eb-122">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="d31eb-122">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="d31eb-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> zurück bis <xref:System.Collections.IEnumerator.MoveNext%2A> wird erneut aufgerufen, als <xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.Generic.IEnumerator%601.Current%2A> auf das nächste Element.</span><span class="sxs-lookup"><span data-stu-id="d31eb-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d31eb-124">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="d31eb-124">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d31eb-125">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="d31eb-125">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d31eb-126">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="d31eb-126">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="d31eb-127">Sie können <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="d31eb-127">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  

 <span data-ttu-id="d31eb-128">Wenn Änderungen, auf die Auflistung, z. B. hinzufügen vorgenommen werden, ändern oder Löschen von Elementen, ist das Verhalten des Enumerators nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="d31eb-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="d31eb-129">Ein Enumerator hat keinen exklusiven Zugriff auf die Auflistung so ein Enumerator gültig, bleibt wie die Auflistung geändert wird.</span><span class="sxs-lookup"><span data-stu-id="d31eb-129">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d31eb-130">Wenn die Auflistung geändert wird, wie hinzufügen, ändern oder Löschen von Elementen der Enumerator ungültig, und möglicherweise unerwartete Ergebnisse erhalten.</span><span class="sxs-lookup"><span data-stu-id="d31eb-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="d31eb-131">Außerdem ist die durchlaufen keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="d31eb-131">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="d31eb-132">Um Threadsicherheit zu gewährleisten, sollten Sie sperren Sie die Auflistung während der Enumerator oder Synchronisation für die Auflistung implementieren.</span><span class="sxs-lookup"><span data-stu-id="d31eb-132">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>  
  
 <span data-ttu-id="d31eb-133">Implementierung von Sammlungen im Standard der <xref:System.Collections.Generic?displayProperty=nameWithType> Namespace sind nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="d31eb-133">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d31eb-134">Das folgende Beispiel veranschaulicht das Implementieren der <xref:System.Collections.Generic.IEnumerable%601> -Schnittstelle und verwendet diese Implementierung eine LINQ-Abfrage erstellen.</span><span class="sxs-lookup"><span data-stu-id="d31eb-134">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and uses that implementation to create a LINQ query.</span></span> <span data-ttu-id="d31eb-135">Beim Implementieren <xref:System.Collections.Generic.IEnumerable%601>, Sie müssen auch <xref:System.Collections.Generic.IEnumerator%601> für C# nur, verwenden Sie die [ergeben](~/docs/csharp/language-reference/keywords/yield.md) Schlüsselwort.</span><span class="sxs-lookup"><span data-stu-id="d31eb-135">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="d31eb-136">Implementieren <xref:System.Collections.Generic.IEnumerator%601> auch <xref:System.IDisposable> implementiert werden, die Sie in diesem Beispiel sehen.</span><span class="sxs-lookup"><span data-stu-id="d31eb-136">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="d31eb-137">Eine andere C# Beispiel für die Implementierung der <xref:System.Collections.Generic.IEnumerable%601> Benutzeroberfläche, siehe die [Generikabeispiel](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="d31eb-137">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="d31eb-138">In diesem Beispiel wird von der `yield` Schlüsselwort anstatt <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="d31eb-138">This sample uses of the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="d31eb-139">Exemplarische Vorgehensweise: Implementieren von IEnumerable(Of T) in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="d31eb-139">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="d31eb-140">Iteratoren (C# und Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d31eb-140">Iterators (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>