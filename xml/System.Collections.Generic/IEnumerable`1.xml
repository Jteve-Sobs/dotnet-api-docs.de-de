<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="708fc94f22dfacb7fc60adc4fe6e5d91ca2349da" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83541574" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <TypeSignature Language="C#" Value="public interface IEnumerable&lt;T&gt; : System.Collections.IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;T&gt; implements class System.Collections.IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of T)&#xA;Implements IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Der Typ der aufzulistenden Objekte.</typeparam>
    <summary>Macht den Enumerator verfügbar, der eine einfache Iteration durch eine Auflistung eines angegebenen Typs unterstützt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.IEnumerable%601> ist die Basisschnittstelle für Auflistungen im <xref:System.Collections.Generic>-Namespace, z. b. <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>und <xref:System.Collections.Generic.Stack%601> und andere generische Auflistungen wie <xref:System.Collections.ObjectModel.ObservableCollection%601> und <xref:System.Collections.Concurrent.ConcurrentStack%601>. Auflistungen, die <xref:System.Collections.Generic.IEnumerable%601> implementieren, können mit der `foreach`-Anweisung aufgelistet werden.  
  
 Die nicht generische Version dieser Schnittstelle finden Sie unter <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.  
  
 <xref:System.Collections.Generic.IEnumerable%601> enthält eine einzelne Methode, die Sie implementieren müssen, wenn Sie diese Schnittstelle implementieren. <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, die ein <xref:System.Collections.Generic.IEnumerator%601>-Objekt zurückgibt. Der zurückgegebene <xref:System.Collections.Generic.IEnumerator%601> bietet die Möglichkeit, die Auflistung durch das verfügbar machen einer <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft zu durchlaufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle implementiert wird und wie diese Implementierung verwendet wird, um eine LINQ-Abfrage zu erstellen. Wenn Sie <xref:System.Collections.Generic.IEnumerable%601>implementieren, müssen Sie auch <xref:System.Collections.Generic.IEnumerator%601> implementieren, oder nur C# für können Sie das [Yield](~/docs/csharp/language-reference/keywords/yield.md) -Schlüsselwort verwenden. Zum Implementieren von <xref:System.Collections.Generic.IEnumerator%601> müssen <xref:System.IDisposable> implementiert werden, die in diesem Beispiel angezeigt werden.  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 Ein weiteres C# Beispiel, das veranschaulicht, wie die <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle implementiert wird, finden Sie unter [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593). In diesem Beispiel wird das `yield` Schlüsselwort anstelle der Implementierung von <xref:System.Collections.Generic.IEnumerator%601>verwendet.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Um mit Methoden kompatibel zu bleiben, die nicht generische Auflistungen durchlaufen, <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="T:System.Collections.IEnumerable" />implementiert. Dadurch kann eine generische Auflistung an eine Methode übermittelt werden, die ein <see cref="T:System.Collections.IEnumerable" /> Objekt erwartet.</para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">Exemplarische Vorgehensweise: Implementieren von IEnumerable(Of T) in Visual Basic</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">Iteratoren (C# und Visual Basic)</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593">Generics-Beispiel</related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
        <returns>Ein Enumerator, mit dem die Auflistung durchlaufen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der zurückgegebene <xref:System.Collections.Generic.IEnumerator%601> bietet die Möglichkeit, die Auflistung durch das verfügbar machen einer <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft zu durchlaufen. Sie können Enumeratoren verwenden, um die Daten in einer Auflistung zu lesen, jedoch nicht, um die Auflistung zu ändern.  
  
 Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert. An dieser Position ist <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht definiert. Daher müssen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode aufzurufen, um den Enumerator auf das erste Element der Auflistung zu setzen, bevor Sie den Wert von <xref:System.Collections.Generic.IEnumerator%601.Current%2A>lesen.  
  
 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> gibt dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> erneut aufgerufen wird, wenn <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.Generic.IEnumerator%601.Current%2A> auf das nächste Element festgelegt wird.  
  
 Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück. Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück. Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ist nicht definiert. Sie können <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.  

 Wenn Änderungen an der Auflistung vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, ist das Verhalten des Enumerators nicht definiert.  
  
 Ein Enumerator hat keinen exklusiven Zugriff auf die Auflistung, sodass ein Enumerator gültig bleibt, solange die Auflistung unverändert bleibt. Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator für ungültig erklärt, und Sie erhalten möglicherweise unerwartete Ergebnisse. Außerdem ist das Auflisten einer Auflistung keine Thread sichere Prozedur. Um die Thread Sicherheit zu gewährleisten, sollten Sie die Auflistung während des Enumerators sperren oder die Synchronisierung für die Auflistung implementieren.  
  
 Standard Implementierungen von Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Sie die <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle implementieren und diese Implementierung verwenden, um eine LINQ-Abfrage zu erstellen. Wenn Sie <xref:System.Collections.Generic.IEnumerable%601>implementieren, müssen Sie auch <xref:System.Collections.Generic.IEnumerator%601> implementieren, oder nur C# für können Sie das [Yield](~/docs/csharp/language-reference/keywords/yield.md) -Schlüsselwort verwenden. Zum Implementieren von <xref:System.Collections.Generic.IEnumerator%601> müssen <xref:System.IDisposable> implementiert werden, die in diesem Beispiel angezeigt werden.  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 Ein weiteres C# Beispiel, das veranschaulicht, wie die <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle implementiert wird, finden Sie unter [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593). In diesem Beispiel wird das `yield` Schlüsselwort anstelle der Implementierung von <xref:System.Collections.Generic.IEnumerator%601>verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">Exemplarische Vorgehensweise: Implementieren von IEnumerable(Of T) in Visual Basic</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">Iteratoren (C# und Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
