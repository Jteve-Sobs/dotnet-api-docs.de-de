<Type Name="SortedDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d200da8a920f63075695f2dcf293d0e1460d1d02" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52254950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="2eaa0-101">Der Typ der Schlüssel im Wörterbuch.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-101">The type of the keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="2eaa0-102">Der Typ der Werte im Wörterbuch.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-102">The type of the values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="2eaa0-103">Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, deren Reihenfolge anhand des Schlüssels bestimmt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-103">Represents a collection of key/value pairs that are sorted on the key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-104">Die <xref:System.Collections.Generic.SortedDictionary%602> generische Klasse ist einer binären Suchstruktur mit O (Log n) Abruf, wobei n die Anzahl der Elemente im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-104">The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a binary search tree with O(log n) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="2eaa0-105">In dieser Hinsicht ähnelt der <xref:System.Collections.Generic.SortedList%602> generische Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-105">In this respect, it is similar to the <xref:System.Collections.Generic.SortedList%602> generic class.</span></span> <span data-ttu-id="2eaa0-106">Die Klassen verfügen über ähnliche Objektmodelle, und beide verfügen über eine O (Log n) abrufen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-106">The two classes have similar object models, and both have O(log n) retrieval.</span></span> <span data-ttu-id="2eaa0-107">In dem die beiden Klassen unterscheiden sich in der speichernutzung und Geschwindigkeit Einfüge-und Entfernvorgänge:</span><span class="sxs-lookup"><span data-stu-id="2eaa0-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="2eaa0-108"><xref:System.Collections.Generic.SortedList%602> belegt weniger Speicher als <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="2eaa0-109"><xref:System.Collections.Generic.SortedDictionary%602> ist schneller und Löschvorgänge für unsortierte Daten: O (Log n) im Gegensatz zu O(n) für <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data: O(log n) as opposed to O(n) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="2eaa0-110">Wenn die Liste alle auf einmal mit sortierten Daten gefüllt wird <xref:System.Collections.Generic.SortedList%602> ist schneller als <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="2eaa0-111">Jedes Schlüssel-Wert-Paar kann abgerufen werden, als eine <xref:System.Collections.Generic.KeyValuePair%602> Struktur oder als eine <xref:System.Collections.DictionaryEntry> über die nicht generische <xref:System.Collections.IDictionary> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-111">Each key/value pair can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> structure, or as a <xref:System.Collections.DictionaryEntry> through the nongeneric <xref:System.Collections.IDictionary> interface.</span></span>  
  
 <span data-ttu-id="2eaa0-112">Schlüssel müssen unveränderlich sein, solange sie als Schlüssel verwendet werden die <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-112">Keys must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="2eaa0-113">Jeder Schlüssel im einem <xref:System.Collections.Generic.SortedDictionary%602> muss eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-113">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique.</span></span> <span data-ttu-id="2eaa0-114">Ein Schlüssel kann nicht `null`, jedoch kann ein Wert, wenn der Werttyp, `TValue` ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-114">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="2eaa0-115"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-115"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-116">Sie können angeben, dass eine Implementierung von der <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle mithilfe eines Konstruktors, die akzeptiert eine `comparer` Parameter; Wenn Sie keine Implementierung, die standardmäßig Genericcomparer angeben <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-116">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify an implementation, the default genericcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span> <span data-ttu-id="2eaa0-117">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-117">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="2eaa0-118">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) gibt ein Objekt des Typs der Elemente in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-118">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="2eaa0-119">Da jedes Element von der <xref:System.Collections.Generic.SortedDictionary%602> Schlüssel/Wert-Paar, ist der Elementtyp ist nicht der Typ des Schlüssels oder den Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-119">Since each element of the <xref:System.Collections.Generic.SortedDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="2eaa0-120">Stattdessen ist der Typ des Elements <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-120">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="2eaa0-121">Der folgende Code zeigt, c#, C++ und Visual Basic-Syntax.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-121">The following code shows C#, C++, and Visual Basic syntax.</span></span>  
  
 [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]
 [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="2eaa0-122">Die `foreach` Anweisung ist ein Wrapper um den Enumerator, der nur das Lesen aus der Auflistung zulässt, nicht in den sie schreiben.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-122">The `foreach` statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-123">Das folgende Codebeispiel erstellt ein leeres <xref:System.Collections.Generic.SortedDictionary%602> von Zeichenfolgen mit Zeichenfolgenschlüsseln und verwendet die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-123">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="2eaa0-124">Im Beispiel wird veranschaulicht, die die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> -Methode löst eine <xref:System.ArgumentException> beim Versuch, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-124">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="2eaa0-125">Im Beispiel wird die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> -Eigenschaft (Indexer in c#) zum Abrufen von Werten, die veranschaulicht, dass eine <xref:System.Collections.Generic.KeyNotFoundException> wird ausgelöst, wenn ein angeforderte Schlüssel nicht vorhanden ist, und zeigt, dass der Wert mit einem Schlüssel zugeordnete ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-125">The example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="2eaa0-126">Im Beispiel wird gezeigt, wie mithilfe der <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> Methode als eine effizientere Methode zum Abrufen der Werte, wenn ein Programm häufig versucht Schlüsselwerte, die nicht im Wörterbuch vorhanden sind, und es zeigt, wie die <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> Methode zu testen, ob ein Schlüssel vorhanden ist, vor dem Aufrufen der <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-126">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="2eaa0-127">Das Beispiel zeigt, wie die Schlüssel und Werte im Wörterbuch aufgelistet werden und wie die Schlüssel aufgelistet werden, und Werte mithilfe von allein die <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> Eigenschaft und die <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-127">The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-128">Zum Schluss das Beispiel veranschaulicht die <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-128">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2eaa0-129">Öffentliche statische (<see langword="Shared" /> in Visual Basic) Member dieses Typs sind threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="2eaa0-130">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-130">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="2eaa0-131">Ein <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gleichzeitige Unterstützung für mehrere Reader, solange die Auflistung nicht geändert wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-131">A <see cref="T:System.Collections.Generic.SortedDictionary`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="2eaa0-132">Trotzdem ist die Enumeration einer Auflistung systemintern keine threadsichere Prozedur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-132">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="2eaa0-133">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-133">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="2eaa0-134">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaa0-134">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.SortedList" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-135">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-135">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-136">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, bei der die <see cref="T:System.Collections.Generic.IComparer`1" />-Standardimplementierung für den Typ des Schlüssels verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-137">Jeder Schlüssel im einem <xref:System.Collections.Generic.SortedDictionary%602> anhand des Standardcomparers eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-137">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="2eaa0-138"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-138"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-139">Dieser Konstruktor verwendet den Standardgleichheitsvergleich für den generischen <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-139">This constructor uses the default generic equality comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eaa0-140">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-140">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="2eaa0-141">Alternativ können Sie angeben, eine Implementierung der <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle mithilfe eines Konstruktors, die akzeptiert eine `comparer` Parameter.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-141">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="2eaa0-142">Dieser Konstruktor ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-143">Das folgende Codebeispiel erstellt ein leeres <xref:System.Collections.Generic.SortedDictionary%602> von Zeichenfolgen mit Zeichenfolgenschlüsseln und verwendet die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-143">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="2eaa0-144">Im Beispiel wird veranschaulicht, die die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> -Methode löst eine <xref:System.ArgumentException> beim Versuch, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-144">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="2eaa0-145">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-145">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="2eaa0-146">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die zum Vergleichen von Schlüsseln verwendet werden soll, oder <see langword="null" />, wenn der Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für diesen Schlüsseltyp verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-146">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-147">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, bei der die angegebene <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung für den Vergleich von Schlüsseln verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-147">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-148">Jeder Schlüssel im einem <xref:System.Collections.Generic.SortedDictionary%602> entsprechend des angegebenen Vergleichs eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-148">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="2eaa0-149"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-149"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-150">Wenn `comparer` ist `null`, dieser Konstruktor verwendet den generischen Standardgleichheitsvergleich <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-150">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eaa0-151">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-151">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="2eaa0-152">Dieser Konstruktor ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-153">Das folgende Codebeispiel erstellt eine <xref:System.Collections.Generic.SortedDictionary%602> mit einem Vergleich Groß-/Kleinschreibung, für die aktuelle Kultur.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-153">The following code example creates a <xref:System.Collections.Generic.SortedDictionary%602> with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="2eaa0-154">Das Beispiel fügt vier Elemente enthalten, von einige mit Kleinbuchstaben Schlüsseln und einige mit Großbuchstaben-Schlüsseln.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-154">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="2eaa0-155">Anschließend wird versucht, ein Element mit einem Schlüssel hinzuzufügen, die aus einem vorhandenen Schlüssel nur durch Fall unterscheidet sich die ausgelöste Ausnahme abfängt, und zeigt eine Fehlermeldung an.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-155">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="2eaa0-156">Zum Schluss zeigt das Beispiel die Elemente in der Sortierreihenfolge für Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-156">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="2eaa0-157">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in das neue <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-157">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-158">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, die Elemente enthält, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopiert wurden, und bei der die <see cref="T:System.Collections.Generic.IComparer`1" />-Standardimplementierung für den Typ des Schlüssels verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-159">Jeder Schlüssel im einem <xref:System.Collections.Generic.SortedDictionary%602> muss gemäß der Standardeinstellung eindeutig sein Comparer; aus diesem Grund jeder Schlüssel in der Quelle `dictionary` muss auch anhand des Standardcomparers eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-159">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer; therefore, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="2eaa0-160"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-160"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-161">Dieser Konstruktor verwendet den generischen Standardgleichheitsvergleich <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-161">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eaa0-162">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-162">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="2eaa0-163">Alternativ können Sie angeben, eine Implementierung der <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle mithilfe eines Konstruktors, die akzeptiert eine `comparer` Parameter.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-163">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="2eaa0-164">Dieser Konstruktor ist eine O (`n` Log `n`)-Vorgang, in denen `n` ist die Anzahl der Elemente im `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-164">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-165">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit <xref:System.Collections.Generic.SortedDictionary%602> erstellen Sie eine sortierte Kopie der Informationen in einer <xref:System.Collections.Generic.Dictionary%602>, übergeben die <xref:System.Collections.Generic.Dictionary%602> auf die <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-165">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-166">
            <paramref name="dictionary" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-166">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-167">
            <paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-167">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; (dictionary, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="2eaa0-168">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in das neue <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-168">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2eaa0-169">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die zum Vergleichen von Schlüsseln verwendet werden soll, oder <see langword="null" />, wenn der Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für diesen Schlüsseltyp verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-169">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-170">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, die Elemente enthält, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopiert wurden, und bei der die angegebene <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung für den Vergleich von Schlüsseln verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-171">Jeder Schlüssel im einem <xref:System.Collections.Generic.SortedDictionary%602> muss entsprechend der angegebenen eindeutig sein Comparer; aus diesem Grund jeder Schlüssel in der Quelle `dictionary` muss ebenfalls entsprechend des angegebenen Vergleichs eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-171">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer; therefore, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="2eaa0-172"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-172"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-173">Wenn `comparer` ist `null`, dieser Konstruktor verwendet den generischen Standardgleichheitsvergleich <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-173">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eaa0-174">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-174">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="2eaa0-175">Dieser Konstruktor ist eine O (`n` Log `n`)-Vorgang, in denen `n` ist die Anzahl der Elemente im `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-175">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-176">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit <xref:System.Collections.Generic.SortedDictionary%602> Erstellung einer Groß-/Kleinschreibung sortiert Kopie der Informationen in einem Groß-/Kleinschreibung <xref:System.Collections.Generic.Dictionary%602>, durch das Übergeben der <xref:System.Collections.Generic.Dictionary%602> auf die <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-176">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="2eaa0-177">In diesem Beispiel wird die Groß-/Kleinschreibung Vergleiche für die aktuelle Kultur sind.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-177">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-178">
            <paramref name="dictionary" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-178">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-179">
            <paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-179">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit&#xA;override this.Add : 'Key * 'Value -&gt; unit" Usage="sortedDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-180">Der Schlüssel des hinzuzufügenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-180">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2eaa0-181">Der Wert des hinzuzufügenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-181">The value of the element to add.</span>
          </span>
          <span data-ttu-id="2eaa0-182">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-182">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-183">Fügt dem <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-183">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-184">Sie können auch die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Eigenschaft, um neue Elemente hinzufügen, indem dem Wert eines Schlüssels, das ist nicht in der <xref:System.Collections.Generic.SortedDictionary%602>, z. B. `myCollection["myNonexistentKey"] = myValue` (in Visual Basic `myCollection("myNonexistantKey") = myValue`).</span><span class="sxs-lookup"><span data-stu-id="2eaa0-184">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue` (in Visual Basic, `myCollection("myNonexistantKey") = myValue`).</span></span> <span data-ttu-id="2eaa0-185">Jedoch, wenn der angegebene Schlüssel bereits vorhanden ist die <xref:System.Collections.Generic.SortedDictionary%602>wird durch das Festlegen der <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-185">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2eaa0-186">Im Gegensatz dazu die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode löst eine Ausnahme aus, wenn ein Element mit dem angegebenen Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-186">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an exception if an element with the specified key already exists.</span></span>  
  
 <span data-ttu-id="2eaa0-187">Ein Schlüssel kann nicht `null`, jedoch kann ein Wert, wenn der Werttyp, `TValue` ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-187">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="2eaa0-188">Diese Methode ist eine O (Log `n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-188">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-189">Das folgende Codebeispiel erstellt ein leeres <xref:System.Collections.Generic.SortedDictionary%602> von Zeichenfolgen mit Zeichenfolgenschlüsseln und verwendet die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-189">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="2eaa0-190">Im Beispiel wird veranschaulicht, die die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> -Methode löst eine <xref:System.ArgumentException> beim Versuch, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-190">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="2eaa0-191">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-191">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-192">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-192">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-193">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-193">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-194">Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-194">Removes all elements from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-195">Die <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> Eigenschaft auf 0 festgelegt ist, und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-195">The <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="2eaa0-196">Diese Methode ist ein o(1)-Vorgang, da Sie einfach im Stammverzeichnis des internen Datenstrukturen für die Garbagecollection freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-196">This method is an O(1) operation, since the root of the internal data structures is simply released for garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IComparer&lt;'Key&gt;" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-197">Ruft den <see cref="T:System.Collections.Generic.IComparer`1" /> ab, der zum Sortieren der Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-197">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-198">Der <see cref="T:System.Collections.Generic.IComparer`1" />, der zum Sortieren der Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> verwendet wird</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-198">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-199"><xref:System.Collections.Generic.SortedDictionary%602> erfordert eine Vergleichs-Implementierung, um wichtige Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-199"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="2eaa0-200">Sie können angeben, dass eine Implementierung von der <xref:System.Collections.Generic.IComparer%601> generische Schnittstelle mithilfe eines Konstruktors, die akzeptiert eine `comparer` Parameter.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-200">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span> <span data-ttu-id="2eaa0-201">Wenn Sie nicht, führen Sie die generischen Standardgleichheitsvergleich <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-201">If you do not, the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, is used.</span></span> <span data-ttu-id="2eaa0-202">Wenn Typ `TKey` implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle, die standardmäßige Vergleichsfunktion verwendet diese Implementierung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-202">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="2eaa0-203">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-203">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.SortedDictionary`2.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="sortedDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-204">Der im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-204">The key to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-205">Ermittelt, ob das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-205">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-206">
            <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-206">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-207">Diese Methode ist eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-207">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-208">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> Methode zum Überprüfen, ob ein Schlüssel vorhanden, vor dem Aufrufen ist der <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-208">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="2eaa0-209">Darüber hinaus wird mit der <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> Methode zum Abrufen von Werten, die ist eine effiziente Möglichkeit zum Abrufen von Werten, wenn ein Programm häufig Schlüssel versucht, die nicht im Wörterbuch vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-209">It also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="2eaa0-210">Schließlich werden der am wenigsten effizienten Methode zum Testen, ob ein Schlüssel vorhanden sind, mithilfe der <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> -Eigenschaft (Indexer in c#).</span><span class="sxs-lookup"><span data-stu-id="2eaa0-210">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="2eaa0-211">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-211">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#6)]
 [!code-vb[Generic.SortedDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-212">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-212">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.ContainsValue : 'Value -&gt; bool" Usage="sortedDictionary.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2eaa0-213">Der im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> zu suchende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-213">The value to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="2eaa0-214">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-214">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-215">Ermittelt, ob das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Wert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-215">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-216">
            <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Wert enthält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-216">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-217">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für den Werttyp `TValue`.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-217">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  
  
 <span data-ttu-id="2eaa0-218">Diese Methode führt eine lineare Suche. aus diesem Grund ist die durchschnittliche Ausführungszeit proportional zu der <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-218">This method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property.</span></span> <span data-ttu-id="2eaa0-219">Diese Methode ist, also eine O (`n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-219">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit" Usage="sortedDictionary.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2eaa0-220">Das eindimensionale Array von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Strukturen, in das die Elemente aus der aktuellen <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-220">The one-dimensional array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures that is the destination of the elements copied from the current <see cref="T:System.Collections.Generic.SortedDictionary`2" /> The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2eaa0-221">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-221">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-222">Kopiert die Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> in das angegebene Array von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Strukturen, wobei am angegebenen Index begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-222">Copies the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures, starting at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2eaa0-223">Wenn der Typ der Quelle <xref:System.Collections.Generic.SortedDictionary%602> kann nicht automatisch in den Typ des Ziels umgewandelt werden `array`, die nicht generischen Implementierungen der <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> auslösen <xref:System.InvalidCastException>, während die Implementierungen die generischen auslösen <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-223">If the type of the source <xref:System.Collections.Generic.SortedDictionary%602> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2eaa0-224">Diese Methode ist eine O (`n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-225">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-225">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2eaa0-226">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-226">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-227">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.SortedDictionary`2" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-227">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-228">Ruft die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-228">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-229">Die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-229">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-230">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-230">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Enumerator" Usage="sortedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-231">Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.SortedDictionary`2" /> durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-231">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-232">Ein <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> für die <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-232">A <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> for the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-233">Bei der Enumeration wird jedes Element ist ein <xref:System.Collections.Generic.KeyValuePair%602> Struktur, die einen Wert und ihrem Schlüssel darstellt.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-233">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="2eaa0-234">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-234">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="2eaa0-235">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-235">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2eaa0-236">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-236">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2eaa0-237">Das Wörterbuch wird in einer sortierten Reihenfolge mithilfe einer internen Struktur beibehalten.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-237">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="2eaa0-238">Die richtige Sortierposition jedes neues Element positioniert ist, und die Struktur wird angepasst, um die Sortierreihenfolge zu gewährleisten, wenn ein Element entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-238">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="2eaa0-239">Beim Aufzählen von ist, wird die Sortierreihenfolge beibehalten.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-239">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="2eaa0-240">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2eaa0-241">An dieser Position ist die <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-241">At this position, the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="2eaa0-242">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-242">Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2eaa0-243">Die <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> Eigenschaft gibt das gleiche Element erst die <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-243">The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property returns the same element until the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="2eaa0-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> legt <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2eaa0-245">Wenn <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-245">If <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2eaa0-246">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2eaa0-247">Wenn der letzte Aufruf <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-247">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2eaa0-248">Sie können <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-248">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2eaa0-249">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2eaa0-250">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> oder <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2eaa0-251">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2eaa0-252">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2eaa0-253">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2eaa0-254">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2eaa0-255">Diese Methode ist ein O (Log n)-Vorgang, wobei n die Anzahl ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-255">This method is an O(log n) operation, where n is count.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-256">Der Schlüssel des abzurufenden oder festzulegenden Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-256">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-257">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-257">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-258">Der dem angegebenen Schlüssel zugeordnete Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-258">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="2eaa0-259">Wenn der angegebene Schlüssel nicht gefunden wird, löst ein Get-Vorgang eine <see cref="T:System.Collections.Generic.KeyNotFoundException" /> aus, und durch einen Set-Vorgang wird ein neues Element mit dem angegebenen Schlüssel erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-259">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-260">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe der folgenden C#-Syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2eaa0-260">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="2eaa0-261">Sie können auch die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, die Eigenschaft ist nicht vorhanden, der <xref:System.Collections.Generic.SortedDictionary%602>, z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="2eaa0-261">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="2eaa0-262">Jedoch, wenn der angegebene Schlüssel bereits vorhanden ist die <xref:System.Collections.Generic.SortedDictionary%602>wird durch das Festlegen der <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-262">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2eaa0-263">Im Gegensatz dazu die <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-263">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="2eaa0-264">Ein Schlüssel kann nicht `null`, jedoch kann ein Wert, wenn der Werttyp, `TValue` ein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-264">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="2eaa0-265">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-265">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="2eaa0-266">Visual Basic implementiert <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-266">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2eaa0-267">Abrufen des Werts dieser Eigenschaft ist eine O (Log `n`)-Vorgang; die Eigenschaft ist auch eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-267">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-268">Im folgenden Codebeispiel wird die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> -Eigenschaft (Indexer in c#) zum Abrufen von Werten, die veranschaulicht, dass eine <xref:System.Collections.Generic.KeyNotFoundException> wird ausgelöst, wenn ein angeforderte Schlüssel nicht vorhanden ist, und zeigt, dass der Wert mit einem Schlüssel zugeordnete ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-268">The following code example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="2eaa0-269">Außerdem wird gezeigt, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> Methode als eine effizientere Möglichkeit, Werte abzurufen, wenn ein Programm häufig Schlüsselwerte, die nicht im Wörterbuch vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-269">The example also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="2eaa0-270">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-270">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#3)]
 [!code-vb[Generic.SortedDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-271">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-271">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="2eaa0-272">Die Eigenschaft wird abgerufen, und <paramref name="key" /> ist in der Sammlung nicht vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-272">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/KeyCollection&lt;!TKey, !TValue&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As SortedDictionary(Of TKey, TValue).KeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ Keys { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-273">Ruft eine Auflistung ab, die die Schlüssel im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-273">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-274">Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, die die Schlüssel im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-274">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-275">Die Schlüssel in der <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> entsprechend sortiert sind die <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> -Eigenschaft und sind in der gleichen Reihenfolge wie die zugeordneten Werte in der <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> zurückgegebenes der <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-275">The keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are in the same order as the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-276">Das zurückgegebene <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> ist nicht statisch, sondern, die <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> verweist zurück auf die Schlüssel in der ursprünglichen <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-276">The returned <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="2eaa0-277">Daher wird in der <xref:System.Collections.Generic.SortedDictionary%602> im berücksichtigt werden weiterhin die <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-277">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="2eaa0-278">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-278">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-279">Im folgenden Codebeispiel wird veranschaulicht, wie die Schlüssel im Wörterbuch mit aufgelistet werden die <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> -Eigenschaft, und wie die Schlüssel und Werte im Wörterbuch aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-279">The following code example shows how to enumerate the keys in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="2eaa0-280">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-280">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="2eaa0-281">Siehe <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-281">See <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#9)]
 [!code-vb[Generic.SortedDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool&#xA;override this.Remove : 'Key -&gt; bool" Usage="sortedDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-282">Der Schlüssel des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-282">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-283">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-283">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-284">
            <see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-284">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eaa0-285">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="key" /> nicht in der <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-285">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-286">Wenn die <xref:System.Collections.Generic.SortedDictionary%602> enthält kein Element mit dem angegebenen Schlüssel, der <xref:System.Collections.Generic.SortedDictionary%602> bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-286">If the <xref:System.Collections.Generic.SortedDictionary%602> does not contain an element with the specified key, the <xref:System.Collections.Generic.SortedDictionary%602> remains unchanged.</span></span> <span data-ttu-id="2eaa0-287">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-287">No exception is thrown.</span></span>  
  
 <span data-ttu-id="2eaa0-288">Diese Methode ist eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-288">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-289">Im folgenden Codebeispiel wird veranschaulicht, wie So entfernen Sie aus dem Wörterbuch mit Schlüssel/Wert-Paar der <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-289">The following code example shows how to remove a key/value pair from the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="2eaa0-290">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-290">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#10)]
 [!code-vb[Generic.SortedDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-291">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-291">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="2eaa0-292">Durchführen kulturunabhängiger Zeichenfolgenoperationen in Auflistungen</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-292">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2eaa0-293">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-293">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="2eaa0-294">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-294">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2eaa0-295">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-295">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-296">Kopiert die Elemente der <see cref="T:System.Collections.Generic.ICollection`1" /> in ein Array, wobei am angegebenen Arrayindex begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-296">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2eaa0-297">Wenn der Typ der Quelle <xref:System.Collections.ICollection> kann nicht automatisch in den Typ des Ziels umgewandelt werden `array`, die nicht generischen Implementierungen der <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> auslösen eine <xref:System.InvalidCastException>, während die Implementierungen die generischen auslösen eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-297">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2eaa0-298">Diese Methode ist eine O (`n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-298">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-299">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-299">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2eaa0-300">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-300">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-301">
            <paramref name="array" /> ist mehrdimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-301">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="2eaa0-302">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-302">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-303">
            <paramref name="array" /> verwendet keine nullbasierte Indizierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-303">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="2eaa0-304">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-304">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-305">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-305">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="2eaa0-306">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-306">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-307">Der Typ der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-307">The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-308">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-308">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-309">
            <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-309">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eaa0-310">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-310">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-311">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-311">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2eaa0-312">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-312">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2eaa0-313">Auch wenn eine Auflistung synchronisiert ist, können andere Threads weiterhin die Auflistung ändern, die den Enumerator eine Ausnahme verursachen kann.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-313">Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</span></span> <span data-ttu-id="2eaa0-314">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-314">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2eaa0-315">Die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> Eigenschaft gibt ein Objekt, das verwendet werden kann, um das Synchronisieren des Zugriffs auf die <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-315">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2eaa0-316">Synchronisierung ist nur wirksam, wenn alle Threads das Objekt zu sperren, bevor Sie den Zugriff auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-316">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="2eaa0-317">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-317">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-318">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-318">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-319">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-319">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-320">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-320">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2eaa0-321">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-321">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2eaa0-322">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-322">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2eaa0-323">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-323">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2eaa0-324">Die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> Eigenschaft gibt ein Objekt, das verwendet werden kann, um das Synchronisieren des Zugriffs auf die <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-324">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2eaa0-325">Synchronisierung ist nur wirksam, wenn alle Threads das Objekt zu sperren, bevor Sie den Zugriff auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-325">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="2eaa0-326">Der folgende Code zeigt die Verwendung der <xref:System.Collections.ICollection.SyncRoot%2A> -Eigenschaft für c#, C++ und Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-326">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="2eaa0-327">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-327">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-328">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-328">The object to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2eaa0-329">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-329">The object to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-330">Fügt der <see cref="T:System.Collections.IDictionary" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-330">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-331">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="2eaa0-331">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="2eaa0-332">Aber wenn es sich bei der angegebene Schlüssel im Wörterbuch bereits vorhanden ist, Festlegen der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-332">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2eaa0-333">Im Gegensatz dazu die <xref:System.Collections.IDictionary.Add%2A> Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-333">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="2eaa0-334">Diese Methode ist eine O (Log `n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-334">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-335">Im folgenden Codebeispiel wird veranschaulicht, wie den Zugriff auf die <xref:System.Collections.Generic.SortedDictionary%602> Klasse über die <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-335">The following code example shows how to access the <xref:System.Collections.Generic.SortedDictionary%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="2eaa0-336">Das Codebeispiel erstellt ein leeres <xref:System.Collections.Generic.SortedDictionary%602> von Zeichenfolgen mit Zeichenfolgenschlüsseln und verwendet die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-336">The code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="2eaa0-337">Im Beispiel wird veranschaulicht, die die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> -Methode löst eine <xref:System.ArgumentException> beim Versuch, einen doppelten Schlüssel hinzuzufügen, oder wenn ein Schlüssel oder Wert, der den falschen Datentyp angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-337">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="2eaa0-338">Im Codebeispiel veranschaulicht die Verwendung mehrerer anderer Member, der die <xref:System.Collections.IDictionary?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-338">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-339">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-339">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-340">
            <paramref name="key" /> weist einen Typ auf, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-340">
              <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="2eaa0-341">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-341">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-342">
            <paramref name="value" /> weist einen Typ auf, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-342">
              <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="2eaa0-343">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-343">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-344">In <see cref="T:System.Collections.IDictionary" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-344">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-345">Der im <see cref="T:System.Collections.IDictionary" /> zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-345">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-346">Ermittelt, ob das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem angegebenen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-346">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-347">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-347">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-348">Diese Methode gibt `false` Wenn `key` ist ein Typ, der nicht zugewiesen werden, um den Typ des Schlüssels ist `TKey` von der <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-348">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="2eaa0-349">Diese Methode ist eine O (Log `n`)-Vorgang, in denen `n` ist <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-349">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-350">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> Methode der <xref:System.Collections.IDictionary?displayProperty=nameWithType> eine Verbindung mit einer <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-350">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="2eaa0-351">Im Beispiel wird veranschaulicht, dass der Methodenrückgabe `false` Wenn ein Schlüssel von den falschen Datentyp angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-351">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="2eaa0-352">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-352">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-353">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-353">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-354">Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-354">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-355">Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-355">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-356">Bei der Enumeration wird jedes Element ist ein <xref:System.Collections.DictionaryEntry> Struktur.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-356">For purposes of enumeration, each item is a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="2eaa0-357">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-357">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="2eaa0-358">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-358">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2eaa0-359">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-359">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2eaa0-360">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-360">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2eaa0-361">Die <xref:System.Collections.IEnumerator.Reset%2A> Methode setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-361">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2eaa0-362">An dieser Position ist <xref:System.Collections.IDictionaryEnumerator.Entry%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-362">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="2eaa0-363">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-363">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="2eaa0-364">Die <xref:System.Collections.IDictionaryEnumerator.Entry%2A> Eigenschaft dasselbe Objekt zurück, bis entweder <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-364">The <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2eaa0-365"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IDictionaryEnumerator.Entry%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-365"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2eaa0-366">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-366">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2eaa0-367">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-367">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2eaa0-368">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-368">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="2eaa0-369">Um <xref:System.Collections.IDictionaryEnumerator.Entry%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-369">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2eaa0-370">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-370">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2eaa0-371">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-371">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2eaa0-372">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-372">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2eaa0-373">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-373">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2eaa0-374">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-374">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2eaa0-375">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-375">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2eaa0-376">Diese Methode ist ein O (Log n)-Vorgang, wobei n eine Anzahl von Elementen in einer Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-376">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-377">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufzählen von Schlüssel/Wert-Paare im Wörterbuch mit den `foreach` Anweisung (`For Each` in Visual Basic `for each` in C++), der die Verwendung des Enumerators verborgen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-377">The following code example shows how to enumerate the key/value pairs in the dictionary by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="2eaa0-378">Beachten Sie insbesondere, dass der Enumerator für die <xref:System.Collections.IDictionary?displayProperty=nameWithType> -Schnittstelle gibt <xref:System.Collections.DictionaryEntry> Objekte statt <xref:System.Collections.Generic.KeyValuePair%602> Objekte.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-378">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="2eaa0-379">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-379">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-380">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-380">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-381">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-381">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eaa0-382">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-382">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-383">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu. Vorhandene Elemente können jedoch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-383">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="2eaa0-384">Eine Auflistung mit fester Größe ist einfach eine Sammlung mit einem Wrapper, der verhindert wird, hinzufügen und Entfernen von Elementen. Wenn Änderungen, um die zugrunde liegende Auflistung vorgenommen werden, z. B. zum Hinzufügen oder Entfernen von Elementen, gibt die Auflistung mit fester Größe aus diesem Grund, diese Änderungen wieder.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-384">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2eaa0-385">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-385">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-386">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-386">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-387">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-387">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eaa0-388">In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-388">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-389">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-389">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2eaa0-390">Eine Auflistung, die schreibgeschützt ist, ist einfach eine Sammlung mit einem Wrapper, der verhindert, dass die Auflistung zu ändern; Wenn die zugrunde liegende Auflistung Änderungen vorgenommen werden, spiegelt die schreibgeschützte Auflistung aus diesem Grund diese Änderungen wider.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-390">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2eaa0-391">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-391">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-392">Der Schlüssel des abzurufenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-392">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-393">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-393">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-394">Das Element mit dem angegebenen Schlüssel oder <see langword="null" />, wenn <paramref name="key" /> nicht im Wörterbuch enthalten ist oder <paramref name="key" /> einen Typ aufweist, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-394">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-395">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe der folgenden C#-Syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2eaa0-395">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="2eaa0-396">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. `myCollection["myNonexistentKey"] = myValue`</span><span class="sxs-lookup"><span data-stu-id="2eaa0-396">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="2eaa0-397">Aber wenn es sich bei der angegebene Schlüssel im Wörterbuch bereits vorhanden ist, Festlegen der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-397">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2eaa0-398">Im Gegensatz dazu die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-398">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="2eaa0-399">Die C#-Sprache verwendet die [dies](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-399">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="2eaa0-400">Visual Basic implementiert <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-400">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2eaa0-401">Abrufen des Werts dieser Eigenschaft ist eine O (Log `n`)-Vorgang; die Eigenschaft ist auch eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-401">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-402">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> Eigenschaft (Indexer in c#) die <xref:System.Collections.IDictionary?displayProperty=nameWithType> eine Verbindung mit einer <xref:System.Collections.Generic.SortedDictionary%602>, sowie Möglichkeiten, die die Eigenschaft unterscheidet sich von der <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-402">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2eaa0-403">Im Beispiel wird veranschaulicht, wie z. B. die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> -Eigenschaft den Wert eines vorhandenen Schlüssels ändern kann, und können verwendet werden, um ein neues Schlüssel/Wert-Paar hinzufügen, wenn der angegebene Schlüssel nicht im Wörterbuch vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-403">The example shows that, like the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</span></span> <span data-ttu-id="2eaa0-404">Außerdem wird gezeigt, die im Gegensatz zu den <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> Eigenschaft löst keine Ausnahme aus, wenn `key` nicht im Wörterbuch vorhanden ist, gibt einen null-Verweis stattdessen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-404">The example also shows that unlike the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the dictionary, returning a null reference instead.</span></span> <span data-ttu-id="2eaa0-405">Schließlich im Beispiel wird veranschaulicht, dass beim Abrufen der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> Eigenschaft gibt einen null-Verweis zurück, wenn `key` ist nicht der richtige Datentyp, und das Festlegen der Eigenschaft löst eine Ausnahme aus, wenn `key` ist nicht der richtigen Datentyp.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-405">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="2eaa0-406">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-406">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-407">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-407">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eaa0-408">Es wird ein Wert zugewiesen, und <paramref name="key" /> ist ein Typ, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-408">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="2eaa0-409">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-409">-or-</span>
          </span>
          <span data-ttu-id="2eaa0-410">Es wird ein Wert zugewiesen, und <paramref name="value" /> ist ein Typ, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-410">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-411">Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-411">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-412">Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-412">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-413">Der Schlüssel in der zurückgegebenen <xref:System.Collections.ICollection> werden entsprechend sortiert die <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> -Eigenschaft und sind garantiert in der gleichen Reihenfolge wie die entsprechenden Werte in der <xref:System.Collections.ICollection> zurückgegebenes der <xref:System.Collections.IDictionary.Values%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-413">The keys in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are guaranteed to be in the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-414">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-414">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-415">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.IDictionary.Keys%2A> Eigenschaft der <xref:System.Collections.IDictionary?displayProperty=nameWithType> eine Verbindung mit einem <xref:System.Collections.Generic.SortedDictionary%602>, zum Auflisten der Schlüssel im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-415">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="2eaa0-416">Außerdem wird veranschaulicht, wie die Schlüssel/Wert-Paare im Wörterbuch aufgelistet; Beachten Sie, dass der Enumerator für die <xref:System.Collections.IDictionary?displayProperty=nameWithType> -Schnittstelle gibt <xref:System.Collections.DictionaryEntry> Objekte statt <xref:System.Collections.Generic.KeyValuePair%602> Objekte.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-416">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="2eaa0-417">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-417">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-418">Der Schlüssel des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-418">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-419">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-419">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-420">Diese Methode ist eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-420">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-421">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> von der <xref:System.Collections.IDictionary?displayProperty=nameWithType> eine Verbindung mit einem <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-421">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="2eaa0-422">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-422">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-423">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-423">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-424">Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-424">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-425">Eine <see cref="T:System.Collections.ICollection" />, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-425">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-426">Die Werte in der zurückgegebenen <xref:System.Collections.ICollection> werden entsprechend sortiert die <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> -Eigenschaft und sind garantiert in der gleichen Reihenfolge wie die entsprechenden Schlüssel in der <xref:System.Collections.ICollection> zurückgegebenes der <xref:System.Collections.IDictionary.Keys%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-426">The values in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are guaranteed to be in the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-427">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-427">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-428">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> Eigenschaft der <xref:System.Collections.IDictionary?displayProperty=nameWithType> eine Verbindung mit einer <xref:System.Collections.Generic.SortedDictionary%602>, um die Werte im Wörterbuch aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-428">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the values in the dictionary.</span></span> <span data-ttu-id="2eaa0-429">Außerdem wird veranschaulicht, wie die Schlüssel/Wert-Paare im Wörterbuch aufgelistet; Beachten Sie, dass der Enumerator für die <xref:System.Collections.IDictionary?displayProperty=nameWithType> -Schnittstelle gibt <xref:System.Collections.DictionaryEntry> Objekte statt <xref:System.Collections.Generic.KeyValuePair%602> Objekte.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-429">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="2eaa0-430">Das Codebeispiel ist Teil eines größeren Beispiels, einschließlich der Ausgabe, für die <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-430">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-431">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-431">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-432">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-432">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="2eaa0-433">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-433">The `foreach` statement of the C# language (`for each` in C++, `For Each` Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="2eaa0-434">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-434">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2eaa0-435">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-435">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2eaa0-436">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-436">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2eaa0-437">An dieser Position ist die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-437">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="2eaa0-438">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-438">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2eaa0-439">Die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft gibt das gleiche Element erst die <xref:System.Collections.IEnumerator.MoveNext%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-439">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same element until the <xref:System.Collections.IEnumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="2eaa0-440"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-440"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2eaa0-441">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-441">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2eaa0-442">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-442">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2eaa0-443">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-443">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2eaa0-444">Sie können <xref:System.Collections.IEnumerator.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-444">You cannot set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2eaa0-445">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-445">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2eaa0-446">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-446">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2eaa0-447">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-447">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2eaa0-448">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-448">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2eaa0-449">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-449">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2eaa0-450">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-450">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2eaa0-451">Diese Methode ist ein O (Log n)-Vorgang, wobei n eine Anzahl von Elementen in einer Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-451">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="sortedDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2eaa0-452">Der Schlüssel des abzurufenden Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-452">The key of the value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2eaa0-453">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-453">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaa0-454">Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-454">Gets the value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaa0-455">
            <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-455">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-456">Diese Methode kombiniert die Funktionalität der <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> Methode und die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-456">This method combines the functionality of the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-457">Wenn der Schlüssel nicht gefunden wird, und klicken Sie dann die `value` Parameter Ruft den entsprechenden Standardwert für den Werttyp `TValue`; z. B. 0 (null) für ganzzahlige Typen, `false` für boolesche Typen und `null` für Verweistypen zulässig.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-457">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="2eaa0-458">Diese Methode ist eine O (Log `n`) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-458">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-459">Das Beispiel zeigt, wie Sie mit der <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> Methode als eine effizientere Möglichkeit zum Abrufen von Werten in einem Programm, das häufig Schlüssel versucht, die nicht im Wörterbuch vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-459">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="2eaa0-460">Im Beispiel wird auch gezeigt, wie die <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> -Eigenschaft (Indexer in c#) löst Ausnahmen aus, bei dem Versuch, die nicht vorhandene Schlüssel abzurufen.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-460">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="2eaa0-461">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-461">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
 [!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2eaa0-462">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-462">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.ValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/ValueCollection&lt;!TKey, !TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As SortedDictionary(Of TKey, TValue).ValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ Values { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.ValueCollection" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+ValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaa0-463">Ruft eine Auflistung ab, die die Werte im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-463">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaa0-464">Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, die die Werte im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaa0-464">A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaa0-465">Die Werte in der <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> werden entsprechend sortiert die <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> -Eigenschaft und sind in der gleichen Reihenfolge wie die zugehörigen Schlüssel in der <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> zurückgegebenes der <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-465">The values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are in the same order as the associated keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="2eaa0-466">Das zurückgegebene <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> ist nicht statisch, sondern, die <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> verweist zurück auf die Werte in der ursprünglichen <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-466">The returned <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> refers back to the values in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="2eaa0-467">Daher wird in der <xref:System.Collections.Generic.SortedDictionary%602> im berücksichtigt werden weiterhin die <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-467">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span></span>  
  
 <span data-ttu-id="2eaa0-468">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-468">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaa0-469">In diesem Codebeispiel wird veranschaulicht, wie die Werte im Wörterbuch mit Auflisten der <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> -Eigenschaft, und wie die Schlüssel und Werte im Wörterbuch aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-469">This code example shows how to enumerate the values in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="2eaa0-470">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.Generic.SortedDictionary%602> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2eaa0-470">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#8)]
 [!code-vb[Generic.SortedDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>