<Type Name="ISet&lt;T&gt;" FullName="System.Collections.Generic.ISet&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce0cadb7f9c586ffc3cd90980495f8eb7d444136" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83476242" /></Metadata><TypeSignature Language="C#" Value="public interface ISet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISet`1&lt;T&gt; implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.ISet`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISet(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class ISet : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ISet&lt;'T&gt; = interface&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="5cbb1-101">Der Typ der Elemente in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-101">The type of elements in the set.</span></span></typeparam>
    <summary><span data-ttu-id="5cbb1-102">Stellt die Basisschnittstelle für die Abstraktion von Gruppen bereit.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-102">Provides the base interface for the abstraction of sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-103">Diese Schnittstelle stellt Methoden zum Implementieren von Sätzen bereit, bei denen es sich um Auflistungen mit eindeutigen Elementen und bestimmten Vorgängen handelt</span><span class="sxs-lookup"><span data-stu-id="5cbb1-103">This interface provides methods for implementing sets, which are collections that have unique elements and specific operations.</span></span> <span data-ttu-id="5cbb1-104">Diese Schnittstelle wird von den Auflistungen <xref:System.Collections.Generic.HashSet%601> und <xref:System.Collections.Generic.SortedSet%601> implementiert.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-104">The <xref:System.Collections.Generic.HashSet%601> and <xref:System.Collections.Generic.SortedSet%601> collections implement this interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; bool" Usage="iSet.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5cbb1-105">Der Element, das zur Menge hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-105">The element to add to the set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-106">Fügt der aktuellen Gruppe ein Element hinzu und gibt einen Wert zurück, um anzugeben, ob das Element erfolgreich hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-106">Adds an element to the current set and returns a value to indicate if the element was successfully added.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-107"><see langword="true" />, wenn das Element der Gruppe hinzugefügt wurde. <see langword="false" />, wenn das Element bereits in der Gruppe enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-107"><see langword="true" /> if the element is added to the set; <see langword="false" /> if the element is already in the set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWith">
      <MemberSignature Language="C#" Value="public void ExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member ExceptWith : seq&lt;'T&gt; -&gt; unit" Usage="iSet.ExceptWith other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-108">Die Auflistung der Elemente, die aus der Gruppe entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-108">The collection of items to remove from the set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-109">Entfernt alle Elemente in der angegebenen Auflistung aus der aktuellen Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-109">Removes all elements in the specified collection from the current set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-110">Bei dieser Methode handelt es sich um einen O ( `n` )-Vorgang, wobei `n` die Anzahl der Elemente im- `other` Parameter ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-110">This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-111"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-111"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IntersectWith">
      <MemberSignature Language="C#" Value="public void IntersectWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IntersectWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IntersectWith : seq&lt;'T&gt; -&gt; unit" Usage="iSet.IntersectWith other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-112">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-112">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-113">Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die in einer angegebenen Auflistung ebenfalls enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-113">Modifies the current set so that it contains only elements that are also in a specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-114">Diese Methode ignoriert doppelte Elemente in `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-114">This method ignores any duplicate elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-115"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-115"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="iSet.IsProperSubsetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-116">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-116">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-117">Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-117">Determines whether the current set is a proper (strict) subset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-118"><see langword="true" />, wenn die aktuelle Gruppe eine echte Teilmenge von <paramref name="other" /> ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-118"><see langword="true" /> if the current set is a proper subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-119">Wenn die aktuelle Gruppe eine echte Teilmenge von ist `other` , `other` muss mindestens ein Element aufweisen, das die aktuelle Gruppe nicht besitzt.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-119">If the current set is a proper subset of `other`, `other` must have at least one element that the current set does not have.</span></span>  
  
 <span data-ttu-id="5cbb1-120">Ein leerer Satz ist eine ordnungsgemäße Teilmenge einer anderen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-120">An empty set is a proper subset of any other collection.</span></span> <span data-ttu-id="5cbb1-121">Aus diesem Grund gibt diese Methode zurück `true` , wenn die aktuelle Gruppe leer ist, es sei denn, der `other` Parameter ist auch eine leere Menge.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-121">Therefore, this method returns `true` if the current set is empty, unless the `other` parameter is also an empty set.</span></span>  
  
 <span data-ttu-id="5cbb1-122">Diese Methode gibt immer zurück, `false` Wenn die aktuelle Gruppe über mehr oder die gleiche Anzahl von Elementen als verfügt `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-122">This method always returns `false` if the current set has more or the same number of elements than `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-123"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-123"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="iSet.IsProperSupersetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-124">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-124">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-125">Bestimmt, ob die aktuelle Gruppe eine echte (strikte) Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-125">Determines whether the current set is a proper (strict) superset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-126"><see langword="true" />, wenn die aktuelle Gruppe eine echte Obermenge von <paramref name="other" /> ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-126"><see langword="true" /> if the current set is a proper superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-127">Wenn die aktuelle Gruppe eine echte supermenge von ist `other` , muss die aktuelle Gruppe über mindestens ein Element verfügen, das `other` nicht über verfügt.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-127">If the current set is a proper superset of `other`, the current set must have at least one element that `other` does not have.</span></span>  
  
 <span data-ttu-id="5cbb1-128">Ein leerer Satz ist eine ordnungsgemäße supermenge einer anderen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-128">An empty set is a proper superset of any other collection.</span></span> <span data-ttu-id="5cbb1-129">Daher gibt diese Methode zurück `true` , wenn die durch den-Parameter dargestellte Auflistung `other` leer ist, es sei denn, die aktuelle Gruppe ist ebenfalls leer.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-129">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, unless the current set is also empty.</span></span>  
  
 <span data-ttu-id="5cbb1-130">Diese Methode gibt immer zurück `false` , wenn die Anzahl der Elemente in der aktuellen Menge kleiner oder gleich der Anzahl der Elemente in ist `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-130">This method always returns `false` if the number of elements in the current set is less than or equal to the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-131"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-131"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="iSet.IsSubsetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-132">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-132">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-133">Bestimmt, ob eine Gruppe eine Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-133">Determines whether a set is a subset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-134"><see langword="true" />, wenn die aktuelle Gruppe eine Teilmenge von <paramref name="other" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-134"><see langword="true" /> if the current set is a subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-135">Wenn `other` die gleichen Elemente wie die aktuelle Gruppe enthält, wird die aktuelle Gruppe weiterhin als Teilmenge anderer Elemente betrachtet.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-135">If `other` contains the same elements as the current set, the current set is still considered a subset of other.</span></span>  
  
 <span data-ttu-id="5cbb1-136">Diese Methode gibt immer zurück `false` , wenn die aktuelle Gruppe über Elemente verfügt, die nicht in sind `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-136">This method always returns `false` if the current set has elements that are not in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-137"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-137"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="iSet.IsSupersetOf other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-138">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-138">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-139">Bestimmt, ob die aktuelle Gruppe eine Obermenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-139">Determines whether the current set is a superset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-140"><see langword="true" />, wenn die aktuelle Gruppe eine Obermenge von <paramref name="other" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-140"><see langword="true" /> if the current set is a superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-141">Wenn `other` die gleichen Elemente wie die aktuelle Gruppe enthält, wird die aktuelle Gruppe immer noch als Obermenge von betrachtet `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-141">If `other` contains the same elements as the current set, the current set is still considered a superset of `other`.</span></span>  
  
 <span data-ttu-id="5cbb1-142">Diese Methode gibt immer zurück, `false` Wenn die aktuelle Gruppe weniger Elemente als enthält `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-142">This method always returns `false` if the current set has fewer elements than `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-143"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-143"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Overlaps : seq&lt;'T&gt; -&gt; bool" Usage="iSet.Overlaps other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-144">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-144">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-145">Bestimmt, ob sich die aktuelle Gruppe und die angegebene Auflistung überschneiden.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-145">Determines whether the current set overlaps with the specified collection.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-146"><see langword="true" />, wenn die aktuelle Auflistung und <paramref name="other" /> über mindestens ein gemeinsames Element verfügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-146"><see langword="true" /> if the current set and <paramref name="other" /> share at least one common element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-147">Doppelte Elemente in `other` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-147">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-148"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-148"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member SetEquals : seq&lt;'T&gt; -&gt; bool" Usage="iSet.SetEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-149">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-149">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-150">Bestimmt, ob die aktuelle Gruppe und die angegebene Auflistung dieselben Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-150">Determines whether the current set and the specified collection contain the same elements.</span></span></summary>
        <returns><span data-ttu-id="5cbb1-151"><see langword="true" />, wenn die aktuelle Gruppe und <paramref name="other" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-151"><see langword="true" /> if the current set is equal to <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-152">Diese Methode ignoriert die Reihenfolge der Elemente und aller doppelten Elemente in `other` .</span><span class="sxs-lookup"><span data-stu-id="5cbb1-152">This method ignores the order of elements and any duplicate elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-153"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-153"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SymmetricExceptWith">
      <MemberSignature Language="C#" Value="public void SymmetricExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SymmetricExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SymmetricExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SymmetricExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member SymmetricExceptWith : seq&lt;'T&gt; -&gt; unit" Usage="iSet.SymmetricExceptWith other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-154">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-154">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-155">Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-155">Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-156">Doppelte Elemente in `other` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-156">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-157"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-157"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionWith">
      <MemberSignature Language="C#" Value="public void UnionWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnionWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnionWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnionWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member UnionWith : seq&lt;'T&gt; -&gt; unit" Usage="iSet.UnionWith other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5cbb1-158">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-158">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="5cbb1-159">Ändert die aktuelle Gruppe, sodass sie alle Elemente enthält, die in der aktuellen Gruppe, in der angegebenen Auflistung oder in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-159">Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbb1-160">Doppelte Elemente in `other` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-160">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cbb1-161"><paramref name="other" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cbb1-161"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
