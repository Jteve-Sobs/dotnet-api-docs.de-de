<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashSet`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57008b2a31c9e55a7a5f90738637426f9e23c7967.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7008b2a31c9e55a7a5f90738637426f9e23c7967</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The type of elements in the hash set.</source>
          <target state="translated">Der Typ der Elemente im Hashset.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Represents a set of values.</source>
          <target state="translated">Stellt eine Menge von Werten dar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class provides high-performance set operations.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse bietet hohe Leistung set-Vorgänge.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A set is a collection that contains no duplicate elements, and whose elements are in no particular order.</source>
          <target state="translated">Eine Gruppe ist eine Auflistung, die keine doppelten Elemente enthält und dessen Elemente sind in keiner bestimmten Reihenfolge.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interface starting with the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class did not implement this interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> implementiert die <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> Schnittstelle beginnend mit der <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in früheren Versionen von .NET Framework, die <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse implementiert diese Schnittstelle nicht.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class is based on the model of mathematical sets and provides high-performance set operations similar to accessing the keys of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> collections.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse basiert auf dem Modell mathematischen Mengen und bietet hohe Leistung Mengenoperationen ähnelt den Zugriff auf den Schlüssel von den <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> Sammlungen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>In simple terms, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class can be thought of as a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> collection without values.</source>
          <target state="translated">Einfach ausgedrückt die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse als betrachtet eine <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Auflistung ohne Werte.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection is not sorted and cannot contain duplicate elements.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Sammlung ist nicht sortiert und dürfen keine doppelten Elemente enthalten.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>If order or element duplication is more important than performance for your application, consider using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class together with the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Reihenfolge oder Duplizierung wichtiger als die Leistung für Ihre Anwendung ist, erwägen Sie die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse zusammen mit der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides many mathematical set operations, such as set addition (unions) and set subtraction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> bietet viele mathematische Vorgänge, z. B. Gruppe hinzufügen (Unions) und Subtraktion festgelegt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following table lists the provided <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations and their mathematical equivalents.</source>
          <target state="translated">Die folgende Tabelle listet die bereitgestellten <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Vorgänge und deren Entsprechungen in mathematischen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet(Of T) operation</source>
          <target state="translated">Vorgang HashSet (Of T)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Mathematical equivalent</source>
          <target state="translated">Mathematische Entsprechung</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Union or set addition</source>
          <target state="translated">Vereinigung oder hinzufügen</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Intersection</source>
          <target state="translated">Schnittmenge</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Set subtraction</source>
          <target state="translated">Mengensubtraktion</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Symmetric difference</source>
          <target state="translated">Symmetrische Differenz</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>In addition to the listed set operations, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class also provides methods for determining set equality, overlap of sets, and whether a set is a subset or superset of another set.</source>
          <target state="translated">Zusätzlich zu den aufgeführten Set-Vorgänge die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse bietet auch Methoden zum Bestimmen von Set auf Gleichheit, überlappen Mengen und gibt an, ob ein Satz eine Teilmenge oder Obermenge eines anderen Satzes ist.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Für sehr große <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte aufweist, können Sie die maximale Kapazität auf 2 Milliarden Elemente auf einem 64-Bit-System erhöhen, indem die <ph id="ph2">`enabled`</ph> Attribut des Konfigurationselements auf <ph id="ph3">`true`</ph> in der Umgebung zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class implements the <ph id="ph3">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated">Beginnend mit der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Klasse implementiert die <ph id="ph3">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet and LINQ Set Operations</source>
          <target state="translated">HashSet- und LINQ-Mengenoperationen</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>LINQ provides access to the <ph id="ph1">`Distinct`</ph>, <ph id="ph2">`Union`</ph>, <ph id="ph3">`Intersect`</ph> and <ph id="ph4">`Except`</ph> set operations on any data source that implements the <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph6">&lt;xref:System.Linq.IQueryable&gt;</ph> interfaces.</source>
          <target state="translated">LINQ ermöglicht den Zugriff auf die <ph id="ph1">`Distinct`</ph>, <ph id="ph2">`Union`</ph>, <ph id="ph3">`Intersect`</ph> und <ph id="ph4">`Except`</ph> set-Vorgänge auf einer beliebigen Datenquelle, die implementiert die <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> oder <ph id="ph6">&lt;xref:System.Linq.IQueryable&gt;</ph> Schnittstellen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides a larger and more robust collection of set operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Stellt eine Auflistung mehr und stabilere Mengenoperationen bereit.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>For example, <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides comparisons such as <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A&gt;</ph>.</source>
          <target state="translated">Beispielsweise <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> stellt Vergleiche bereit, z. B. <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The primary difference between LINQ set operations and <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations is that LINQ set operations always return a new <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> equivalent methods modify the current collection.</source>
          <target state="translated">Der Hauptunterschied zwischen LINQ-Mengenoperationen und <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Vorgänge ist, dass LINQ-Mengenoperationen immer eine neue zurückgeben <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> Sammlung, während die <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> gleichwertigen Methoden ändern die aktuelle Auflistung.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Typically, if you must create a new set or if your application needs access only to the provided set operations, using LINQ set operations on any <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection or array will be sufficient.</source>
          <target state="translated">In der Regel, wenn Sie eine neue Gruppe erstellen müssen, oder wenn Ihre Anwendung nur Zugriff auf die bereitgestellten Mengenoperationen benötigt, mit LINQ Mengenoperationen für ein beliebiges <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> Sammlung oder einem Array wird ausreichend sein.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>However, if your application requires access to additional set operations, or if it is not desirable or necessary to create a new collection, use the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class.</source>
          <target state="translated">Wenn Ihre Anwendung den Zugriff auf Weitere Mengenoperationen erfordert oder wenn es nicht wünschenswert oder zum Erstellen einer neuen Sammlung erforderlich ist, allerdings verwenden der <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following table shows the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations and their equivalent LINQ set operations.</source>
          <target state="translated">Die folgende Tabelle zeigt die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Vorgänge und ihre entsprechenden LINQ-Mengenoperationen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet(Of T) operation</source>
          <target state="translated">Vorgang HashSet (Of T)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>LINQ equivalent</source>
          <target state="translated">LINQ-Entsprechung</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Nicht bereitgestellt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following example demonstrates how to merge two disparate sets.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie zwei unterschiedliche Sätze zusammenführen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>This example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, and populates them with even and odd numbers, respectively.</source>
          <target state="translated">Dieses Beispiel erstellt zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und bzw. mit selbst und ungerade Zahlen gefüllt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is created from the set that contains the even numbers.</source>
          <target state="translated">Eine dritte <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt wird erstellt, aus dem Satz, der geraden Zahlen enthält.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method, which adds the odd number set to the third set.</source>
          <target state="translated">Das Beispiel ruft dann die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> -Methode, die festgelegten ungerade Zahl auf die dritte Gruppe hinzugefügt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that is empty and uses the default equality comparer for the set type.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse, bei der für den Mengentyp der Standardgleichheitsvergleich verwendet wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>The following example demonstrates how to create and populate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie das Erstellen und füllen Sie zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method.</source>
          <target state="translated">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new set.</source>
          <target state="translated">Die Auflistung, deren Elemente in den neuen Satz kopiert werden.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse, die den Standardgleichheitsvergleich des Mengentyps verwendet, aus der angegebenen Auflistung kopierte Elemente enthält und über ausreichend Kapazität für die Anzahl von kopierten Elementen verfügt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If <ph id="ph1">`collection`</ph> contains duplicates, the set will contain one of each unique element.</source>
          <target state="translated">Wenn <ph id="ph1">`collection`</ph> Duplikate enthält, enthält der Satz wird ein jedes eindeutige Element enthalten.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, the size of the resulting set is not identical to the size of <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Daher ist die Größe des resultierenden Satzes nicht identisch mit der Größe der <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`collection`</ph> parameter.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in der <ph id="ph3">`collection`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection from an existing set.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung aus einem vorhandenen Satz.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, two sets are created with even and odd integers, respectively.</source>
          <target state="translated">In diesem Beispiel werden die zwei Sätze "mit ungerade und Ganzzahlen" erstellt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is then created from the even integer set.</source>
          <target state="translated">Eine dritte <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekts wird dann aus dem Satz der gerade ganze Zahl.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing values in the set, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> implementation for the set type.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Implementierung, die zum Vergleichen von Werten in der Menge verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph>-Standardimplementierung für diesen Mengentyp verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that is empty and uses the specified equality comparer for the set type.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse, bei der für den Mengentyp der angegebene Gleichheitsvergleich verwendet wird.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The collection whose elements are copied to the new set.</source>
          <target state="translated">Die Auflistung, deren Elemente in den neuen Satz kopiert werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing values in the set, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> implementation for the set type.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Implementierung, die zum Vergleichen von Werten in der Menge verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph>-Standardimplementierung für diesen Mengentyp verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse, die den angegebenen Gleichheitsvergleich des Mengentyps verwendet, aus der angegebenen Auflistung kopierte Elemente enthält und über ausreichend Kapazität für die Anzahl der kopierten Elemente verfügt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`collection`</ph> contains duplicates, the set will contain one of each unique element.</source>
          <target state="translated">Wenn <ph id="ph1">`collection`</ph> Duplikate enthält, enthält der Satz wird ein jedes eindeutige Element enthalten.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Therefore, the size of the resulting set is not identical to the size of <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Daher ist die Größe des resultierenden Satzes nicht identisch mit der Größe der <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`collection`</ph> parameter.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in der <ph id="ph3">`collection`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following example uses a supplied <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> to allow case-insensitive comparisons on the elements of a  <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection of vehicle types.</source>
          <target state="translated">Im folgenden Beispiel wird ein angegebenes <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> , Groß-/Kleinschreibung Vergleiche auf die Elemente der ermöglichen eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung Fahrzeugtypen.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt mit den zum Serialisieren des <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts erforderlichen Informationen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Struktur, die die Quelle und das Ziel des serialisierten Streams enthält, der dem <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Klasse mit serialisierten Daten.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</source>
          <target state="translated">Dieser Konstruktor wird aufgerufen, während der Deserialisierung ein Objekts wiederherstellen kann, das über einen Stream übertragen werden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>XML- und SOAP-Serialisierung<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">Der Element, das zur Menge hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>Adds the specified element to a set.</source>
          <target state="translated">Fügt das angegebene Element zu einer Menge hinzu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is added to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the element is already present.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element zum <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt hinzugefügt wird, <ph id="ph3">&lt;see langword="false" /&gt;</ph>, wenn das Element bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> bereits die Kapazität entspricht der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, die Kapazität wird automatisch angepasst, um das neue Element aufzunehmen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> ist kleiner als die Kapazität des internen Arrays, diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object must be resized, this method becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekts geändert werden muss, wird diese Methode eine O (<ph id="ph2">`n`</ph>)-Vorgang, in dem <ph id="ph3">`n`</ph> ist <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>The following example demonstrates how to create and populate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie das Erstellen und füllen Sie zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method.</source>
          <target state="translated">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle Elemente aus einem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> 0 (null) festgelegt ist und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>The capacity remains unchanged until a call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> is made.</source>
          <target state="translated">Die Kapazität bleibt unverändert, bis ein Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> erfolgt.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>The following example creates and populates a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection, then clears it and releases the memory referenced by the collection.</source>
          <target state="translated">Das folgende Beispiel erstellt und füllt eine <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Auflistung gelöscht, und gibt den Arbeitsspeicher auf die verwiesen wird von der Auflistung frei.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> object that is used to determine equality for the values in the set.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Objekt ab, mit dem die Gleichheit der Werte in der Menge bestimmt wird.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> object that is used to determine equality for the values in the set.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Objekt, mit dem die Gleichheit der Werte in der Menge bestimmt wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>The element to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Das Element, das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object contains the specified element.</source>
          <target state="translated">Bestimmt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt das angegebene Element enthält.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object contains the specified element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt das angegebene Element enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie entfernen Sie die Werte aus einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mithilfe der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Contains%2A&gt;</ph> method verifies that the set contains a value before removing it.</source>
          <target state="translated">In diesem Beispiel wird die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Contains%2A&gt;</ph> Methode stellt sicher, dass die Menge einen Wert enthält, bevor Sie ihn entfernen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection to an array.</source>
          <target state="translated">Kopiert die Elemente einer <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Auflistung in ein Array.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Das eindimensionale Array, in das die Elemente aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt kopiert werden.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Für das Array muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array.</source>
          <target state="translated">Kopiert die Elemente eines <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts in ein Array.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Das eindimensionale Array, in das die Elemente aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt kopiert werden.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Für das Array muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array, starting at the specified array index.</source>
          <target state="translated">Kopiert die Elemente eines <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts in ein Array, beginnend am angegebenen Index des Arrays.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is greater than the length of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist größer als die Länge des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Das eindimensionale Array, in das die Elemente aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt kopiert werden.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Für das Array muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy to <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die Anzahl der Elemente, die in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>Copies the specified number of elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array, starting at the specified array index.</source>
          <target state="translated">Kopiert die angegebene Anzahl von Elementen eines <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts in ein Array, beginnend am angegebenen Index des Arrays.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is greater than the length of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist größer als die Länge des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the available space from the <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist größer als der verfügbare Platz zwischen dem <ph id="ph2">&lt;paramref name="index" /&gt;</ph> und dem Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>Gets the number of elements that are contained in a set.</source>
          <target state="translated">Ruft die Anzahl der Elemente in einer Menge ab.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The number of elements that are contained in the set.</source>
          <target state="translated">Die Anzahl der Elemente in der Menge.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt ist die Anzahl der Elemente, die das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objektspezifischen Kapazität automatisch erhöht wird, wenn Elemente mit dem Objekt hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität ist immer größer als oder gleich <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is set to the first prime number that is greater than double the previous capacity.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> überschreitet die Kapazität beim Hinzufügen von Elementen, die Kapazität auf die erste Primzahl, der größer als die doppelte vorherige Kapazität festgelegt ist.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The following example demonstrates how to create, populate, and manipulate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie erstellen, füllen und Bearbeiten von zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>In this example, both the contents of the set and <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> display to the console.</source>
          <target state="translated">In diesem Beispiel werden die Inhalte des Satzes und <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> in der Konsole anzeigen.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used for equality testing of a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>-Objekt zurück, das für Gleichheitstests eines <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used for deep equality testing of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>-Objekt, das für tiefe Gleichheitstests des <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> Objekt auf Gleichheit auf nur einer Ebene überprüft, aber Sie können verketten Vergleiche auf zusätzlichen Ebenen, um tiefere Gleichheitstests auszuführen.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>Calling this method is an O(1) operation.</source>
          <target state="translated">Beim Aufrufen dieser Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung der Elemente, die aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements in the specified collection from the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle Elemente in der angegebenen Auflistung aus dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> method is the equivalent of mathematical set subtraction.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> Methode entspricht einer mathematischen Mengensubtraktion.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in der <ph id="ph3">`other`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collections with overlapping sets of data.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Sammlungen mit überlappenden Gruppen von Daten.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The lower range of values is then removed from the larger set using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> method.</source>
          <target state="translated">Dann wird der untere Bereich der Werte aus dem größeren Satz mit entfernt die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Gibt einen Enumerator zurück, der ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt durchläuft.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph>-Objekt für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Verwenden Sie deshalb <ph id="ph1">`foreach`</ph> wird direkt und den Enumerator nicht empfohlen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt bis <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Sie können keine festlegen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> auf das erste Element der Auflistung erneut müssen Sie stattdessen ein neues Enumeratorobjekt erstellen.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt mit den zum Serialisieren des <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts erforderlichen Informationen.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Struktur, die die Quelle und das Ziel des serialisierten Streams enthält, der dem <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Implementiert die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>-Schnittstelle und gibt die zum Serialisieren eines <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts erforderlichen Daten zurück.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">für das Bereitstellen von Serialisierungsdiensten.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain only elements that are present in that object and in the specified collection.</source>
          <target state="translated">Ändert das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt so, dass nur noch Elemente vorhanden sind, die in diesem Objekt und in der angegebenen Auflistung vorhanden sind.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellt die <ph id="ph1">`other`</ph> Parameter ist ein <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> und <ph id="ph6">`m`</ph> ist die Anzahl der Elemente im <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper subset of the specified collection.</source>
          <target state="translated">Bestimmt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine echte Teilmenge der angegebenen Auflistung ist.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine echte Teilmenge von <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper subset of any other collection.</source>
          <target state="translated">Eine leere Menge ist eine echte Teilmenge von einer anderen Sammlung an.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty unless the <ph id="ph3">`other`</ph> parameter is also an empty set.</source>
          <target state="translated">Daher, diese Methode gibt <ph id="ph1">`true`</ph> , wenn die Auflistung von der aktuellen dargestellt <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> ist leer, es sei denn, die <ph id="ph3">`other`</ph> Parameter ist auch ein leeres Resultset.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">`false`</ph> Wenn <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> ist größer als oder gleich der Anzahl der Elemente im <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, then this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellt <ph id="ph1">`other`</ph> ist ein <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, dann ist diese Methode eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> und <ph id="ph6">`m`</ph> ist die Anzahl der Elemente im <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`lowNumbers`</ph> is both a subset and a proper subset of <ph id="ph2">`allNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`lowNumbers`</ph> ist eine Teilmenge und eine echte Teilmenge von <ph id="ph2">`allNumbers`</ph> bis <ph id="ph3">`allNumbers`</ph> geändert wird, mithilfe der <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> Methode, um nur die Werte enthalten, die in beiden Gruppen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`lowNumbers`</ph> is still a subset of <ph id="ph4">`allNumbers`</ph> but is no longer a proper subset.</source>
          <target state="translated">Einmal <ph id="ph1">`allNumbers`</ph> und <ph id="ph2">`lowNumbers`</ph> sind nahezu identisch, <ph id="ph3">`lowNumbers`</ph> ist immer noch eine Teilmenge der <ph id="ph4">`allNumbers`</ph> ist jedoch nicht mehr eine echte Teilmenge.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper superset of the specified collection.</source>
          <target state="translated">Bestimmt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine echte Obermenge der angegebenen Auflistung ist.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine echte Obermenge von <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper superset of any other collection.</source>
          <target state="translated">Eine leere Menge ist eine echte Obermenge von einer anderen Sammlung an.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty unless the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection is also empty.</source>
          <target state="translated">Aus diesem Grund gibt diese Methode zurück <ph id="ph1">`true`</ph> , wenn die Auflistung von dargestellt die <ph id="ph2">`other`</ph> Parameter ist leer, wenn die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Sammlung wird auch leer.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">`false`</ph> Wenn <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> ist kleiner oder gleich der Anzahl der Elemente im <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellte <ph id="ph1">`other`</ph> ist eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist die Anzahl der Elemente im <ph id="ph5">`other`</ph> und <ph id="ph6">`m`</ph> ist <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> is both a superset and a proper superset of <ph id="ph2">`lowNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`allNumbers`</ph> ist eine Obermenge und eine echte Obermenge von <ph id="ph2">`lowNumbers`</ph> bis <ph id="ph3">`allNumbers`</ph> geändert wird, mithilfe der <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> Methode, um nur die Werte enthalten, die in beiden Gruppen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`allNumbers`</ph> is still a superset of <ph id="ph4">`lowNumbers`</ph> but is no longer a proper superset.</source>
          <target state="translated">Einmal <ph id="ph1">`allNumbers`</ph> und <ph id="ph2">`lowNumbers`</ph> sind nahezu identisch, <ph id="ph3">`allNumbers`</ph> ist immer noch eine Obermenge der <ph id="ph4">`lowNumbers`</ph> ist jedoch nicht mehr eine echte Obermenge.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a subset of the specified collection.</source>
          <target state="translated">Bestimmt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine Teilmenge der angegebenen Auflistung ist.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine Teilmenge von <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty, even if the <ph id="ph3">`other`</ph> parameter is an empty set.</source>
          <target state="translated">Eine leere Menge ist eine Teilmenge einer anderen Sammlung, z. B. ein leeres Resultset. aus diesem Grund gibt diese Methode zurück <ph id="ph1">`true`</ph> , wenn die vom aktuellen Auflistung dargestellte <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt leer ist, auch wenn die <ph id="ph3">`other`</ph> Parameter ist eine leere Menge.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">`false`</ph> Wenn <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> ist größer als die Anzahl der Elemente im <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellte <ph id="ph1">`other`</ph> ist eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> und <ph id="ph6">`m`</ph> ist die Anzahl der Elemente im <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`lowNumbers`</ph> is both a subset and a proper subset of <ph id="ph2">`allNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`lowNumbers`</ph> ist eine Teilmenge und eine echte Teilmenge von <ph id="ph2">`allNumbers`</ph> bis <ph id="ph3">`allNumbers`</ph> geändert wird, mithilfe der <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> Methode, um nur die Werte enthalten, die in beiden Gruppen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`lowNumbers`</ph> is still a subset of <ph id="ph4">`allNumbers`</ph> but is no longer a proper subset.</source>
          <target state="translated">Einmal <ph id="ph1">`allNumbers`</ph> und <ph id="ph2">`lowNumbers`</ph> sind nahezu identisch, <ph id="ph3">`lowNumbers`</ph> ist immer noch eine Teilmenge der <ph id="ph4">`allNumbers`</ph> ist jedoch nicht mehr eine echte Teilmenge.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a superset of the specified collection.</source>
          <target state="translated">Bestimmt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine Obermenge der angegebenen Auflistung ist.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt eine Obermenge von <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>All collections, including the empty set, are supersets of the empty set.</source>
          <target state="translated">Alle Auflistungen, einschließlich leerer Mengen sind Obermengen der Satz leer.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty, even if the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty.</source>
          <target state="translated">Aus diesem Grund gibt diese Methode zurück <ph id="ph1">`true`</ph> , wenn die Auflistung von dargestellt die <ph id="ph2">`other`</ph> Parameter ist leer, auch wenn die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt leer ist.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">`false`</ph> Wenn <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> ist kleiner als die Anzahl der Elemente im <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellte <ph id="ph1">`other`</ph> ist eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist die Anzahl der Elemente im <ph id="ph5">`other`</ph> und <ph id="ph6">`m`</ph> ist <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> is both a superset and a proper superset of <ph id="ph2">`lowNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`allNumbers`</ph> ist eine Obermenge und eine echte Obermenge von <ph id="ph2">`lowNumbers`</ph> bis <ph id="ph3">`allNumbers`</ph> geändert wird, mithilfe der <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> Methode, um nur die Werte enthalten, die in beiden Gruppen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`allNumbers`</ph> is still a superset of <ph id="ph4">`lowNumbers`</ph> but is no longer a proper superset.</source>
          <target state="translated">Einmal <ph id="ph1">`allNumbers`</ph> und <ph id="ph2">`lowNumbers`</ph> sind nahezu identisch, <ph id="ph3">`allNumbers`</ph> ist immer noch eine Obermenge der <ph id="ph4">`lowNumbers`</ph> ist jedoch nicht mehr eine echte Obermenge.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Die Quelle des Deserialisierungsereignisses.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Implementiert die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>-Schnittstelle und löst das Deserialisierungsereignis aus, sobald die Deserialisierung abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is invalid.</source>
          <target state="translated">Das dem aktuellen <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt zugeordnete <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt ist ungültig.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and a specified collection share common elements.</source>
          <target state="translated">Bestimmt, ob das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt und eine angegebene Auflistung gemeinsame Elemente enthalten.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt und <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mindestens ein gemeinsames Element enthalten, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each another.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are shown to share common elements using the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Overlaps%2A&gt;</ph> method.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`allNumbers`</ph> und <ph id="ph2">`lowNumbers`</ph> angezeigt werden, um gemeinsame Elemente der <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Overlaps%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">Das zu entfernende Element.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>Removes the specified element from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Entfernt das angegebene Element aus einem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element gefunden und entfernt wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>This method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Diese Methode gibt <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn <ph id="ph2">&lt;paramref name="item" /&gt;</ph> nicht im <ph id="ph3">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt gefunden wurde.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt das angegebene Element nicht enthält, wird das Objekt bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">Es werden keine Ausnahmen ausgelöst.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie entfernen Sie die Werte aus einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mithilfe der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>In this example, zero is arbitrarily removed from the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection.</source>
          <target state="translated">In diesem Beispiel wird 0 (null) nach dem Zufallsprinzip aus entfernt die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für die Elemente definiert, die entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Removes all elements that match the conditions defined by the specified predicate from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Entfernt alle Elemente aus einer <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Auflistung, die die im angegebenen Prädikat definierten Bedingungen erfüllen.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The number of elements that were removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Die Anzahl von Elementen, die aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Auflistung entfernt wurden.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie entfernen Sie die Werte aus einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mithilfe der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>In this example, all odd integers are removed from the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection as specified by the <ph id="ph2">`match`</ph> delegate.</source>
          <target state="translated">In diesem Beispiel werden alle ungerade Zahlen aus entfernt die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung entsprechend den Angaben von der <ph id="ph2">`match`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and the specified collection contain the same elements.</source>
          <target state="translated">Ermittelt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt und die angegebene Auflistung dieselben Elemente enthalten.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is equal to <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt gleich <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ist, anderfalls „false“.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> method ignores duplicate entries and the order of elements in the <ph id="ph2">`other`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> -Methode ignoriert doppelte Einträge und die Reihenfolge der Elemente in der <ph id="ph2">`other`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die Auflistung von dargestellte <ph id="ph1">`other`</ph> ist eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist die Anzahl der Elemente im <ph id="ph5">`other`</ph> und <ph id="ph6">`m`</ph> ist <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each another.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei verschiedenartigen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und miteinander verglichen.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Initially, the two sets are not equal, which is demonstrated by using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> method.</source>
          <target state="translated">Zu Beginn der zwei Sätze ungleich sind, wird die veranschaulicht, mit der <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">`allNumbers`</ph><ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is then modified, after which the sets are equal.</source>
          <target state="translated">Die <ph id="ph1">`allNumbers`</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt dann geändert werden kann, wonach die Gruppen gleich sind.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain only elements that are present either in that object or in the specified collection, but not both.</source>
          <target state="translated">Ändert das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt so, dass nur noch Elemente vorhanden sind, die entweder in diesem Objekt oder aber in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Wenn die <ph id="ph1">`other`</ph> Parameter ist ein <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung mit den gleichen Gleichheitsvergleich wie die aktuelle <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt, diese Methode ist eine O (<ph id="ph4">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist, andernfalls eine O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-Vorgang, in dem <ph id="ph4">`n`</ph> ist die Anzahl der Elemente im <ph id="ph5">`other`</ph> und <ph id="ph6">`m`</ph> ist <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collections with overlapping sets of data.</source>
          <target state="translated">Das folgende Beispiel erstellt zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Sammlungen mit überlappenden Gruppen von Daten.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The set that contains the lower values is then modified, using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A&gt;</ph> method, to contain only the values that are not present in both sets.</source>
          <target state="translated">Die Gruppe, die die niedrigeren Werte enthält dann geändert werden kann, mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A&gt;</ph> Methode, um nur die Werte enthalten, die nicht in beiden Gruppen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Das Objekt, das dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>-Objekt hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Fügt einem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>-Objekt ein Element hinzu.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist kleiner als <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität erhöht werden muss, um das neue Element aufzunehmen, wird diese Methode eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether a collection is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob eine Auflistung schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Auflistung schreibgeschützt ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Sie können keine festlegen <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> auf das erste Element der Auflistung erneut müssen Sie stattdessen ein neues Enumeratorobjekt erstellen.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>Sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</source>
          <target state="translated">Legt die Kapazität eines <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts auf die Anzahl der tatsächlich enthaltenen Elemente fest, aufgerundet auf einen nahe gelegenen implementierungsabhängigen Wert.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> method to minimize a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's memory overhead once it is known that no new elements will be added.</source>
          <target state="translated">Können Sie die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> Methode minimieren eine <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Speicherbedarf des Objekts, wenn bekannt ist, dass keine neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>To completely clear a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object and release all memory referenced by it, call this method after calling the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Vollständig Löschen einer <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekt und freizugeben und alle verwiesen wird, rufen Sie diese Methode nach dem Aufruf der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Clear%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>The following example creates and populates a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection, and then clears the collection and releases the memory referenced by it.</source>
          <target state="translated">Das folgende Beispiel erstellt und füllt eine <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Auflistung und löscht die Auflistung und gibt den verwiesen wird Arbeitsspeicher frei.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Die Auflistung, die mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain all elements that are present in itself, the specified collection, or both.</source>
          <target state="translated">Ändert das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekt so, dass alle Elemente vorhanden sind, die in diesem Objekt, in der angegebenen Auflistung oder beiden vorhanden sind.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in der <ph id="ph3">`other`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example demonstrates how to merge two disparate sets.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie zwei unterschiedliche Sätze zusammenführen.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, and populates them with even and odd numbers, respectively.</source>
          <target state="translated">Dieses Beispiel erstellt zwei <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Objekte und bzw. mit selbst und ungerade Zahlen gefüllt.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is created from the set that contains the even numbers.</source>
          <target state="translated">Eine dritte <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> -Objekt wird erstellt, aus dem Satz, der geraden Zahlen enthält.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method, which adds the odd number set to the third set.</source>
          <target state="translated">Das Beispiel ruft dann die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> -Methode, die festgelegten ungerade Zahl auf die dritte Gruppe hinzugefügt.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>