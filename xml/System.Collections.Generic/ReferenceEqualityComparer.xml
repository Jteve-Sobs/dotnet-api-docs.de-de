<Type Name="ReferenceEqualityComparer" FullName="System.Collections.Generic.ReferenceEqualityComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16d11a4210b59de2e70acae97f88460713ce31f2" /><Meta Name="ms.sourcegitcommit" Value="05b28af3128fd8a2fe51178c9a1cc798d4601bf7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/12/2020" /><Meta Name="ms.locfileid" Value="83231491" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReferenceEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;object&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReferenceEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;object&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.ReferenceEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReferenceEqualityComparer&#xA;Implements IEqualityComparer, IEqualityComparer(Of Object)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReferenceEqualityComparer sealed : System::Collections::Generic::IEqualityComparer&lt;System::Object ^&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type ReferenceEqualityComparer = class&#xA;    interface IEqualityComparer&lt;obj&gt;&#xA;    interface IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7a191-101">Eine <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Schnittstelle, die Verweisgleichheit (<see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)" />) anstelle von Wertgleichheit (<see cref="M:System.Object.Equals(System.Object)" />) verwendet, wenn zwei Objektinstanzen verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="7a191-101">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> that uses reference equality (<see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)" />) instead of value equality (<see cref="M:System.Object.Equals(System.Object)" />) when comparing two object instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7a191-102">Der <xref:System.Collections.Generic.ReferenceEqualityComparer> Typ kann nicht instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="7a191-102">The <xref:System.Collections.Generic.ReferenceEqualityComparer> type cannot be instantiated.</span></span> <span data-ttu-id="7a191-103">Verwenden Sie stattdessen die <xref:System.Collections.Generic.ReferenceEqualityComparer.Instance>-Eigenschaft, um auf die Singleton Instanz dieses Typs zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="7a191-103">Instead, use the <xref:System.Collections.Generic.ReferenceEqualityComparer.Instance> property to access the singleton instance of this type.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ReferenceEqualityComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="referenceEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="7a191-104">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="7a191-104">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="7a191-105">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="7a191-105">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7a191-106">Bestimmt, ob zwei Objektverweise auf die gleiche Objektinstanz verweisen.</span><span class="sxs-lookup"><span data-stu-id="7a191-106">Determines whether two object references refer to the same object instance.</span></span></summary>
        <returns><span data-ttu-id="7a191-107"><see langword="true" />, wenn sowohl <paramref name="x" /> als auch <paramref name="y" /> auf die gleiche Objektinstanz verweisen, oder wenn beide <see langword="null" /> sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a191-107"><see langword="true" /> if both <paramref name="x" /> and <paramref name="y" /> refer to the same object instance or if both are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7a191-108">Diese API ist ein Wrapper um <xref:System.Object.ReferenceEquals(System.Object,System.Object)>.</span><span class="sxs-lookup"><span data-stu-id="7a191-108">This API is a wrapper around <xref:System.Object.ReferenceEquals(System.Object,System.Object)>.</span></span>
<span data-ttu-id="7a191-109">Es ist nicht notwendigerweise Äquivalent zum Aufrufen von <xref:System.Object.Equals(System.Object,System.Object)>.</span><span class="sxs-lookup"><span data-stu-id="7a191-109">It is not necessarily equivalent to calling <xref:System.Object.Equals(System.Object,System.Object)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ReferenceEqualityComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="referenceEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7a191-110">Das Objekt, für das Hashcode abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7a191-110">The object for which to retrieve the hash code.</span></span></param>
        <summary><span data-ttu-id="7a191-111">Gibt einen Hashcode für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="7a191-111">Returns a hash code for the specified object.</span></span> <span data-ttu-id="7a191-112">Der zurückgegebene Hashcode basiert auf der Objektidentität, nicht auf dem Objektinhalt.</span><span class="sxs-lookup"><span data-stu-id="7a191-112">The returned hash code is based on the object identity, not on the contents of the object.</span></span></summary>
        <returns><span data-ttu-id="7a191-113">Ein Hashcode für die Identität von <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="7a191-113">A hash code for the identity of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7a191-114">Diese API ist ein Wrapper um <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)>.</span><span class="sxs-lookup"><span data-stu-id="7a191-114">This API is a wrapper around <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)>.</span></span>
<span data-ttu-id="7a191-115">Es ist nicht notwendigerweise Äquivalent zum Aufrufen von <xref:System.Object.GetHashCode>.</span><span class="sxs-lookup"><span data-stu-id="7a191-115">It is not necessarily equivalent to calling <xref:System.Object.GetHashCode>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ReferenceEqualityComparer Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.ReferenceEqualityComparer Instance" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.ReferenceEqualityComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As ReferenceEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::ReferenceEqualityComparer ^ Instance { System::Collections::Generic::ReferenceEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Collections.Generic.ReferenceEqualityComparer" Usage="System.Collections.Generic.ReferenceEqualityComparer.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ReferenceEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a191-116">Ruft die <see cref="T:System.Collections.Generic.ReferenceEqualityComparer" />-Singletoninstanz ab.</span><span class="sxs-lookup"><span data-stu-id="7a191-116">Gets the singleton <see cref="T:System.Collections.Generic.ReferenceEqualityComparer" /> instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
