<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashSet`1+Enumerator.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58fff619eef9d9805923c444d7da6ac5b4c21099f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fff619eef9d9805923c444d7da6ac5b4c21099f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Enumerates the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Listet die Elemente eines <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Objekts auf.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Sie können keine festlegen <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> auf das erste Element der Auflistung erneut müssen Sie stattdessen ein neues Enumeratorobjekt erstellen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1.Enumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Ruft das Element an der aktuellen Position des Enumerators ab.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The element in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection at the current position of the enumerator.</source>
          <target state="translated">Das Element in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Auflistung an der aktuellen Position des Enumerators.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Wenn Sie eine der folgenden Bedingungen ist nicht definiert werden:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The enumerator is positioned before the first element in the collection immediately after the enumerator is created.</source>
          <target state="translated">Der Enumerator ist vor dem ersten Element in der Auflistung positioniert, sofort nach dem Erstellen des Enumerators.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> -Methode muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Der letzte Aufruf von <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, gibt das Ende der Auflistung an.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>If the list is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the contents of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Wenn zwischen dem Aufrufen die Liste geändert wird <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> -Methode und Abrufen des Inhalts der der <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Eigenschaft <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> gibt das Element, das es festgelegt ist, obwohl der Enumerator ungültig ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element.</source>
          <target state="translated">Für eine bessere Leistung ist diese Eigenschaft keine Ausnahme auslöst, wenn der Enumerator vor das erste Element oder hinter dem letzten Element positioniert ist.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>The value of the property is undefined.</source>
          <target state="translated">Der Wert der Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
          <source>To get an exception instead, cast the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator&gt;</ph> to the <ph id="ph2">&lt;xref:System.Collections.IEnumerator?displayProperty=nameWithType&gt;</ph> interface before using it.</source>
          <target state="translated">Um stattdessen eine Ausnahme zu erhalten, wandeln die <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator&gt;</ph> auf die <ph id="ph2">&lt;xref:System.Collections.IEnumerator?displayProperty=nameWithType&gt;</ph> Schnittstelle vor der Verwendung.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
          <source>Releases all resources used by a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph> object.</source>
          <target state="translated">Gibt alle vom <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph>-Objekt verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Setzt den Enumerator auf das nächste Element der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>-Auflistung.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Enumerator das Ende der Auflistung überschritten hat.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method advances the enumerator to the first element of the collection.</source>
          <target state="translated">Nachdem ein Enumerator erstellt wurde, wird der Enumerator vor das erste Element in der Auflistung und der erste Aufruf von der <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> Methode setzt den Enumerator auf das erste Element der Auflistung.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</source>
          <target state="translated">Wenn Änderungen, auf die Auflistung, z. B. hinzufügen vorgenommen werden, bearbeiten oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Ruft das Element an der aktuellen Position des Enumerators ab.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The element in the collection at the current position of the enumerator, as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das Element in der Auflistung an der aktuellen Position des Enumerators (als <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Nach dem Erstellen eines Enumerators oder nach der <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> -Methode aufgerufen wird, die <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> -Methode muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von der <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft ist, andernfalls <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Außerdem löst eine Ausnahme aus, wenn der letzte Aufruf <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph3">`false`</ph>, gibt das Ende der Auflistung an.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Verschiebt die Position des Enumerators und aufeinander folgende Aufrufe von nicht <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> dasselbe Objekt zurück, bis entweder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Wenn die Auflistung zwischen Aufrufen geändert wird <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> -Methode und Abrufen des Werts von der <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> -Eigenschaft, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">Der Enumerator befindet sich vor dem ersten Element der Sammlung oder hinter dem letzten Element.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph>, you must call the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph>, rufen Sie die <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von der <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</source>
          <target state="translated">Wenn Änderungen, auf die Auflistung, z. B. hinzufügen vorgenommen werden, bearbeiten oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>