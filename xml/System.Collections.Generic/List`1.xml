<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="List`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6add71f8155950c8b8db1f2c266f86c847f8658.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6add71f8155950c8b8db1f2c266f86c847f8658</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The type of elements in the list.</source>
          <target state="translated">Der Typ der Elemente in der Liste.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Represents a strongly typed list of objects that can be accessed by index.</source>
          <target state="translated">Stellt eine stark typisierte Liste von Objekten dar, auf die über einen Index zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Provides methods to search, sort, and manipulate lists.</source>
          <target state="translated">Stellt Methoden zum Durchsuchen, Sortieren und Bearbeiten von Listen bereit.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class is the generic equivalent of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse ist die generische Entsprechung der der <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>It implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface by using an array whose size is dynamically increased as required.</source>
          <target state="translated">Implementiert die <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generische Schnittstelle mithilfe eines Arrays, dessen dynamisch als vergrößert wird, erforderlich.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>You can add items to a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by using the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> methods.</source>
          <target state="translated">Können Sie Elemente zum Hinzufügen einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses both an equality comparer and an ordering comparer.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse verwendet einen Gleichheitsvergleich und einen reihenfolgenvergleich.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> use an equality comparer for the list elements.</source>
          <target state="translated">Methoden, z. B. <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> verwenden einen Gleichheitsvergleich für die Listenelemente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The default equality comparer for type <ph id="ph1">`T`</ph> is determined as follows.</source>
          <target state="translated">Der Standardgleichheitsvergleich für den Typ <ph id="ph1">`T`</ph> wird wie folgt bestimmt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If type <ph id="ph1">`T`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generic interface, then the equality comparer is the <ph id="ph3">&lt;xref:System.IEquatable%601.Equals%28%600%29&gt;</ph> method of that interface; otherwise, the default equality comparer is <ph id="ph4">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert die <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generische Schnittstelle, dann ist der Gleichheitsvergleich die <ph id="ph3">&lt;xref:System.IEquatable%601.Equals%28%600%29&gt;</ph> -Methode dieser Schnittstelle; andernfalls der Standardgleichheitsvergleich ist <ph id="ph4">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> use an ordering comparer for the list elements.</source>
          <target state="translated">Methoden, z. B. <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> verwenden einen reihenfolgenvergleich für Listenelemente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The default comparer for type <ph id="ph1">`T`</ph> is determined as follows.</source>
          <target state="translated">Der Standardvergleich für den Typ <ph id="ph1">`T`</ph> wird wie folgt bestimmt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If type <ph id="ph1">`T`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generic interface, then the default comparer is the <ph id="ph3">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> method of that interface; otherwise, if type <ph id="ph4">`T`</ph> implements the nongeneric <ph id="ph5">&lt;xref:System.IComparable&gt;</ph> interface, then the default comparer is the <ph id="ph6">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph> method of that interface.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert die <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle, und klicken Sie dann auf die standardmäßige Vergleichsfunktion ist die <ph id="ph3">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> -Methode dieser Schnittstelle; andernfalls, wenn Typ <ph id="ph4">`T`</ph> implementiert die nicht generische <ph id="ph5">&lt;xref:System.IComparable&gt;</ph> -Schnittstelle, und klicken Sie dann auf die Standardeinstellung Vergleich der <ph id="ph6">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph> -Methode dieser Schnittstelle.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If type <ph id="ph1">`T`</ph> implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> keine Schnittstelle implementiert wird, gibt es keinen Standardvergleich, und ein Vergleich oder ein Vergleichsdelegat muss explizit angegeben werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is not guaranteed to be sorted.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist nicht garantiert werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>You must sort the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> before performing operations (such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph>) that require the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to be sorted.</source>
          <target state="translated">Sie sortieren, müssen die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vor dem Ausführen von Vorgängen (z. B. <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph>), erfordern die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> sortiert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elemente in dieser Auflistung können über einen Ganzzahlenindex zugegriffen werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">In dieser Auflistung Indizes sind nullbasiert.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Für sehr große <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekte aufweist, können Sie die maximale Kapazität auf 2 Milliarden Elemente auf einem 64-Bit-System erhöhen, indem die <ph id="ph2">`enabled`</ph> Attribut des Konfigurationselements auf <ph id="ph3">`true`</ph> in der Umgebung zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>For an immutable version of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class, see <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601&gt;</ph>.</source>
          <target state="translated">Eine unveränderliche Version der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse, finden Sie unter <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Performance Considerations</source>
          <target state="translated">Überlegungen zur Leistung</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>In deciding whether to use the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class, both of which have similar functionality, remember that the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class performs better in most cases and is type safe.</source>
          <target state="translated">Bei der Entscheidung, ob verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> Klasse, die beide über ähnliche Funktionen verfügen, beachten Sie, dass die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse bietet eine bessere Leistung in den meisten Fällen und typsicher ist.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If a reference type is used for type <ph id="ph1">`T`</ph> of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class, the behavior of the two classes is identical.</source>
          <target state="translated">Wenn ein Verweistyp, für den Typ verwendet wird <ph id="ph1">`T`</ph> von der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die das Verhalten der beiden Klassen ist identisch.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>However, if a value type is used for type <ph id="ph1">`T`</ph>, you need to consider implementation and boxing issues.</source>
          <target state="translated">Jedoch, wenn ein Werttyp, für den Typ verwendet wird <ph id="ph1">`T`</ph>, Implementierung und Boxing Probleme berücksichtigt werden müssen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If a value type is used for type <ph id="ph1">`T`</ph>, the compiler generates an implementation of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class specifically for that value type.</source>
          <target state="translated">Wenn ein Werttyp, für den Typ verwendet wird <ph id="ph1">`T`</ph>, generiert der Compiler eine Implementierung von der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse speziell für diesen Wert.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>That means a list element of a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</source>
          <target state="translated">Bedeutet, dass ein Listenelement von einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekt keinen geschachtelt werden, bevor das Element kann verwendet werden, nach dem Erstellen von ca. 500 Listenelemente der Arbeitsspeicher nicht boxing Listenelemente gespeichert ist und größer als der Arbeitsspeicher verwendet, um die Implementierung der Klasse zu generieren.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Make certain the value type used for type <ph id="ph1">`T`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generic interface.</source>
          <target state="translated">Vergewissern Sie sich den Werttyp, der für den Typ verwendet <ph id="ph1">`T`</ph> implementiert die <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If not, methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> must call the <ph id="ph2">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method, which boxes the affected list element.</source>
          <target state="translated">Wenn nicht, Methoden, z. B. <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> aufrufen, müssen die <ph id="ph2">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> -Methode, die das betreffende Listenelement schachtelt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If the value type implements the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface and you own the source code, also implement the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generic interface to prevent the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> methods from boxing list elements.</source>
          <target state="translated">Wenn der Werttyp implementiert die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> -Schnittstelle, und Sie besitzen, den Quellcode, implementieren Sie zusätzlich die <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generischen Schnittstelle, um zu verhindern, dass die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methoden aus den Listenelementen boxing.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If you do not own the source code, pass an <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> methods</source>
          <target state="translated">Wenn Sie den Quellcode nicht besitzen, übergeben Sie ein <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Objekt an die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methoden</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>It is to your advantage to use the type-specific implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class instead of using the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class or writing a strongly typed wrapper collection yourself.</source>
          <target state="translated">Es ist von Vorteil, die Typ-spezifische Implementierung der verwenden die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse anstelle der <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> Klasse oder eine Auflistung von stark typisierten Wrapper selbst schreiben.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</source>
          <target state="translated">Der Grund ist Ihre Implementierung müssen .NET Framework bereits für Sie erledigt, und die common Language Runtime Microsoft intermediate Language-Code und Metadaten, die Ihre Implementierung nicht freigeben.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>F# Considerations</source>
          <target state="translated">F#-Überlegungen</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class is used infrequently in F# code.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse dient nur selten in f#-Code.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Instead, <bpt id="p1">[</bpt>Lists<ept id="p1">](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d)</ept>, which are immutable, singly-linked lists, are typically preferred.</source>
          <target state="translated">Stattdessen <bpt id="p1">[</bpt>listet<ept id="p1">](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d)</ept>, sind unveränderlich, einfach verknüpfte Listen, werden in der Regel bevorzugt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</source>
          <target state="translated">Eine Liste von f# stellt eine geordnete, unveränderliche Reihe von Werten und wird für die Verwendung in funktionalen Stil-Entwicklung unterstützt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>When used from F#, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class is typically referred to by the  <bpt id="p1">[</bpt>ResizeArray<ph id="ph2">\&lt;</ph>'T&gt;<ept id="p1">](https://msdn.microsoft.com/library/ee353447.aspx)</ept> type abbreviation to avoid naming conflicts with F# Lists</source>
          <target state="translated">Bei Verwendung von f#, die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse in der Regel verweist auf die <bpt id="p1">[</bpt>ResizeArray<ph id="ph2">\&lt;</ph>' t &gt;<ept id="p1">](https://msdn.microsoft.com/library/ee353447.aspx)</ept> -typabkürzung um Namenskonflikte mit F#-Listen zu vermeiden</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The following example demonstrates how to add, remove, and insert a simple business object in a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The following example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class of type string.</source>
          <target state="translated">Das folgende Beispiel zeigt verschiedene Eigenschaften und Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse vom Typzeichenfolge.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>(For an example of a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of complex types, see the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> method.)</source>
          <target state="translated">(Ein Beispiel für eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> mit komplexen Typen finden Sie unter der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> Methode.)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The default constructor is used to create a list of strings with the default capacity.</source>
          <target state="translated">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit der Standardkapazität zu erstellen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed and then the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> method is used to add several items.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> -Eigenschaft wird angezeigt, und klicken Sie dann die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> Methode wird verwendet, um mehrere Elemente hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The items are listed, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed again, along with the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> property, to show that the capacity has been increased as needed.</source>
          <target state="translated">Sind die Elemente aufgeführt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird angezeigt, zusammen mit der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> method is used to test for the presence of an item in the list, the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> Methode wird verwendet, um das Vorhandensein eines Elements in der Liste Testen der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode wird verwendet, um ein neues Element in der Mitte der Liste einfügen, und der Inhalt der Liste wird erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The default <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property (the indexer in C#) is used to retrieve an item, the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</source>
          <target state="translated">Die Standardeinstellung <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#) wird verwendet, um ein Element abgerufen werden die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> Methode wird verwendet, um die erste Instanz des zuvor hinzugefügten doppelten Elements entfernt, und der Inhalt wird erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method always removes the first instance it encounters.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> -Methode immer die erste gefundene Instanz entfernt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method is used to reduce the capacity to match the count, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode wird verwendet, um die Kapazität entsprechend der Anzahl reduzieren und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaften werden angezeigt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</source>
          <target state="translated">Wenn die nicht verwendete Kapazität weniger als 10 Prozent der Gesamtkapazität hätte, würde die Größe die Liste nicht geändert wurde.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> method is used to remove all items from the list, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> Methode wird verwendet, um alle Elemente aus der Liste zu entfernen und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaften werden angezeigt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Öffentliche statische (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) Member dieses Typs sind threadsicher.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>It is safe to perform multiple read operations on a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, but issues can occur if the collection is modified while it’s being read.</source>
          <target state="translated">Es ist sicherer, die für mehrere Lesevorgänge Ausführen einer <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, jedoch Probleme können auftreten, wenn die Auflistung geändert wird, während sie gelesen wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>To ensure thread safety, lock the collection during a read or write operation.</source>
          <target state="translated">Um Threadsicherheit zu gewährleisten, Sperren Sie die Auflistung während eines Lesevorgangs oder Schreibvorgang.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Damit kann eine Auflistung durch mehrere Threads zum Lesen und Schreiben zugegriffen werden kann, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>For collections with built-in synchronization, see the classes in the <ph id="ph1">&lt;see cref="N:System.Collections.Concurrent" /&gt;</ph> namespace.</source>
          <target state="translated">Sammlungen mit integrierten Synchronisierung, finden Sie unter den Klassen in der <ph id="ph1">&lt;see cref="N:System.Collections.Concurrent" /&gt;</ph> Namespace.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>For an inherently thread–safe alternative, see the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1" /&gt;</ph> class.</source>
          <target state="translated">Eine Alternative grundsätzlich Thread-sichere finden Sie unter der <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1" /&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Klasse, die die Standardanfangskapazität aufweist.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>If the size of the collection can be estimated, using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29&gt;</ph> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29&gt;</ph> Konstruktor und die Angabe der anfänglichen Kapazität entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>The capacity can be decreased by calling the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode oder durch Festlegen der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft explizit.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>The following example demonstrates the default constructor of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht den Standardkonstruktor, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>The default constructor creates a list with the default capacity, as demonstrated by displaying the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">Der Standardkonstruktor erstellt eine Liste mit der Standardkapazität ein, wie durch Anzeigen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor">
          <source>The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</source>
          <target state="translated">Im Beispiel fügt, fügt ein und entfernt die Elemente, die angezeigt wird, wie die Kapazität ändert, werden diese Methoden verwendet werden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new list.</source>
          <target state="translated">Die Auflistung, deren Elemente in die neue Liste kopiert werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> in the same order they are read by the enumerator of the collection.</source>
          <target state="translated">Die Elemente kopiert werden, auf die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> in der gleichen Reihenfolge, die sie vom Enumerator der Auflistung gelesen werden.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements in <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente im <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%2A&gt;</ph> constructor and various methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%2A&gt;</ph> Konstruktor und die verschiedenen Methoden des der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>An array of strings is created and passed to the constructor, populating the list with the elements of the array.</source>
          <target state="translated">Ein Array von Zeichenfolgen erstellt und übergeben des Konstruktors und Auffüllen der Liste mit den Elementen des Arrays.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird dann angezeigt, um anzuzeigen, dass die anfängliche Kapazität genau ist, welcher zum Speichern der Eingabeelemente erforderlich ist.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">Die Anzahl von Elementen, die anfänglich in der neuen Liste gespeichert werden können.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> class that is empty and has the specified initial capacity.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Klasse, die die angegebene Anfangskapazität aufweist.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode oder durch Festlegen der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft explizit.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>This constructor is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`capacity`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen mit einer Kapazität von 4, wird erstellt, da die endgültige Größe der Liste genau 4 bekannt ist.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source>The list is populated with four strings, and a read-only copy is created by using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Die Liste wird mit vier Zeichenfolgen aufgefüllt und eine schreibgeschützte Kopie wird erstellt, mit der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The object to be added to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das Objekt, das am Ende der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Fügt am Ende der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ein Objekt hinzu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> bereits gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> wird von automatisch Neuzuordnen des internen Arrays erhöht und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist kleiner als <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität für das neue Element erhöht werden muss, wird diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The following example demonstrates how to add, remove, and insert a simple business object in a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The following example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class, including the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt verschiedene Eigenschaften und Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generischen Klasse, einschließlich der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The default constructor is used to create a list of strings with a capacity of 0.</source>
          <target state="translated">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit einer Kapazität von 0 zu erstellen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> method is used to add several items.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird angezeigt, und klicken Sie dann die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> Methode wird verwendet, um mehrere Elemente hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>The items are listed, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed again, along with the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> property, to show that the capacity has been increased as needed.</source>
          <target state="translated">Sind die Elemente aufgeführt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird angezeigt, zusammen mit der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Add(`0)">
          <source>Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</source>
          <target state="translated">Andere Eigenschaften und Methoden werden zum Suchen, einfügen und Entfernen von Elementen aus der Liste, und schließlich auf die Liste zu löschen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be added to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Die Sammlung, deren Elemente am Ende der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> hinzugefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">Die Auflistung an sich kann nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein. Sie kann jedoch Elemente enthalten, die <ph id="ph2">&lt;see langword="null" /&gt;</ph> sind, wenn Typ <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> einen Referenztyp darstellt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Adds the elements of the specified collection to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Fügt die Elemente der angegebenen Auflistung am Ende von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> hinzu.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The order of the elements in the collection is preserved in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Reihenfolge der Elemente in der Auflistung wird beibehalten, der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>If the new <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> (the current <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> plus the size of the collection) will be greater than <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Wenn die neue <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> (das aktuelle <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> plus die Größe der Auflistung) größer als <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> wird erhöht, indem automatisch Neuzuordnen des internen Arrays an die neuen Elemente und die vorhandene Elemente werden in das neue Array kopiert, bevor die neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can accommodate the new elements without increasing the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements to be added.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> die neuen Elemente aufnehmen kann, ohne Erhöhung der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept><ph id="ph1"> + </ph><bpt id="p2">*</bpt>m<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is the number of elements to be added and <bpt id="p4">*</bpt>m<ept id="p4">*</ept> is <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität erhöht werden, um die neuen Elemente aufnehmen muss, wird diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept><ph id="ph1"> + </ph><bpt id="p2">*</bpt>m<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist die Anzahl von Elementen hinzuzufügende und <bpt id="p4">*</bpt>m<ept id="p4">*</ept> ist <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> method and various other methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> -Methode und die verschiedenen Methoden des der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>An array of strings is created and passed to the constructor, populating the list with the elements of the array.</source>
          <target state="translated">Ein Array von Zeichenfolgen erstellt und übergeben des Konstruktors und Auffüllen der Liste mit den Elementen des Arrays.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> method is called, with the list as its argument.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph> -Methode aufgerufen wird, mit der Liste als Argument.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</source>
          <target state="translated">Das Ergebnis ist, dass die aktuellen Elemente der Liste bis zum Ende der Liste alle Elemente duplizieren hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>Returns a read-only <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> wrapper for the current collection.</source>
          <target state="translated">Gibt einen schreibgeschützten <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>-Wrapper für die aktuelle Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>An object that acts as a read-only wrapper around the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, das als schreibgeschützter Wrapper des aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Objekts fungiert.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>To prevent any modifications to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object, expose it only through this wrapper.</source>
          <target state="translated">Um zu verhindern, dass alle Änderungen an der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekt, das nur über diesen Wrapper verfügbar gemacht.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>A  <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> object does not expose methods that modify the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> Objekt macht Methoden, die die Auflistung zu ändern.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>However, if changes are made to the underlying <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object, the read-only collection reflects those changes.</source>
          <target state="translated">Jedoch wenn Änderungen, auf die zugrunde liegende vorgenommen werden <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Objekt, die schreibgeschützte Auflistung gibt die Änderungen wieder.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen mit einer Kapazität von 4, wird erstellt, da die endgültige Größe der Liste genau 4 bekannt ist.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>The list is populated with four strings, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> method is used to get a read-only <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface implementation that wraps the original list.</source>
          <target state="translated">Die Liste wird mit vier Zeichenfolgen aufgefüllt und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph> Methode wird verwendet, um ein schreibgeschütztes abrufen <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> Implementierung der generischen Schnittstelle, die die ursprüngliche Liste umschließt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.AsReadOnly">
          <source>An element of the original list is set to "Coelophysis" using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</source>
          <target state="translated">Auf "Coelophysis" ein Element der ursprünglichen Liste festgelegt wird, mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#), und die Inhalte der schreibgeschützten Liste werden erneut angezeigt, dass sie einfach ein Wrapper für die ursprüngliche Liste ist.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Uses a binary search algorithm to locate a specific element in the sorted <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Verwendet einen binären Suchalgorithmus für die Suche nach einem bestimmten Element bzw. einen Teil dieses Elements in der sortierten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The object to locate.</source>
          <target state="translated">Das zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>Searches the entire sorted <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Durchsucht mithilfe des Standardcomparers die gesamte sortierte <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> nach einem Element und gibt den nullbasierten Index des Elements zurück.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="item" /&gt;</ph> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="item" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated">Der nullbasierte Index von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in der sortierten <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, sofern <ph id="ph3">&lt;paramref name="item" /&gt;</ph> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <ph id="ph4">&lt;paramref name="item" /&gt;</ph> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>This method uses the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for type <ph id="ph2">`T`</ph> to determine the order of list elements.</source>
          <target state="translated">Diese Methode verwendet die standardmäßige Vergleichsfunktion <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für Typ <ph id="ph2">`T`</ph> bestimmt die Reihenfolge der Listenelemente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> muss bereits entsprechend die Vergleichs-Implementierung; sortiert werden, andernfalls ist das Ergebnis falsch.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception when using the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generic interface.</source>
          <target state="translated">Vergleichen von <ph id="ph1">`null`</ph> mit einem beliebigen Verweistyp ist zulässig und löst keine Ausnahme aus, bei Verwendung der <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Beim Sortieren <ph id="ph1">`null`</ph> gilt als kleiner als ein anderes Objekt sein.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält mehr als ein Element mit dem gleichen Wert gibt die Methode nur einen vorkommen und eine vorkommen, allerdings nicht unbedingt das erste Schema zurückgeben kann.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält keinen den angegebenen Wert gibt die Methode eine negative ganze Zahl zurück.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Sie können die bitweise Komplementoperation (~) anwenden, auf diese negative ganze Zahl, um den Index des ersten Elements abzurufen, die größer als der gesuchte Wert ist.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Beim Einfügen des Werts in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, dieser Index sollte als die Einfügemarke verwendet werden, um die Sortierreihenfolge zu verwalten.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>This method is an O(log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements in the range.</source>
          <target state="translated">Diese Methode ist eine O (Log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente im Bereich.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with four strings, in no particular order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, ohne bestimmte Reihenfolge gefüllt ist.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The list is displayed, sorted, and displayed again.</source>
          <target state="translated">Die Liste wird angezeigt, sortiert und erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> method overload is then used to search for two strings that are not in the list, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert them.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> methodenüberladung wird dann verwendet, um zwei Zeichenfolgen zu suchen, die nicht in der Liste enthalten sind und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode dient zum Einfügen.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The return value of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> method is negative in each case, because the strings are not in the list.</source>
          <target state="translated">Der Rückgabewert der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> Methode ist in jedem Fall negativ, da die Zeichenfolgen nicht in der Liste enthalten sind.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>Taking the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph1">`Xor`</ph> -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</source>
          <target state="translated">Dem bitweisen Komplement (der ~-Operator in c# und Visual C++ <ph id="ph1">`Xor`</ph> -1 in Visual Basic) dieses negative Zahl wird der Index des ersten Elements in der Liste, die größer als die Suchzeichenfolge und Einfügen an dieser Stelle ist beibehalten sortieren Reihenfolge.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The second search string is larger than any element in the list, so the insertion position is at the end of the list.</source>
          <target state="translated">Die zweite Suchzeichenfolge ist größer als ein Element in der Liste, daher ist die Position der Einfügemarke am Ende der Liste.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <source>The default comparer <ph id="ph1">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find an implementation of the <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph4">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Der Standardvergleich <ph id="ph1">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann keine Implementierung der generischen <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für Typ <ph id="ph4">&lt;paramref name="T" /&gt;</ph> finden.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Das zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>-Implementierung, die beim Vergleich von Elementen verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer <ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> zur Verwendung des Standardvergleichs <ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the entire sorted <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Durchsucht mithilfe des angegebenen Comparers die gesamte sortierte <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> nach einem Element und gibt den nullbasierten Index des Elements zurück.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="item" /&gt;</ph> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="item" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated">Der nullbasierte Index von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in der sortierten <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, sofern <ph id="ph3">&lt;paramref name="item" /&gt;</ph> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <ph id="ph4">&lt;paramref name="item" /&gt;</ph> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">Der Vergleich wird bestimmt, wie die Elemente verglichen werden.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>For example, you can use a <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">Beispielsweise können Sie eine <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> -Instanz wie der Vergleich, der Groß-/Kleinschreibung Zeichenfolgensuchen ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are compared to the specified value using the specified <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> angegeben wird, werden die Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> verglichen werden, auf den angegebenen Wert mit dem angegebenen <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the default comparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph4">`T`</ph> implements the <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> ist <ph id="ph2">`null`</ph>, die standardmäßige Vergleichsfunktion <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph4">`T`</ph> implementiert die <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> muss bereits entsprechend die Vergleichs-Implementierung; sortiert werden, andernfalls ist das Ergebnis falsch.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception when using the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generic interface.</source>
          <target state="translated">Vergleichen von <ph id="ph1">`null`</ph> mit einem beliebigen Verweistyp ist zulässig und löst keine Ausnahme aus, bei Verwendung der <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Beim Sortieren <ph id="ph1">`null`</ph> gilt als kleiner als ein anderes Objekt sein.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält mehr als ein Element mit dem gleichen Wert gibt die Methode nur einen vorkommen und eine vorkommen, allerdings nicht unbedingt das erste Schema zurückgeben kann.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält keinen den angegebenen Wert gibt die Methode eine negative ganze Zahl zurück.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Sie können die bitweise Komplementoperation (~) anwenden, auf diese negative ganze Zahl, um den Index des ersten Elements abzurufen, die größer als der gesuchte Wert ist.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Beim Einfügen des Werts in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, dieser Index sollte als die Einfügemarke verwendet werden, um die Sortierreihenfolge zu verwalten.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>This method is an O(log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements in the range.</source>
          <target state="translated">Diese Methode ist eine O (Log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente im Bereich.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The example defines an alternative comparer for strings named DinoCompare, which implements the <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic, <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generic interface.</source>
          <target state="translated">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The comparer works as follows: First, the comparands are tested for <ph id="ph1">`null`</ph>, and a null reference is treated as less than a non-null.</source>
          <target state="translated">Der Vergleich funktioniert wie folgt: zunächst der verglichenen Elemente getestet werden <ph id="ph1">`null`</ph>, und ein null-Verweis als kleiner als ein Wert ungleich Null behandelt wird.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Second, the string lengths are compared, and the longer string is deemed to be greater.</source>
          <target state="translated">Zweitens die Zeichenfolgenlängen verglichen werden, und die Zeichenfolge längere ist als größer werden.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Third, if the lengths are equal, ordinary string comparison is used.</source>
          <target state="translated">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with four strings, in no particular order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, ohne bestimmte Reihenfolge gefüllt ist.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The list is displayed, sorted using the alternate comparer, and displayed again.</source>
          <target state="translated">Die Liste ist, mit dem alternativen Vergleich sortiert und angezeigten erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung wird dann verwendet, um mehrere Zeichenfolgen zu suchen, die nicht in der Liste den alternativen Vergleich eingefügt werden.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert the strings.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode verwendet, um die Zeichenfolgen einzufügen.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>These two methods are located in the function named <ph id="ph1">`SearchAndInsert`</ph>, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph2">`Xor`</ph> -1 in Visual Basic) of the negative number returned by <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> and use it as an index for inserting the new string.</source>
          <target state="translated">Diese beiden Methoden befinden sich in der Funktion mit dem Namen <ph id="ph1">`SearchAndInsert`</ph>, zusammen mit Code, das bitweise Komplement (der ~-Operator in c# und Visual C++ <ph id="ph2">`Xor`</ph> -1 in Visual Basic) für die zurückgegebene negative Zahl <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> und verwenden es als ein Index für Einfügen der neuen Zeichenfolge an.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find an implementation of the <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph6">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und der Standardvergleich <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann keine Implementierung der generischen <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für den Typ <ph id="ph6">&lt;paramref name="T" /&gt;</ph> finden.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">Der nullbasierte Startindex des zu durchsuchenden Bereichs.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to search.</source>
          <target state="translated">Die Länge des zu durchsuchenden Bereichs.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Das zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing elements, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der Standardvergleich <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches a range of elements in the sorted <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Durchsucht mithilfe des angegebenen Vergleichs einen Bereich von Elementen in der sortierten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> nach einem Element und gibt den nullbasierten Index des Elements zurück.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="item" /&gt;</ph> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="item" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated">Der nullbasierte Index von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in der sortierten <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, sofern <ph id="ph3">&lt;paramref name="item" /&gt;</ph> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <ph id="ph4">&lt;paramref name="item" /&gt;</ph> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <ph id="ph5">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">Der Vergleich wird bestimmt, wie die Elemente verglichen werden.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>For example, you can use a <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">Beispielsweise können Sie eine <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> -Instanz wie der Vergleich, der Groß-/Kleinschreibung Zeichenfolgensuchen ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are compared to the specified value using the specified <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> angegeben wird, werden die Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> verglichen werden, auf den angegebenen Wert mit dem angegebenen <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the default comparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph4">`T`</ph> implements the <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> ist <ph id="ph2">`null`</ph>, die standardmäßige Vergleichsfunktion <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph4">`T`</ph> implementiert die <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> muss bereits entsprechend die Vergleichs-Implementierung; sortiert werden, andernfalls ist das Ergebnis falsch.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception when using the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generic interface.</source>
          <target state="translated">Vergleichen von <ph id="ph1">`null`</ph> mit einem beliebigen Verweistyp ist zulässig und löst keine Ausnahme aus, bei Verwendung der <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Beim Sortieren <ph id="ph1">`null`</ph> gilt als kleiner als ein anderes Objekt sein.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält mehr als ein Element mit dem gleichen Wert gibt die Methode nur einen vorkommen und eine vorkommen, allerdings nicht unbedingt das erste Schema zurückgeben kann.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält keinen den angegebenen Wert gibt die Methode eine negative ganze Zahl zurück.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Sie können die bitweise Komplementoperation (~) anwenden, auf diese negative ganze Zahl, um den Index des ersten Elements abzurufen, die größer als der gesuchte Wert ist.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Beim Einfügen des Werts in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, dieser Index sollte als die Einfügemarke verwendet werden, um die Sortierreihenfolge zu verwalten.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>This method is an O(log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements in the range.</source>
          <target state="translated">Diese Methode ist eine O (Log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente im Bereich.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The example defines an alternative comparer for strings named DinoCompare, which implements the <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic, <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generic interface.</source>
          <target state="translated">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The comparer works as follows: First, the comparands are tested for <ph id="ph1">`null`</ph>, and a null reference is treated as less than a non-null.</source>
          <target state="translated">Der Vergleich funktioniert wie folgt: zunächst der verglichenen Elemente getestet werden <ph id="ph1">`null`</ph>, und ein null-Verweis als kleiner als ein Wert ungleich Null behandelt wird.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Second, the string lengths are compared, and the longer string is deemed to be greater.</source>
          <target state="translated">Zweitens die Zeichenfolgenlängen verglichen werden, und die Zeichenfolge längere ist als größer werden.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Third, if the lengths are equal, ordinary string comparison is used.</source>
          <target state="translated">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit den Namen der fünf pflanzenfressenden Dinosauriern und drei zur Dinosaurier aufgefüllt wird.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Within each of the two groups, the names are not in any particular sort order.</source>
          <target state="translated">In jedem von zwei Gruppen sind die Namen nicht in der Sortierreihenfolge vor.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</source>
          <target state="translated">Die Liste wird angezeigt, die Gruppe der Pflanzenfresser wird mit dem alternativen Vergleich sortiert und die Liste wird erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload is then used to search only the range of herbivores for "Brachiosaurus".</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung wird dann verwendet, um nur die Gruppe der Pflanzenfresser "Brachiosaurus" suchen.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph1">`Xor`</ph> -1 in Visual Basic) of the negative number returned by the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method is used as an index for inserting the new string.</source>
          <target state="translated">Die Zeichenfolge nicht gefunden wird, und das bitweise Komplement (der ~-Operator in c# und Visual C++ <ph id="ph1">`Xor`</ph> -1 in Visual Basic) für die zurückgegebene negative Zahl der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> Methode dient als Index zum Einfügen der neuen Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Bereich in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find an implementation of the <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph6">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und der Standardvergleich <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann keine Implementierung der generischen <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für den Typ <ph id="ph6">&lt;paramref name="T" /&gt;</ph> finden.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>Gets or sets the total number of elements the internal data structure can hold without resizing.</source>
          <target state="translated">Ruft die Gesamtzahl der Elemente ab, die die interne Datenstruktur ohne Änderung der Größe aufnehmen kann, oder legt diese Anzahl fest.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> can contain before resizing is required.</source>
          <target state="translated">Die Anzahl der Elemente, die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> enthalten kann, bevor eine Größenanpassung erforderlich ist.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can store before resizing is required, whereas <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> können speichern, bevor eine größenanpassung erforderlich ist, ist dagegen <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> ist immer größer als oder gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, die Kapazität erhöht wird, indem automatisch Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>If the capacity is significantly larger than the count and you want to reduce the memory used by the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>,  you can  decrease capacity by calling the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method or by setting the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property explicitly to a lower value.</source>
          <target state="translated">Wenn die Kapazität wesentlich größer als die Anzahl ist und Sie die Speicherverwendung durch verringern möchten die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, können Sie die Kapazität verringern, durch Aufrufen der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode oder durch Festlegen der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> -Eigenschaft explizit auf einen niedrigeren Wert.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</source>
          <target state="translated">Wenn der Wert des <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> explizit des internen Arrays ist auch zugewiesen, um die angegebene Kapazität aufzunehmen und kopiert alle Elemente festgelegt ist.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the new capacity.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die neue Kapazität.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>The following example demonstrates how to check the capacity and count of a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple business object, and illustrates using the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method to remove extra capacity.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die Kapazität und die Anzahl der zu überprüfen einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode, um zusätzliche Kapazität zu entfernen.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property at several points in the life of a list.</source>
          <target state="translated">Das folgende Beispiel zeigt die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft an verschiedene Positionen in der Lebensdauer einer Liste.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>The default constructor is used to create a list of strings with a capacity of 0, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed to demonstrate this.</source>
          <target state="translated">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit einer Kapazität von 0 (null) erstellen und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird angezeigt, um dies zu demonstrieren.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>After the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> method has been used to add several items, the items are listed, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed again, along with the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> property, to show that the capacity has been increased as needed.</source>
          <target state="translated">Nach der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> -Methode wurde verwendet, um mehrere Elemente hinzuzufügen, die Elemente aufgelistet, und klicken Sie dann die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft angezeigt wird erneut zusammen mit der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property is displayed again after the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method is used to reduce the capacity to match the count.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft wird erneut angezeigt, nachdem die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode wird verwendet, um die Kapazität entsprechend der Anzahl reduzieren.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> method is used to remove all items from the list, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are displayed again.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> Methode wird verwendet, um alle Elemente aus der Liste zu entfernen und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaften werden erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Collections.Generic.List`1.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.Generic.List`1.Capacity" /&gt;</ph> ist auf einen Wert festgelegt, der kleiner als <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Im System ist nicht genügend Arbeitsspeicher verfügbar.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt alle Elemente aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist auf 0 festgelegt, und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method or set the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">Zum Zurücksetzen der Kapazität des der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, rufen Sie die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode bzw. einer Gruppe die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> -Eigenschaft direkt.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> method and various other properties and methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> -Methode und verschiedene andere Eigenschaften und Methoden der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> method is used at the end of the program, to remove all items from the list, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are then displayed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> Methode am Ende des Programms verwendet, um alle Elemente aus der Liste zu entfernen und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> anschließend werden Eigenschaften angezeigt.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob sich ein Element in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> befindet.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;paramref name="item" /&gt;</ph> in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gefunden wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>This method determines equality by using the default equality comparer, as defined by the object's implementation of the <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> method for <ph id="ph2">`T`</ph> (the type of values in the list).</source>
          <target state="translated">Diese Methode bestimmt Gleichheit mithilfe des Standardgleichheitsvergleichs, gemäß der Implementierung des Objekts der <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode zum <ph id="ph2">`T`</ph> (der Typ der Werte in der Liste).</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> methods on a <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple business object that implements <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> Methoden auf einen <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> , enthält ein einfaches Geschäftsobjekt, das implementiert <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>The following example contains a list of complex objects of type <ph id="ph1">`Cube`</ph>.</source>
          <target state="translated">Das folgende Beispiel enthält eine Liste von komplexen Objekten des Typs <ph id="ph1">`Cube`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>The <ph id="ph1">`Cube`</ph> class implements the <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> method so that two cubes are considered equal if their dimensions are the same.</source>
          <target state="translated">Die <ph id="ph1">`Cube`</ph> -Klasse implementiert die <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode, damit zwei Cubes werden als gleich betrachtet, wenn ihre Dimensionen identisch sind.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Contains(`0)">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, because a cube that has the specified dimensions is already in the collection.</source>
          <target state="translated">In diesem Beispiel wird die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>, weil ein Cube, der die angegebenen Dimensionen wurde bereits in der Auflistung vorhanden ist.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The type of the elements of the target array.</source>
          <target state="translated">Der Typ der Elemente des Zielarrays.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Converter`2" /&gt;</ph> delegate that converts each element from one type to another type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Converter`2" /&gt;</ph>-Delegat, der jedes Element von einem Typ in einen anderen Typ konvertiert.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>Converts the elements in the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> to another type, and returns a list containing the converted elements.</source>
          <target state="translated">Konvertiert die Elemente in der aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> in einen anderen Typ und gibt eine Liste der konvertierten Elemente zurück.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> of the target type containing the converted elements from the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> des Zieltyps, die die konvertierten Elemente aus der aktuellen <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The <ph id="ph1">&lt;xref:System.Converter%602&gt;</ph> is a delegate to a method that converts an object to the target type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Converter%602&gt;</ph> ist ein Delegat für eine Methode, die ein Objekt in den Zieltyp konvertiert.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Converter%602&gt;</ph> delegate, and the converted elements are saved in the new <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Converter%602&gt;</ph> Delegat und die konvertierten Elemente werden in der neuen gespeichert <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> remains unchanged.</source>
          <target state="translated">Die aktuelle <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The following example defines a method named <ph id="ph1">`PointFToPoint`</ph> that converts a <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> structure to a <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structure.</source>
          <target state="translated">Das folgende Beispiel definiert eine Methode namens <ph id="ph1">`PointFToPoint`</ph> , konvertiert ein <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> -Struktur in eine <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> Struktur.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> structures, creates a <ph id="ph3">`Converter\&lt;PointF, Point&gt;`</ph> delegate (<ph id="ph4">`Converter(Of PointF, Point)`</ph> in Visual Basic) to represent the <ph id="ph5">`PointFToPoint`</ph> method, and passes the delegate to the <ph id="ph6">&lt;xref:System.Collections.Generic.List%601.ConvertAll%2A&gt;</ph> method.</source>
          <target state="translated">Im Beispiel wird erstellt eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> um Datenstrukturen handelt, erstellt eine <ph id="ph3">`Converter\&lt;PointF, Point&gt;`</ph> delegieren (<ph id="ph4">`Converter(Of PointF, Point)`</ph> in Visual Basic) zur Darstellung der <ph id="ph5">`PointFToPoint`</ph> -Methode, und übergibt den Delegaten an die <ph id="ph6">&lt;xref:System.Collections.Generic.List%601.ConvertAll%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ConvertAll%2A&gt;</ph> method passes each element of the input list to the <ph id="ph2">`PointFToPoint`</ph> method and puts the converted elements into a new list of <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ConvertAll%2A&gt;</ph> Methode übergibt jedes Element der Eingabeliste an die <ph id="ph2">`PointFToPoint`</ph> Methode und legt die konvertierten Elemente in eine neue Liste mit <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> Strukturen.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source>Both lists are displayed.</source>
          <target state="translated">Beide Listen werden angezeigt.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <source><ph id="ph1">&lt;paramref name="converter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="converter" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it to an array.</source>
          <target state="translated">Kopiert <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> oder einen Teil davon in ein Array.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Kopiert die gesamte <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> in ein kompatibles eindimensionales Array, wobei am Anfang des Zielarrays begonnen wird.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> die Elemente kopiert.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, um die <ph id="ph1">&lt;xref:System.Array&gt;</ph> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with 5 strings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>An empty string array of 15 elements is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</source>
          <target state="translated">Ein leeres Zeichenfolgenarray 15 Elemente wird erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Arrayindex 6 (bleibt leer, Index 5) zu kopieren.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um 3 Elemente aus der Liste, beginnend mit dem Index 2 kopieren, damit das Array, beginnend am Array index 12 (bleibt Index 11-leer).</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The contents of the array are then displayed.</source>
          <target state="translated">Anschließend werden der Inhalt des Arrays angezeigt.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> is greater than the number of elements that the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph> can contain.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ist größer als die Anzahl von Elementen, die das Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Kopiert die gesamte <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Zielarrays.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> die Elemente kopiert.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, um die <ph id="ph1">&lt;xref:System.Array&gt;</ph> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with 5 strings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>An empty string array of 15 elements is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</source>
          <target state="translated">Ein leeres Zeichenfolgenarray 15 Elemente wird erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Arrayindex 6 (bleibt leer, Index 5) zu kopieren.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um 3 Elemente aus der Liste, beginnend mit dem Index 2 kopieren, damit das Array, beginnend am Array index 12 (bleibt Index 11-leer).</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The contents of the array are then displayed.</source>
          <target state="translated">Anschließend werden der Inhalt des Arrays angezeigt.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, ab dem mit dem Kopieren begonnen wird.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Die Anzahl der zu kopierenden Elemente.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Copies a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Kopiert einen Bereich von Elementen aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> in ein kompatibles eindimensionales Array, beginnend ab dem angegebenen Index im Zielarray.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> die Elemente kopiert.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, um die <ph id="ph1">&lt;xref:System.Array&gt;</ph> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with 5 strings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>An empty string array of 15 elements is created, and the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</source>
          <target state="translated">Ein leeres Zeichenfolgenarray 15 Elemente wird erstellt, und die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Arrayindex 6 (bleibt leer, Index 5) zu kopieren.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um 3 Elemente aus der Liste, beginnend mit dem Index 2 kopieren, damit das Array, beginnend am Array index 12 (bleibt Index 11-leer).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The contents of the array are then displayed.</source>
          <target state="translated">Anschließend werden der Inhalt des Arrays angezeigt.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph> of the source <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist gleich oder größer als die <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph> der Quell-<ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the source <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> is greater than the available space from <ph id="ph3">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph4">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente vom <ph id="ph1">&lt;paramref name="index" /&gt;</ph> bis zum Ende der Quell-<ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph3">&lt;paramref name="arrayIndex" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph4">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente, die in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can store before resizing is required.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> speichern können, bevor eine größenanpassung erforderlich ist.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> ist immer größer als oder gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, die Kapazität erhöht wird, indem automatisch Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>The following example demonstrates how to check the capacity and count of a  <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple business object, and illustrates using the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method to remove extra capacity.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die Kapazität und die Anzahl der zu überprüfen einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode, um zusätzliche Kapazität zu entfernen.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>The following example shows the value of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> property at various points in the life of a list.</source>
          <target state="translated">Das folgende Beispiel zeigt den Wert der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaft an verschiedenen Punkten während der Lebensdauer einer Liste.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>After the list has been created and populated and its elements displayed, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Nachdem die Liste erstellt und gefüllt wurde und die Elemente angezeigt, die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaften werden angezeigt.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Count">
          <source>These properties are displayed again after the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method has been called, and again after the contents of the list are cleared.</source>
          <target state="translated">Diese Eigenschaften werden erneut angezeigt, nachdem die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode wurde aufgerufen, und erneut, nachdem der Inhalt der Liste gelöscht.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> contains elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Bestimmt, ob die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> Elemente enthält, die mit den vom angegebenen Prädikat definierten Bedingungen übereinstimmen.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ein oder mehr Elemente enthält, die die durch das angegebene Prädikat definierten Bedingungen erfüllen; andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, and processing is stopped when a match is found.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> Delegat und die Verarbeitung wird angehalten, wenn eine Übereinstimmung gefunden wird.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> methods on a <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple business object that implements <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Contains%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> Methoden auf einen <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> , enthält ein einfaches Geschäftsobjekt, das implementiert <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> method and several other methods that use the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generic delegate.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> -Methode und andere Methoden verwenden, die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generischen Delegaten.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt wird, 8, Dinosauriernamen enthält, von denen zwei (an Position 1 und 5) mit "Saurus" enden.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The example also defines a search predicate method named <ph id="ph1">`EndsWithSaurus`</ph>, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</source>
          <target state="translated">Im Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen <ph id="ph1">`EndsWithSaurus`</ph>, der einen Zeichenfolgenparameter akzeptiert und einen booleschen Wert zurückgibt, der angibt, ob die Eingabezeichenfolge "Saurus" endet.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.FindLast%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindAll%2A&gt;</ph> methods are used to search the list with the search predicate method, and then the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> method is used to remove all entries ending with "saurus".</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.FindLast%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindAll%2A&gt;</ph> Methoden werden verwendet, um die Liste der mit der Suche, durchsuchen und dann die <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> Methode wird verwendet, um alle Einträge mit "Saurus" entfernt.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> method is called.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>It traverses the list from the beginning, passing each element in turn to the <ph id="ph1">`EndsWithSaurus`</ph> method.</source>
          <target state="translated">Es durchläuft die Liste von Anfang an und übergibt die einzelnen Elemente an die <ph id="ph1">`EndsWithSaurus`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The search stops and the method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`EndsWithSaurus`</ph> method returns <ph id="ph3">`true`</ph> for any element.</source>
          <target state="translated">Die Suche beendet und die Methode gibt <ph id="ph1">`true`</ph> Wenn die <ph id="ph2">`EndsWithSaurus`</ph> -Methode zurückkehrt <ph id="ph3">`true`</ph> für ein bestimmtes Element.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> because all such elements have been removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> -Methode zurückkehrt <ph id="ph2">`false`</ph> da alle Elemente entfernt wurden.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>In C# and Visual Basic, it is not necessary to create the <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegate (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explicitly.</source>
          <target state="translated">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegieren (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explizit.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source>These languages infer the correct delegate from context and create it automatically.</source>
          <target state="translated">Diese Sprachen leiten den richtigen Delegaten aus Kontext und automatisch zu erstellen.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das erste Vorkommen im gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Das erste Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, moving forward in the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, starting with the first element and ending with the last element.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> -Delegaten vorrücken bei der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, beginnend mit dem ersten Element und endend mit dem letzten Element.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Processing is stopped when a match is found.</source>
          <target state="translated">Die Verarbeitung wird beendet, wenn eine Übereinstimmung gefunden wird.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</source>
          <target state="translated">Wenn eine Liste mit Typen mit Werten zu suchen, stellen Sie sicher, dass der Standardwert für den Typ der Suche Prädikat nicht erfüllt.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</source>
          <target state="translated">Andernfalls besteht keine Möglichkeit zur Unterscheidung zwischen einer Standardeinstellung Wert gibt an, dass keine Übereinstimmung gefunden wurde und ein Listenelement, die zufällig zur der Standardwert für den Typ haben.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>If the default value satisfies the search predicate, use the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> method instead.</source>
          <target state="translated">Wenn der Standardwert der Search-Prädikat erfüllt, verwenden Sie die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> Methode stattdessen.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple complex object.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph> Methode auf eine <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> , die ein einfaches komplexe Objekt enthält.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The following example demonstrates the find methods for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Suchen von Methoden für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The example for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class contains <ph id="ph2">`book`</ph> objects, of class <ph id="ph3">`Book`</ph>, using the data from the <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</source>
          <target state="translated">Im Beispiel für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse enthält <ph id="ph2">`book`</ph> Objekte der Klasse <ph id="ph3">`Book`</ph>, mit den Daten aus der <bpt id="p1">[</bpt>XML-Beispieldatei: Bücher (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The <ph id="ph1">`FillList`</ph> method in the example uses <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> to parse the values from the XML to property values of the <ph id="ph2">`book`</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`FillList`</ph> -Methode im Beispiel verwendet <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> analysiert die Werte aus der XML-Eigenschaftswerten von der <ph id="ph2">`book`</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>The following table describes the examples provided for the find methods.</source>
          <target state="translated">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds a book by an ID using the <ph id="ph1">`IDToFind`</ph> predicate delegate.</source>
          <target state="translated">Sucht nach einem Buch mithilfe einer ID der <ph id="ph1">`IDToFind`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Find all books that whose <ph id="ph1">`Genre`</ph> property is "Computer" using the <ph id="ph2">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Suchen Sie alle Bücher, deren <ph id="ph1">`Genre`</ph> Eigenschaft ist "Computer" mit der <ph id="ph2">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds the last book in the collection that has a publish date before 2001, using the <ph id="ph1">`PubBefore2001`</ph> predicate delegate.</source>
          <target state="translated">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der <ph id="ph1">`PubBefore2001`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds the index of first computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des ersten Computer Buch verwenden die <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds the index of the last computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des letzten Computer Buch mithilfe der <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds the index of first computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des ersten Computerbuchs in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source>Finds the index of last computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des letzten Computer Buch in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Retrieves all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Ruft alle Elemente ab, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> mit allen Elementen, die ggf. die durch das angegebene Prädikat definierten Bedingungen erfüllen, andernfalls eine leere <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, and the elements that match the conditions are saved in the returned <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> Delegat sowie Elemente, die Bedingungen erfüllen, werden gespeichert in der zurückgegebenen <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The following example demonstrates the find methods for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Suchen von Methoden für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The example for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class contains <ph id="ph2">`book`</ph> objects, of class <ph id="ph3">`Book`</ph>, using the data from the <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</source>
          <target state="translated">Im Beispiel für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse enthält <ph id="ph2">`book`</ph> Objekte der Klasse <ph id="ph3">`Book`</ph>, mit den Daten aus der <bpt id="p1">[</bpt>XML-Beispieldatei: Bücher (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The <ph id="ph1">`FillList`</ph> method in the example uses <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> to parse the values from the XML to property values of the <ph id="ph2">`book`</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`FillList`</ph> -Methode im Beispiel verwendet <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> analysiert die Werte aus der XML-Eigenschaftswerten von der <ph id="ph2">`book`</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>The following table describes the examples provided for the find methods.</source>
          <target state="translated">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds a book by an ID using the <ph id="ph1">`IDToFind`</ph> predicate delegate.</source>
          <target state="translated">Sucht nach einem Buch mithilfe einer ID der <ph id="ph1">`IDToFind`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Find all books that whose <ph id="ph1">`Genre`</ph> property is "Computer" using the <ph id="ph2">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Suchen Sie alle Bücher, deren <ph id="ph1">`Genre`</ph> Eigenschaft ist "Computer" mit der <ph id="ph2">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds the last book in the collection that has a publish date before 2001, using the <ph id="ph1">`PubBefore2001`</ph> predicate delegate.</source>
          <target state="translated">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der <ph id="ph1">`PubBefore2001`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds the index of first computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des ersten Computer Buch verwenden die <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds the index of the last computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des letzten Computer Buch mithilfe der <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds the index of first computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des ersten Computerbuchs in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source>Finds the index of last computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des letzten Computer Buch in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Sucht nach einem Element, das die durch ein angegebenes Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> oder einem Teil davon zurück.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>This method returns -1 if an item that matches the conditions is not found.</source>
          <target state="translated">Diese Methode gibt -1 zurück, wenn kein Element gefunden wird, das den Bedingungen entspricht.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens im gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnend mit dem ersten Element und endet beim letzten Element durchsucht wird.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The delegate has the signature:</source>
          <target state="translated">Der Delegat hat die Signatur:</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The following example defines an <ph id="ph1">`Employee`</ph> class with two fields, <ph id="ph2">`Name`</ph> and <ph id="ph3">`Id`</ph>.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Employee`</ph> Klasse mit zwei Feldern <ph id="ph2">`Name`</ph> und <ph id="ph3">`Id`</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>It also defines an <ph id="ph1">`EmployeeSearch`</ph> class with a single method, <ph id="ph2">`StartsWith`</ph>, that indicates whether the <ph id="ph3">`Employee.Name`</ph> field starts with a specified substring that is supplied to the <ph id="ph4">`EmployeeSearch`</ph> class constructor.</source>
          <target state="translated">Er definiert außerdem eine <ph id="ph1">`EmployeeSearch`</ph> Klasse mit einer einzelnen Methode <ph id="ph2">`StartsWith`</ph>, Wert, der angibt, ob die <ph id="ph3">`Employee.Name`</ph> Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die <ph id="ph4">`EmployeeSearch`</ph> Klassenkonstruktor.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>Note  the signature of this method</source>
          <target state="translated">Beachten Sie die Signatur dieser Methode</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>corresponds to the signature of the delegate that can be passed to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> method.</source>
          <target state="translated">entspricht der Signatur des Delegaten, die übergeben werden kann die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source>The example instantiates a <ph id="ph1">`List&lt;Employee&gt;`</ph> object, adds a number of <ph id="ph2">`Employee`</ph> objets to it, and then calls the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> method twice  to search the entire collection , the first time for the first <ph id="ph4">`Employee`</ph> object whose <ph id="ph5">`Name`</ph> field begins with "J", and the second time for the first <ph id="ph6">`Employee`</ph> object whose <ph id="ph7">`Name`</ph> field begins with "Ju".</source>
          <target state="translated">Im Beispiel wird instanziiert einen <ph id="ph1">`List&lt;Employee&gt;`</ph> Objekt, fügt eine Anzahl von <ph id="ph2">`Employee`</ph> Objekten auf ihn, und ruft dann die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> Methode zum Durchsuchen der gesamten Auflistung, erstmalig für die erste zweimal <ph id="ph4">`Employee`</ph> Objekt, dessen <ph id="ph5">`Name`</ph> Feld beginnt mit "J", und das zweite Mal für das erste <ph id="ph6">`Employee`</ph> Objekt, dessen <ph id="ph7">`Name`</ph> Feld beginnt mit "Ju".</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from the specified index to the last element.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der vom angegebenen Index bis zum letzten Element reicht.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at <ph id="ph2">`startIndex`</ph> and ending at the last element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnenden durchsucht <ph id="ph2">`startIndex`</ph> beginnt und mit dem letzten Element.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate has the signature:</source>
          <target state="translated">Der Delegat hat die Signatur:</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements from <ph id="ph1">`startIndex`</ph> to the end of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl von Elementen aus <ph id="ph1">`startIndex`</ph> bis zum Ende der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The following example defines an <ph id="ph1">`Employee`</ph> class with two fields, <ph id="ph2">`Name`</ph> and <ph id="ph3">`Id`</ph>.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Employee`</ph> Klasse mit zwei Feldern <ph id="ph2">`Name`</ph> und <ph id="ph3">`Id`</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>It also defines an <ph id="ph1">`EmployeeSearch`</ph> class with a single method, <ph id="ph2">`StartsWith`</ph>, that indicates whether the <ph id="ph3">`Employee.Name`</ph> field starts with a specified substring that is supplied to the <ph id="ph4">`EmployeeSearch`</ph> class constructor.</source>
          <target state="translated">Er definiert außerdem eine <ph id="ph1">`EmployeeSearch`</ph> Klasse mit einer einzelnen Methode <ph id="ph2">`StartsWith`</ph>, Wert, der angibt, ob die <ph id="ph3">`Employee.Name`</ph> Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die <ph id="ph4">`EmployeeSearch`</ph> Klassenkonstruktor.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Note  the signature of this method</source>
          <target state="translated">Beachten Sie die Signatur dieser Methode</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>corresponds to the signature of the delegate that can be passed to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> method.</source>
          <target state="translated">entspricht der Signatur des Delegaten, die übergeben werden kann die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The example instantiates a <ph id="ph1">`List&lt;Employee&gt;`</ph> object, adds a number of <ph id="ph2">`Employee`</ph> objets to it, and then calls the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> method twice  to search the collection starting with its fifth member (that is, the member at index 4).</source>
          <target state="translated">Im Beispiel wird instanziiert einen <ph id="ph1">`List&lt;Employee&gt;`</ph> Objekt, fügt eine Anzahl von <ph id="ph2">`Employee`</ph> Objekten auf ihn, und ruft dann die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> Methode zweimal, um der Auflistung, beginnend mit der fünfte Element (d. h. das Element am Index 4) zu suchen.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The first time, it searches for the first <ph id="ph1">`Employee`</ph> object whose <ph id="ph2">`Name`</ph> field begins with "J"; the second time, it searches for the first <ph id="ph3">`Employee`</ph> object whose <ph id="ph4">`Name`</ph> field begins with "Ju".</source>
          <target state="translated">Erstmals ausführen, sucht das erste <ph id="ph1">`Employee`</ph> Objekt, dessen <ph id="ph2">`Name`</ph> Feld beginnt mit "J"; das zweite Mal sucht das erste <ph id="ph3">`Employee`</ph> Objekt, dessen <ph id="ph4">`Name`</ph> Feld beginnt mit "Ju".</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen umfasst.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at <ph id="ph2">`startIndex`</ph> and ending at <ph id="ph3">`startIndex`</ph> plus <ph id="ph4">`count`</ph> minus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnenden durchsucht <ph id="ph2">`startIndex`</ph> und endet bei <ph id="ph3">`startIndex`</ph> plus <ph id="ph4">`count`</ph> minus 1, wenn <ph id="ph5">`count`</ph> ist größer als 0.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate has the signature:</source>
          <target state="translated">Der Delegat hat die Signatur:</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The following example defines an <ph id="ph1">`Employee`</ph> class with two fields, <ph id="ph2">`Name`</ph> and <ph id="ph3">`Id`</ph>.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Employee`</ph> Klasse mit zwei Feldern <ph id="ph2">`Name`</ph> und <ph id="ph3">`Id`</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>It also defines an <ph id="ph1">`EmployeeSearch`</ph> class with a single method, <ph id="ph2">`StartsWith`</ph>, that indicates whether the <ph id="ph3">`Employee.Name`</ph> field starts with a specified substring that is supplied to the <ph id="ph4">`EmployeeSearch`</ph> class constructor.</source>
          <target state="translated">Er definiert außerdem eine <ph id="ph1">`EmployeeSearch`</ph> Klasse mit einer einzelnen Methode <ph id="ph2">`StartsWith`</ph>, Wert, der angibt, ob die <ph id="ph3">`Employee.Name`</ph> Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die <ph id="ph4">`EmployeeSearch`</ph> Klassenkonstruktor.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Note  the signature of this method</source>
          <target state="translated">Beachten Sie die Signatur dieser Methode</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>corresponds to the signature of the delegate that can be passed to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> method.</source>
          <target state="translated">entspricht der Signatur des Delegaten, die übergeben werden kann die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The example instantiates a <ph id="ph1">`List&lt;Employee&gt;`</ph> object, adds a number of <ph id="ph2">`Employee`</ph> objets to it, and then calls the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> method twice  to search the entire collection (that is, the members from index 0 to index <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> - 1).</source>
          <target state="translated">Im Beispiel wird instanziiert eine <ph id="ph1">`List&lt;Employee&gt;`</ph> Objekt, fügt eine Anzahl von <ph id="ph2">`Employee`</ph> Objekten auf ihn, und ruft dann die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29&gt;</ph> Methode zweimal, um die gesamte Auflistung suchen (d. h. die Elemente von Index 0 bis Index <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> - 1).</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The first time, it searches for the first <ph id="ph1">`Employee`</ph> object whose <ph id="ph2">`Name`</ph> field begins with "J"; the second time, it searches for the first <ph id="ph3">`Employee`</ph> object whose <ph id="ph4">`Name`</ph> field begins with "Ju".</source>
          <target state="translated">Erstmals ausführen, sucht das erste <ph id="ph1">`Employee`</ph> Objekt, dessen <ph id="ph2">`Name`</ph> Feld beginnt mit "J"; das zweite Mal sucht das erste <ph id="ph3">`Employee`</ph> Objekt, dessen <ph id="ph4">`Name`</ph> Feld beginnt mit "Ju".</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Abschnitt in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das letzte Vorkommen im gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Das letzte Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, moving backward in the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, starting with the last element and ending with the first element.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> -Delegaten rückwärts verschieben, der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, beginnend mit dem letzten Element und endend mit dem ersten Element.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Processing is stopped when a match is found.</source>
          <target state="translated">Die Verarbeitung wird beendet, wenn eine Übereinstimmung gefunden wird.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</source>
          <target state="translated">Wenn eine Liste mit Typen mit Werten zu suchen, stellen Sie sicher, dass der Standardwert für den Typ der Suche Prädikat nicht erfüllt.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</source>
          <target state="translated">Andernfalls besteht keine Möglichkeit zur Unterscheidung zwischen einer Standardeinstellung Wert gibt an, dass keine Übereinstimmung gefunden wurde und ein Listenelement, die zufällig zur der Standardwert für den Typ haben.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>If the default value satisfies the search predicate, use the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindLastIndex%2A&gt;</ph> method instead.</source>
          <target state="translated">Wenn der Standardwert der Search-Prädikat erfüllt, verwenden Sie die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindLastIndex%2A&gt;</ph> Methode stattdessen.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The following example demonstrates the find methods for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Suchen von Methoden für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The example for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class contains <ph id="ph2">`book`</ph> objects, of class <ph id="ph3">`Book`</ph>, using the data from the <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</source>
          <target state="translated">Im Beispiel für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse enthält <ph id="ph2">`book`</ph> Objekte der Klasse <ph id="ph3">`Book`</ph>, mit den Daten aus der <bpt id="p1">[</bpt>XML-Beispieldatei: Bücher (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The <ph id="ph1">`FillList`</ph> method in the example uses <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> to parse the values from the XML to property values of the <ph id="ph2">`book`</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`FillList`</ph> -Methode im Beispiel verwendet <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> analysiert die Werte aus der XML-Eigenschaftswerten von der <ph id="ph2">`book`</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>The following table describes the examples provided for the find methods.</source>
          <target state="translated">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds a book by an ID using the <ph id="ph1">`IDToFind`</ph> predicate delegate.</source>
          <target state="translated">Sucht nach einem Buch mithilfe einer ID der <ph id="ph1">`IDToFind`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Find all books that whose <ph id="ph1">`Genre`</ph> property is "Computer" using the <ph id="ph2">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Suchen Sie alle Bücher, deren <ph id="ph1">`Genre`</ph> Eigenschaft ist "Computer" mit der <ph id="ph2">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds the last book in the collection that has a publish date before 2001, using the <ph id="ph1">`PubBefore2001`</ph> predicate delegate.</source>
          <target state="translated">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der <ph id="ph1">`PubBefore2001`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds the index of first computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des ersten Computer Buch verwenden die <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds the index of the last computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des letzten Computer Buch mithilfe der <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds the index of first computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des ersten Computerbuchs in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source>Finds the index of last computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des letzten Computer Buch in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Sucht nach einem Element, das die durch ein angegebenes Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> oder einem Teil davon zurück.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens im gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> rückwärts beginnend mit dem letzten Element und endet mit dem ersten Element gesucht wird.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The following example demonstrates the find methods for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Suchen von Methoden für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The example for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class contains <ph id="ph2">`book`</ph> objects, of class <ph id="ph3">`Book`</ph>, using the data from the <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</source>
          <target state="translated">Im Beispiel für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse enthält <ph id="ph2">`book`</ph> Objekte der Klasse <ph id="ph3">`Book`</ph>, mit den Daten aus der <bpt id="p1">[</bpt>XML-Beispieldatei: Bücher (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The <ph id="ph1">`FillList`</ph> method in the example uses <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> to parse the values from the XML to property values of the <ph id="ph2">`book`</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`FillList`</ph> -Methode im Beispiel verwendet <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> analysiert die Werte aus der XML-Eigenschaftswerten von der <ph id="ph2">`book`</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>The following table describes the examples provided for the find methods.</source>
          <target state="translated">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds a book by an ID using the <ph id="ph1">`IDToFind`</ph> predicate delegate.</source>
          <target state="translated">Sucht nach einem Buch mithilfe einer ID der <ph id="ph1">`IDToFind`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Find all books that whose <ph id="ph1">`Genre`</ph> property is "Computer" using the <ph id="ph2">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Suchen Sie alle Bücher, deren <ph id="ph1">`Genre`</ph> Eigenschaft ist "Computer" mit der <ph id="ph2">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds the last book in the collection that has a publish date before 2001, using the <ph id="ph1">`PubBefore2001`</ph> predicate delegate.</source>
          <target state="translated">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der <ph id="ph1">`PubBefore2001`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds the index of first computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des ersten Computer Buch verwenden die <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds the index of the last computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des letzten Computer Buch mithilfe der <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds the index of first computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des ersten Computerbuchs in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source>Finds the index of last computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des letzten Computer Buch in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Der nullbasierte Startindex für die Rückwärtssuche.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from the first element to the specified index.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der vom ersten Element bis zum angegeben Index reicht.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at <ph id="ph2">`startIndex`</ph> and ending at the first element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist der gesuchte Rückwärtsrichtung <ph id="ph2">`startIndex`</ph> beginnt und mit dem ersten Element.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to <ph id="ph2">`startIndex`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, in denen <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente vom Anfang der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> auf <ph id="ph2">`startIndex`</ph>.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Der nullbasierte Startindex für die Rückwärtssuche.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der die angegebene Anzahl von Elementen umfasst und am angegebenen Index endet.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <ph id="ph1">&lt;paramref name="match" /&gt;</ph> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at <ph id="ph2">`startIndex`</ph> and ending at <ph id="ph3">`startIndex`</ph> minus <ph id="ph4">`count`</ph> plus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist der gesuchte Rückwärtsrichtung <ph id="ph2">`startIndex`</ph> und endet bei <ph id="ph3">`startIndex`</ph> minus <ph id="ph4">`count`</ph> plus 1, wenn <ph id="ph5">`count`</ph> ist größer als 0.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The following example demonstrates the find methods for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Suchen von Methoden für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The example for the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class contains <ph id="ph2">`book`</ph> objects, of class <ph id="ph3">`Book`</ph>, using the data from the <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</source>
          <target state="translated">Im Beispiel für die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse enthält <ph id="ph2">`book`</ph> Objekte der Klasse <ph id="ph3">`Book`</ph>, mit den Daten aus der <bpt id="p1">[</bpt>XML-Beispieldatei: Bücher (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f)</ept>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The <ph id="ph1">`FillList`</ph> method in the example uses <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> to parse the values from the XML to property values of the <ph id="ph2">`book`</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`FillList`</ph> -Methode im Beispiel verwendet <bpt id="p1">[</bpt>LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13)</ept> analysiert die Werte aus der XML-Eigenschaftswerten von der <ph id="ph2">`book`</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The following table describes the examples provided for the find methods.</source>
          <target state="translated">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds a book by an ID using the <ph id="ph1">`IDToFind`</ph> predicate delegate.</source>
          <target state="translated">Sucht nach einem Buch mithilfe einer ID der <ph id="ph1">`IDToFind`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Find all books that whose <ph id="ph1">`Genre`</ph> property is "Computer" using the <ph id="ph2">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Suchen Sie alle Bücher, deren <ph id="ph1">`Genre`</ph> Eigenschaft ist "Computer" mit der <ph id="ph2">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds the last book in the collection that has a publish date before 2001, using the <ph id="ph1">`PubBefore2001`</ph> predicate delegate.</source>
          <target state="translated">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der <ph id="ph1">`PubBefore2001`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>C# example uses an anonymous delegate.</source>
          <target state="translated">C#-Beispiel wird ein anonymes Delegaten verwendet.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds the index of first computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des ersten Computer Buch verwenden die <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds the index of the last computer book using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht den Index des letzten Computer Buch mithilfe der <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds the index of first computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des ersten Computerbuchs in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Finds the index of last computer book in the second half of the collection, using the <ph id="ph1">`FindComputer`</ph> predicate delegate.</source>
          <target state="translated">Sucht dem Index des letzten Computer Buch in der zweiten Hälfte der Auflistung mit den <ph id="ph1">`FindComputer`</ph> Prädikat Delegaten.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Abschnitt in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> delegate to perform on each element of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph>-Delegat, der für jedes Element von <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>Performs the specified action on each element of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Führt die angegebene Aktion für jedes Element der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> aus.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> is a delegate to a method that performs an action on the object passed to it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> ein Delegaten an eine Methode, die eine Aktion, für das Objekt ausführt übergeben wird.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Action%601&gt;</ph> delegate.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Action%601&gt;</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>Modifying the underlying collection in the body of the <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> delegate is not supported and causes undefined behavior.</source>
          <target state="translated">Ändern der zugrunde liegenden Auflistung im Hauptteil der <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> Delegat wird nicht unterstützt und nicht definiertes Verhalten.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> delegate to print the contents of a <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Action%601&gt;</ph> Delegaten zum Drucken des Inhalts von einem <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>In this example the <ph id="ph1">`Print`</ph> method is used to display the contents of the list to the console.</source>
          <target state="translated">In diesem Beispiel wird die <ph id="ph1">`Print`</ph> Methode wird verwendet, um den Inhalt der Liste auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>In addition to displaying the contents using the <ph id="ph1">`Print`</ph> method, the C# example demonstrates the use of  to display the results to the console.</source>
          <target state="translated">Zusätzlich zum Anzeigen des Inhalts mit der <ph id="ph1">`Print`</ph> -Methode, die C#-Beispiel veranschaulicht die Verwendung von zum Anzeigen der Ergebnisse an die Konsole.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <source>An element in the collection has been modified.</source>
          <target state="translated">Ein Element in der Auflistung wurde geändert.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1.Enumerator" /&gt;</ph> für die <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt bis <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Sie können <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Enumerator.Current%2A&gt;</ph> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The zero-based <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> index at which the range starts.</source>
          <target state="translated">Der nullbasierte <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>-Index, an dem der Bereich beginnt.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">Die Anzahl der Elemente im Bereich.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>Creates a shallow copy of a range of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine flache Kopie eines Bereichs von Elementen in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a range of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Eine flache Kopie eines Bereichs von Elementen in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</source>
          <target state="translated">Eine flache Kopie einer Auflistung von Verweistypen oder eine Teilmenge dieser Sammlung enthält nur die Verweise auf die Elemente der Auflistung.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The objects themselves are not copied.</source>
          <target state="translated">Die Objekte selbst werden nicht kopiert.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The references in the new list point to the same objects as the references in the original list.</source>
          <target state="translated">Zeigen Sie die Verweise in der neuen Liste auf die gleichen Objekte wie die Verweise in der ursprünglichen Liste.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</source>
          <target state="translated">Eine flache Kopie einer Auflistung von Werttypen oder eine Teilmenge dieser Sammlung enthält die Elemente der Auflistung.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>However, if the elements of the collection contain references to other objects, those objects are not copied.</source>
          <target state="translated">Wenn die Elemente der Auflistung Verweise auf andere Objekte enthalten, werden diese Objekte jedoch nicht kopiert.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</source>
          <target state="translated">Die Verweise in den Elementen der neuen Sammlung zeigen Sie auf die gleichen Objekte wie die Verweise in den Elementen der ursprünglichen Auflistung.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Im Gegensatz dazu eine tiefe Kopie einer Auflistung kopiert die Elemente aus, und alles, was durch die Elemente direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> method and other methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> -Methode und andere Methoden der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>At the end of the example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> method is used to get three items from the list, beginning with index location 2.</source>
          <target state="translated">Am Ende des Beispiels die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> Methode wird verwendet, um drei Elemente aus der Liste ab Indexposition 2 abgerufen.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> method is called on the resulting <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, creating an array of three elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> Methode wird aufgerufen, für die resultierende <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, erstellen ein Array von drei Elementen.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>The elements of the array are displayed.</source>
          <target state="translated">Die Elemente des Arrays werden angezeigt.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Bereich von Elementen in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Returns the zero-based index of the first occurrence of a value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or in a portion of it.</source>
          <target state="translated">Gibt den nullbasierten Index des ersten Vorkommens eines Werts in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> bzw. in einem Abschnitt davon zurück.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ggf. ersten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in der gesamten <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnend mit dem ersten Element und endet beim letzten Element durchsucht wird.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> method overload searches the list from the beginning, and finds the first occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> -methodenüberladung, sucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um den Anfang der Liste mit Indexposition 3 und bis zum Ende der Liste fortsetzen suchen, und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich mit zwei Einträgen, beginnend bei Indexposition zwei suchen; es gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (null) ist in einer leeren Liste gültig.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from the specified index to the last element.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from <ph id="ph3">&lt;paramref name="index" /&gt;</ph> to the last element, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> innerhalb des Bereichs von Elementen in der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, der sich von <ph id="ph3">&lt;paramref name="index" /&gt;</ph> bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at <ph id="ph2">`index`</ph> and ending at the last element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnenden durchsucht <ph id="ph2">`index`</ph> beginnt und mit dem letzten Element.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements from <ph id="ph1">`index`</ph> to the end of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl von Elementen aus <ph id="ph1">`index`</ph> bis zum Ende der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> method overload searches the list from the beginning, and finds the first occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> -methodenüberladung, sucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um den Anfang der Liste mit Indexposition 3 und bis zum Ende der Liste fortsetzen suchen, und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich mit zwei Einträgen, beginnend bei Indexposition zwei suchen; es gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (null) ist in einer leeren Liste gültig.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen enthält.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that starts at <ph id="ph3">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph4">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> innerhalb des Bereichs von Elementen in der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, der am <ph id="ph3">&lt;paramref name="index" /&gt;</ph> beginnt und <ph id="ph4">&lt;paramref name="count" /&gt;</ph> Anzahl von Elementen enthält, sofern gefunden, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched forward starting at <ph id="ph2">`index`</ph> and ending at <ph id="ph3">`index`</ph> plus <ph id="ph4">`count`</ph> minus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> vorwärts beginnenden durchsucht <ph id="ph2">`index`</ph> und endet bei <ph id="ph3">`index`</ph> plus <ph id="ph4">`count`</ph> minus 1, wenn <ph id="ph5">`count`</ph> ist größer als 0.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> method overload searches the list from the beginning, and finds the first occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%29&gt;</ph> -methodenüberladung, sucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um den Anfang der Liste mit Indexposition 3 und bis zum Ende der Liste fortsetzen suchen, und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich mit zwei Einträgen, beginnend bei Indexposition zwei suchen; es gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Abschnitt in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Das einzufügende Objekt.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Fügt am angegebenen Index ein Element in die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> bereits gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> wird von automatisch Neuzuordnen des internen Arrays erhöht und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`index`</ph> gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> wird am Ende hinzugefügt <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The following example demonstrates how to add, remove, and insert a simple business object in a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method, along with various other properties and methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> -Methode, zusammen mit verschiedenen Eigenschaften und Methoden der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>After the list is created, elements are added.</source>
          <target state="translated">Nachdem die Liste erstellt wurde, werden Elemente hinzugefügt.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert an item into the middle of the list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode wird verwendet, um ein Element in der Mitte der Liste eingefügt.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>The item inserted is a duplicate, which is later removed using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Das Element eingefügt ist ein Duplikat, die später entfernt wurde, mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem neue Elemente eingefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be inserted into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Die Sammlung, deren Elemente in die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> eingefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">Die Auflistung an sich kann nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein. Sie kann jedoch Elemente enthalten, die <ph id="ph2">&lt;see langword="null" /&gt;</ph> sind, wenn Typ <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> einen Referenztyp darstellt.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the elements of a collection into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Fügt die Elemente einer Auflistung am angegebenen Index in die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>If the new <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> (the current <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> plus the size of the collection) will be greater than <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Wenn die neue <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> (das aktuelle <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> plus die Größe der Auflistung) größer als <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> wird erhöht, indem automatisch Neuzuordnen des internen Arrays an die neuen Elemente und die vorhandene Elemente werden in das neue Array kopiert, bevor die neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>, the elements are added to the end of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`index`</ph> gleich <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>, werden die Elemente am Ende hinzugefügt <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The order of the elements in the collection is preserved in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Reihenfolge der Elemente in der Auflistung wird beibehalten, der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept><ph id="ph1"> * </ph><bpt id="p2">*</bpt>m<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is the number of elements to be added and <bpt id="p4">*</bpt>m<ept id="p4">*</ept> is <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept><ph id="ph1"> * </ph><bpt id="p2">*</bpt>m<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist die Anzahl der Elemente hinzugefügt werden und <bpt id="p4">*</bpt>m<ept id="p4">*</ept> ist <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.InsertRange%2A&gt;</ph> method and various other methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.InsertRange%2A&gt;</ph> -Methode und verschiedene andere Methoden, die von der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.InsertRange%2A&gt;</ph> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</source>
          <target state="translated">Nachdem die Liste erstellt und aufgefüllt, die mit den Namen der mehrere friedlichen Werk Essen Dinosaurier, wurde die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.InsertRange%2A&gt;</ph> Methode wird verwendet, um ein Array von drei ertragreiche Fleisch Essen Dinosaurier fügen Sie der Liste am Index 3 ab.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Ruft das Element am angegebenen Index ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Das Element am angegebenen Index.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als ein gültiger Wert für Referenztypen und doppelte Elemente lässt.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist auch ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>The example in this section demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property (the indexer in C#) and various other properties and methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class.</source>
          <target state="translated">Im Beispiel in diesem Abschnitt wird veranschaulicht, die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#) und verschiedene andere Eigenschaften und Methoden der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>After the list has been created and populated using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> method, an element is retrieved and displayed using the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">Nachdem die Liste wurde erstellt und gefüllt, mit der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A&gt;</ph> -Methode, ein Element abgerufen und angezeigt, mit der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>(For an example that uses the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property to set the value of a list element, see <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph>.)</source>
          <target state="translated">(Ein Beispiel, verwendet der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> -Eigenschaft zum Festlegen des Werts eines Elements Liste finden Sie unter <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.AsReadOnly%2A&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>Visual Basic, C#, and C++ all have syntax for accessing the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property without using its name.</source>
          <target state="translated">Visual Basic, c# und in C++ haben Sie die Syntax für den Zugriff auf die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> Eigenschaft ohne Verwendung des Namens.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>Instead, the variable containing the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is used as if it were an array.</source>
          <target state="translated">Stattdessen die Variable mit dem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> wird verwendet, als handele es sich um ein Array.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Returns the zero-based index of the last occurrence of a value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or in a portion of it.</source>
          <target state="translated">Gibt den nullbasierten Index des letzten Vorkommens eines Werts in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> bzw. in einem Abschnitt davon zurück.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des ggf. letzten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> in der gesamten <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> rückwärts beginnend mit dem letzten Element und endet mit dem ersten Element gesucht wird.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> method overload searches the entire list from the end, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> methodenüberladung durchsucht die gesamte Liste vom Ende aus und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um die Suchliste rückwärts Indexposition 3 beginnt und am Anfang der Liste fortsetzen, damit das erste Vorkommen der Zeichenfolge in der Liste gefunden.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich von vier Einträge, beginnend bei Indexposition 4 und rückwärts erweitern suchen (d. h. er sucht die Elemente an Stellen 4, 3, 2 und 1); diese Suche wird – 1 zurückgegeben, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Der nullbasierte Startindex für die Rückwärtssuche.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from the first element to the specified index.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that extends from the first element to <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des letzten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> innerhalb des Bereichs von Elementen in der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, der sich vom ersten Element bis <ph id="ph3">&lt;paramref name="index" /&gt;</ph> erstreckt, sofern gefunden, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at <ph id="ph2">`index`</ph> and ending at the first element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist der gesuchte Rückwärtsrichtung <ph id="ph2">`index`</ph> beginnt und mit dem ersten Element.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the number of elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to <ph id="ph2">`index`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, in denen <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist die Anzahl der Elemente vom Anfang der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> auf <ph id="ph2">`index`</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> method overload searches the entire list from the end, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> methodenüberladung durchsucht die gesamte Liste vom Ende aus und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um die Suchliste rückwärts Indexposition 3 beginnt und am Anfang der Liste fortsetzen, damit das erste Vorkommen der Zeichenfolge in der Liste gefunden.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich von vier Einträge, beginnend bei Indexposition 4 und rückwärts erweitern suchen (d. h. er sucht die Elemente an Stellen 4, 3, 2 und 1); diese Suche wird – 1 zurückgegeben, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Der nullbasierte Startindex für die Rückwärtssuche.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that contains <ph id="ph3">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph4">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Der nullbasierte Index des letzten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> innerhalb des Bereichs von Elementen in der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, der <ph id="ph3">&lt;paramref name="count" /&gt;</ph> Anzahl von Elementen enthält und am <ph id="ph4">&lt;paramref name="index" /&gt;</ph> endet, sofern gefunden, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is searched backward starting at <ph id="ph2">`index`</ph> and ending at <ph id="ph3">`index`</ph> minus <ph id="ph4">`count`</ph> plus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> ist der gesuchte Rückwärtsrichtung <ph id="ph2">`index`</ph> und endet bei <ph id="ph3">`index`</ph> minus <ph id="ph4">`count`</ph> plus 1, wenn <ph id="ph5">`count`</ph> ist größer als 0.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">`count`</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The following example demonstrates all three overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt alle drei Überladungen, der die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen wird erstellt, mit einem Eintrag, der zur Indexposition 0 und Indexposition 5 zweimal angezeigt.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> method overload searches the entire list from the end, and finds the second occurrence of the string.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29&gt;</ph> methodenüberladung durchsucht die gesamte Liste vom Ende aus und sucht das zweite Vorkommen der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um die Suchliste rückwärts Indexposition 3 beginnt und am Anfang der Liste fortsetzen, damit das erste Vorkommen der Zeichenfolge in der Liste gefunden.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um einen Bereich von 4 Einträge, beginnend bei Indexposition 4 und rückwärts erweitern suchen (d. h. er sucht die Elemente an Stellen 4, 3, 2 und 1); diese Suche wird – 1 zurückgegeben, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Abschnitt in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Das aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> zu entfernende Objekt.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;paramref name="item" /&gt;</ph> erfolgreich entfernt wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt auch dann <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn das <ph id="ph2">&lt;paramref name="item" /&gt;</ph> nicht in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gefunden wurde.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>If type <ph id="ph1">`T`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generic interface, the equality comparer is the <ph id="ph3">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method of that interface; otherwise, the default equality comparer is <ph id="ph4">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert die <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> generische Schnittstellen, die der Gleichheitsvergleich ist die <ph id="ph3">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> -Methode dieser Schnittstelle; andernfalls der Standardgleichheitsvergleich ist <ph id="ph4">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The following example demonstrates how to add, remove, and insert a simple business object in a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel zeigt <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>Several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class are used to add, insert, and search the list.</source>
          <target state="translated">Mehrere Eigenschaften und Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generische Klasse hinzufügen, einfügen und suchen Sie in der Liste verwendet werden.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>After these operations, the list contains a duplicate.</source>
          <target state="translated">Nachdem diese Vorgänge enthält die Liste ein Duplikat.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method is used to remove the first instance of the duplicate item, and the contents are displayed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> Methode wird verwendet, um die erste Instanz des doppelten Elements entfernt, und der Inhalt wird angezeigt.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> method always removes the first instance it encounters.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Remove%2A&gt;</ph> -Methode immer die erste gefundene Instanz entfernt.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen für die Elemente definiert, die entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Entfernt alle Elemente, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The number of elements removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> .</source>
          <target state="translated">Die Anzahl der aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> entfernten Elemente.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, and the elements that match the conditions are removed from the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> werden einzeln an übergeben der <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> Delegaten und Elemente, die Bedingungen erfüllen, aus entfernt die <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> method and several other methods that use the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generic delegate.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> -Methode und andere Methoden verwenden, die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generischen Delegaten.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt wird, 8, Dinosauriernamen enthält, von denen zwei (an Position 1 und 5) mit "Saurus" enden.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The example also defines a search predicate method named <ph id="ph1">`EndsWithSaurus`</ph>, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</source>
          <target state="translated">Im Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen <ph id="ph1">`EndsWithSaurus`</ph>, der einen Zeichenfolgenparameter akzeptiert und einen booleschen Wert zurückgibt, der angibt, ob die Eingabezeichenfolge "Saurus" endet.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.FindLast%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindAll%2A&gt;</ph> methods are used to search the list with the search predicate method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Find%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.FindLast%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.FindAll%2A&gt;</ph> Methoden werden verwendet, um die Liste der mit dem Prädikat Suchmethode durchsuchen.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> method is used to remove all entries ending with "saurus".</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAll%2A&gt;</ph> Methode wird verwendet, um alle Einträge mit "Saurus" entfernt.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>It traverses the list from the beginning, passing each element in turn to the <ph id="ph1">`EndsWithSaurus`</ph> method.</source>
          <target state="translated">Es durchläuft die Liste von Anfang an und übergibt die einzelnen Elemente an die <ph id="ph1">`EndsWithSaurus`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>The element is removed if the <ph id="ph1">`EndsWithSaurus`</ph> method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Das Element wird entfernt, wenn die <ph id="ph1">`EndsWithSaurus`</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>In C# and Visual Basic, it is not necessary to create the <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegate (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explicitly.</source>
          <target state="translated">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegieren (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explizit.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>These languages infer the correct delegate from context, and create it automatically.</source>
          <target state="translated">Diese Sprachen leiten den richtigen Delegaten aus Kontext und automatisch zu erstellen.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> method verifies that there are no strings in the list that end with "saurus".</source>
          <target state="translated">Schließlich die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Exists%2A&gt;</ph> Methode überprüft, dass es keine Zeichenfolgen in der Liste, die mit "Saurus" enden.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Der nullbasierte Index des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Element am angegebenen Index aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>When you call <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAt%2A&gt;</ph> to remove an item, the remaining items in the list are renumbered to replace the removed item.</source>
          <target state="translated">Beim Aufruf <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveAt%2A&gt;</ph> um ein Element zu entfernen, werden die verbleibenden Elemente in der Liste um das entfernte Element ersetzen neu nummeriert.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</source>
          <target state="translated">Wenn Sie das Element am Index 3 entfernen, wird das Element am Index 4 an Position 3 verschoben.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>In addition, the number of items in the list (as represented by the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> property) is reduced by 1.</source>
          <target state="translated">Darüber hinaus die Anzahl der Elemente in der Liste (dargestellt durch die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaft) wird um 1 verringert.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is (<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">`index`</ph>).</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist (<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">`index`</ph>).</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>The following example demonstrates how to add, remove, and insert a simple business object in a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich <ph id="ph2">&lt;see cref="P:System.Collections.Generic.List`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">Der nullbasierte Startindex des zu entfernenden Bereichs von Elementen.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">Die Anzahl der zu entfernenden Elemente.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt einen Bereich von Elementen aus der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>The items are removed and all the elements following them in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> have their indexes reduced by <ph id="ph2">`count`</ph>.</source>
          <target state="translated">Die Elemente entfernt werden und die Elemente, die für die folgenden Elemente in der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> die Indizes endhost <ph id="ph2">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveRange%2A&gt;</ph> method and various other methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveRange%2A&gt;</ph> -Methode und die verschiedenen Methoden des der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>After the list has been created and modified, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveRange%2A&gt;</ph> method is used to remove two elements from the list, beginning at index location 2.</source>
          <target state="translated">Nachdem die Liste erstellt und geändert haben, wurde die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.RemoveRange%2A&gt;</ph> Methode wird verwendet, um zwei Elemente aus der Liste, beginnend am Index 2 zu entfernen.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Bereich von Elementen in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Reverses the order of the elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Kehrt die Reihenfolge der Elemente in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> bzw. in einem Teil davon um.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>Reverses the order of the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Kehrt die Reihenfolge der Elemente in der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> to reverse the order of the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> um die Reihenfolge der Elemente umzukehren.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>The following example demonstrates both overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht beide Überladungen der der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds six strings.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeigern auf Zeichenfolgen und sechs Zeichenfolgen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse&gt;</ph> method overload is used to reverse the list, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse&gt;</ph> methodenüberladung wird verwendet, um die Liste umkehren und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um die Mitte der Liste, beginnend mit 1 Element und umfasst vier Elemente umkehren.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">Der nullbasierte Startindex des Bereichs, in dem die Reihenfolge umgekehrt werden soll.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">Die Anzahl der Elemente im Bereich, in dem die Reihenfolge umgekehrt werden soll.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range.</source>
          <target state="translated">Kehrt die Reihenfolge der Elemente im angegebenen Bereich um.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> to reverse the order of the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> um die Reihenfolge der Elemente umzukehren.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>The following example demonstrates both overloads of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht beide Überladungen der der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds six strings.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeigern auf Zeichenfolgen und sechs Zeichenfolgen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse&gt;</ph> method overload is used to reverse the list, and then the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29&gt;</ph> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Reverse&gt;</ph> methodenüberladung wird verwendet, um die Liste umkehren und dann die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29&gt;</ph> methodenüberladung wird verwendet, um die Mitte der Liste, beginnend mit 1 Element und umfasst vier Elemente umkehren.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Bereich von Elementen in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.List`1">
          <source>Sorts the elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Sortiert die Elemente in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> bzw. in einem Teil davon.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Overloaded method syntax</source>
          <target state="translated">Überladene Methodensyntax</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The  <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> methods enable you to sort with the default comparer for the object type in the list, or specify a customer sort method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methoden ermöglichen es Ihnen, mit der Standardvergleich für den Objekttyp in der Liste zu sortieren, oder geben Sie eine Kunden-Sort-Methode.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">\&lt;</ph>T&gt;.Sort()<ept id="p1">](xref:System.Collections.Generic.List`1.Sort*)</ept> Sorts the elements in the entire list using the default comparer of the object type held in the list.</source>
          <target state="translated"><bpt id="p1">[</bpt>Liste<ph id="ph1">\&lt;</ph>T &gt;. Sort()<ept id="p1">](xref:System.Collections.Generic.List`1.Sort*)</ept> sortiert die Elemente in der gesamten Liste mithilfe des Standardcomparers des Objekttyps frei, die in der Liste.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">\&lt;</ph>T&gt;.Sort M(Comparison<ph id="ph2">\&lt;</ph>T&gt; comparison)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29)</ept> Sorts the elements in the entire list using the specified comparer.</source>
          <target state="translated"><bpt id="p1">[</bpt>Liste<ph id="ph1">\&lt;</ph>T &gt;. Sortieren M (Vergleich<ph id="ph2">\&lt;</ph>T &gt; Vergleich)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29)</ept> sortiert die Elemente in der gesamten Liste mithilfe des angegebenen Comparers.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">\&lt;</ph>T&gt;.Sort(IComparer<ph id="ph2">\&lt;</ph>T&gt; comparer)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29)</ept> Sorts the elements in the entire list using the specified <ph id="ph3">&lt;xref:System.Comparison%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Liste<ph id="ph1">\&lt;</ph>T &gt;. Sortierung (IComparer<ph id="ph2">\&lt;</ph>T &gt; Comparer)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29)</ept> sortiert die Elemente in der gesamten Liste unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Comparison%601?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">\&lt;</ph>T&gt;.Sort(Int32 index, Int32 count, IComparer<ph id="ph2">\&lt;</ph>T&gt; comparer)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29)</ept> Sorts the elements in a range of elements in list using the specified comparer.</source>
          <target state="translated"><bpt id="p1">[</bpt>Liste<ph id="ph1">\&lt;</ph>T &gt;. Sortierung (Int32-Index, Int32-Anzahl IComparer<ph id="ph2">\&lt;</ph>T &gt; Comparer)<ept id="p1">](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29)</ept> sortiert die Elemente in einem Bereich von Elementen in der Liste mithilfe des angegebenen Comparers.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Parameters</source>
          <target state="translated">Parameter</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Parameter</source>
          <target state="translated">Parameter</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Type</source>
          <target state="translated">Typ</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The delegate method to use when comparing elements</source>
          <target state="translated">Die Delegatmethode, verwenden Sie beim Vergleichen von Elementen</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>comparer</source>
          <target state="translated">comparer</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use when comparing elements, or null to use the default comparer <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Implementierung, die beim Vergleichen von Elementen verwenden, oder null, um die Verwendung des Standardcomparers <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">Der nullbasierte Startindex des zu sortierenden Bereichs.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The length of the range to sort.</source>
          <target state="translated">Die Länge des zu sortierenden Bereichs.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Exceptions</source>
          <target state="translated">Ausnahmen</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Exception</source>
          <target state="translated">Ausnahme</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>Condition</source>
          <target state="translated">Bedingung</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><ph id="ph1">`comparer`</ph> is not specified or <ph id="ph2">`null`</ph>, and the default comparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> cannot find implementation of the <ph id="ph4">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface or the <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface for type T.</source>
          <target state="translated"><ph id="ph1">`comparer`</ph> nicht angegeben oder <ph id="ph2">`null`</ph>, und der Standardcomparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> Implementierung kann nicht gefunden werden. die <ph id="ph4">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generische Schnittstelle oder die <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> -Schnittstelle für den Typ t</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><ph id="ph1">`comparison`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`comparison`</ph> ist <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>The implementation of <ph id="ph1">`comparison`</ph> or <ph id="ph2">`comparer`</ph> caused an error during the sort.</source>
          <target state="translated">Die Implementierung der <ph id="ph1">`comparison`</ph> oder <ph id="ph2">`comparer`</ph> hat einen Fehler während der Sortierung verursacht.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>For example, <ph id="ph1">`comparison`</ph> might not return 0 when comparing an item with itself.</source>
          <target state="translated">Beispielsweise gibt <ph id="ph1">`comparison`</ph> beim Vergleichen eines Elements mit sich selbst möglicherweise nicht 0 zurück.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> do not specify a valid range in the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`index`</ph> und <ph id="ph2">`count`</ph> geben keinen gültigen Bereich in der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.List`1">
          <source><ph id="ph1">`index`</ph> is less than 0 or <ph id="ph2">`count`</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">`index`</ph> ist kleiner als 0 oder <ph id="ph2">`count`</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort">
          <source>Sorts the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> using the default comparer.</source>
          <target state="translated">Sortiert die Elemente in der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> mithilfe des Standardcomparers.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>This method uses the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for type <ph id="ph2">`T`</ph> to determine the order of list elements.</source>
          <target state="translated">Diese Methode verwendet die standardmäßige Vergleichsfunktion <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für Typ <ph id="ph2">`T`</ph> bestimmt die Reihenfolge der Listenelemente.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> method, which applies the introspective sort as follows:</source>
          <target state="translated">Diese Methode verwendet die <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> -Methode, die die introspective Sortierreihenfolge wie folgt angewendet:</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</source>
          <target state="translated">Wenn die Größe der Partition Elemente weniger als 16 ist, wird eine Einfügung Sortieralgorithmus verwendet.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>If the number of partitions exceeds 2 log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the range of the input array, it uses a Heapsort algorithm.</source>
          <target state="translated">Wenn die Anzahl der Partitionen 2 Protokoll überschreitet <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist der Bereich des Eingabearrays, verwendet es einen Heapsort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>Otherwise, it uses a Quicksort algorithm.</source>
          <target state="translated">Andernfalls verwendet es einen Quicksort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Diese Implementierung führt eine instabile Sortierung. Das heißt, wenn zwei Elemente gleich sind, kann deren Reihenfolge nicht beibehalten werden.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Im Gegensatz dazu behält eine stabile Sortierung die Reihenfolge der Elemente, die gleich sind.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>On average, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept> log <bpt id="p2">*</bpt>n<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; in the worst case it is an O(<bpt id="p4">*</bpt>n<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) operation.</source>
          <target state="translated">Im Durchschnitt ist diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept> Protokoll <bpt id="p2">*</bpt>n<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; im schlimmsten Fall ist es eine O (<bpt id="p4">*</bpt>n<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) Vorgang.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The following example adds some names to a <ph id="ph1">`List&lt;String&gt;`</ph> object, displays the list in unsorted order, calls the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method, and then displays the sorted list.</source>
          <target state="translated">Im folgenden Beispiel wird einige Objektnamen eine <ph id="ph1">`List&lt;String&gt;`</ph> -Objekt, zeigt die Liste in unsortierter Reihenfolge ruft der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> -Methode, und zeigt dann die sortierte Liste.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The following code demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> method overloads on a simple business object.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> Überladungen der Methode für ein einfaches Geschäftsobjekt.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>Calling the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> method results in the use of the default comparer for the Part type, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> method is implemented by using an anonymous method.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> Methode führt die Verwendung der Standardvergleich für den Typ des Teils, und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> Methode mit einer anonymen Methode implementiert wird.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with four strings, in no particular order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, ohne bestimmte Reihenfolge gefüllt ist.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The list is displayed, sorted, and displayed again.</source>
          <target state="translated">Die Liste wird angezeigt, sortiert und erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> method overload is then used to search for two strings that are not in the list, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert them.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%29&gt;</ph> methodenüberladung wird dann verwendet, um zwei Zeichenfolgen zu suchen, die nicht in der Liste enthalten sind und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode dient zum Einfügen.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The return value of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> method is negative in each case, because the strings are not in the list.</source>
          <target state="translated">Der Rückgabewert der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%2A&gt;</ph> Methode ist in jedem Fall negativ, da die Zeichenfolgen nicht in der Liste enthalten sind.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>Taking the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph1">`Xor`</ph> -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</source>
          <target state="translated">Dem bitweisen Komplement (der ~-Operator in c# und Visual C++ <ph id="ph1">`Xor`</ph> -1 in Visual Basic) dieses negative Zahl wird der Index des ersten Elements in der Liste, die größer als die Suchzeichenfolge und Einfügen an dieser Stelle ist beibehalten sortieren Reihenfolge.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The second search string is larger than any element in the list, so the insertion position is at the end of the list.</source>
          <target state="translated">Die zweite Suchzeichenfolge ist größer als ein Element in der Liste, daher ist die Position der Einfügemarke am Ende der Liste.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort">
          <source>The default comparer <ph id="ph1">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find an implementation of the <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph4">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Der Standardvergleich <ph id="ph1">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann keine Implementierung der generischen <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für Typ <ph id="ph4">&lt;paramref name="T" /&gt;</ph> finden.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing elements, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der Standardvergleich <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">Sortiert die Elemente in der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> mithilfe des angegebenen Comparers.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are sorted using the specified <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> angegeben wird, werden die Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> sortiert sind, unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the default comparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph4">`T`</ph> implements the <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> ist <ph id="ph2">`null`</ph>, die standardmäßige Vergleichsfunktion <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph4">`T`</ph> implementiert die <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> method, which applies the introspective sort as follows:</source>
          <target state="translated">Diese Methode verwendet die <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> -Methode, die die introspective Sortierreihenfolge wie folgt angewendet:</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</source>
          <target state="translated">Wenn die Größe der Partition Elemente weniger als 16 ist, wird eine Einfügung Sortieralgorithmus verwendet.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>If the number of partitions exceeds 2 log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the range of the input array, it uses a Heapsort algorithm.</source>
          <target state="translated">Wenn die Anzahl der Partitionen 2 Protokoll überschreitet <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist der Bereich des Eingabearrays, verwendet es einen Heapsort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Otherwise, it uses a Quicksort algorithm.</source>
          <target state="translated">Andernfalls verwendet es einen Quicksort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Diese Implementierung führt eine instabile Sortierung. Das heißt, wenn zwei Elemente gleich sind, kann deren Reihenfolge nicht beibehalten werden.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Im Gegensatz dazu behält eine stabile Sortierung die Reihenfolge der Elemente, die gleich sind.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>On average, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept> log <bpt id="p2">*</bpt>n<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; in the worst case it is an O(<bpt id="p4">*</bpt>n<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) operation.</source>
          <target state="translated">Im Durchschnitt ist diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept> Protokoll <bpt id="p2">*</bpt>n<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; im schlimmsten Fall ist es eine O (<bpt id="p4">*</bpt>n<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) Vorgang.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The example defines an alternative comparer for strings named DinoCompare, which implements the <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic, <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generic interface.</source>
          <target state="translated">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The comparer works as follows: First, the comparands are tested for <ph id="ph1">`null`</ph>, and a null reference is treated as less than a non-null.</source>
          <target state="translated">Der Vergleich funktioniert wie folgt: zunächst der verglichenen Elemente getestet werden <ph id="ph1">`null`</ph>, und ein null-Verweis als kleiner als ein Wert ungleich Null behandelt wird.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Second, the string lengths are compared, and the longer string is deemed to be greater.</source>
          <target state="translated">Zweitens die Zeichenfolgenlängen verglichen werden, und die Zeichenfolge längere ist als größer werden.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Third, if the lengths are equal, ordinary string comparison is used.</source>
          <target state="translated">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with four strings, in no particular order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, ohne bestimmte Reihenfolge gefüllt ist.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The list is displayed, sorted using the alternate comparer, and displayed again.</source>
          <target state="translated">Die Liste ist, mit dem alternativen Vergleich sortiert und angezeigten erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung wird dann verwendet, um mehrere Zeichenfolgen zu suchen, die nicht in der Liste den alternativen Vergleich eingefügt werden.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> method is used to insert the strings.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Insert%2A&gt;</ph> Methode verwendet, um die Zeichenfolgen einzufügen.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>These two methods are located in the function named <ph id="ph1">`SearchAndInsert`</ph>, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph2">`Xor`</ph> -1 in Visual Basic) of the negative number returned by <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> and use it as an index for inserting the new string.</source>
          <target state="translated">Diese beiden Methoden befinden sich in der Funktion mit dem Namen <ph id="ph1">`SearchAndInsert`</ph>, zusammen mit Code, das bitweise Komplement (der ~-Operator in c# und Visual C++ <ph id="ph2">`Xor`</ph> -1 in Visual Basic) für die zurückgegebene negative Zahl <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> und verwenden es als ein Index für Einfügen der neuen Zeichenfolge an.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find implementation of the <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph6">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und der Standardcomparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann die Implementierung der generischen <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für den Typ <ph id="ph6">&lt;paramref name="T" /&gt;</ph> nicht finden.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The implementation of <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> caused an error during the sort.</source>
          <target state="translated">Die Implementierung von <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> hat einen Fehler während der Sortierung verursacht.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <source>For example, <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> might not return 0 when comparing an item with itself.</source>
          <target state="translated">Beispielsweise gibt <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> beim Vergleichen eines Elements mit sich selbst möglicherweise nicht 0 zurück.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Comparison`1" /&gt;</ph> to use when comparing elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Comparison`1" /&gt;</ph>, die beim Vergleich von Elementen verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>Sorts the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Comparison`1" /&gt;</ph>.</source>
          <target state="translated">Sortiert die Elemente in der gesamten <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> mithilfe des angegebenen <ph id="ph2">&lt;see cref="T:System.Comparison`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>If <ph id="ph1">`comparison`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are sorted using the method represented by the delegate.</source>
          <target state="translated">Wenn <ph id="ph1">`comparison`</ph> angegeben wird, werden die Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> mithilfe der durch den Delegaten dargestellten Methode sortiert sind.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>If <ph id="ph1">`comparison`</ph> is <ph id="ph2">`null`</ph>, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">`comparison`</ph> ist <ph id="ph2">`null`</ph>, wird eine <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, which applies the introspective sort as follows:</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, den gilt der introspective Sortierreihenfolge wie folgt:</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</source>
          <target state="translated">Wenn die Partitionsgröße Elemente weniger als 16 ist, verwendet einen Sortieralgorithmus einfügen</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>If the number of partitions exceeds 2 log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the range of the input array, it uses a <bpt id="p3">[</bpt>Heapsort<ept id="p3">](http://en.wikipedia.org/wiki/Heapsort)</ept> algorithm.</source>
          <target state="translated">Überschreitet die Anzahl der Partitionen 2 Protokoll <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist der Bereich des Eingabearrays, verwendet er eine <bpt id="p3">[</bpt>Heapsort<ept id="p3">](http://en.wikipedia.org/wiki/Heapsort)</ept> Algorithmus.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>Otherwise, it uses a Quicksort algorithm.</source>
          <target state="translated">Andernfalls verwendet es einen Quicksort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Diese Implementierung führt eine instabile Sortierung. Das heißt, wenn zwei Elemente gleich sind, kann deren Reihenfolge nicht beibehalten werden.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Im Gegensatz dazu behält eine stabile Sortierung die Reihenfolge der Elemente, die gleich sind.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>On average, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept> log <bpt id="p2">*</bpt>n<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; in the worst case it is an O(<bpt id="p4">*</bpt>n<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) operation.</source>
          <target state="translated">Im Durchschnitt ist diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept> Protokoll <bpt id="p2">*</bpt>n<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; im schlimmsten Fall ist es eine O (<bpt id="p4">*</bpt>n<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) Vorgang.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The following code demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method overloads on a simple business object.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Überladungen der Methode für ein einfaches Geschäftsobjekt.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method results in the use of the default comparer for the Part type, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method is implemented using an anonymous method.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methode führt die Verwendung der Standardvergleich für den Typ des Teils, und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> Methode wird mit einer anonymen Methode implementiert.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29&gt;</ph> -methodenüberladung.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The example defines an alternative comparison method for strings, named <ph id="ph1">`CompareDinosByLength`</ph>.</source>
          <target state="translated">Im Beispiel definiert eine alternative Vergleichsmethode für Zeichenfolgen, die mit dem Namen <ph id="ph1">`CompareDinosByLength`</ph>.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>This method works as follows: First, the comparands are tested for <ph id="ph1">`null`</ph>, and a null reference is treated as less than a non-null.</source>
          <target state="translated">Diese Methode funktioniert wie folgt: zunächst der verglichenen Elemente getestet werden <ph id="ph1">`null`</ph>, und ein null-Verweis als kleiner als ein Wert ungleich Null behandelt wird.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>Second, the string lengths are compared, and the longer string is deemed to be greater.</source>
          <target state="translated">Zweitens die Zeichenfolgenlängen verglichen werden, und die Zeichenfolge längere ist als größer werden.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>Third, if the lengths are equal, ordinary string comparison is used.</source>
          <target state="translated">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with four strings, in no particular order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, ohne bestimmte Reihenfolge gefüllt ist.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The list also includes an empty string and a null reference.</source>
          <target state="translated">Die Liste enthält auch eine leere Zeichenfolge und ein null-Verweis.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The list is displayed, sorted using a <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> generic delegate representing the <ph id="ph2">`CompareDinosByLength`</ph> method, and displayed again.</source>
          <target state="translated">Die Liste wird angezeigt, sortiert, mit einem <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> generischer Delegat darstellt der <ph id="ph2">`CompareDinosByLength`</ph> -Methode, und erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source><ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>The implementation of <ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> caused an error during the sort.</source>
          <target state="translated">Die Implementierung von <ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> hat einen Fehler während der Sortierung verursacht.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <source>For example, <ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> might not return 0 when comparing an item with itself.</source>
          <target state="translated">Beispielsweise gibt <ph id="ph1">&lt;paramref name="comparison" /&gt;</ph> beim Vergleichen eines Elements mit sich selbst möglicherweise nicht 0 zurück.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">Der nullbasierte Startindex des zu sortierenden Bereichs.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to sort.</source>
          <target state="translated">Die Länge des zu sortierenden Bereichs.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing elements, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der Standardvergleich <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in a range of elements in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">Sortiert die Elemente in einem Bereich von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> mithilfe des angegebenen Vergleichs.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are sorted using the specified <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> angegeben wird, werden die Elemente der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> sortiert sind, unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the default comparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph4">`T`</ph> implements the <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generic interface and uses that implementation, if available.</source>
          <target state="translated">Wenn <ph id="ph1">`comparer`</ph> ist <ph id="ph2">`null`</ph>, die standardmäßige Vergleichsfunktion <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph4">`T`</ph> implementiert die <ph id="ph5">&lt;xref:System.IComparable%601&gt;</ph> generische Schnittstelle und, dass diese Implementierung verwendet, sofern verfügbar.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Wenn dies nicht der Fall ist, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> überprüft, ob der Typ <ph id="ph2">`T`</ph> implementiert die <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn Typ <ph id="ph1">`T`</ph> implementiert nicht die beiden Schnittstellen <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, which applies the introspective sort as follows:</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, den gilt der introspective Sortierreihenfolge wie folgt:</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</source>
          <target state="translated">Wenn die Partitionsgröße Elemente weniger als 16 ist, verwendet einen Sortieralgorithmus einfügen</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If the number of partitions exceeds 2 log <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the range of the input array, it uses a <bpt id="p3">[</bpt>Heapsort<ept id="p3">](http://en.wikipedia.org/wiki/Heapsort)</ept> algorithm.</source>
          <target state="translated">Überschreitet die Anzahl der Partitionen 2 Protokoll <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist der Bereich des Eingabearrays, verwendet er eine <bpt id="p3">[</bpt>Heapsort<ept id="p3">](http://en.wikipedia.org/wiki/Heapsort)</ept> Algorithmus.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Otherwise, it uses a Quicksort algorithm.</source>
          <target state="translated">Andernfalls verwendet es einen Quicksort-Algorithmus.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Diese Implementierung führt eine instabile Sortierung. Das heißt, wenn zwei Elemente gleich sind, kann deren Reihenfolge nicht beibehalten werden.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Im Gegensatz dazu behält eine stabile Sortierung die Reihenfolge der Elemente, die gleich sind.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>On average, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept> log <bpt id="p2">*</bpt>n<ept id="p2">*</ept>) operation, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; in the worst case it is an O(<bpt id="p4">*</bpt>n<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) operation.</source>
          <target state="translated">Im Durchschnitt ist diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept> Protokoll <bpt id="p2">*</bpt>n<ept id="p2">*</ept>)-Vorgang, in dem <bpt id="p3">*</bpt>n<ept id="p3">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>; im schlimmsten Fall ist es eine O (<bpt id="p4">*</bpt>n<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept>) Vorgang.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> -methodenüberladung und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The example defines an alternative comparer for strings named DinoCompare, which implements the <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic, <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generic interface.</source>
          <target state="translated">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die <ph id="ph1">`IComparer&lt;string&gt;`</ph> (<ph id="ph2">`IComparer(Of String)`</ph> in Visual Basic <ph id="ph3">`IComparer&lt;String^&gt;`</ph> in Visual C++) generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The comparer works as follows: First, the comparands are tested for <ph id="ph1">`null`</ph>, and a null reference is treated as less than a non-null.</source>
          <target state="translated">Der Vergleich funktioniert wie folgt: zunächst der verglichenen Elemente getestet werden <ph id="ph1">`null`</ph>, und ein null-Verweis als kleiner als ein Wert ungleich Null behandelt wird.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Second, the string lengths are compared, and the longer string is deemed to be greater.</source>
          <target state="translated">Zweitens die Zeichenfolgenlängen verglichen werden, und die Zeichenfolge längere ist als größer werden.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Third, if the lengths are equal, ordinary string comparison is used.</source>
          <target state="translated">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt und mit den Namen der fünf pflanzenfressenden Dinosauriern und drei zur Dinosaurier aufgefüllt wird.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Within each of the two groups, the names are not in any particular sort order.</source>
          <target state="translated">In jedem von zwei Gruppen sind die Namen nicht in der Sortierreihenfolge vor.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</source>
          <target state="translated">Die Liste wird angezeigt, die Gruppe der Pflanzenfresser wird mit dem alternativen Vergleich sortiert und die Liste wird erneut angezeigt.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method overload is then used to search only the range of herbivores for "Brachiosaurus".</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> methodenüberladung wird dann verwendet, um nur die Gruppe der Pflanzenfresser "Brachiosaurus" suchen.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, <ph id="ph1">`Xor`</ph> -1 in Visual Basic) of the negative number returned by the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> method is used as an index for inserting the new string.</source>
          <target state="translated">Die Zeichenfolge nicht gefunden wird, und das bitweise Komplement (der ~-Operator in c# und Visual C++ <ph id="ph1">`Xor`</ph> -1 in Visual Basic) für die zurückgegebene negative Zahl der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> Methode dient als Index zum Einfügen der neuen Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben keinen gültigen Bereich in der <ph id="ph3">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The implementation of <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> caused an error during the sort.</source>
          <target state="translated">Die Implementierung von <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> hat einen Fehler während der Sortierung verursacht.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>For example, <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> might not return 0 when comparing an item with itself.</source>
          <target state="translated">Beispielsweise gibt <ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> beim Vergleichen eines Elements mit sich selbst möglicherweise nicht 0 zurück.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and the default comparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> cannot find implementation of the <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface for type <ph id="ph6">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und der Standardcomparer <ph id="ph3">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph> kann die Implementierung der generischen <ph id="ph4">&lt;see cref="T:System.IComparable`1" /&gt;</ph>-Schnittstelle oder der <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle für den Typ <ph id="ph6">&lt;paramref name="T" /&gt;</ph> nicht finden.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> schreibgeschützt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">In der Standardimplementierung von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Eine Auflistung, die schreibgeschützt ist, ist eine Auflistung mit einem Wrapper, der verhindert, dass die Auflistung ändern; Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, spiegelt die schreibgeschützte Auflistung daher diese Änderungen wider.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Sie können <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Kopiert die Elemente der <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, beginnend bei einem bestimmten <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>-Index.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Wenn der Typ der Quelle <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> kann nicht automatisch in den Typ des Ziels umgewandelt werden <ph id="ph2">`array`</ph>, die nicht generischen Implementierungen von <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> auslösen <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, während die Implementierungen die generischen auslösen <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist mehrdimensional.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> hat keine nullbasierte Indizierung.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> kann nicht automatisch in den Typ des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Zugriff auf das <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert (threadsicher) ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">In der Standardimplementierung von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</source>
          <target state="translated">In seltenen Fällen, in denen Enumeration mit Schreibzugriff konkurriert, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Gibt ein Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor der Zugriff auf die Auflistung.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, mit dem der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">In der Standardimplementierung der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Gibt ein Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor der Zugriff auf die Auflistung.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">Der folgende Code zeigt die Verwendung der <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> -Eigenschaft für c#, C++ und Visual Basic.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in C++ <ph id="ph3">`For Each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Sie müssen daher rufen die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft gibt das gleiche Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Standardimplementierungen der Auflistungen im <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>-Namespace werden nicht synchronisiert.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Fügt der <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> ein Element hinzu.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">Die Position, an der das neue Element eingefügt wurde.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> ist kleiner als <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität für das neue Element erhöht werden muss, wird diese Methode eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="item" /&gt;</ph> weist einen Typ auf, der der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das in der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Ermittelt, ob die <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> einen bestimmten Wert enthält.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;paramref name="item" /&gt;</ph> in der <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph> gefunden wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den Index eines bestimmten Elements in der <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> if found in the list; otherwise, –1.</source>
          <target state="translated">Der Index von <ph id="ph1">&lt;paramref name="item" /&gt;</ph>, wenn das Element in der Liste gefunden wird, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="item" /&gt;</ph> weist einen Typ auf, der der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The object to insert into the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Das in die <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> einzufügende Objekt.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Fügt am angegebenen Index ein Element in die <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, then <ph id="ph3">`item`</ph> is appended to the end.</source>
          <target state="translated">Wenn <ph id="ph1">`index`</ph> gleich der Anzahl der Elemente in <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> ist, wird <ph id="ph3">`item`</ph> am Ende angefügt.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kein gültiger Index in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="item" /&gt;</ph> weist einen Typ auf, der der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> eine feste Größe aufweist.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> eine feste Größe aufweist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">In der Standardimplementierung von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu. Vorhandene Elemente können jedoch geändert werden.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Eine Auflistung mit fester Größe ist einfach eine Auflistung mit einem Wrapper, der verhindert, dass hinzufügen und Entfernen von Elementen. Deshalb spiegelt die Auflistung mit fester Größe zum Änderungen vorgenommen werden, auf die zugrunde liegende Auflistung, z. B. das Hinzufügen oder Entfernen von Elementen, die Änderungen.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> schreibgeschützt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">In der Standardimplementierung von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Eine Auflistung, die schreibgeschützt ist, ist eine Auflistung mit einem Wrapper, der verhindert, dass die Auflistung ändern; Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, spiegelt die schreibgeschützte Auflistung daher diese Änderungen wider.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Ruft das Element am angegebenen Index ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Das Element am angegebenen Index.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A&gt;</ph> property.</source>
          <target state="translated">Die C#-Sprache verwendet die <bpt id="p1">[</bpt>dies<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> -Schlüsselwort zum Definieren der Indexer anstatt zu implementieren die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist auch ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kein gültiger Index in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <source>The property is set and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, und der <ph id="ph1">&lt;paramref name="value" /&gt;</ph> weist einen Typ auf, der der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Das aus der <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> zu entfernende Objekt.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit mithilfe des Standardgleichheitsvergleichs <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> für <ph id="ph2">`T`</ph>, der Typ der Werte in der Liste.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="item" /&gt;</ph> weist einen Typ auf, der der <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> to a new array.</source>
          <target state="translated">Kopiert die Elemente der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> in ein neues Array.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>An array containing copies of the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Ein Array, das Kopien der Elemente aus <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>The elements are copied using <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, which is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, mithilfe von <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, also eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>)-Vorgang, in dem <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> method and other methods of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class that act on ranges.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> -Methode und andere Methoden der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse, die für Bereiche verwendet.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>At the end of the example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> method is used to get three items from the list, beginning with index location 2.</source>
          <target state="translated">Am Ende des Beispiels die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.GetRange%2A&gt;</ph> Methode wird verwendet, um drei Elemente aus der Liste ab Indexposition 2 abgerufen.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> method is called on the resulting <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, creating an array of three elements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.ToArray%2A&gt;</ph> Methode wird aufgerufen, für die resultierende <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, erstellen ein Array von drei Elementen.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.ToArray">
          <source>The elements of the array are displayed.</source>
          <target state="translated">Die Elemente des Arrays werden angezeigt.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>, if that number is less than a threshold value.</source>
          <target state="translated">Legt die Kapazität auf die Anzahl der tatsächlich in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> befindlichen Elemente fest, sofern diese Anzahl unter dem Schwellenwert liegt.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Diese Methode kann verwendet werden, um Speicher für eine Auflistung Mehraufwand zu minimieren, wenn die Auflistung keine neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>The cost of reallocating and copying a large <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> can be considerable, however, so the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method does nothing if the list is at more than 90 percent of capacity.</source>
          <target state="translated">Die Kosten erneut zugewiesen werden, und Kopieren einer großen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> jedoch sehr aufwändig sein kann daher die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode bewirkt nichts, wenn die Liste an mehr als 90 % der Kapazität ist.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>This avoids incurring a large reallocation cost for a relatively small gain.</source>
          <target state="translated">Dadurch wird vermieden, für einen relativ kleinen zu großen neuzuordnungen Kosten anfallen.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>The current threshold of 90 percent might change in future releases.</source>
          <target state="translated">Der aktuelle Schwellenwert von 90 Prozent möglicherweise in zukünftigen Versionen ändern.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> method before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method.</source>
          <target state="translated">Zurücksetzen einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Aufrufen auf ihren ursprünglichen Zustand der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Clear%2A&gt;</ph> Methode vor dem Aufruf der <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>The capacity can also be set using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">Die Kapazität kann auch festgelegt werden mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>The following example demonstrates how to check the capacity and count of a  <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> that contains a simple business object, and illustrates using the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method to remove extra capacity.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die Kapazität und die Anzahl der zu überprüfen einer <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode, um zusätzliche Kapazität zu entfernen.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>Several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class are used to add, insert, and remove items from a list of strings.</source>
          <target state="translated">Mehrere Eigenschaften und Methoden der <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Klasse hinzufügen, einfügen und Entfernen von Elementen aus einer Liste von Zeichenfolgen verwendet werden.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>Then the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> method is used to reduce the capacity to match the count, and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrimExcess%2A&gt;</ph> Methode wird verwendet, um die Kapazität entsprechend der Anzahl reduzieren und die <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> Eigenschaften werden angezeigt.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</source>
          <target state="translated">Wenn die nicht verwendete Kapazität weniger als 10 Prozent der Gesamtkapazität hätte, würde die Größe die Liste nicht geändert wurde.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrimExcess">
          <source>Finally, the contents of the list are cleared.</source>
          <target state="translated">Zum Schluss werden der Inhalt der Liste gelöscht.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions to check against the elements.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>-Delegat, der die Bedingungen definiert, auf die die Elemente geprüft werden sollen.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>Determines whether every element in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> matches the conditions defined by the specified predicate.</source>
          <target state="translated">Bestimmt, ob jedes Element in der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> die vom angegebenen Prädikat definierten Bedingungen erfüllt.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> matches the conditions defined by the specified predicate; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn jedes Element in der <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> die vom angegebenen Prädikat definierten Bedingungen erfüllt; andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>If the list has no elements, the return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wenn die Liste über keine Elemente verfügt, ist der Rückgabewert <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> is a delegate to a method that returns <ph id="ph2">`true`</ph> if the object passed to it matches the conditions defined in the delegate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> ist ein Delegat an eine Methode, die zurückgibt <ph id="ph2">`true`</ph> an das Objekt übergeben sie die Bedingungen definiert, die im Delegaten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The elements of the current <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> are individually passed to the <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> delegate, and processing is stopped when the delegate returns <ph id="ph3">`false`</ph> for any element.</source>
          <target state="translated">Die Elemente des aktuellen <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> einzeln übergeben werden, um die <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> Delegat und die Verarbeitung wird beendet, wenn der Delegat zurückgegeben <ph id="ph3">`false`</ph> für ein bestimmtes Element.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The elements are processed in order, and all calls are made on a single thread.</source>
          <target state="translated">Die Elemente werden nacheinander verarbeitet, und alle Aufrufe werden in einem einzelnen Thread.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>This method is an O(<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<bpt id="p1">*</bpt>n<ept id="p1">*</ept>) Vorgang, wobei <bpt id="p2">*</bpt>n<ept id="p2">*</ept> ist <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrueForAll%2A&gt;</ph> method and several other methods that use <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generic delegate.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrueForAll%2A&gt;</ph> -Methode und andere Methoden verwenden, <ph id="ph2">&lt;xref:System.Predicate%601&gt;</ph> generischen Delegaten.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Zeichenfolgen erstellt wird, 8, Dinosauriernamen enthält, von denen zwei (an Position 1 und 5) mit "Saurus" enden.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The example also defines a search predicate method named <ph id="ph1">`EndsWithSaurus`</ph>, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</source>
          <target state="translated">Im Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen <ph id="ph1">`EndsWithSaurus`</ph>, der einen Zeichenfolgenparameter akzeptiert und einen booleschen Wert zurückgibt, der angibt, ob die Eingabezeichenfolge "Saurus" endet.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrueForAll%2A&gt;</ph> method traverses the list from the beginning, passing each element in turn to the <ph id="ph2">`EndsWithSaurus`</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.TrueForAll%2A&gt;</ph> Methode durchläuft die Liste von Anfang an und übergibt die einzelnen Elemente an die <ph id="ph2">`EndsWithSaurus`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>The search stops when the <ph id="ph1">`EndsWithSaurus`</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Die Suche angehalten wird, wenn die <ph id="ph1">`EndsWithSaurus`</ph> -Methode zurückkehrt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>In C# and Visual Basic, it is not necessary to create the <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegate (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explicitly.</source>
          <target state="translated">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die <ph id="ph1">`Predicate&lt;string&gt;`</ph> delegieren (<ph id="ph2">`Predicate(Of String)`</ph> in Visual Basic) explizit.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source>These languages infer the correct delegate from context and create it automatically.</source>
          <target state="translated">Diese Sprachen leiten den richtigen Delegaten aus Kontext und automatisch zu erstellen.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>