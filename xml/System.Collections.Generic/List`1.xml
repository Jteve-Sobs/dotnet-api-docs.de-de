<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8b70f84f6227059b8b978c586d8a6659cab5711" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39793672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type List&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="71a94-101">Der Typ der Elemente in der Liste.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-101">The type of elements in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="71a94-102">Stellt eine stark typisierte Liste von Objekten dar, auf die über einen Index zugegriffen werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-102">Represents a strongly typed list of objects that can be accessed by index.</span>
      </span>
      <span data-ttu-id="71a94-103">Stellt Methoden zum Durchsuchen, Sortieren und Bearbeiten von Listen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-103">Provides methods to search, sort, and manipulate lists.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-104">Die <xref:System.Collections.Generic.List%601> Klasse ist die generische Entsprechung, der die <xref:System.Collections.ArrayList> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="71a94-105">Implementiert die <xref:System.Collections.Generic.IList%601> generische Schnittstelle unter Verwendung eines Arrays, dessen dynamisch als vergrößert wird, erforderlich.</span><span class="sxs-lookup"><span data-stu-id="71a94-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="71a94-106">Sie können Elemente zum Hinzufügen einer <xref:System.Collections.Generic.List%601> mithilfe der <xref:System.Collections.Generic.List%601.Add%2A> oder <xref:System.Collections.Generic.List%601.AddRange%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="71a94-107">Die <xref:System.Collections.Generic.List%601> Klasse verwendet werden, sowohl einen Gleichheitsvergleich als auch einen reihenfolgenvergleich.</span><span class="sxs-lookup"><span data-stu-id="71a94-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="71a94-108">Methoden, z. B. <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, und <xref:System.Collections.Generic.Dictionary%602.Remove%2A> verwenden eine gleichheitsvergleichsfunktion für die Listenelemente.</span><span class="sxs-lookup"><span data-stu-id="71a94-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="71a94-109">Der Standardgleichheitsvergleich für den Typ `T` wird wie folgt bestimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="71a94-110">Wenn Typ `T` implementiert die <xref:System.IEquatable%601> generische Schnittstelle, dann ist der Gleichheitsvergleich die <xref:System.IEquatable%601.Equals%28%600%29> -Methode der Schnittstelle; andernfalls ist die der Standardgleichheitsvergleich <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="71a94-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="71a94-111">Methoden, z. B. <xref:System.Collections.Generic.List%601.BinarySearch%2A> und <xref:System.Collections.Generic.List%601.Sort%2A> verwenden einen reihenfolgenvergleich für die Listenelemente.</span><span class="sxs-lookup"><span data-stu-id="71a94-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="71a94-112">Der Standardvergleich für den Typ `T` wird wie folgt bestimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="71a94-113">Wenn Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle, und klicken Sie dann auf die standardmäßige Vergleichsfunktion ist die <xref:System.IComparable%601.CompareTo%28%600%29> -Methode dieser Schnittstelle; andernfalls, wenn Typ `T` implementiert die nicht generische <xref:System.IComparable> -Schnittstelle, und klicken Sie dann auf die Standardeinstellung Vergleich der <xref:System.IComparable.CompareTo%28System.Object%29> -Methode dieser Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="71a94-114">Wenn Typ `T` weder-Schnittstelle implementiert, gibt es keinen Standardvergleich, und ein Vergleich oder ein Vergleichsdelegat muss explizit angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="71a94-115">Die <xref:System.Collections.Generic.List%601> ist nicht unbedingt sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="71a94-116">Sie sortieren, müssen die <xref:System.Collections.Generic.List%601> vor dem Ausführen von Vorgängen (z. B. <xref:System.Collections.Generic.List%601.BinarySearch%2A>), erfordern die <xref:System.Collections.Generic.List%601> sortiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="71a94-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="71a94-117">Elemente in dieser Auflistung können über einen Ganzzahlenindex zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="71a94-118">Indizes in dieser Auflistung sind nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="71a94-119">Für sehr große <xref:System.Collections.Generic.List%601> Objekte aufweist, können Sie die maximale Kapazität 2 Milliarden von Elementen auf einem 64-Bit-System erhöhen, durch Festlegen der `enabled` Attribut des Konfigurationselements, `true` in der Runtime-Umgebung.</span><span class="sxs-lookup"><span data-stu-id="71a94-119">For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="71a94-120"><xref:System.Collections.Generic.List%601> akzeptiert `null` als gültiger Wert für den Verweis und doppelte Elemente lässt.</span><span class="sxs-lookup"><span data-stu-id="71a94-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="71a94-121">Für eine unveränderliche Version des der <xref:System.Collections.Generic.List%601> Klasse, finden Sie unter <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="71a94-122">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="71a94-122">Performance Considerations</span></span>  
 <span data-ttu-id="71a94-123">Bei der Entscheidung, ob Sie verwenden die <xref:System.Collections.Generic.List%601> oder <xref:System.Collections.ArrayList> -Klasse, die jeweils eine ähnliche Funktionalität, beachten Sie, dass die <xref:System.Collections.Generic.List%601> Klasse bietet eine bessere Leistung in den meisten Fällen und typsicher.</span><span class="sxs-lookup"><span data-stu-id="71a94-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="71a94-124">Wenn ein Verweistyp, für den Typ verwendet wird `T` von der <xref:System.Collections.Generic.List%601> -Klasse, die das Verhalten der beiden Klassen ist identisch.</span><span class="sxs-lookup"><span data-stu-id="71a94-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="71a94-125">Aber wenn ein Werttyp, für den Typ verwendet wird `T`, Implementierung und Boxing Probleme berücksichtigt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="71a94-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="71a94-126">Wenn für den Typ ein Werttyps verwendet wird `T`, generiert der Compiler eine Implementierung der <xref:System.Collections.Generic.List%601> -Klasse speziell für dieses Werttyps.</span><span class="sxs-lookup"><span data-stu-id="71a94-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="71a94-127">Das bedeutet, dass ein Listenelement der einem <xref:System.Collections.Generic.List%601> Objekt muss nicht geschachtelt werden, bevor das Element verwendet werden kann, und der Speicher gespeichert, nicht boxing Listenelemente ist größer als der Arbeitsspeicher verwendet, um die Implementierung der Klasse zu generieren, nach etwa 500 Listenelemente erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="71a94-128">Stellen Sie sicher den Werttyp, der zum Typ `T` implementiert die <xref:System.IEquatable%601> generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="71a94-129">Wenn nicht der Fall, Methoden, z. B. <xref:System.Collections.Generic.List%601.Contains%2A> aufrufen, müssen die <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> -Methode, die das Listenelement der betroffenen Felder.</span><span class="sxs-lookup"><span data-stu-id="71a94-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="71a94-130">Wenn der Typ implementiert die <xref:System.IComparable> Schnittstelle, und Sie besitzen, den Quellcode, implementieren Sie zusätzlich die <xref:System.IComparable%601> generische Schnittstelle, um zu verhindern, dass die <xref:System.Collections.Generic.List%601.BinarySearch%2A> und <xref:System.Collections.Generic.List%601.Sort%2A> Methoden Listenelemente schachteln.</span><span class="sxs-lookup"><span data-stu-id="71a94-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="71a94-131">Wenn Sie nicht über den Quellcode besitzen, übergeben Sie ein <xref:System.Collections.Generic.IComparer%601> -Objekt an die <xref:System.Collections.Generic.List%601.BinarySearch%2A> und <xref:System.Collections.Generic.List%601.Sort%2A> Methoden</span><span class="sxs-lookup"><span data-stu-id="71a94-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="71a94-132">Es ist von Vorteil, verwenden Sie die Typ-spezifische Implementierung von der <xref:System.Collections.Generic.List%601> Klasse anstelle der <xref:System.Collections.ArrayList> Klasse oder eine Auflistung von stark typisierten Wrapper selbst schreiben.</span><span class="sxs-lookup"><span data-stu-id="71a94-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="71a94-133">Der Grund ist die Implementierung müssen .NET Framework bereits für Sie ausführt und die common Language Runtime Microsoft intermediate Language-Code und Metadaten, die Ihre Implementierung nicht freigeben.</span><span class="sxs-lookup"><span data-stu-id="71a94-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="71a94-134">F#-Überlegungen</span><span class="sxs-lookup"><span data-stu-id="71a94-134">F# Considerations</span></span>  
 <span data-ttu-id="71a94-135">Die <xref:System.Collections.Generic.List%601> Klasse wird nur selten in F#-Code verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span>  <span data-ttu-id="71a94-136">Stattdessen [listet](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), die unveränderlichen, einfach verknüpften Listen, sind in der Regel bevorzugte sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-136">Instead, [Lists](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="71a94-137">Eine F#-Liste enthält eine geordnete, unveränderliche Reihe von Werten, und wird für die Verwendung in funktionale-Entwicklung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="71a94-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="71a94-138">Bei der Verwendung von f#, die <xref:System.Collections.Generic.List%601> Klasse in der Regel verweist auf die [ResizeArray\<' t >](https://msdn.microsoft.com/library/ee353447.aspx) -typabkürzung um Namenskonflikte mit f#-Listen zu vermeiden</span><span class="sxs-lookup"><span data-stu-id="71a94-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the  [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-139">Das folgende Beispiel zeigt, wie Sie hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="71a94-140">Das folgende Beispiel zeigt verschiedene Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse vom Typzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="71a94-141">(Ein Beispiel für eine <xref:System.Collections.Generic.List%601> komplexen Typen finden Sie unter den <xref:System.Collections.Generic.List%601.Contains%2A> Methode.)</span><span class="sxs-lookup"><span data-stu-id="71a94-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="71a94-142">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit der angegebenen Kapazität erstellen.</span><span class="sxs-lookup"><span data-stu-id="71a94-142">The default constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="71a94-143">Die <xref:System.Collections.Generic.List%601.Capacity%2A> -Eigenschaft wird angezeigt, und klicken Sie dann die <xref:System.Collections.Generic.List%601.Add%2A> Methode wird verwendet, um mehrere Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="71a94-144">Die Elemente aufgeführt, und die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft angezeigt wird in diesem Fall zusammen mit den <xref:System.Collections.Generic.List%601.Count%2A> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</span><span class="sxs-lookup"><span data-stu-id="71a94-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="71a94-145">Die <xref:System.Collections.Generic.List%601.Contains%2A> Methode dient zum Testen auf das Vorhandensein eines Elements in der Liste der <xref:System.Collections.Generic.List%601.Insert%2A> Methode dient zum Einfügen eines neuen Elements in der Mitte der Liste aus, und der Inhalt der Liste erneut angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="71a94-146">Der Standardwert <xref:System.Collections.Generic.List%601.Item%2A> -Eigenschaft (Indexer in c#) Dient zum Abrufen eines Elements, das <xref:System.Collections.Generic.List%601.Remove%2A> Methode wird verwendet, um die erste Instanz des zuvor hinzugefügten doppelten Elements entfernt werden soll, und der Inhalt wird erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="71a94-147">Die <xref:System.Collections.Generic.List%601.Remove%2A> Methode wird immer der erste gefundene Instanz entfernt.</span><span class="sxs-lookup"><span data-stu-id="71a94-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="71a94-148">Die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode wird verwendet, um die Kapazität entsprechend der Anzahl die zu reduzieren und die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaften werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="71a94-149">Wenn der freie Kapazität kleiner als 10 Prozent der Gesamtkapazität hätte, würde die Größe die Liste nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="71a94-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="71a94-150">Zum Schluss die <xref:System.Collections.Generic.List%601.Clear%2A> Methode dient zum Entfernen aller Elemente aus der Liste aus, und die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaften werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="71a94-151">Öffentliche statische (<see langword="Shared" /> in Visual Basic) Member dieses Typs sind threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="71a94-152">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-152">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="71a94-153">Es ist sicherer, für mehrere Lesevorgänge Ausführen einer <see cref="T:System.Collections.Generic.List`1" />, aber es können Probleme auftreten, wenn die Auflistung geändert wird, während es gelesen wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it’s being read.</span>
      </span>
      <span data-ttu-id="71a94-154">Um Threadsicherheit zu gewährleisten, Sperren Sie die Auflistung während eines Lesevorgangs, oder Schreiben Sie beim.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-154">To ensure thread safety, lock the collection during a read or write operation.</span>
      </span>
      <span data-ttu-id="71a94-155">Damit kann eine Sammlung von mehreren Threads zum Lesen und Schreiben zugegriffen werden, müssen Sie eine eigene Synchronisierung implementieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
      <span data-ttu-id="71a94-156">Sammlungen mit integrierten Synchronisierung, finden Sie unter den Klassen in der <see cref="N:System.Collections.Concurrent" /> Namespace.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span>
      </span>
      <span data-ttu-id="71a94-157">Eine Alternative grundsätzlich Thread-sicher finden Sie unter den <see cref="T:System.Collections.Immutable.ImmutableList`1" /> Klasse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a94-157">For an inherently thread–safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-158">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.List`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-159">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.List`1" />-Klasse, die die Standardanfangskapazität aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-159">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-160">Die Kapazität einer <xref:System.Collections.Generic.List%601> ist die Anzahl der Elemente, die die <xref:System.Collections.Generic.List%601> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="71a94-160">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="71a94-161">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Generic.List%601>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</span><span class="sxs-lookup"><span data-stu-id="71a94-161">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="71a94-162">Wenn die Größe der Auflistung mithilfe geschätzt werden kann, die <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> Konstruktor und die anfängliche Kapazität angeben entfällt die Notwendigkeit, eine Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen, die zum Ausführen der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-162">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-163">Die Kapazität kann verringert werden, durch den Aufruf der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode oder durch Festlegen der <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft explizit.</span><span class="sxs-lookup"><span data-stu-id="71a94-163">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="71a94-164">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-164">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-165">Dieser Konstruktor ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-165">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-166">Das folgende Beispiel zeigt den Standardkonstruktor der <xref:System.Collections.Generic.List%601> generische Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-166">The following example demonstrates the default constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="71a94-167">Der Standardkonstruktor erstellt eine Liste mit der Standardkapazität ein, wie durch Anzeigen der <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="71a94-167">The default constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="71a94-168">Im Beispiel hinzufügt, fügt ein und entfernt die Elemente, die angezeigt wird, wie die Kapazität ändert, da diese Methoden verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-168">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="71a94-169">Die Auflistung, deren Elemente in die neue Liste kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-169">The collection whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-170">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.List`1" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-171">Die Elemente kopiert werden, auf die <xref:System.Collections.Generic.List%601> in der gleichen Reihenfolge, die sie vom Enumerator der Auflistung gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-171">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="71a94-172">Dieser Konstruktor ist eine O (*n*)-Vorgang, in denen *n* ist die Anzahl der Elemente im `collection`.</span><span class="sxs-lookup"><span data-stu-id="71a94-172">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-173">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.%23ctor%2A> Konstruktor und die verschiedenen Methoden der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-173">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-174">Ein Array von Zeichenfolgen erstellt und an den Konstruktor übergeben, Auffüllen der Liste mit den Elementen des Arrays.</span><span class="sxs-lookup"><span data-stu-id="71a94-174">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="71a94-175">Die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft wird dann angezeigt, um anzugeben, dass die anfängliche Kapazität genau erforderlich ist, um den Eingabeelementen enthalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-175">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-176">
            <paramref name="collection" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-176">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="71a94-177">Die Anzahl von Elementen, die anfänglich in der neuen Liste gespeichert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-177">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-178">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.List`1" />-Klasse, die die angegebene Anfangskapazität aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-178">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-179">Die Kapazität einer <xref:System.Collections.Generic.List%601> ist die Anzahl der Elemente, die die <xref:System.Collections.Generic.List%601> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="71a94-179">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="71a94-180">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Generic.List%601>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</span><span class="sxs-lookup"><span data-stu-id="71a94-180">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="71a94-181">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben müssen nicht mehr eine Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen, die zum Ausführen der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-181">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-182">Die Kapazität kann verringert werden, durch den Aufruf der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode oder durch Festlegen der <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft explizit.</span><span class="sxs-lookup"><span data-stu-id="71a94-182">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="71a94-183">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-183">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-184">Dieser Konstruktor ist eine O (*n*)-Vorgang, in denen *n* ist `capacity`.</span><span class="sxs-lookup"><span data-stu-id="71a94-184">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-185">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="71a94-185">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="71a94-186">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen mit einer Kapazität von 4, wird erstellt, da die endgültige Größe der Liste der bekannt ist, genau 4.</span><span class="sxs-lookup"><span data-stu-id="71a94-186">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="71a94-187">Die Liste wird mit vier Zeichenfolgen aufgefüllt und eine schreibgeschützte Kopie erstellt, mit der <xref:System.Collections.Generic.List%601.AsReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-187">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-188">
            <paramref name="capacity" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-188">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="list.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-189">Das Objekt, das am Ende der <see cref="T:System.Collections.Generic.List`1" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-189">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-190">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-190">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-191">Fügt am Ende der <see cref="T:System.Collections.Generic.List`1" /> ein Objekt hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-191">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-192"><xref:System.Collections.Generic.List%601> akzeptiert `null` als gültiger Wert für den Verweis und doppelte Elemente lässt.</span><span class="sxs-lookup"><span data-stu-id="71a94-192"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="71a94-193">Wenn <xref:System.Collections.Generic.List%601.Count%2A> bereits entspricht <xref:System.Collections.Generic.List%601.Capacity%2A>, wird die Kapazität von der <xref:System.Collections.Generic.List%601> wird erhöht, die automatisch erneut zugewiesen werden, das interne Array, und die vorhandenen Elemente in das neue Array kopiert werden, bevor das neue Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-193">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="71a94-194">Wenn <xref:System.Collections.Generic.List%601.Count%2A> ist kleiner als <xref:System.Collections.Generic.List%601.Capacity%2A>, diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-194">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="71a94-195">Wenn die Kapazität für das neue Element erhöht werden muss, wird diese Methode eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-195">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-196">Das folgende Beispiel zeigt, wie Sie hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-196">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="71a94-197">Das folgende Beispiel zeigt verschiedene Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse erstellen, einschließlich der <xref:System.Collections.Generic.List%601.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-197">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="71a94-198">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit einer Kapazität von 0 zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="71a94-198">The default constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="71a94-199">Die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft wird angezeigt, und klicken Sie dann die <xref:System.Collections.Generic.List%601.Add%2A> Methode wird verwendet, um mehrere Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-199">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="71a94-200">Die Elemente aufgeführt, und die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft angezeigt wird in diesem Fall zusammen mit den <xref:System.Collections.Generic.List%601.Count%2A> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</span><span class="sxs-lookup"><span data-stu-id="71a94-200">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="71a94-201">Andere Eigenschaften und Methoden werden verwendet, um suchen, einfügen und Entfernen von Elementen aus der Liste aus, und schließlich auf die Liste zu löschen.</span><span class="sxs-lookup"><span data-stu-id="71a94-201">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; unit" Usage="list.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="71a94-202">Die Auflistung, deren Elemente am Ende von <see cref="T:System.Collections.Generic.List`1" /> hinzugefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-202">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-203">Die Auflistung an sich kann nicht <see langword="null" /> sein. Sie kann jedoch Elemente enthalten, die <see langword="null" /> sind, wenn Typ <c>T</c> einen Referenztyp darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-203">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-204">Fügt die Elemente der angegebenen Auflistung am Ende von <see cref="T:System.Collections.Generic.List`1" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-204">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-205">Die Reihenfolge der Elemente in der Auflistung wird beibehalten, der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-205">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-206">Wenn die neue <xref:System.Collections.Generic.List%601.Count%2A> (die aktuelle <xref:System.Collections.Generic.List%601.Count%2A> plus die Größe der Auflistung) wird größer sein als <xref:System.Collections.Generic.List%601.Capacity%2A>, die der Kapazität der <xref:System.Collections.Generic.List%601> wird erhöht, die automatisch erneut zugewiesen werden, das interne Array zur Aufnahme der neuen Elemente, und die vorhandene Elemente werden in das neue Array kopiert, bevor die neuen Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-206">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="71a94-207">Wenn die <xref:System.Collections.Generic.List%601> die neuen Elemente aufnehmen kann, ohne zu erhöhen die <xref:System.Collections.Generic.List%601.Capacity%2A>, diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist die Anzahl der Elemente, die hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-207">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="71a94-208">Wenn die Kapazität erhöht werden, damit die neuen Elemente aufnehmen muss, wird diese Methode eine O (*n* + *m*)-Vorgang, in denen *n* ist die Anzahl von Elementen hinzuzufügende und *m* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-208">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-209">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.AddRange%2A> -Methode und verschiedene weitere Methoden, die von der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-209">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-210">Ein Array von Zeichenfolgen erstellt und an den Konstruktor übergeben, Auffüllen der Liste mit den Elementen des Arrays.</span><span class="sxs-lookup"><span data-stu-id="71a94-210">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="71a94-211">Die <xref:System.Collections.Generic.List%601.AddRange%2A> -Methode aufgerufen wird, mit der Liste als Argument.</span><span class="sxs-lookup"><span data-stu-id="71a94-211">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="71a94-212">Das Ergebnis ist, dass das aktuelle Element der Liste am Ende der Liste, duplizieren alle Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-212">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-213">
            <paramref name="collection" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-213">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.AsReadOnly : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="list.AsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-214">Gibt einen schreibgeschützten <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Wrapper für die aktuelle Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-214">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-215">Ein Objekt, das als schreibgeschützter Wrapper des aktuellen <see cref="T:System.Collections.Generic.List`1" />-Objekts fungiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-215">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-216">Um zu verhindern, dass alle Änderungen an der <xref:System.Collections.Generic.List%601> Objekt, das sie nur über diesen Wrapper verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="71a94-216">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="71a94-217">Ein <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> Objekt macht Methoden, die die Auflistung geändert werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-217">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="71a94-218">Aber wenn Änderungen, auf die zugrunde liegende vorgenommen werden <xref:System.Collections.Generic.List%601> Objekt ist, wird die schreibgeschützte Auflistung die Änderungen wider.</span><span class="sxs-lookup"><span data-stu-id="71a94-218">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="71a94-219">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-219">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-220">Das folgende Beispiel veranschaulicht die <xref:System.Collections.Generic.List%601.AsReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-220">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="71a94-221">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen mit einer Kapazität von 4, wird erstellt, da die endgültige Größe der Liste der bekannt ist, genau 4.</span><span class="sxs-lookup"><span data-stu-id="71a94-221">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="71a94-222">Die Liste wird mit vier Zeichenfolgen aufgefüllt und die <xref:System.Collections.Generic.List%601.AsReadOnly%2A> Methode dient zum Abrufen einer nur-Lese- <xref:System.Collections.Generic.IList%601> Implementierung der generischen Schnittstelle, die die ursprüngliche Liste umschließt.</span><span class="sxs-lookup"><span data-stu-id="71a94-222">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="71a94-223">Ein Element von der ursprünglichen Liste wird festgelegt, dass "Coelophysis" mit der <xref:System.Collections.Generic.List%601.Item%2A> -Eigenschaft (Indexer in c#), und die Inhalte der schreibgeschützten Liste erneut um zu zeigen, dass es nur ein Wrapper für die ursprüngliche Liste ist angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-223">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-224">Verwendet einen binären Suchalgorithmus für die Suche nach einem bestimmten Element bzw. einen Teil dieses Elements in der sortierten <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-224">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T -&gt; int" Usage="list.BinarySearch item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-225">Das zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-225">The object to locate.</span>
          </span>
          <span data-ttu-id="71a94-226">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-226">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-227">Durchsucht mithilfe des Standardcomparers die gesamte sortierte <see cref="T:System.Collections.Generic.List`1" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-227">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-228">Der nullbasierte Index von <paramref name="item" /> in der sortierten <see cref="T:System.Collections.Generic.List`1" />, sofern <paramref name="item" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="item" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-228">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-229">Diese Methode verwendet die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> für Typ `T` bestimmt die Reihenfolge der Listenelemente.</span><span class="sxs-lookup"><span data-stu-id="71a94-229">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="71a94-230">Die <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> -Eigenschaft überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-230">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-231">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-231">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-232">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-232">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-233">Die <xref:System.Collections.Generic.List%601> muss bereits sortiert werden, entsprechend die Vergleichs-Implementierung; das Ergebnis ist, andernfalls falsch.</span><span class="sxs-lookup"><span data-stu-id="71a94-233">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="71a94-234">Vergleichen von `null` mit jeder Verweis ist zulässig und löst keine Ausnahme aus, bei Verwendung der <xref:System.IComparable%601> generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-234">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="71a94-235">Beim Sortieren von `null` gilt als kleiner als jedes andere Objekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-235">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="71a94-236">Wenn die <xref:System.Collections.Generic.List%601> enthält mehr als ein Element mit dem gleichen Wert, gibt die Methode nur einen vorkommen und eine vorkommen, nicht notwendigerweise das erste Element zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="71a94-236">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="71a94-237">Wenn die <xref:System.Collections.Generic.List%601> enthält nicht den angegebenen Wert die Methode gibt eine negative ganze Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-237">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="71a94-238">Sie können die bitweisen komplementären Vorgangs (~) auf diese negative ganze Zahl, um den Index des ersten Elements zu erhalten, die größer als der Wert für die Suche anwenden.</span><span class="sxs-lookup"><span data-stu-id="71a94-238">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="71a94-239">Beim Einfügen des Werts in der <xref:System.Collections.Generic.List%601>, diesen Index als die Einfügemarke verwendet werden soll, um die Sortierreihenfolge zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-239">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="71a94-240">Diese Methode ist eine O (Log *n*)-Vorgang, in denen *n* ist die Anzahl der Elemente im Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-240">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-241">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-241">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="71a94-242">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, in keiner bestimmten Reihenfolge aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-242">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="71a94-243">Die Liste wird angezeigt, sortiert und erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-243">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="71a94-244">Die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> methodenüberladung wird dann verwendet, um die für zwei Zeichenfolgen zu suchen, die nicht in der Liste enthalten sind und die <xref:System.Collections.Generic.List%601.Insert%2A> Methode verwendet, um sie einzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-244">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="71a94-245">Der Rückgabewert von der <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> Methode ist in jedem Fall negativ, da die Zeichenfolgen nicht in der Liste enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-245">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="71a94-246">Dem bitweisen Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) dieses negative Zahl wird der Index des ersten Elements in der Liste, die größer als die zu suchende Zeichenfolge und Einfügen von an dieser Stelle ist beibehalten der Sortierreihenfolge die Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-246">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="71a94-247">Die zweite Zeichenfolge für die Suche ist größer als ein Element in der Liste, daher ist die Position der Einfügemarke am Ende der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-247">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-248">Der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-248">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-249">Das zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-249">The object to locate.</span>
          </span>
          <span data-ttu-id="71a94-250">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-250">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="71a94-251">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-251">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="71a94-252">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-252">-or-</span>
          </span>
          <span data-ttu-id="71a94-253">
            <see langword="null" /> zur Verwendung des Standardvergleichs <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-253">
              <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-254">Durchsucht mithilfe des angegebenen Comparers die gesamte sortierte <see cref="T:System.Collections.Generic.List`1" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-254">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-255">Der nullbasierte Index von <paramref name="item" /> in der sortierten <see cref="T:System.Collections.Generic.List`1" />, sofern <paramref name="item" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="item" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-255">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-256">Der Vergleich wird bestimmt, wie die Elemente verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-256">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="71a94-257">Beispielsweise können Sie eine <xref:System.Collections.CaseInsensitiveComparer> -Instanz wie der Vergleich, der Suche nach Groß-/Kleinschreibung von Zeichenfolgen durchführen.</span><span class="sxs-lookup"><span data-stu-id="71a94-257">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="71a94-258">Wenn `comparer` angegeben ist, wird die Elemente der <xref:System.Collections.Generic.List%601> verglichen werden, auf den angegebenen Wert unter Verwendung des angegebenen <xref:System.Collections.Generic.IComparer%601> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="71a94-258">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="71a94-259">Wenn `comparer` ist `null`, die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-259">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-260">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-260">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-261">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-261">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-262">Die <xref:System.Collections.Generic.List%601> muss bereits sortiert werden, entsprechend die Vergleichs-Implementierung; das Ergebnis ist, andernfalls falsch.</span><span class="sxs-lookup"><span data-stu-id="71a94-262">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="71a94-263">Vergleichen von `null` mit jeder Verweis ist zulässig und löst keine Ausnahme aus, bei Verwendung der <xref:System.IComparable%601> generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-263">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="71a94-264">Beim Sortieren von `null` gilt als kleiner als jedes andere Objekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-264">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="71a94-265">Wenn die <xref:System.Collections.Generic.List%601> enthält mehr als ein Element mit dem gleichen Wert, gibt die Methode nur einen vorkommen und eine vorkommen, nicht notwendigerweise das erste Element zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="71a94-265">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="71a94-266">Wenn die <xref:System.Collections.Generic.List%601> enthält nicht den angegebenen Wert die Methode gibt eine negative ganze Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-266">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="71a94-267">Sie können die bitweisen komplementären Vorgangs (~) auf diese negative ganze Zahl, um den Index des ersten Elements zu erhalten, die größer als der Wert für die Suche anwenden.</span><span class="sxs-lookup"><span data-stu-id="71a94-267">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="71a94-268">Beim Einfügen des Werts in der <xref:System.Collections.Generic.List%601>, diesen Index als die Einfügemarke verwendet werden soll, um die Sortierreihenfolge zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-268">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="71a94-269">Diese Methode ist eine O (Log *n*)-Vorgang, in denen *n* ist die Anzahl der Elemente im Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-269">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-270">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-270">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="71a94-271">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die `IComparer<string>` (`IComparer(Of String)` in Visual Basic `IComparer<String^>` in Visual C++) generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-271">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="71a94-272">Der Vergleich funktioniert wie folgt: zunächst der zu vergleichenden Objekte getestet `null`, und als kleiner als ein Wert ungleich Null ein null-Verweis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-272">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="71a94-273">Zweitens: die Länge der Zeichenfolge verglichen werden und größer sein als die längere Zeichenfolge angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-273">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="71a94-274">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-274">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="71a94-275">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, in keiner bestimmten Reihenfolge aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-275">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="71a94-276">Die Liste ist, mit dem alternativen Vergleich sortiert und angezeigten erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-276">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="71a94-277">Die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> methodenüberladung wird dann verwendet, um die für mehrere Zeichenfolgen zu suchen, die nicht in der Liste der alternativen Vergleich anwenden.</span><span class="sxs-lookup"><span data-stu-id="71a94-277">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="71a94-278">Die <xref:System.Collections.Generic.List%601.Insert%2A> Methode verwendet, um die Zeichenfolgen einzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-278">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="71a94-279">Diese beiden Methoden befinden sich in der Funktion, die mit dem Namen `SearchAndInsert`, zusammen mit Code, das bitweise Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) der die negative Zahl, die vom <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> und verwenden sie als Index für Einfügen der neuen Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="71a94-279">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-280">
            <paramref name="comparer" /> ist <see langword="null" />, und der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für den Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-280">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (index, count, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-281">Der nullbasierte Startindex des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-281">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-282">Die Länge des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-282">The length of the range to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="71a94-283">Das zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-283">The object to locate.</span>
          </span>
          <span data-ttu-id="71a94-284">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-284">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="71a94-285">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <see langword="null" />, wenn der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-285">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-286">Durchsucht mithilfe des angegebenen Vergleichs einen Bereich von Elementen in der sortierten <see cref="T:System.Collections.Generic.List`1" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-286">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-287">Der nullbasierte Index von <paramref name="item" /> in der sortierten <see cref="T:System.Collections.Generic.List`1" />, sofern <paramref name="item" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="item" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-287">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-288">Der Vergleich wird bestimmt, wie die Elemente verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-288">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="71a94-289">Beispielsweise können Sie eine <xref:System.Collections.CaseInsensitiveComparer> -Instanz wie der Vergleich, der Suche nach Groß-/Kleinschreibung von Zeichenfolgen durchführen.</span><span class="sxs-lookup"><span data-stu-id="71a94-289">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="71a94-290">Wenn `comparer` angegeben ist, wird die Elemente der <xref:System.Collections.Generic.List%601> verglichen werden, auf den angegebenen Wert unter Verwendung des angegebenen <xref:System.Collections.Generic.IComparer%601> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="71a94-290">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="71a94-291">Wenn `comparer` ist `null`, die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-291">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-292">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-292">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-293">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-293">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-294">Die <xref:System.Collections.Generic.List%601> muss bereits sortiert werden, entsprechend die Vergleichs-Implementierung; das Ergebnis ist, andernfalls falsch.</span><span class="sxs-lookup"><span data-stu-id="71a94-294">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="71a94-295">Vergleichen von `null` mit jeder Verweis ist zulässig und löst keine Ausnahme aus, bei Verwendung der <xref:System.IComparable%601> generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-295">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="71a94-296">Beim Sortieren von `null` gilt als kleiner als jedes andere Objekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-296">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="71a94-297">Wenn die <xref:System.Collections.Generic.List%601> enthält mehr als ein Element mit dem gleichen Wert, gibt die Methode nur einen vorkommen und eine vorkommen, nicht notwendigerweise das erste Element zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="71a94-297">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="71a94-298">Wenn die <xref:System.Collections.Generic.List%601> enthält nicht den angegebenen Wert die Methode gibt eine negative ganze Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-298">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="71a94-299">Sie können die bitweisen komplementären Vorgangs (~) auf diese negative ganze Zahl, um den Index des ersten Elements zu erhalten, die größer als der Wert für die Suche anwenden.</span><span class="sxs-lookup"><span data-stu-id="71a94-299">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="71a94-300">Beim Einfügen des Werts in der <xref:System.Collections.Generic.List%601>, diesen Index als die Einfügemarke verwendet werden soll, um die Sortierreihenfolge zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-300">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="71a94-301">Diese Methode ist eine O (Log *n*)-Vorgang, in denen *n* ist die Anzahl der Elemente im Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-301">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-302">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-302">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="71a94-303">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die `IComparer<string>` (`IComparer(Of String)` in Visual Basic `IComparer<String^>` in Visual C++) generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-303">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="71a94-304">Der Vergleich funktioniert wie folgt: zunächst der zu vergleichenden Objekte getestet `null`, und als kleiner als ein Wert ungleich Null ein null-Verweis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-304">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="71a94-305">Zweitens: die Länge der Zeichenfolge verglichen werden und größer sein als die längere Zeichenfolge angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-305">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="71a94-306">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-306">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="71a94-307">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit den Namen der fünf pflanzenfressenden Dinosaurier und drei zur Dinosaurier aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-307">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="71a94-308">In jedem der beiden Gruppen sind die Namen nicht in der Sortierreihenfolge vor.</span><span class="sxs-lookup"><span data-stu-id="71a94-308">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="71a94-309">Die Liste wird angezeigt, die Gruppe der Pflanzenfresser wird mit dem alternativen Vergleich sortiert und die Liste wird erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-309">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="71a94-310">Die <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> methodenüberladung wird dann verwendet, um die "Brachiosaurus" nur die Gruppe der Pflanzenfresser gesucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-310">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="71a94-311">Die Zeichenfolge nicht gefunden wird, und das bitweise Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) der die negative Zahl zurückgegeben, die von der <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Methode dient als Index für das Einfügen der neuen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-311">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-312">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-312">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-313">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-313">-or-</span>
          </span>
          <span data-ttu-id="71a94-314">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-314">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-315">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-315">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-316">
            <paramref name="comparer" /> ist <see langword="null" />, und der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für den Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-316">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-317">Ruft die Gesamtzahl der Elemente ab, die die interne Datenstruktur ohne Änderung der Größe aufnehmen kann, oder legt diese Anzahl fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-317">Gets or sets the total number of elements the internal data structure can hold without resizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-318">Die Anzahl der Elemente, die <see cref="T:System.Collections.Generic.List`1" /> enthalten kann, bevor eine Größenanpassung erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-318">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-319"><xref:System.Collections.Generic.List%601.Capacity%2A> ist die Anzahl der Elemente, die die <xref:System.Collections.Generic.List%601> können speichern, bevor eine größenanpassung erforderlich ist, ist dagegen <xref:System.Collections.Generic.List%601.Count%2A> ist die Anzahl der Elemente, die in der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-319"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-320"><xref:System.Collections.Generic.List%601.Capacity%2A> ist immer größer als oder gleich <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-320"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="71a94-321">Wenn <xref:System.Collections.Generic.List%601.Count%2A> überschreitet <xref:System.Collections.Generic.List%601.Capacity%2A> beim Hinzufügen von Elementen, die Kapazität erhöht wird, durch das Neuzuordnen von internen Arrays automatisch vor dem Kopieren der alten und die neuen Elemente hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-321">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="71a94-322">Wenn die Kapazität wesentlich größer als die Anzahl ist und den vom verwendeten Arbeitsspeicher zu reduzieren möchten die <xref:System.Collections.Generic.List%601>, können Sie die Kapazität verringern, durch den Aufruf der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode oder durch Festlegen der <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft explizit auf einen niedrigeren Wert.</span><span class="sxs-lookup"><span data-stu-id="71a94-322">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="71a94-323">Wenn der Wert des <xref:System.Collections.Generic.List%601.Capacity%2A> explizit das interne Array wird auch zur Aufnahme die angegebene Kapazität neu zugeordnet und kopiert alle Elemente festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-323">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="71a94-324">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist eine O (*n*)-Vorgang, in denen *n* ist die neue Kapazität.</span><span class="sxs-lookup"><span data-stu-id="71a94-324">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-325">Im folgende Beispiel wird veranschaulicht, wie zum Überprüfen der Kapazität und die Anzahl der einem <xref:System.Collections.Generic.List%601> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode, um zusätzliche Kapazität zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="71a94-325">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-326">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft an mehreren Punkten im Lebenszyklus einer Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-326">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="71a94-327">Der Standardkonstruktor wird verwendet, um eine Liste von Zeichenfolgen mit einer Kapazität von 0 (null) zu erstellen und die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft wird angezeigt, um dies zu demonstrieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-327">The default constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="71a94-328">Nach der <xref:System.Collections.Generic.List%601.Add%2A> Methode wurde verwendet, um mehrere Elemente hinzuzufügen, die Elemente aufgeführt, und klicken Sie dann die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft angezeigt wird in diesem Fall zusammen mit den <xref:System.Collections.Generic.List%601.Count%2A> -Eigenschaft, um anzugeben, dass die Kapazität nach Bedarf erhöht wurde.</span><span class="sxs-lookup"><span data-stu-id="71a94-328">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="71a94-329">Die <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft wird erneut angezeigt, nachdem die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode wird verwendet, um die Kapazität entsprechend der Anzahl die zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-329">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="71a94-330">Zum Schluss die <xref:System.Collections.Generic.List%601.Clear%2A> Methode dient zum Entfernen aller Elemente aus der Liste aus, und die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaften werden erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-330">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-331">
            <see cref="P:System.Collections.Generic.List`1.Capacity" /> ist auf einen Wert festgelegt, der kleiner ist als <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-331">
              <see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="71a94-332">Es ist nicht genügend Arbeitsspeicher im System verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-332">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="list.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-333">Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-333">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-334"><xref:System.Collections.Generic.List%601.Count%2A> auf 0 (null) festgelegt ist und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</span><span class="sxs-lookup"><span data-stu-id="71a94-334"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="71a94-335"><xref:System.Collections.Generic.List%601.Capacity%2A> bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="71a94-335"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="71a94-336">Zurücksetzen die Kapazität des der <xref:System.Collections.Generic.List%601>, rufen Sie die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode bzw. einer Gruppe die <xref:System.Collections.Generic.List%601.Capacity%2A> -Eigenschaft direkt.</span><span class="sxs-lookup"><span data-stu-id="71a94-336">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="71a94-337">Verringern der Kapazität Arbeitsspeicher zuordnet, und kopiert alle Elemente in der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-337">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="71a94-338">Beim Verkürzen einer leeren <xref:System.Collections.Generic.List%601> definiert die Kapazität der <xref:System.Collections.Generic.List%601> auf die Standardkapazität.</span><span class="sxs-lookup"><span data-stu-id="71a94-338">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="71a94-339">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-339">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-340">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Clear%2A> -Methode und verschiedene andere Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-340">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="71a94-341">Die <xref:System.Collections.Generic.List%601.Clear%2A> Methode am Ende des Programms verwendet, um alle Elemente aus der Liste zu entfernen und die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> anschließend werden Eigenschaften angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-341">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="list.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-342">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-342">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-343">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-343">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-344">Bestimmt, ob sich ein Element in <see cref="T:System.Collections.Generic.List`1" /> befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-344">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-345">
            <see langword="true" />, wenn das <paramref name="item" /> in der <see cref="T:System.Collections.Generic.List`1" /> gefunden wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-345">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-346">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs, Gleichheit, gemäß der Implementierung des Objekts die <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> -Methode für `T` (den Typ der Werte in der Liste).</span><span class="sxs-lookup"><span data-stu-id="71a94-346">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="71a94-347">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-347">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-348">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Contains%2A> und <xref:System.Collections.Generic.List%601.Exists%2A> Methoden für eine <xref:System.Collections.Generic.List%601> , enthält ein einfaches Geschäftsobjekt, das implementiert <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-348">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-349">Das folgende Beispiel enthält eine Liste von komplexen Objekten des Typs `Cube`.</span><span class="sxs-lookup"><span data-stu-id="71a94-349">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="71a94-350">Die `Cube` -Klasse implementiert die <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> Methode so, dass zwei Cubes als gleich betrachtet werden, wenn die Dimensionen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-350">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="71a94-351">In diesem Beispiel die <xref:System.Collections.Generic.List%601.Contains%2A> Methodenrückgabe `true`, da ein Cube, der die angegebenen Abmessungen hat bereits in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-351">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="member this.ConvertAll : Converter&lt;'T, 'Output&gt; -&gt; System.Collections.Generic.List&lt;'Output&gt;" Usage="list.ConvertAll converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="71a94-352">Der Typ der Elemente des Zielarrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-352">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="converter">
          <span data-ttu-id="71a94-353">Ein <see cref="T:System.Converter`2" />-Delegat, der jedes Element von einem Typ in einen anderen Typ konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-353">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-354">Konvertiert die Elemente in der aktuellen <see cref="T:System.Collections.Generic.List`1" /> in einen anderen Typ und gibt eine Liste der konvertierten Elemente zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-354">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-355">Eine <see cref="T:System.Collections.Generic.List`1" /> des Zieltyps, die die konvertierten Elemente aus der aktuellen <see cref="T:System.Collections.Generic.List`1" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-355">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-356">Die <xref:System.Converter%602> ist ein Delegat für eine Methode, ein Objekt in den Zieltyp konvertiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-356">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="71a94-357">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Converter%602> Delegaten und die konvertierten Elemente werden gespeichert, in der neuen <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-357">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-358">Die aktuelle <xref:System.Collections.Generic.List%601> bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="71a94-358">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="71a94-359">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-359">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-360">Das folgende Beispiel definiert eine Methode namens `PointFToPoint` , konvertiert ein <xref:System.Drawing.PointF> -Struktur in eine <xref:System.Drawing.Point> Struktur.</span><span class="sxs-lookup"><span data-stu-id="71a94-360">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="71a94-361">Im Beispiel wird dann erstellt eine <xref:System.Collections.Generic.List%601> von <xref:System.Drawing.PointF> strukturiert ist, erstellt eine `Converter\<PointF, Point>` delegieren (`Converter(Of PointF, Point)` in Visual Basic) zur Darstellung der `PointFToPoint` -Methode, und übergibt den Delegaten an die <xref:System.Collections.Generic.List%601.ConvertAll%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-361">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="71a94-362">Die <xref:System.Collections.Generic.List%601.ConvertAll%2A> Methode übergibt jedes Element der Liste der Eingabe der `PointFToPoint` Methode und legt die konvertierten Elemente in eine neue Liste von <xref:System.Drawing.Point> Strukturen.</span><span class="sxs-lookup"><span data-stu-id="71a94-362">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="71a94-363">Beide Listen werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-363">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-364">
            <paramref name="converter" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-364">
              <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-365">Kopiert <see cref="T:System.Collections.Generic.List`1" /> oder einen Teil davon in ein Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-365">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="list.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="71a94-366">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.List`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-366">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-367">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-367">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-368">Kopiert die gesamte <see cref="T:System.Collections.Generic.List`1" /> in ein kompatibles eindimensionales Array, wobei am Anfang des Zielarrays begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-368">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-369">Diese Methode verwendet <xref:System.Array.Copy%2A?displayProperty=nameWithType> die Elemente kopiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-369">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="71a94-370">Die Elemente kopiert werden, auf die <xref:System.Array> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-370">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-371">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-371">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-372">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.CopyTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-372">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="71a94-373">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-373">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="71a94-374">Es wird ein leeres Zeichenfolgenarray von 15 Elementen erstellt, und die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Überladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-374">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="71a94-375">Die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> Überladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Index des Arrays 6 (leer, wodurch Index 5) kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-375">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="71a94-376">Zum Schluss die <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um 3 Elemente aus der Liste ab, mit dem Index 2 kopieren, um das Array, beginnend am Array index 12 (wodurch Index 11 leer).</span><span class="sxs-lookup"><span data-stu-id="71a94-376">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="71a94-377">Der Inhalt des Arrays werden dann angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-377">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-378">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-378">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-379">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.List`1" /> ist größer als die Anzahl der Elemente, die das Ziel-<paramref name="array" /> enthalten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-379">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="list.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="71a94-380">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.List`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-380">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-381">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-381">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="71a94-382">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-382">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-383">Kopiert die gesamte <see cref="T:System.Collections.Generic.List`1" /> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Zielarrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-383">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-384">Diese Methode verwendet <xref:System.Array.Copy%2A?displayProperty=nameWithType> die Elemente kopiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-384">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="71a94-385">Die Elemente kopiert werden, auf die <xref:System.Array> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-385">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-386">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-386">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-387">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.CopyTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-387">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="71a94-388">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-388">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="71a94-389">Es wird ein leeres Zeichenfolgenarray von 15 Elementen erstellt, und die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Überladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-389">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="71a94-390">Die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> Überladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Index des Arrays 6 (leer, wodurch Index 5) kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-390">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="71a94-391">Zum Schluss die <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um 3 Elemente aus der Liste ab, mit dem Index 2 kopieren, um das Array, beginnend am Array index 12 (wodurch Index 11 leer).</span><span class="sxs-lookup"><span data-stu-id="71a94-391">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="71a94-392">Der Inhalt des Arrays werden dann angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-392">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-393">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-393">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-394">
            <paramref name="arrayIndex" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-394">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-395">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.List`1" /> überschreitet den verfügbaren Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-395">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="list.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-396">Der nullbasierte Index in der Quell-<see cref="T:System.Collections.Generic.List`1" />, ab dem mit dem Kopieren begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-396">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="71a94-397">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.List`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-397">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-398">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-398">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="71a94-399">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-399">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-400">Die Anzahl der zu kopierenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-400">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-401">Kopiert einen Bereich von Elementen aus <see cref="T:System.Collections.Generic.List`1" /> in ein kompatibles eindimensionales Array, beginnend ab dem angegebenen Index im Zielarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-401">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-402">Diese Methode verwendet <xref:System.Array.Copy%2A?displayProperty=nameWithType> die Elemente kopiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-402">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="71a94-403">Die Elemente kopiert werden, auf die <xref:System.Array> in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-403">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-404">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-404">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-405">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.CopyTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-405">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="71a94-406">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit 5 Zeichenfolgen gefüllt ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-406">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="71a94-407">Es wird ein leeres Zeichenfolgenarray von 15 Elementen erstellt, und die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Überladung wird verwendet, um alle Elemente der Liste auf das Array, beginnend auf das erste Element des Arrays zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-407">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="71a94-408">Die <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> Überladung wird verwendet, um alle Elemente der Liste, um das Array, beginnend am Index des Arrays 6 (leer, wodurch Index 5) kopieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-408">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="71a94-409">Zum Schluss die <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um 3 Elemente aus der Liste ab, mit dem Index 2 kopieren, um das Array, beginnend am Array index 12 (wodurch Index 11 leer).</span><span class="sxs-lookup"><span data-stu-id="71a94-409">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="71a94-410">Der Inhalt des Arrays werden dann angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-410">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-411">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-411">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-412">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-412">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-413">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-413">-or-</span>
          </span>
          <span data-ttu-id="71a94-414">
            <paramref name="arrayIndex" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-414">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-415">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-415">-or-</span>
          </span>
          <span data-ttu-id="71a94-416">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-416">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-417">
            <paramref name="index" /> ist gleich oder größer als die <see cref="P:System.Collections.Generic.List`1.Count" /> der Quell-<see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-417">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-418">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-418">-or-</span>
          </span>
          <span data-ttu-id="71a94-419">Die Anzahl der Elemente ab <paramref name="index" /> bis zum Ende der Quell-<see cref="T:System.Collections.Generic.List`1" /> ist größer als der zwischen <paramref name="arrayIndex" /> und dem Ende des Ziel-<paramref name="array" /> verfügbare Raum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-419">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.List&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-420">Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Generic.List`1" /> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-420">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-421">Die Anzahl der Elemente, die in <see cref="T:System.Collections.Generic.List`1" /> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-421">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-422"><xref:System.Collections.Generic.List%601.Capacity%2A> die Anzahl der Elemente, die die <xref:System.Collections.Generic.List%601> speichern können, bevor eine größenanpassung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-422"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="71a94-423"><xref:System.Collections.Generic.List%601.Count%2A> ist die Anzahl der Elemente, die in der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-423"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-424"><xref:System.Collections.Generic.List%601.Capacity%2A> ist immer größer als oder gleich <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-424"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="71a94-425">Wenn <xref:System.Collections.Generic.List%601.Count%2A> überschreitet <xref:System.Collections.Generic.List%601.Capacity%2A> beim Hinzufügen von Elementen, die Kapazität erhöht wird, durch das Neuzuordnen von internen Arrays automatisch vor dem Kopieren der alten und die neuen Elemente hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-425">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="71a94-426">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-426">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-427">Im folgende Beispiel wird veranschaulicht, wie zum Überprüfen der Kapazität und die Anzahl der einem <xref:System.Collections.Generic.List%601> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode, um zusätzliche Kapazität zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="71a94-427">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-428">Das folgende Beispiel zeigt den Wert des der <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaft an verschiedenen Punkten im Lebenszyklus einer Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-428">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="71a94-429">Nachdem die Liste erstellt und gefüllt wurde und seine Elemente angezeigt, die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaften werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-429">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="71a94-430">Diese Eigenschaften werden erneut angezeigt, nachdem die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode wurde aufgerufen, und erneut, nachdem der Inhalt der Liste gelöscht.</span><span class="sxs-lookup"><span data-stu-id="71a94-430">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'T&gt; -&gt; bool" Usage="list.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-431">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-431">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-432">Bestimmt, ob die <see cref="T:System.Collections.Generic.List`1" /> Elemente enthält, die mit den vom angegebenen Prädikat definierten Bedingungen übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-432">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-433">
            <see langword="true" />, wenn <see cref="T:System.Collections.Generic.List`1" /> ein oder mehr Elemente enthält, die die durch das angegebene Prädikat definierten Bedingungen erfüllen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-433">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-434">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-434">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-435">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> Delegaten und Verarbeitung wird angehalten, wenn eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-435">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="71a94-436">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-436">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-437">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Contains%2A> und <xref:System.Collections.Generic.List%601.Exists%2A> Methoden für eine <xref:System.Collections.Generic.List%601> , enthält ein einfaches Geschäftsobjekt, das implementiert <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-437">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-438">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Exists%2A> -Methode und mehrere andere Methoden, mit denen die <xref:System.Predicate%601> generischen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-438">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="71a94-439">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt, mit 8 Godzilla-Namen, von denen zwei (an Position 1 und 5) "Saurus" enden.</span><span class="sxs-lookup"><span data-stu-id="71a94-439">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="71a94-440">Das Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen `EndsWithSaurus`, die einen Zeichenfolgenparameter akzeptiert und gibt einen booleschen Wert, der angibt, ob die Eingabezeichenfolge in "Saurus" endet.</span><span class="sxs-lookup"><span data-stu-id="71a94-440">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="71a94-441">Die <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, und <xref:System.Collections.Generic.List%601.FindAll%2A> Methoden werden verwendet, um die Liste der mit der Suche, durchsuchen und dann die <xref:System.Collections.Generic.List%601.RemoveAll%2A> Methode wird verwendet, um alle Einträge mit "Saurus" entfernt.</span><span class="sxs-lookup"><span data-stu-id="71a94-441">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="71a94-442">Zum Schluss die <xref:System.Collections.Generic.List%601.Exists%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="71a94-442">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="71a94-443">Sie durchläuft die Liste von Anfang an und übergibt an jedes Element der `EndsWithSaurus` Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-443">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="71a94-444">Die Suche beendet, und der Rückgabe der Methode `true` Wenn die `EndsWithSaurus` Methodenrückgabe `true` für jedes Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-444">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="71a94-445">Die <xref:System.Collections.Generic.List%601.Exists%2A> Methodenrückgabe `false` da aller entsprechenden Elemente entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="71a94-445">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-446">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die `Predicate<string>` delegieren (`Predicate(Of String)` in Visual Basic) explizit.</span><span class="sxs-lookup"><span data-stu-id="71a94-446">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="71a94-447">Diese Sprachen den richtigen Delegaten aus dem Kontext ableiten und erstellen ihn automatisch.</span><span class="sxs-lookup"><span data-stu-id="71a94-447">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-448">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-448">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Find : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.Find match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-449">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-449">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-450">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das erste Vorkommen im gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-450">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-451">Das erste Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-451">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-452">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-452">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-453">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> Delegaten Zukunft die <xref:System.Collections.Generic.List%601>, beginnend mit dem ersten Element und endend mit dem letzten Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-453">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="71a94-454">Die Verarbeitung wird beendet, wenn eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-454">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="71a94-455">Bei der Suche in einer Liste mit Werttypen stellen Sie sicher, dass der Standardwert für den Typ der Search-Prädikat nicht erfüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-455">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="71a94-456">Andernfalls besteht keine Möglichkeit, eine standardmäßige Wert gibt an, dass keine Übereinstimmung gefunden wurde und ein Listenelement, das ausgeführt wird, damit der Standardwert für den Typ unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="71a94-456">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="71a94-457">Wenn der Standardwert der Suchprädikat erfüllt, verwenden Sie die <xref:System.Collections.Generic.List%601.FindIndex%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="71a94-457">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="71a94-458">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-458">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-459">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Find%2A> Methode für eine <xref:System.Collections.Generic.List%601> , die ein einfaches komplexeres Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="71a94-459">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-460">Das folgende Beispiel zeigt die Find-Methoden für die <xref:System.Collections.Generic.List%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-460">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="71a94-461">Das Beispiel für die <xref:System.Collections.Generic.List%601> -Klasse enthält `book` Objekte der Klasse `Book`, mit den Daten aus der [XML-Beispieldatei: Bücher (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="71a94-461">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="71a94-462">Die `FillList` -Methode im Beispiel verwendet [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) die Werte aus der XML-Code auf Eigenschaftswerte eines analysiert die `book` Objekte.</span><span class="sxs-lookup"><span data-stu-id="71a94-462">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="71a94-463">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-463">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="71a94-464">Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-464">Method</span></span>|<span data-ttu-id="71a94-465">Beispiel</span><span class="sxs-lookup"><span data-stu-id="71a94-465">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-466">Sucht nach einem Buch mithilfe einer ID die `IDToFind` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-466">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-467">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-467">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-468">Suchen, die alle Bücher, deren `Genre` -Eigenschaft ist "Computer" mithilfe der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-468">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-469">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der `PubBefore2001` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-469">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-470">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-470">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-471">Sucht den Index des ersten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-471">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-472">Sucht den Index des letzten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-472">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-473">Sucht dem Index des ersten Computer Buch in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-473">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-474">Sucht dem Index des letzten Buch für Computer in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-474">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-475">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-475">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Predicate&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-476">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für die Elemente definiert, nach denen gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-476">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-477">Ruft alle Elemente ab, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-477">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-478">Eine <see cref="T:System.Collections.Generic.List`1" /> mit allen Elementen, die ggf. die durch das angegebene Prädikat definierten Bedingungen erfüllen, andernfalls eine leere <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-478">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-479">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-479">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-480">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> Delegaten, und die Elemente, die die Bedingungen werden gespeichert, in der zurückgegebenen <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-480">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-481">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-481">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-482">Das folgende Beispiel zeigt die Find-Methoden für die <xref:System.Collections.Generic.List%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-482">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="71a94-483">Das Beispiel für die <xref:System.Collections.Generic.List%601> -Klasse enthält `book` Objekte der Klasse `Book`, mit den Daten aus der [XML-Beispieldatei: Bücher (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="71a94-483">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="71a94-484">Die `FillList` -Methode im Beispiel verwendet [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) die Werte aus der XML-Code auf Eigenschaftswerte eines analysiert die `book` Objekte.</span><span class="sxs-lookup"><span data-stu-id="71a94-484">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="71a94-485">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-485">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="71a94-486">Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-486">Method</span></span>|<span data-ttu-id="71a94-487">Beispiel</span><span class="sxs-lookup"><span data-stu-id="71a94-487">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-488">Sucht nach einem Buch mithilfe einer ID die `IDToFind` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-488">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-489">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-489">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-490">Suchen, die alle Bücher, deren `Genre` -Eigenschaft ist "Computer" mithilfe der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-490">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-491">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der `PubBefore2001` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-491">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-492">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-492">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-493">Sucht den Index des ersten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-493">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-494">Sucht den Index des letzten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-494">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-495">Sucht dem Index des ersten Computer Buch in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-495">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-496">Sucht dem Index des letzten Buch für Computer in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-496">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-497">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-497">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-498">Sucht nach einem Element, das die durch ein angegebenes Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens in der <see cref="T:System.Collections.Generic.List`1" /> oder einem Teil davon zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-498">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
          <span data-ttu-id="71a94-499">Diese Methode gibt -1 zurück, wenn kein Element gefunden wird, das den Bedingungen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-499">This method returns -1 if an item that matches the conditions is not found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-500">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-500">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-501">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens im gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-501">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-502">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-502">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-503">Die <xref:System.Collections.Generic.List%601> vorwärts beginnend ab dem ersten Element und endet mit dem letzten Element gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-503">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="71a94-504">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-504">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-505">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-505">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="71a94-506">Der Delegat besitzt die Signatur:</span><span class="sxs-lookup"><span data-stu-id="71a94-506">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="71a94-507">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-507">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-508">Das folgende Beispiel definiert eine `Employee` Klasse mit zwei Feldern `Name` und `Id`.</span><span class="sxs-lookup"><span data-stu-id="71a94-508">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="71a94-509">Sie definiert auch eine `EmployeeSearch` Klasse mit einer einzelnen Methode, `StartsWith`, der angibt, ob die `Employee.Name` Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die `EmployeeSearch` Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="71a94-509">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="71a94-510">Beachten Sie die Signatur dieser Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-510">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="71a94-511">mit der Signatur des Delegaten, der übergeben werden kann, entspricht die <xref:System.Collections.Generic.List%601.FindIndex%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-511">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="71a94-512">Das Beispiel instanziiert ein `List<Employee>` Objekt, bietet eine Reihe von `Employee` Objekten, und klicken Sie dann Aufrufe der <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> Methode zum Durchsuchen der gesamten Auflistung, für die erste zum ersten Mal zweimal `Employee` Objekt, dessen `Name` Feld beginnt mit "J" und das zweite Mal für die erste `Employee` Objekt, dessen `Name` Feld beginnt mit "Ju".</span><span class="sxs-lookup"><span data-stu-id="71a94-512">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection , the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-513">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-513">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="71a94-514">Der nullbasierte Startindex für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-514">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="71a94-515">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-515">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-516">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Collections.Generic.List`1" /> zurück, der vom angegebenen Index bis zum letzten Element reicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-516">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-517">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-517">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-518">Die <xref:System.Collections.Generic.List%601> Rollforward ab durchsucht `startIndex` beginnt und mit dem letzten Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-518">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="71a94-519">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-519">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-520">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-520">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="71a94-521">Der Delegat besitzt die Signatur:</span><span class="sxs-lookup"><span data-stu-id="71a94-521">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="71a94-522">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist die Anzahl von Elementen aus `startIndex` bis zum Ende der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-522">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-523">Das folgende Beispiel definiert eine `Employee` Klasse mit zwei Feldern `Name` und `Id`.</span><span class="sxs-lookup"><span data-stu-id="71a94-523">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="71a94-524">Sie definiert auch eine `EmployeeSearch` Klasse mit einer einzelnen Methode, `StartsWith`, der angibt, ob die `Employee.Name` Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die `EmployeeSearch` Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="71a94-524">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="71a94-525">Beachten Sie die Signatur dieser Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-525">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="71a94-526">mit der Signatur des Delegaten, der übergeben werden kann, entspricht die <xref:System.Collections.Generic.List%601.FindIndex%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-526">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="71a94-527">Das Beispiel instanziiert ein `List<Employee>` Objekt, bietet eine Reihe von `Employee` Objekten, und klicken Sie dann Aufrufe der <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> Methode zweimal, um der Auflistung, beginnend mit des fünften Elements (d. h. das Element am Index 4) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="71a94-527">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="71a94-528">Erstmals ausführen, sucht es nach der ersten `Employee` Objekt, dessen `Name` Feld beginnt mit "J", bei der zweiten Anwendung sucht nach der ersten `Employee` Objekt, dessen `Name` Feld beginnt mit "Ju".</span><span class="sxs-lookup"><span data-stu-id="71a94-528">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-529">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-529">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-530">
            <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-530">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="71a94-531">Der nullbasierte Startindex für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-531">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-532">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-532">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="71a94-533">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-533">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-534">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Collections.Generic.List`1" /> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen umfasst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-534">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-535">Der nullbasierte Index des ersten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-535">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-536">Die <xref:System.Collections.Generic.List%601> Rollforward ab durchsucht `startIndex` und endet um `startIndex` plus `count` minus 1, wenn `count` ist größer als 0.</span><span class="sxs-lookup"><span data-stu-id="71a94-536">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="71a94-537">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-537">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-538">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-538">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="71a94-539">Der Delegat besitzt die Signatur:</span><span class="sxs-lookup"><span data-stu-id="71a94-539">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="71a94-540">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-540">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-541">Das folgende Beispiel definiert eine `Employee` Klasse mit zwei Feldern `Name` und `Id`.</span><span class="sxs-lookup"><span data-stu-id="71a94-541">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="71a94-542">Sie definiert auch eine `EmployeeSearch` Klasse mit einer einzelnen Methode, `StartsWith`, der angibt, ob die `Employee.Name` Feld beginnt mit einer angegebenen Teilzeichenfolge, die an die `EmployeeSearch` Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="71a94-542">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="71a94-543">Beachten Sie die Signatur dieser Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-543">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="71a94-544">mit der Signatur des Delegaten, der übergeben werden kann, entspricht die <xref:System.Collections.Generic.List%601.FindIndex%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-544">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="71a94-545">Das Beispiel instanziiert ein `List<Employee>` Objekt, bietet eine Reihe von `Employee` Objekten, und klicken Sie dann Aufrufe der <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> Methode zweimal, um die gesamte Auflistung suchen (d. h. die Elemente von Index 0 in Index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span><span class="sxs-lookup"><span data-stu-id="71a94-545">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="71a94-546">Erstmals ausführen, sucht es nach der ersten `Employee` Objekt, dessen `Name` Feld beginnt mit "J", bei der zweiten Anwendung sucht nach der ersten `Employee` Objekt, dessen `Name` Feld beginnt mit "Ju".</span><span class="sxs-lookup"><span data-stu-id="71a94-546">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-547">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-547">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-548">
            <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-548">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-549">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-549">-or-</span>
          </span>
          <span data-ttu-id="71a94-550">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-550">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-551">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-551">-or-</span>
          </span>
          <span data-ttu-id="71a94-552">
            <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-552">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLast : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.FindLast match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-553">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-553">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-554">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt das letzte Vorkommen im gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-554">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-555">Das letzte Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, sofern vorhanden, andernfalls der Standardwert für den Typ <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-555">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-556">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-556">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-557">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben der <xref:System.Predicate%601> Delegaten zurück navigieren, der <xref:System.Collections.Generic.List%601>, mit dem letzten Element beginnend und endend mit dem ersten Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-557">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="71a94-558">Die Verarbeitung wird beendet, wenn eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-558">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="71a94-559">Bei der Suche in einer Liste mit Werttypen stellen Sie sicher, dass der Standardwert für den Typ der Search-Prädikat nicht erfüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-559">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="71a94-560">Andernfalls besteht keine Möglichkeit, eine standardmäßige Wert gibt an, dass keine Übereinstimmung gefunden wurde und ein Listenelement, das ausgeführt wird, damit der Standardwert für den Typ unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="71a94-560">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="71a94-561">Wenn der Standardwert der Suchprädikat erfüllt, verwenden Sie die <xref:System.Collections.Generic.List%601.FindLastIndex%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="71a94-561">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="71a94-562">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-562">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-563">Das folgende Beispiel zeigt die Find-Methoden für die <xref:System.Collections.Generic.List%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-563">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="71a94-564">Das Beispiel für die <xref:System.Collections.Generic.List%601> -Klasse enthält `book` Objekte der Klasse `Book`, mit den Daten aus der [XML-Beispieldatei: Bücher (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="71a94-564">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="71a94-565">Die `FillList` -Methode im Beispiel verwendet [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) die Werte aus der XML-Code auf Eigenschaftswerte eines analysiert die `book` Objekte.</span><span class="sxs-lookup"><span data-stu-id="71a94-565">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="71a94-566">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-566">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="71a94-567">Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-567">Method</span></span>|<span data-ttu-id="71a94-568">Beispiel</span><span class="sxs-lookup"><span data-stu-id="71a94-568">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-569">Sucht nach einem Buch mithilfe einer ID die `IDToFind` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-569">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-570">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-570">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-571">Suchen, die alle Bücher, deren `Genre` -Eigenschaft ist "Computer" mithilfe der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-571">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-572">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der `PubBefore2001` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-572">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-573">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-573">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-574">Sucht den Index des ersten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-574">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-575">Sucht den Index des letzten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-575">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-576">Sucht dem Index des ersten Computer Buch in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-576">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-577">Sucht dem Index des letzten Buch für Computer in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-577">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-578">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-578">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-579">Sucht nach einem Element, das die durch ein angegebenes Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens in der <see cref="T:System.Collections.Generic.List`1" /> oder einem Teil davon zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-579">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-580">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-580">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-581">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens im gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-581">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-582">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-582">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-583">Die <xref:System.Collections.Generic.List%601> rückwärts beginnend ab dem letzten Element und endend mit dem ersten Element gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-583">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="71a94-584">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-584">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-585">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-585">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="71a94-586">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-586">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-587">Das folgende Beispiel zeigt die Find-Methoden für die <xref:System.Collections.Generic.List%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-587">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="71a94-588">Das Beispiel für die <xref:System.Collections.Generic.List%601> -Klasse enthält `book` Objekte der Klasse `Book`, mit den Daten aus der [XML-Beispieldatei: Bücher (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="71a94-588">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="71a94-589">Die `FillList` -Methode im Beispiel verwendet [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) die Werte aus der XML-Code auf Eigenschaftswerte eines analysiert die `book` Objekte.</span><span class="sxs-lookup"><span data-stu-id="71a94-589">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="71a94-590">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-590">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="71a94-591">Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-591">Method</span></span>|<span data-ttu-id="71a94-592">Beispiel</span><span class="sxs-lookup"><span data-stu-id="71a94-592">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-593">Sucht nach einem Buch mithilfe einer ID die `IDToFind` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-593">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-594">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-594">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-595">Suchen, die alle Bücher, deren `Genre` -Eigenschaft ist "Computer" mithilfe der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-595">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-596">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der `PubBefore2001` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-596">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-597">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-597">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-598">Sucht den Index des ersten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-598">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-599">Sucht den Index des letzten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-599">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-600">Sucht dem Index des ersten Computer Buch in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-600">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-601">Sucht dem Index des letzten Buch für Computer in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-601">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-602">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-602">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="71a94-603">Der nullbasierte Startindex für die Rückwärtssuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-603">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="71a94-604">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-604">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-605">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Collections.Generic.List`1" /> zurück, der vom ersten Element bis zum angegeben Index reicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-605">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-606">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-606">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-607">Die <xref:System.Collections.Generic.List%601> wird rückwärts gesuchten beginnt am `startIndex` bis auf das erste Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-607">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="71a94-608">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-608">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-609">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-609">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="71a94-610">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in dem *n* ist die Anzahl der Elemente vom Anfang der <xref:System.Collections.Generic.List%601> zu `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="71a94-610">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-611">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-611">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-612">
            <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-612">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="71a94-613">Der nullbasierte Startindex für die Rückwärtssuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-613">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-614">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-614">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="71a94-615">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für das Element definiert, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-615">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-616">Sucht nach einem Element, das die durch das angegebene Prädikat definierten Bedingungen erfüllt, und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen im <see cref="T:System.Collections.Generic.List`1" /> zurück, der die angegebene Anzahl von Elementen umfasst und am angegebenen Index endet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-616">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-617">Der nullbasierte Index des letzten Vorkommnisses eines Elements, das mit den durch <paramref name="match" /> definierten Bedingungen übereinstimmt, sofern gefunden, andernfalls –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-617">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-618">Die <xref:System.Collections.Generic.List%601> wird rückwärts gesuchten beginnt am `startIndex` und endet um `startIndex` minus `count` plus 1, wenn `count` ist größer als 0.</span><span class="sxs-lookup"><span data-stu-id="71a94-618">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="71a94-619">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-619">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-620">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-620">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="71a94-621">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-621">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-622">Das folgende Beispiel zeigt die Find-Methoden für die <xref:System.Collections.Generic.List%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-622">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="71a94-623">Das Beispiel für die <xref:System.Collections.Generic.List%601> -Klasse enthält `book` Objekte der Klasse `Book`, mit den Daten aus der [XML-Beispieldatei: Bücher (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="71a94-623">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="71a94-624">Die `FillList` -Methode im Beispiel verwendet [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) die Werte aus der XML-Code auf Eigenschaftswerte eines analysiert die `book` Objekte.</span><span class="sxs-lookup"><span data-stu-id="71a94-624">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="71a94-625">Die folgende Tabelle beschreibt die Beispiele für die Find-Methoden.</span><span class="sxs-lookup"><span data-stu-id="71a94-625">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="71a94-626">Methode</span><span class="sxs-lookup"><span data-stu-id="71a94-626">Method</span></span>|<span data-ttu-id="71a94-627">Beispiel</span><span class="sxs-lookup"><span data-stu-id="71a94-627">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-628">Sucht nach einem Buch mithilfe einer ID die `IDToFind` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-628">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-629">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-629">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-630">Suchen, die alle Bücher, deren `Genre` -Eigenschaft ist "Computer" mithilfe der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-630">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-631">Sucht das letzte Buch in der Auflistung, die ein Veröffentlichungsdatum vor 2001, mit der `PubBefore2001` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-631">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="71a94-632">C#-Beispiel wird einen anonymen Delegat verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-632">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-633">Sucht den Index des ersten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-633">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-634">Sucht den Index des letzten Computer Buch mit dem `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-634">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-635">Sucht dem Index des ersten Computer Buch in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-635">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="71a94-636">Sucht dem Index des letzten Buch für Computer in der zweiten Hälfte der Auflistung, mit der `FindComputer` Prädikat Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-636">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-637">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-637">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-638">
            <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-638">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-639">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-639">-or-</span>
          </span>
          <span data-ttu-id="71a94-640">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-640">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-641">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-641">-or-</span>
          </span>
          <span data-ttu-id="71a94-642">
            <paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-642">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'T&gt; -&gt; unit" Usage="list.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="71a94-643">Der <see cref="T:System.Action`1" />-Delegat, der für jedes Element von <see cref="T:System.Collections.Generic.List`1" /> ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-643">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-644">Führt die angegebene Aktion für jedes Element der <see cref="T:System.Collections.Generic.List`1" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-644">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-645">Die <xref:System.Action%601> ein Delegaten an eine Methode, die eine Aktion, für das Objekt ausführt übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-645">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="71a94-646">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Action%601> delegieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-646">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="71a94-647">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-647">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="71a94-648">Ändern der zugrunde liegenden Auflistung im Hauptteil der <xref:System.Action%601> Delegat wird nicht unterstützt und verursacht nicht definiertes Verhalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-648">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-649">Das folgende Beispiel zeigt die Verwendung von der <xref:System.Action%601> Delegat zum Drucken des Inhalts von einem <xref:System.Collections.Generic.List%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-649">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="71a94-650">In diesem Beispiel die `Print` Methode wird verwendet, um den Inhalt der Liste der in der Konsole anzeigen.</span><span class="sxs-lookup"><span data-stu-id="71a94-650">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-651">Zusätzlich zum Anzeigen des Inhalts mit der `Print` -Methode, die C#-Beispiel veranschaulicht die Verwendung der Anzeige der Ergebnisse an die Konsole.</span><span class="sxs-lookup"><span data-stu-id="71a94-651">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of  to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-652">
            <paramref name="action" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-652">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-653">Ein Element in der Auflistung wurde geändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-653">An element in the collection has been modified.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.List&lt;'T&gt;.Enumerator" Usage="list.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-654">Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.List`1" /> durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-654">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-655">Ein <see cref="T:System.Collections.Generic.List`1.Enumerator" /> für die <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-655">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-656">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="71a94-656">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="71a94-657">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="71a94-657">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="71a94-658">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-658">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="71a94-659">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="71a94-659">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="71a94-660">An dieser Position ist die <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-660">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="71a94-661">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-661">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="71a94-662">Die <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> Eigenschaft gibt das gleiche Objekt bis <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-662">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="71a94-663"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> legt <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="71a94-663"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="71a94-664">Wenn <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-664">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="71a94-665">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-665">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="71a94-666">Wenn der letzte Aufruf <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-666">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="71a94-667">Sie können <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="71a94-667">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="71a94-668">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-668">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="71a94-669">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> oder <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-669">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-670">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="71a94-670">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="71a94-671">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="71a94-671">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="71a94-672">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-672">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="71a94-673">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-673">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="71a94-674">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-674">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetRange : int * int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-675">Der nullbasierte <see cref="T:System.Collections.Generic.List`1" />-Index, an dem der Bereich beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-675">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-676">Die Anzahl der Elemente im Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-676">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-677">Erstellt eine flache Kopie eines Bereichs von Elementen in der Quell-<see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-677">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-678">Eine flache Kopie eines Bereichs von Elementen in der Quell-<see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-678">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-679">Eine flache Kopie des eine Auflistung von Verweistypen oder eine Teilmenge dieser Auflistung enthält nur die Verweise auf die Elemente der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="71a94-679">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="71a94-680">Die Objekte selbst werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-680">The objects themselves are not copied.</span></span> <span data-ttu-id="71a94-681">Die Verweise in der neuen Liste zeigen auf die gleichen Objekte wie die Verweise in der ursprünglichen Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-681">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="71a94-682">Eine flache Kopie des eine Auflistung von Werttypen oder eine Teilmenge dieser Auflistung enthält die Elemente der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="71a94-682">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="71a94-683">Wenn die Elemente der Auflistung Verweise auf andere Objekte enthalten, werden diese Objekte jedoch nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-683">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="71a94-684">Die Verweise in die Elemente der neuen Sammlung zeigen Sie auf die gleichen Objekte wie die Verweise in die Elemente der ursprünglichen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="71a94-684">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="71a94-685">Im Gegensatz dazu wird eine tiefe Kopie einer Auflistung kopiert die Elemente, und alles, was durch die Elemente direkt oder indirekt verwiesen.</span><span class="sxs-lookup"><span data-stu-id="71a94-685">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="71a94-686">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-686">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-687">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.GetRange%2A> -Methode und andere Methoden der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-687">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-688">Am Ende des Beispiels die <xref:System.Collections.Generic.List%601.GetRange%2A> Methode wird verwendet, um die drei Elemente aus der Liste aus, ab Position 2 des Index abzurufen.</span><span class="sxs-lookup"><span data-stu-id="71a94-688">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="71a94-689">Die <xref:System.Collections.Generic.List%601.ToArray%2A> Methode wird aufgerufen, für das resultierende <xref:System.Collections.Generic.List%601>, erstellen ein Array von drei Elementen.</span><span class="sxs-lookup"><span data-stu-id="71a94-689">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="71a94-690">Die Elemente des Arrays werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-690">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-691">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-691">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-692">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-692">-or-</span>
          </span>
          <span data-ttu-id="71a94-693">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-693">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-694">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-694">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-695">Gibt den nullbasierten Index des ersten Vorkommens eines Werts in der <see cref="T:System.Collections.Generic.List`1" /> bzw. in einem Abschnitt davon zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-695">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="list.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-696">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-696">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-697">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-697">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-698">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-698">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-699">Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="item" /> in der gesamten <see cref="T:System.Collections.Generic.List`1" />, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-699">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-700">Die <xref:System.Collections.Generic.List%601> vorwärts beginnend ab dem ersten Element und endet mit dem letzten Element gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-700">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="71a94-701">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-701">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-702">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-702">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-703">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-703">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="71a94-704">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-704">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-705">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> -methodenüberladung, durchsucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-705">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="71a94-706">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> -methodenüberladung wird verwendet, um die Suche nach der Liste ab, mit der Indexposition 3 und am Ende der Liste fortfahren und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-706">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-707">Zum Schluss die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von zwei Einträge, beginnend an der Indexposition zwei suchen; sie gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-707">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="list.IndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-708">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-708">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-709">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-709">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="71a94-710">Der nullbasierte Startindex für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-710">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="71a94-711">0 (null) ist in einer leeren Liste gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-711">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-712">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-712">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-713">Der nullbasierte Index des ersten Vorkommens von <paramref name="item" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" />, der sich von <paramref name="index" /> bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-713">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-714">Die <xref:System.Collections.Generic.List%601> Rollforward ab durchsucht `index` beginnt und mit dem letzten Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-714">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="71a94-715">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-715">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-716">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist die Anzahl von Elementen aus `index` bis zum Ende der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-716">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-717">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-717">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="71a94-718">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-718">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-719">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> -methodenüberladung, durchsucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-719">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="71a94-720">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> -methodenüberladung wird verwendet, um die Suche nach der Liste ab, mit der Indexposition 3 und am Ende der Liste fortfahren und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-720">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-721">Zum Schluss die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von zwei Einträge, beginnend an der Indexposition zwei suchen; sie gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-721">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-722">
            <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-722">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="list.IndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-723">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-723">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-724">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-724">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="71a94-725">Der nullbasierte Startindex für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-725">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="71a94-726">0 (null) ist in einer leeren Liste gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-726">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-727">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-727">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-728">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-728">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-729">Der nullbasierte Index des ersten Vorkommens von <paramref name="item" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" />, der am <paramref name="index" /> beginnt und <paramref name="count" /> Anzahl von Elementen enthält, sofern gefunden, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-729">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-730">Die <xref:System.Collections.Generic.List%601> Rollforward ab durchsucht `index` und endet um `index` plus `count` minus 1, wenn `count` ist größer als 0.</span><span class="sxs-lookup"><span data-stu-id="71a94-730">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="71a94-731">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-731">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-732">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-732">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-733">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-733">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="71a94-734">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-734">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-735">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> -methodenüberladung, durchsucht die Liste ab und sucht das erste Vorkommen der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-735">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="71a94-736">Die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> -methodenüberladung wird verwendet, um die Suche nach der Liste ab, mit der Indexposition 3 und am Ende der Liste fortfahren und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-736">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-737">Zum Schluss die <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von zwei Einträge, beginnend an der Indexposition zwei suchen; sie gibt-1 zurück, da keine Instanzen der Suchzeichenfolge in diesem Bereich vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-737">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-738">
            <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-738">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-739">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-739">-or-</span>
          </span>
          <span data-ttu-id="71a94-740">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-740">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-741">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-741">-or-</span>
          </span>
          <span data-ttu-id="71a94-742">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-742">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="list.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-743">Der nullbasierte Index, an dem <c>item</c> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-743">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="71a94-744">Das einzufügende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-744">The object to insert.</span>
          </span>
          <span data-ttu-id="71a94-745">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-745">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-746">Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.Generic.List`1" /> ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-746">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-747"><xref:System.Collections.Generic.List%601> akzeptiert `null` als gültiger Wert für den Verweis und doppelte Elemente lässt.</span><span class="sxs-lookup"><span data-stu-id="71a94-747"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="71a94-748">Wenn <xref:System.Collections.Generic.List%601.Count%2A> bereits entspricht <xref:System.Collections.Generic.List%601.Capacity%2A>, wird die Kapazität von der <xref:System.Collections.Generic.List%601> wird erhöht, die automatisch erneut zugewiesen werden, das interne Array, und die vorhandenen Elemente in das neue Array kopiert werden, bevor das neue Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-748">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="71a94-749">Wenn `index` gleich <xref:System.Collections.Generic.List%601.Count%2A>, `item` wird am Ende hinzugefügt <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-749">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-750">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-750">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-751">Das folgende Beispiel zeigt, wie Sie hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-751">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="71a94-752">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Insert%2A> -Methode, zusammen mit verschiedenen anderen Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-752">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="71a94-753">Nachdem die Liste erstellt wurde, werden Elemente hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-753">After the list is created, elements are added.</span></span> <span data-ttu-id="71a94-754">Die <xref:System.Collections.Generic.List%601.Insert%2A> Methode wird verwendet, um ein Element in der Mitte der Liste einfügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-754">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="71a94-755">Das Element eingefügt ist ein Duplikat, das mit einem späteren Zeitpunkt entfernt wird die <xref:System.Collections.Generic.List%601.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-755">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-756">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-756">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-757">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-757">-or-</span>
          </span>
          <span data-ttu-id="71a94-758">
            <paramref name="index" /> ist größer als <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-758">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; unit" Usage="list.InsertRange (index, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-759">Der nullbasierte Index, an dem neue Elemente eingefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-759">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="71a94-760">Die Auflistung, deren Elemente in die <see cref="T:System.Collections.Generic.List`1" /> eingefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-760">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-761">Die Auflistung an sich kann nicht <see langword="null" /> sein. Sie kann jedoch Elemente enthalten, die <see langword="null" /> sind, wenn Typ <c>T</c> einen Referenztyp darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-761">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-762">Fügt die Elemente einer Auflistung am angegebenen Index in die <see cref="T:System.Collections.Generic.List`1" /> ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-762">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-763"><xref:System.Collections.Generic.List%601> akzeptiert `null` als gültiger Wert für den Verweis und doppelte Elemente lässt.</span><span class="sxs-lookup"><span data-stu-id="71a94-763"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="71a94-764">Wenn die neue <xref:System.Collections.Generic.List%601.Count%2A> (die aktuelle <xref:System.Collections.Generic.List%601.Count%2A> plus die Größe der Auflistung) wird größer sein als <xref:System.Collections.Generic.List%601.Capacity%2A>, die der Kapazität der <xref:System.Collections.Generic.List%601> wird erhöht, die automatisch erneut zugewiesen werden, das interne Array zur Aufnahme der neuen Elemente, und die vorhandene Elemente werden in das neue Array kopiert, bevor die neuen Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-764">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="71a94-765">Wenn `index` gleich <xref:System.Collections.Generic.List%601.Count%2A>, die Elemente werden hinzugefügt, bis zum Ende des <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-765">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-766">Die Reihenfolge der Elemente in der Auflistung wird beibehalten, der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-766">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-767">Diese Methode ist eine O (*n* \* *m*)-Vorgang, in denen *n* ist die Anzahl der Elemente, die hinzugefügt werden und *m* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-767">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-768">Das folgende Beispiel zeigt <xref:System.Collections.Generic.List%601.InsertRange%2A> -Methode und verschiedene weitere Methoden, die von der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-768">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-769">Nachdem die Liste erstellt und aufgefüllt, die mit den Namen der mehrere beruhigend Werk Essen Dinosaurier, wurde die <xref:System.Collections.Generic.List%601.InsertRange%2A> Methode wird verwendet, um ein Array von drei ertragreiche Fleisch Essen Dinosaurier in der Liste ab, an der Indexposition 3 einzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-769">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-770">
            <paramref name="collection" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-770">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-771">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-771">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-772">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-772">-or-</span>
          </span>
          <span data-ttu-id="71a94-773">
            <paramref name="index" /> ist größer als <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-773">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-774">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-774">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-775">Ruft das Element am angegebenen Index ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-775">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-776">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-776">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-777"><xref:System.Collections.Generic.List%601> akzeptiert `null` als gültiger Wert für den Verweis und doppelte Elemente lässt.</span><span class="sxs-lookup"><span data-stu-id="71a94-777"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="71a94-778">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="71a94-778">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="71a94-779">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist auch ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-779">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-780">Das Beispiel in diesem Abschnitt wird veranschaulicht, die <xref:System.Collections.Generic.List%601.Item%2A> -Eigenschaft (Indexer in c#) und verschiedene andere Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse.</span><span class="sxs-lookup"><span data-stu-id="71a94-780">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="71a94-781">Nachdem die Liste wurde erstellt und aufgefüllt, mit der <xref:System.Collections.Generic.List%601.Add%2A> -Methode, ein Element wird abgerufen und angezeigt, mit der <xref:System.Collections.Generic.List%601.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="71a94-781">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="71a94-782">(Ein Beispiel für die Verwendung der <xref:System.Collections.Generic.List%601.Item%2A> -Eigenschaft zum Festlegen des Werts eines Listenelements finden Sie unter <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span><span class="sxs-lookup"><span data-stu-id="71a94-782">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-783">Visual Basic, c# und in C++ haben Sie die Syntax für den Zugriff auf die <xref:System.Collections.Generic.List%601.Item%2A> Eigenschaft ohne Verwendung seines Namens.</span><span class="sxs-lookup"><span data-stu-id="71a94-783">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="71a94-784">Stattdessen die Zeichenfolgenvariable mit dem <xref:System.Collections.Generic.List%601> wird verwendet, als handele es sich um ein Array.</span><span class="sxs-lookup"><span data-stu-id="71a94-784">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="71a94-785">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <xref:System.Collections.Generic.List%601.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="71a94-785">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="71a94-786">Visual Basic implementiert <xref:System.Collections.Generic.List%601.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="71a94-786">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-787">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-787">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-788">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-788">-or-</span>
          </span>
          <span data-ttu-id="71a94-789">
            <paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-789">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-790">Gibt den nullbasierten Index des letzten Vorkommens eines Werts in der <see cref="T:System.Collections.Generic.List`1" /> bzw. in einem Abschnitt davon zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-790">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="list.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-791">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-791">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-792">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-792">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-793">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.Generic.List`1" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-793">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-794">Der nullbasierte Index des ggf. letzten Vorkommens von <paramref name="item" /> in der gesamten <see cref="T:System.Collections.Generic.List`1" />, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-794">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-795">Die <xref:System.Collections.Generic.List%601> rückwärts beginnend ab dem letzten Element und endend mit dem ersten Element gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-795">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="71a94-796">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-796">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-797">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-797">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-798">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.LastIndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-798">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="71a94-799">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-799">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-800">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> -methodenüberladung, durchsucht die gesamte Liste vom Ende und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-800">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-801">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> Überladung wird verwendet, um das Durchsuchen der Liste rückwärts, beginnend mit der Indexposition 3 aus, und Sie den Vorgang fortsetzen an den Anfang der Liste aus, damit sie das erste Vorkommen der Zeichenfolge in der Liste findet.</span><span class="sxs-lookup"><span data-stu-id="71a94-801">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="71a94-802">Zum Schluss die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von vier Einträge, beginnend an Position 4 des Index, und Erweitern von Rückwärts suchen (d. h. er durchsucht die Elemente an Stellen, 4, 3, 2 und 1); diese Suche gibt-1 zurück, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-802">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="list.LastIndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-803">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-803">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-804">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-804">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="71a94-805">Der nullbasierte Startindex für die Rückwärtssuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-805">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-806">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der<see cref="T:System.Collections.Generic.List`1" /> zurück, der sich vom ersten Element zum angegebenen Index erstreckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-806">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-807">Der nullbasierte Index des letzten Vorkommens von <paramref name="item" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" />, der sich vom ersten Element bis <paramref name="index" /> erstreckt, sofern gefunden, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-807">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-808">Die <xref:System.Collections.Generic.List%601> wird rückwärts gesuchten beginnt am `index` bis auf das erste Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-808">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="71a94-809">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-809">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-810">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in dem *n* ist die Anzahl der Elemente vom Anfang der <xref:System.Collections.Generic.List%601> zu `index`.</span><span class="sxs-lookup"><span data-stu-id="71a94-810">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-811">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.LastIndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-811">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="71a94-812">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-812">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-813">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> -methodenüberladung, durchsucht die gesamte Liste vom Ende und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-813">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-814">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> Überladung wird verwendet, um das Durchsuchen der Liste rückwärts, beginnend mit der Indexposition 3 aus, und Sie den Vorgang fortsetzen an den Anfang der Liste aus, damit sie das erste Vorkommen der Zeichenfolge in der Liste findet.</span><span class="sxs-lookup"><span data-stu-id="71a94-814">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="71a94-815">Zum Schluss die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von vier Einträge, beginnend an Position 4 des Index, und Erweitern von Rückwärts suchen (d. h. er durchsucht die Elemente an Stellen, 4, 3, 2 und 1); diese Suche gibt-1 zurück, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-815">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-816">
            <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-816">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="list.LastIndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-817">Das im <see cref="T:System.Collections.Generic.List`1" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-817">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-818">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-818">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="71a94-819">Der nullbasierte Startindex für die Rückwärtssuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-819">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-820">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-820">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-821">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in <see cref="T:System.Collections.Generic.List`1" /> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-821">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-822">Der nullbasierte Index des letzten Vorkommens von <paramref name="item" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.Generic.List`1" />, der <paramref name="count" /> Anzahl von Elementen enthält und am <paramref name="index" /> endet, sofern gefunden, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-822">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-823">Die <xref:System.Collections.Generic.List%601> wird rückwärts gesuchten beginnt am `index` und endet um `index` minus `count` plus 1, wenn `count` ist größer als 0.</span><span class="sxs-lookup"><span data-stu-id="71a94-823">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="71a94-824">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-824">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-825">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-825">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-826">Das folgende Beispiel zeigt alle drei Überladungen, der die <xref:System.Collections.Generic.List%601.LastIndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-826">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="71a94-827">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen wird erstellt, mit einem Eintrag, der an der Indexposition 0 und Indexposition 5 zweimal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-827">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="71a94-828">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> -methodenüberladung, durchsucht die gesamte Liste vom Ende und das zweite Vorkommen der Zeichenfolge sucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-828">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="71a94-829">Die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> Überladung wird verwendet, um das Durchsuchen der Liste rückwärts, beginnend mit der Indexposition 3 aus, und Sie den Vorgang fortsetzen an den Anfang der Liste aus, damit sie das erste Vorkommen der Zeichenfolge in der Liste findet.</span><span class="sxs-lookup"><span data-stu-id="71a94-829">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="71a94-830">Zum Schluss die <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> Überladung wird verwendet, um einen Bereich von 4 Einträge, beginnend an Position 4 des Index aus, und erweitern Rückwärts suchen (d. h. er durchsucht die Elemente an Stellen, 4, 3, 2 und 1); diese Suche gibt-1 zurück, da keine Instanzen der Suche vorhanden sind die Zeichenfolge in diesem Bereich.</span><span class="sxs-lookup"><span data-stu-id="71a94-830">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-831">
            <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-831">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-832">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-832">-or-</span>
          </span>
          <span data-ttu-id="71a94-833">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-833">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-834">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-834">-or-</span>
          </span>
          <span data-ttu-id="71a94-835">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-835">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="list.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-836">Das aus der <see cref="T:System.Collections.Generic.List`1" /> zu entfernende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-836">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-837">Der Wert kann für Verweistypen <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-837">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-838">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-838">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-839">
            <see langword="true" />, wenn das <paramref name="item" /> erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-839">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-840">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn das <paramref name="item" /> nicht in der <see cref="T:System.Collections.Generic.List`1" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-840">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-841">Wenn Typ `T` implementiert die <xref:System.IEquatable%601> generische Schnittstelle, die der Gleichheitsvergleich ist die <xref:System.IEquatable%601.Equals%2A> -Methode der Schnittstelle; andernfalls ist die der Standardgleichheitsvergleich <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="71a94-841">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="71a94-842">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-842">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-843">Das folgende Beispiel zeigt, wie Sie hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-843">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="71a94-844">Das folgende Beispiel zeigt <xref:System.Collections.Generic.List%601.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-844">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="71a94-845">Verschiedene Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> generische Klasse hinzufügen, einfügen und suchen Sie in der Liste verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-845">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="71a94-846">Nach diesen Operationen enthält die Liste bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="71a94-846">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="71a94-847">Die <xref:System.Collections.Generic.List%601.Remove%2A> Methode wird verwendet, um die erste Instanz des doppelten Elements entfernt werden soll, und der Inhalt wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-847">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="71a94-848">Die <xref:System.Collections.Generic.List%601.Remove%2A> Methode wird immer der erste gefundene Instanz entfernt.</span><span class="sxs-lookup"><span data-stu-id="71a94-848">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; int" Usage="list.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-849">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen für die Elemente definiert, die entfernt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-849">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-850">Entfernt alle Elemente, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-850">Removes all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-851">Die Anzahl der aus der <see cref="T:System.Collections.Generic.List`1" /> entfernten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-851">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-852">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-852">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-853">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> Delegaten und die Elemente, die die Bedingungen werden entfernt, von der <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-853">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="71a94-854">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-854">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-855">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.RemoveAll%2A> -Methode und mehrere andere Methoden, mit denen die <xref:System.Predicate%601> generischen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-855">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="71a94-856">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt, mit 8 Godzilla-Namen, von denen zwei (an Position 1 und 5) "Saurus" enden.</span><span class="sxs-lookup"><span data-stu-id="71a94-856">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="71a94-857">Das Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen `EndsWithSaurus`, die einen Zeichenfolgenparameter akzeptiert und gibt einen booleschen Wert, der angibt, ob die Eingabezeichenfolge in "Saurus" endet.</span><span class="sxs-lookup"><span data-stu-id="71a94-857">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="71a94-858">Die <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, und <xref:System.Collections.Generic.List%601.FindAll%2A> Methoden werden verwendet, um die Liste der mit der Suche zu durchsuchen.</span><span class="sxs-lookup"><span data-stu-id="71a94-858">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="71a94-859">Die <xref:System.Collections.Generic.List%601.RemoveAll%2A> Methode wird verwendet, um alle Einträge mit "Saurus" entfernt.</span><span class="sxs-lookup"><span data-stu-id="71a94-859">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="71a94-860">Sie durchläuft die Liste von Anfang an und übergibt an jedes Element der `EndsWithSaurus` Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-860">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="71a94-861">Das Element wird entfernt, wenn die `EndsWithSaurus` Methodenrückgabe `true`.</span><span class="sxs-lookup"><span data-stu-id="71a94-861">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-862">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die `Predicate<string>` delegieren (`Predicate(Of String)` in Visual Basic) explizit.</span><span class="sxs-lookup"><span data-stu-id="71a94-862">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="71a94-863">Diese Sprachen den richtigen Delegaten aus dem Kontext abgeleitet, und es automatisch erstellen.</span><span class="sxs-lookup"><span data-stu-id="71a94-863">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="71a94-864">Zum Schluss die <xref:System.Collections.Generic.List%601.Exists%2A> Methode stellt sicher, dass keine Zeichenfolgen in der Liste, die mit "Saurus" enden.</span><span class="sxs-lookup"><span data-stu-id="71a94-864">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-865">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-865">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="list.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-866">Der nullbasierte Index des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-866">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-867">Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-867">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-868">Beim Aufruf <xref:System.Collections.Generic.List%601.RemoveAt%2A> um ein Element zu entfernen, die verbleibenden Elemente in der Liste werden neu nummeriert, um das entfernte Element zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="71a94-868">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="71a94-869">Wenn Sie das Element am Index 3 entfernen, wird z. B. das Element am Index 4 an Position 3 verschoben.</span><span class="sxs-lookup"><span data-stu-id="71a94-869">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="71a94-870">Darüber hinaus die Anzahl der Elemente in der Liste (dargestellt durch die <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaft) wird um 1 verringert.</span><span class="sxs-lookup"><span data-stu-id="71a94-870">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="71a94-871">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="71a94-871">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-872">Das folgende Beispiel zeigt, wie Sie hinzufügen, entfernen, und fügen Sie ein einfaches Geschäftsobjekt in einem <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="71a94-872">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-873">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-873">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-874">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-874">-or-</span>
          </span>
          <span data-ttu-id="71a94-875">
            <paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-875">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="list.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-876">Der nullbasierte Startindex des zu entfernenden Bereichs von Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-876">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-877">Die Anzahl der zu entfernenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-877">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-878">Entfernt einen Bereich von Elementen aus der <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-878">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-879">Die Elemente werden entfernt und die Elemente, die für die folgenden Elemente in der <xref:System.Collections.Generic.List%601> die Indizes reduziert, indem `count`.</span><span class="sxs-lookup"><span data-stu-id="71a94-879">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="71a94-880">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-880">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-881">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.RemoveRange%2A> -Methode und verschiedene weitere Methoden, die von der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-881">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-882">Nachdem die Liste wurde erstellt und geändert, die <xref:System.Collections.Generic.List%601.RemoveRange%2A> Methode wird verwendet, um die zwei Elemente aus der Liste ab, an der Indexposition 2 entfernt.</span><span class="sxs-lookup"><span data-stu-id="71a94-882">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-883">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-883">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-884">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-884">-or-</span>
          </span>
          <span data-ttu-id="71a94-885">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-885">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-886">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-886">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-887">Kehrt die Reihenfolge der Elemente in der <see cref="T:System.Collections.Generic.List`1" /> bzw. in einem Teil davon um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-887">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="list.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-888">Kehrt die Reihenfolge der Elemente in der gesamten <see cref="T:System.Collections.Generic.List`1" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-888">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-889">Diese Methode verwendet <xref:System.Array.Reverse%2A?displayProperty=nameWithType> um die Reihenfolge der Elemente umzukehren.</span><span class="sxs-lookup"><span data-stu-id="71a94-889">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="71a94-890">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-890">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-891">Das folgende Beispiel veranschaulicht beide Überladungen der <xref:System.Collections.Generic.List%601.Reverse%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-891">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="71a94-892">Das Beispiel erstellt eine <xref:System.Collections.Generic.List%601> von Zeichenfolgen und sechs Zeichenfolgen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-892">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="71a94-893">Die <xref:System.Collections.Generic.List%601.Reverse> Überladung wird verwendet, um der Liste der umgekehrte und klicken Sie dann die <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> Überladung wird verwendet, um die Mitte der Liste, beginnend mit 1 Element, und umfasst vier Elemente umzukehren.</span><span class="sxs-lookup"><span data-stu-id="71a94-893">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Reverse : int * int -&gt; unit" Usage="list.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-894">Der nullbasierte Startindex des Bereichs, in dem die Reihenfolge umgekehrt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-894">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-895">Die Anzahl der Elemente im Bereich, in dem die Reihenfolge umgekehrt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-895">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-896">Kehrt die Reihenfolge der Elemente im angegebenen Bereich um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-896">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-897">Diese Methode verwendet <xref:System.Array.Reverse%2A?displayProperty=nameWithType> um die Reihenfolge der Elemente umzukehren.</span><span class="sxs-lookup"><span data-stu-id="71a94-897">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="71a94-898">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-898">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-899">Das folgende Beispiel veranschaulicht beide Überladungen der <xref:System.Collections.Generic.List%601.Reverse%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-899">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="71a94-900">Das Beispiel erstellt eine <xref:System.Collections.Generic.List%601> von Zeichenfolgen und sechs Zeichenfolgen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-900">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="71a94-901">Die <xref:System.Collections.Generic.List%601.Reverse> Überladung wird verwendet, um der Liste der umgekehrte und klicken Sie dann die <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> Überladung wird verwendet, um die Mitte der Liste, beginnend mit 1 Element, und umfasst vier Elemente umzukehren.</span><span class="sxs-lookup"><span data-stu-id="71a94-901">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-902">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-902">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-903">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-903">-or-</span>
          </span>
          <span data-ttu-id="71a94-904">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-904">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-905">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-905">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-906">Sortiert die Elemente in der <see cref="T:System.Collections.Generic.List`1" /> bzw. in einem Teil davon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-906">Sorts the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overloaded-method-syntax"></a><span data-ttu-id="71a94-907">Syntax für überladene Methoden</span><span class="sxs-lookup"><span data-stu-id="71a94-907">Overloaded method syntax</span></span>  
 <span data-ttu-id="71a94-908">Die <xref:System.Collections.Generic.List%601.Sort%2A> Methoden ermöglichen es Ihnen, mit der Standardvergleich für den Objekttyp in der Liste zu sortieren, oder geben Sie eine Sortiermethode Kunden.</span><span class="sxs-lookup"><span data-stu-id="71a94-908">The  <xref:System.Collections.Generic.List%601.Sort%2A> methods enable you to sort with the default comparer for the object type in the list, or specify a customer sort method.</span></span>  
  
 <span data-ttu-id="71a94-909">[Liste\<T >. Sort()](xref:System.Collections.Generic.List`1.Sort*) sortiert die Elemente in der gesamten Liste mithilfe des Standardvergleichs des Objekttyps frei, die in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-909">[List\<T>.Sort()](xref:System.Collections.Generic.List`1.Sort*) Sorts the elements in the entire list using the default comparer of the object type held in the list.</span></span>  
  
 <span data-ttu-id="71a94-910">[Liste\<T >. Sortieren Sie M (Vergleich\<T > Vergleich)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) sortiert die Elemente in der gesamten Liste mithilfe des angegebenen Vergleichs.</span><span class="sxs-lookup"><span data-stu-id="71a94-910">[List\<T>.Sort M(Comparison\<T> comparison)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) Sorts the elements in the entire list using the specified comparer.</span></span>  
  
 <span data-ttu-id="71a94-911">[Liste\<T >. Sort (IComparer\<T > Comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) sortiert die Elemente in der gesamten Liste, die unter Verwendung des angegebenen <xref:System.Comparison%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="71a94-911">[List\<T>.Sort(IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in the entire list using the specified <xref:System.Comparison%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="71a94-912">[Liste\<T >. Sort (Index Int32, Int32-Anzahl, IComparer\<T > Comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) sortiert die Elemente in einem Bereich von Elementen in der Liste mithilfe des angegebenen Vergleichs.</span><span class="sxs-lookup"><span data-stu-id="71a94-912">[List\<T>.Sort(Int32 index, Int32 count, IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in a range of elements in list using the specified comparer.</span></span>  
  
## <a name="parameters"></a><span data-ttu-id="71a94-913">Parameter</span><span class="sxs-lookup"><span data-stu-id="71a94-913">Parameters</span></span>  
  
|<span data-ttu-id="71a94-914">Parameter</span><span class="sxs-lookup"><span data-stu-id="71a94-914">Parameter</span></span>|<span data-ttu-id="71a94-915">Typ</span><span class="sxs-lookup"><span data-stu-id="71a94-915">Type</span></span>|<span data-ttu-id="71a94-916">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="71a94-916">Description</span></span>|  
|---------------|----------|-----------------|  
|`comparison`|<xref:System.Comparison%601>|<span data-ttu-id="71a94-917">Die Delegatmethode, verwenden Sie beim Vergleichen von Elementen</span><span class="sxs-lookup"><span data-stu-id="71a94-917">The delegate method to use when comparing elements</span></span>|  
|<span data-ttu-id="71a94-918">comparer</span><span class="sxs-lookup"><span data-stu-id="71a94-918">comparer</span></span>|<xref:System.Collections.Generic.IComparer%601>|<span data-ttu-id="71a94-919">Die <xref:System.Collections.Generic.IComparer%601> Implementierung beim Vergleichen von Elementen, oder null, wenn der Standardvergleich <xref:System.Collections.Generic.Comparer%601.Default>.</span><span class="sxs-lookup"><span data-stu-id="71a94-919">The <xref:System.Collections.Generic.IComparer%601> implementation to use when comparing elements, or null to use the default comparer <xref:System.Collections.Generic.Comparer%601.Default>.</span></span>|  
|`index`|<xref:System.Int32>|<span data-ttu-id="71a94-920">Der nullbasierte Startindex des zu sortierenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="71a94-920">The zero-based starting index of the range to sort.</span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="71a94-921">Die Länge des zu sortierenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="71a94-921">The length of the range to sort.</span></span>|  
  
## <a name="exceptions"></a><span data-ttu-id="71a94-922">Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="71a94-922">Exceptions</span></span>  
  
|<span data-ttu-id="71a94-923">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="71a94-923">Exception</span></span>|<span data-ttu-id="71a94-924">Bedingung</span><span class="sxs-lookup"><span data-stu-id="71a94-924">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="71a94-925">`comparer` nicht angegeben ist oder `null`, und der Standardcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Implementierung kann nicht gefunden werden. die <xref:System.IComparable%601?displayProperty=nameWithType> generische Schnittstelle oder die <xref:System.IComparable?displayProperty=nameWithType> Schnittstelle für den Typ "t".</span><span class="sxs-lookup"><span data-stu-id="71a94-925">`comparer` is not specified or `null`, and the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> cannot find implementation of the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface or the <xref:System.IComparable?displayProperty=nameWithType> interface for type T.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="71a94-926">`comparison` ist `null`.</span><span class="sxs-lookup"><span data-stu-id="71a94-926">`comparison` is `null`.</span></span>|  
|<xref:System.ArgumentException>|<span data-ttu-id="71a94-927">Die Implementierung der `comparison` oder `comparer` hat einen Fehler während der Sortierung verursacht.</span><span class="sxs-lookup"><span data-stu-id="71a94-927">The implementation of `comparison` or `comparer` caused an error during the sort.</span></span> <span data-ttu-id="71a94-928">`comparison` kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-928">For example, `comparison` might not return 0 when comparing an item with itself.</span></span><br /><br /> <span data-ttu-id="71a94-929">- oder -</span><span class="sxs-lookup"><span data-stu-id="71a94-929">-or-</span></span><br /><br /> <span data-ttu-id="71a94-930">`index` und `count` geben keinen gültigen Bereich in der <xref:System.Collections.Generic.List%601> an.</span><span class="sxs-lookup"><span data-stu-id="71a94-930">`index` and `count` do not specify a valid range in the <xref:System.Collections.Generic.List%601>.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="71a94-931">`index` ist kleiner als 0 oder `count` ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="71a94-931">`index` is less than 0 or `count` is less than 0.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="list.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-932">Sortiert die Elemente in der gesamten <see cref="T:System.Collections.Generic.List`1" /> mithilfe des Standardvergleichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-932">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-933">Diese Methode verwendet die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> für Typ `T` bestimmt die Reihenfolge der Listenelemente.</span><span class="sxs-lookup"><span data-stu-id="71a94-933">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="71a94-934">Die <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> -Eigenschaft überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-934">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-935">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-935">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-936">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-936">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-937">Diese Methode verwendet die <xref:System.Array.Sort%2A?displayProperty=nameWithType> -Methode, die die Beobachtung der inneren Abläufe Sortierung wie folgt angewendet:</span><span class="sxs-lookup"><span data-stu-id="71a94-937">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="71a94-938">Wenn die Größe der Partition weniger als 16 Elementen ist, wird eine Einfügung Sortieralgorithmus.</span><span class="sxs-lookup"><span data-stu-id="71a94-938">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-939">Überschreitet die Anzahl der Partitionen 2 Protokolle *n*, wobei *n* ist der Bereich des Eingabearrays, es wird ein Heapsort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-939">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-940">Andernfalls wird einen Quicksort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-940">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="71a94-941">Diese Implementierung führt eine instabile Sortierung. d.h., wenn zwei Elemente gleich sind, möglicherweise die Reihenfolge nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-941">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="71a94-942">Im Gegensatz dazu behält eine stabile Sortierung, die Reihenfolge der Elemente, die gleich sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-942">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="71a94-943">Diese Methode ist im Durchschnitt eine O (*n* Log *n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>; im schlimmsten Fall ist es eine O (*n* <sup>2</sup>) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-943">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-944">Das folgende Beispiel fügt einige Objektnamen ein `List<String>` -Objekt, zeigt die Liste ohne Reihenfolge aufruft der <xref:System.Collections.Generic.List%601.Sort%2A> -Methode, und zeigt dann die sortierte Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-944">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="71a94-945">Der folgende Code zeigt die <xref:System.Collections.Generic.List%601.Sort> und <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> Überladungen der Methode für ein einfaches Geschäftsobjekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-945">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="71a94-946">Aufrufen der <xref:System.Collections.Generic.List%601.Sort> Methode führt die Verwendung der Standardvergleich für den Typ Teil, und die <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> Methode mit einer anonymen Methode implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-946">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-947">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-947">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="71a94-948">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, in keiner bestimmten Reihenfolge aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-948">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="71a94-949">Die Liste wird angezeigt, sortiert und erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-949">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="71a94-950">Die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> methodenüberladung wird dann verwendet, um die für zwei Zeichenfolgen zu suchen, die nicht in der Liste enthalten sind und die <xref:System.Collections.Generic.List%601.Insert%2A> Methode verwendet, um sie einzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-950">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="71a94-951">Der Rückgabewert von der <xref:System.Collections.Generic.List%601.BinarySearch%2A> Methode ist in jedem Fall negativ, da die Zeichenfolgen nicht in der Liste enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-951">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="71a94-952">Dem bitweisen Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) dieses negative Zahl wird der Index des ersten Elements in der Liste, die größer als die zu suchende Zeichenfolge und Einfügen von an dieser Stelle ist beibehalten der Sortierreihenfolge die Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-952">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="71a94-953">Die zweite Zeichenfolge für die Suche ist größer als ein Element in der Liste, daher ist die Position der Einfügemarke am Ende der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-953">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-954">Der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-954">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="71a94-955">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <see langword="null" />, wenn der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-955">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-956">Sortiert die Elemente in der gesamten <see cref="T:System.Collections.Generic.List`1" /> mithilfe des angegebenen Comparers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-956">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-957">Wenn `comparer` angegeben ist, wird die Elemente der <xref:System.Collections.Generic.List%601> sortiert sind, mit dem angegebenen <xref:System.Collections.Generic.IComparer%601> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="71a94-957">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="71a94-958">Wenn `comparer` ist `null`, die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-958">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-959">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-959">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-960">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-960">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-961">Diese Methode verwendet die <xref:System.Array.Sort%2A?displayProperty=nameWithType> -Methode, die die Beobachtung der inneren Abläufe Sortierung wie folgt angewendet:</span><span class="sxs-lookup"><span data-stu-id="71a94-961">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="71a94-962">Wenn die Größe der Partition weniger als 16 Elementen ist, wird eine Einfügung Sortieralgorithmus.</span><span class="sxs-lookup"><span data-stu-id="71a94-962">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-963">Überschreitet die Anzahl der Partitionen 2 Protokolle *n*, wobei *n* ist der Bereich des Eingabearrays, es wird ein Heapsort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-963">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-964">Andernfalls wird einen Quicksort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-964">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="71a94-965">Diese Implementierung führt eine instabile Sortierung. d.h., wenn zwei Elemente gleich sind, möglicherweise die Reihenfolge nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-965">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="71a94-966">Im Gegensatz dazu behält eine stabile Sortierung, die Reihenfolge der Elemente, die gleich sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-966">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="71a94-967">Diese Methode ist im Durchschnitt eine O (*n* Log *n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>; im schlimmsten Fall ist es eine O (*n* <sup>2</sup>) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-967">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-968">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-968">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="71a94-969">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die `IComparer<string>` (`IComparer(Of String)` in Visual Basic `IComparer<String^>` in Visual C++) generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-969">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="71a94-970">Der Vergleich funktioniert wie folgt: zunächst der zu vergleichenden Objekte getestet `null`, und als kleiner als ein Wert ungleich Null ein null-Verweis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-970">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="71a94-971">Zweitens: die Länge der Zeichenfolge verglichen werden und größer sein als die längere Zeichenfolge angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-971">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="71a94-972">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-972">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="71a94-973">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, in keiner bestimmten Reihenfolge aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-973">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="71a94-974">Die Liste ist, mit dem alternativen Vergleich sortiert und angezeigten erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-974">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="71a94-975">Die <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> methodenüberladung wird dann verwendet, um die für mehrere Zeichenfolgen zu suchen, die nicht in der Liste der alternativen Vergleich anwenden.</span><span class="sxs-lookup"><span data-stu-id="71a94-975">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="71a94-976">Die <xref:System.Collections.Generic.List%601.Insert%2A> Methode verwendet, um die Zeichenfolgen einzufügen.</span><span class="sxs-lookup"><span data-stu-id="71a94-976">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="71a94-977">Diese beiden Methoden befinden sich in der Funktion, die mit dem Namen `SearchAndInsert`, zusammen mit Code, das bitweise Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) der die negative Zahl, die vom <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> und verwenden sie als Index für Einfügen der neuen Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="71a94-977">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-978">
            <paramref name="comparer" /> ist <see langword="null" />, und der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für den Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-978">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-979">Die Implementierung von <paramref name="comparer" /> hat während der Sortierung einen Fehler verursacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-979">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="71a94-980">
            <paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-980">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; unit" Usage="list.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="71a94-981">Die <see cref="T:System.Comparison`1" />, die beim Vergleich von Elementen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-981">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-982">Sortiert die Elemente in der gesamten <see cref="T:System.Collections.Generic.List`1" /> mithilfe des angegebenen <see cref="T:System.Comparison`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-982">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-983">Wenn `comparison` angegeben ist, wird die Elemente der <xref:System.Collections.Generic.List%601> mithilfe der durch den Delegaten dargestellte Methode sortiert sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-983">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="71a94-984">Wenn `comparison` ist `null`, <xref:System.ArgumentNullException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="71a94-984">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="71a94-985">Diese Methode verwendet <xref:System.Array.Sort%2A?displayProperty=nameWithType>, die die Beobachtung der inneren Abläufe Sortierreihenfolge wie folgt angewendet:</span><span class="sxs-lookup"><span data-stu-id="71a94-985">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="71a94-986">Wenn die Größe der Partition weniger als 16 Elementen ist, verwendet einen Sortieralgorithmus einfügen</span><span class="sxs-lookup"><span data-stu-id="71a94-986">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="71a94-987">Überschreitet die Anzahl der Partitionen 2 Protokolle *n*, wobei *n* ist der Bereich des Eingabearrays, er verwendet eine [Heapsort](https://en.wikipedia.org/wiki/Heapsort) Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="71a94-987">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-988">Andernfalls wird einen Quicksort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-988">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="71a94-989">Diese Implementierung führt eine instabile Sortierung. d.h., wenn zwei Elemente gleich sind, möglicherweise die Reihenfolge nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-989">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="71a94-990">Im Gegensatz dazu behält eine stabile Sortierung, die Reihenfolge der Elemente, die gleich sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-990">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="71a94-991">Diese Methode ist im Durchschnitt eine O (*n* Log *n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>; im schlimmsten Fall ist es eine O (*n* <sup>2</sup>) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-991">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-992">Der folgende Code zeigt die <xref:System.Collections.Generic.List%601.Sort%2A> und <xref:System.Collections.Generic.List%601.Sort%2A> Überladungen der Methode für ein einfaches Geschäftsobjekt.</span><span class="sxs-lookup"><span data-stu-id="71a94-992">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="71a94-993">Aufrufen der <xref:System.Collections.Generic.List%601.Sort%2A> Methode führt die Verwendung der Standardvergleich für den Typ Teil, und die <xref:System.Collections.Generic.List%601.Sort%2A> Methode ist mit einer anonymen Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-993">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-994">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-994">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="71a94-995">Das Beispiel definiert eine alternative Vergleichsmethode für Zeichenfolgen wird mit dem Namen `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="71a94-995">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="71a94-996">Diese Methode funktioniert folgendermaßen: zuerst die zu vergleichenden Objekte getestet `null`, und als kleiner als ein Wert ungleich Null ein null-Verweis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-996">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="71a94-997">Zweitens: die Länge der Zeichenfolge verglichen werden und größer sein als die längere Zeichenfolge angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-997">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="71a94-998">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-998">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="71a94-999">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit vier Zeichenfolgen, in keiner bestimmten Reihenfolge aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-999">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="71a94-1000">Die Liste enthält auch eine leere Zeichenfolge und ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="71a94-1000">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="71a94-1001">Die Liste wird angezeigt, sortiert, mit einem <xref:System.Comparison%601> generischen Delegaten darstellt der `CompareDinosByLength` -Methode, und erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1001">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-1002">
            <paramref name="comparison" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1002">
              <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1003">Die Implementierung von <paramref name="comparison" /> hat während der Sortierung einen Fehler verursacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1003">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="71a94-1004">
            <paramref name="comparison" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1004">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <altmember cref="T:System.Comparison`1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-1005">Der nullbasierte Startindex des zu sortierenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1005">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71a94-1006">Die Länge des zu sortierenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1006">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="71a94-1007">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die beim Vergleichen von Elementen verwendet werden soll, oder <see langword="null" />, wenn der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1007">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1008">Sortiert die Elemente in einem Bereich von Elementen in der <see cref="T:System.Collections.Generic.List`1" /> mithilfe des angegebenen Vergleichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1008">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1009">Wenn `comparer` angegeben ist, wird die Elemente der <xref:System.Collections.Generic.List%601> sortiert sind, mit dem angegebenen <xref:System.Collections.Generic.IComparer%601> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="71a94-1009">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="71a94-1010">Wenn `comparer` ist `null`, die standardmäßige Vergleichsfunktion <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable%601> generische Schnittstelle und verwendet Sie, dass diese Implementierung, sofern verfügbar.</span><span class="sxs-lookup"><span data-stu-id="71a94-1010">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="71a94-1011">Wenn dies nicht der Fall ist, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> überprüft, ob der Typ `T` implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-1011">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="71a94-1012">Wenn Typ `T` implementiert nicht die beiden Schnittstellen, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1012">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-1013">Diese Methode verwendet <xref:System.Array.Sort%2A?displayProperty=nameWithType>, die die Beobachtung der inneren Abläufe Sortierreihenfolge wie folgt angewendet:</span><span class="sxs-lookup"><span data-stu-id="71a94-1013">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="71a94-1014">Wenn die Größe der Partition weniger als 16 Elementen ist, verwendet einen Sortieralgorithmus einfügen</span><span class="sxs-lookup"><span data-stu-id="71a94-1014">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="71a94-1015">Überschreitet die Anzahl der Partitionen 2 Protokolle *n*, wobei *n* ist der Bereich des Eingabearrays, er verwendet eine [Heapsort](https://en.wikipedia.org/wiki/Heapsort) Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="71a94-1015">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="71a94-1016">Andernfalls wird einen Quicksort-Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-1016">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="71a94-1017">Diese Implementierung führt eine instabile Sortierung. d.h., wenn zwei Elemente gleich sind, möglicherweise die Reihenfolge nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="71a94-1017">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="71a94-1018">Im Gegensatz dazu behält eine stabile Sortierung, die Reihenfolge der Elemente, die gleich sind.</span><span class="sxs-lookup"><span data-stu-id="71a94-1018">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="71a94-1019">Diese Methode ist im Durchschnitt eine O (*n* Log *n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>; im schlimmsten Fall ist es eine O (*n* <sup>2</sup>) Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1019">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-1020">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung, und die <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="71a94-1020">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="71a94-1021">Im Beispiel wird einen alternativen Vergleich für DinoCompare implementiert-Zeichenfolgen definiert die `IComparer<string>` (`IComparer(Of String)` in Visual Basic `IComparer<String^>` in Visual C++) generische Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="71a94-1021">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="71a94-1022">Der Vergleich funktioniert wie folgt: zunächst der zu vergleichenden Objekte getestet `null`, und als kleiner als ein Wert ungleich Null ein null-Verweis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-1022">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="71a94-1023">Zweitens: die Länge der Zeichenfolge verglichen werden und größer sein als die längere Zeichenfolge angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-1023">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="71a94-1024">Wenn die Länge gleich sind, wird im dritten gewöhnliche Zeichenfolgenvergleich verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-1024">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="71a94-1025">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt und mit den Namen der fünf pflanzenfressenden Dinosaurier und drei zur Dinosaurier aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1025">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="71a94-1026">In jedem der beiden Gruppen sind die Namen nicht in der Sortierreihenfolge vor.</span><span class="sxs-lookup"><span data-stu-id="71a94-1026">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="71a94-1027">Die Liste wird angezeigt, die Gruppe der Pflanzenfresser wird mit dem alternativen Vergleich sortiert und die Liste wird erneut angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1027">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="71a94-1028">Die <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> methodenüberladung wird dann verwendet, um die "Brachiosaurus" nur die Gruppe der Pflanzenfresser gesucht.</span><span class="sxs-lookup"><span data-stu-id="71a94-1028">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="71a94-1029">Die Zeichenfolge nicht gefunden wird, und das bitweise Komplement (der ~-Operator in c# und Visual C++, `Xor` -1 in Visual Basic) der die negative Zahl zurückgegeben, die von der <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Methode dient als Index für das Einfügen der neuen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="71a94-1029">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-1030">
            <paramref name="index" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1030">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71a94-1031">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1031">-or-</span>
          </span>
          <span data-ttu-id="71a94-1032">
            <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1032">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1033">
            <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in der <see cref="T:System.Collections.Generic.List`1" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1033">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="71a94-1034">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1034">-or-</span>
          </span>
          <span data-ttu-id="71a94-1035">Die Implementierung von <paramref name="comparer" /> hat einen Fehler während der Sortierung verursacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1035">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="71a94-1036">
            <paramref name="comparer" /> kann z. B. möglicherweise nicht 0 zurückgeben, wenn ein Element mit sich selbst verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1036">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71a94-1037">
            <paramref name="comparer" /> ist <see langword="null" />, und der Standardvergleich <see cref="P:System.Collections.Generic.Comparer`1.Default" /> kann keine Implementierung der generischen <see cref="T:System.IComparable`1" />-Schnittstelle oder der <see cref="T:System.IComparable" />-Schnittstelle für den Typ <paramref name="T" /> finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1037">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1038">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1038">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1039">
            <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1039">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-1040">In der Standardimplementierung von <see cref="T:System.Collections.Generic.List`1" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1040">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1041">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1041">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="71a94-1042">Eine Auflistung, die schreibgeschützt ist, ist einfach eine Sammlung mit einem Wrapper, der verhindert, dass die Auflistung zu ändern; Wenn die zugrunde liegende Auflistung Änderungen vorgenommen werden, spiegelt die schreibgeschützte Auflistung aus diesem Grund diese Änderungen wider.</span><span class="sxs-lookup"><span data-stu-id="71a94-1042">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="71a94-1043">Das Abrufen des Wertes dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1043">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1044">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1044">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1045">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1045">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1046">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1046">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="71a94-1047">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="71a94-1047">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="71a94-1048">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1048">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="71a94-1049">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1049">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="71a94-1050">An dieser Position ist die <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1050">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="71a94-1051">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1051">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="71a94-1052">Die <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft gibt das gleiche Objekt bis <xref:System.Collections.IEnumerator.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-1052">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="71a94-1053"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.Generic.IEnumerator%601.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="71a94-1053"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="71a94-1054">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-1054">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="71a94-1055">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-1055">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="71a94-1056">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1056">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="71a94-1057">Sie können <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1057">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="71a94-1058">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-1058">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="71a94-1059">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1059">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-1060">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1060">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="71a94-1061">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1061">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="71a94-1062">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1062">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="71a94-1063">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1063">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="71a94-1064">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1064">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="71a94-1065">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1065">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="71a94-1066">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1066">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="71a94-1067">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1067">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1068">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1068">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a94-1069">Wenn der Typ der Quelle <xref:System.Collections.ICollection> kann nicht automatisch in den Typ des Ziels umgewandelt werden `array`, die nicht generischen Implementierungen der <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> auslösen <xref:System.InvalidCastException>, während die Implementierungen die generischen auslösen <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1069">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="71a94-1070">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1070">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-1071">
            <paramref name="array" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1071">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-1072">
            <paramref name="arrayIndex" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1072">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1073">
            <paramref name="array" /> ist mehrdimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1073">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="71a94-1074">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1074">-or-</span>
          </span>
          <span data-ttu-id="71a94-1075">
            <paramref name="array" /> hat keine nullbasierte Indizierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1075">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="71a94-1076">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1076">-or-</span>
          </span>
          <span data-ttu-id="71a94-1077">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> überschreitet den verfügbaren Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1077">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="71a94-1078">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1078">-or-</span>
          </span>
          <span data-ttu-id="71a94-1079">Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1079">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1080">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1080">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1081">
            <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1081">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-1082">In der Standardimplementierung von <see cref="T:System.Collections.Generic.List`1" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1082">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1083">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1083">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="71a94-1084">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="71a94-1084">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="71a94-1085">In dem seltenen Fall, in dem Enumeration mit Schreibzugriffe konkurriert, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1085">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="71a94-1086">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1086">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="71a94-1087"><xref:System.Collections.ICollection.SyncRoot%2A> Gibt ein Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1087"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="71a94-1088">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor Sie den Zugriff auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="71a94-1088">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="71a94-1089">Das Abrufen des Wertes dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1089">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1090">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1090">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1091">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1091">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="71a94-1092">In der Standardimplementierung der <see cref="T:System.Collections.Generic.List`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1092">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1093">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1093">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="71a94-1094">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="71a94-1094">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="71a94-1095">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1095">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="71a94-1096">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1096">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="71a94-1097"><xref:System.Collections.ICollection.SyncRoot%2A> Gibt ein Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1097"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="71a94-1098">Synchronisierung ist nur wirksam, wenn alle Threads dieses Objekt zu sperren, bevor Sie den Zugriff auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="71a94-1098">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="71a94-1099">Der folgende Code zeigt die Verwendung der <xref:System.Collections.ICollection.SyncRoot%2A> -Eigenschaft für c#, C++ und Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="71a94-1099">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="71a94-1100">Das Abrufen des Wertes dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1100">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1101">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1101">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1102">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1102">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1103">Die `foreach` -Anweisung der c#-Sprache (`for each` in C++ `For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1103">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="71a94-1104">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="71a94-1104">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="71a94-1105">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1105">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="71a94-1106">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1106">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="71a94-1107"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-1107"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="71a94-1108">An dieser Position ist die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1108">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="71a94-1109">Aus diesem Grund müssen Sie Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode, um den Enumerator auf das erste Element der Auflistung vor dem Lesen des Werts von <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1109">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="71a94-1110">Die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft dasselbe Objekt zurück, bis entweder <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="71a94-1110">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="71a94-1111"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="71a94-1111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="71a94-1112">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-1112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="71a94-1113">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="71a94-1113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="71a94-1114">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="71a94-1115">Um <xref:System.Collections.IEnumerator.Current%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="71a94-1116">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-1116">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="71a94-1117">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1117">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="71a94-1118">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="71a94-1119">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1119">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="71a94-1120">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="71a94-1120">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="71a94-1121">Standardimplementierungen der Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="71a94-1121">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="71a94-1122">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1122">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-1123">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1123">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1124">Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1124">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1125">Die Position, an der das neue Element eingefügt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1125">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1126">Wenn <xref:System.Collections.Generic.List%601.Count%2A> ist kleiner als <xref:System.Collections.Generic.List%601.Capacity%2A>, diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1126">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="71a94-1127">Wenn die Kapazität für das neue Element erhöht werden muss, wird diese Methode eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1127">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1128">Der <paramref name="item" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1128">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-1129">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1129">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1130">Ermittelt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1130">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1131">
            <see langword="true" />, wenn das <paramref name="item" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1131">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1132">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-1132">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-1133">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1133">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-1134">Das im <see cref="T:System.Collections.IList" /> zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1134">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1135">Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1135">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1136">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1136">The index of <paramref name="item" /> if found in the list; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1137">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-1137">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-1138">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1138">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1139">Der <paramref name="item" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1139">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-1140">Der nullbasierte Index, an dem <c>item</c> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1140">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="71a94-1141">Das in die <see cref="T:System.Collections.IList" /> einzufügende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1141">The object to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1142">Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1142">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1143">Wenn `index` gleich der Anzahl der Elemente in <xref:System.Collections.IList> ist, wird `item` am Ende angefügt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1143">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="71a94-1144">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1144">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-1145">
            <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1145">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1146">Der <paramref name="item" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1146">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1147">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1147">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1148">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1148">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-1149">In der Standardimplementierung von <see cref="T:System.Collections.Generic.List`1" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1149">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1150">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu. Vorhandene Elemente können jedoch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1150">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="71a94-1151">Eine Auflistung mit fester Größe ist einfach eine Sammlung mit einem Wrapper, der verhindert wird, hinzufügen und Entfernen von Elementen. Wenn Änderungen, um die zugrunde liegende Auflistung vorgenommen werden, z. B. zum Hinzufügen oder Entfernen von Elementen, gibt die Auflistung mit fester Größe aus diesem Grund, diese Änderungen wieder.</span><span class="sxs-lookup"><span data-stu-id="71a94-1151">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="71a94-1152">Das Abrufen des Wertes dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1152">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1153">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1153">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1154">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1154">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-1155">In der Standardimplementierung von <see cref="T:System.Collections.Generic.List`1" /> gibt diese Eigenschaft immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1155">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1156">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1156">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="71a94-1157">Eine Auflistung, die schreibgeschützt ist, ist einfach eine Sammlung mit einem Wrapper, der verhindert, dass die Auflistung zu ändern; Wenn die zugrunde liegende Auflistung Änderungen vorgenommen werden, spiegelt die schreibgeschützte Auflistung aus diesem Grund diese Änderungen wider.</span><span class="sxs-lookup"><span data-stu-id="71a94-1157">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="71a94-1158">Das Abrufen des Wertes dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1158">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71a94-1159">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1159">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1160">Ruft das Element am angegebenen Index ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1160">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a94-1161">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1161">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1162">Die C#-Sprache verwendet die [dies](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer der <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="71a94-1162">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="71a94-1163">Visual Basic implementiert <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="71a94-1163">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="71a94-1164">Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist auch ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="71a94-1164">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71a94-1165">
            <paramref name="index" /> ist kein gültiger Index in der <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1165">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1166">Die Eigenschaft wird festgelegt, und der <paramref name="value" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1166">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71a94-1167">Das aus der <see cref="T:System.Collections.IList" /> zu entfernende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1167">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1168">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1168">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1169">Diese Methode bestimmt mithilfe des Standardgleichheitsvergleichs Gleichheit <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> für `T`, den Typ der Werte in der Liste.</span><span class="sxs-lookup"><span data-stu-id="71a94-1169">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="71a94-1170">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1170">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71a94-1171">Der <paramref name="item" /> weist einen Typ auf, der der <see cref="T:System.Collections.IList" /> nicht zugeordnet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1171">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="list.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1172">Kopiert die Elemente der <see cref="T:System.Collections.Generic.List`1" /> in ein neues Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1172">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1173">Ein Array, das Kopien der Elemente aus der <see cref="T:System.Collections.Generic.List`1" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1173">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1174">Die Elemente kopiert werden, mithilfe von <xref:System.Array.Copy%2A?displayProperty=nameWithType>, d.h. ein O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1174">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="71a94-1175">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1175">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-1176">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.ToArray%2A> -Methode und andere Methoden der <xref:System.Collections.Generic.List%601> -Klasse, die für Bereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="71a94-1176">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="71a94-1177">Am Ende des Beispiels die <xref:System.Collections.Generic.List%601.GetRange%2A> Methode wird verwendet, um die drei Elemente aus der Liste aus, ab Position 2 des Index abzurufen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1177">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="71a94-1178">Die <xref:System.Collections.Generic.List%601.ToArray%2A> Methode wird aufgerufen, für das resultierende <xref:System.Collections.Generic.List%601>, erstellen ein Array von drei Elementen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1178">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="71a94-1179">Die Elemente des Arrays werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1179">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="list.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a94-1180">Legt die Kapazität auf die Anzahl der tatsächlich in der <see cref="T:System.Collections.Generic.List`1" /> befindlichen Elemente fest, sofern diese Anzahl unter dem Schwellenwert liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1180">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1181">Diese Methode kann verwendet werden, um eine Auflistung der Aufwand minimiert werden, wenn keine neuen Elemente der Auflistung hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1181">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="71a94-1182">Die Kosten erneut zugewiesen werden, und das Kopieren einer großen <xref:System.Collections.Generic.List%601> jedoch sehr aufwändig sein kann also die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode führt keine Aktion, wenn die Liste mit mehr als 90 Prozent der Kapazität ist.</span><span class="sxs-lookup"><span data-stu-id="71a94-1182">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="71a94-1183">Dadurch wird vermieden, er für einen relativ kleinen zu großen neuzuordnung Kosten verursacht.</span><span class="sxs-lookup"><span data-stu-id="71a94-1183">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-1184">Der aktuelle Schwellenwert von 90 Prozent, möglicherweise in zukünftigen Versionen ändern.</span><span class="sxs-lookup"><span data-stu-id="71a94-1184">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="71a94-1185">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1185">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="71a94-1186">Zurücksetzen einer <xref:System.Collections.Generic.List%601> aufrufen, um den Anfangszustand, die <xref:System.Collections.Generic.List%601.Clear%2A> Methode vor dem Aufruf der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-1186">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="71a94-1187">Beim Verkürzen einer leeren <xref:System.Collections.Generic.List%601> definiert die Kapazität der <xref:System.Collections.Generic.List%601> auf die Standardkapazität.</span><span class="sxs-lookup"><span data-stu-id="71a94-1187">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="71a94-1188">Die Kapazität kann auch festgelegt werden mithilfe der <xref:System.Collections.Generic.List%601.Capacity%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="71a94-1188">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-1189">Im folgende Beispiel wird veranschaulicht, wie zum Überprüfen der Kapazität und die Anzahl der einem <xref:System.Collections.Generic.List%601> enthält ein einfaches Geschäftsobjekt und veranschaulicht die Verwendung der <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode, um zusätzliche Kapazität zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="71a94-1189">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="71a94-1190">Das folgende Beispiel veranschaulicht die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-1190">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="71a94-1191">Verschiedene Eigenschaften und Methoden der <xref:System.Collections.Generic.List%601> Klasse hinzufügen, einfügen und Entfernen von Elementen aus einer Liste von Zeichenfolgen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1191">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="71a94-1192">Die <xref:System.Collections.Generic.List%601.TrimExcess%2A> Methode wird verwendet, um die Kapazität entsprechend der Anzahl die zu reduzieren und die <xref:System.Collections.Generic.List%601.Capacity%2A> und <xref:System.Collections.Generic.List%601.Count%2A> Eigenschaften werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1192">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="71a94-1193">Wenn der freie Kapazität kleiner als 10 Prozent der Gesamtkapazität hätte, würde die Größe die Liste nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="71a94-1193">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="71a94-1194">Abschließend werden der Inhalt der Liste gelöscht.</span><span class="sxs-lookup"><span data-stu-id="71a94-1194">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.TrueForAll : Predicate&lt;'T&gt; -&gt; bool" Usage="list.TrueForAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="71a94-1195">Der <see cref="T:System.Predicate`1" />-Delegat, der die Bedingungen definiert, auf die die Elemente geprüft werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1195">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a94-1196">Bestimmt, ob jedes Element in der <see cref="T:System.Collections.Generic.List`1" /> die vom angegebenen Prädikat definierten Bedingungen erfüllt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1196">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71a94-1197">
            <see langword="true" />, wenn jedes Element in der <see cref="T:System.Collections.Generic.List`1" /> die vom angegebenen Prädikat definierten Bedingungen erfüllt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1197">
              <see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a94-1198">Wenn die Liste über keine Elemente verfügt, ist der Rückgabewert <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1198">If the list has no elements, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a94-1199">Die <xref:System.Predicate%601> ist ein Delegat einer Methode, die zurückgibt `true` , wenn das Objekt zu übergeben sie mit der im Delegat definierten Bedingungen übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1199">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="71a94-1200">Die Elemente des aktuellen <xref:System.Collections.Generic.List%601> werden einzeln an übergeben die <xref:System.Predicate%601> Delegaten und Verarbeitung wird beendet, wenn der Delegat zurückgegeben `false` für jedes Element.</span><span class="sxs-lookup"><span data-stu-id="71a94-1200">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="71a94-1201">Die Elemente werden nacheinander verarbeitet, und alle Aufrufe werden in einem einzelnen Thread ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="71a94-1201">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="71a94-1202">Diese Methode ist eine O (*n*)-Vorgang, in denen *n* ist <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71a94-1202">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71a94-1203">Das folgende Beispiel zeigt die <xref:System.Collections.Generic.List%601.TrueForAll%2A> -Methode und mehrere andere Methoden, mit denen <xref:System.Predicate%601> generischen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="71a94-1203">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="71a94-1204">Ein <xref:System.Collections.Generic.List%601> von Zeichenfolgen erstellt, mit 8 Godzilla-Namen, von denen zwei (an Position 1 und 5) "Saurus" enden.</span><span class="sxs-lookup"><span data-stu-id="71a94-1204">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="71a94-1205">Das Beispiel definiert auch eine Prädikat Search-Methode, die mit dem Namen `EndsWithSaurus`, die einen Zeichenfolgenparameter akzeptiert und gibt einen booleschen Wert, der angibt, ob die Eingabezeichenfolge in "Saurus" endet.</span><span class="sxs-lookup"><span data-stu-id="71a94-1205">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="71a94-1206">Die <xref:System.Collections.Generic.List%601.TrueForAll%2A> Methode durchläuft die Liste von Anfang an und übergibt an jedes Element der `EndsWithSaurus` Methode.</span><span class="sxs-lookup"><span data-stu-id="71a94-1206">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="71a94-1207">Die Suche beendet, wenn die `EndsWithSaurus` Methodenrückgabe `false`.</span><span class="sxs-lookup"><span data-stu-id="71a94-1207">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a94-1208">In c# und Visual Basic, ist es nicht erforderlich, erstellen Sie die `Predicate<string>` delegieren (`Predicate(Of String)` in Visual Basic) explizit.</span><span class="sxs-lookup"><span data-stu-id="71a94-1208">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="71a94-1209">Diese Sprachen den richtigen Delegaten aus dem Kontext ableiten und erstellen ihn automatisch.</span><span class="sxs-lookup"><span data-stu-id="71a94-1209">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71a94-1210">
            <paramref name="match" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a94-1210">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>