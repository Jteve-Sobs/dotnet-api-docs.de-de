<Type Name="IDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d15234e3809213fbe2493913358ba69442535d5" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82323652" /></Metadata><TypeSignature Language="C#" Value="public interface IDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IDictionary&lt;'Key, 'Value&gt; = interface&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="775c0-101">Die Art der Schlüssel im Wörterbuch</span><span class="sxs-lookup"><span data-stu-id="775c0-101">The type of keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="775c0-102">Die Art der Werte im Wörterbuch</span><span class="sxs-lookup"><span data-stu-id="775c0-102">The type of values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="775c0-103">Stellt eine generische Auflistung von Schlüssel-Wert-Paaren dar.</span><span class="sxs-lookup"><span data-stu-id="775c0-103">Represents a generic collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-104">Die <xref:System.Collections.Generic.IDictionary%602>-Schnittstelle ist die Basisschnittstelle für generische Auflistungen von Schlüssel-Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="775c0-104">The <xref:System.Collections.Generic.IDictionary%602> interface is the base interface for generic collections of key/value pairs.</span></span>  
  
 <span data-ttu-id="775c0-105">Jedes Element ist ein Schlüssel-Wert-Paar, das in einem <xref:System.Collections.Generic.KeyValuePair%602> Objekt gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-105">Each element is a key/value pair stored in a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="775c0-106">Jedes Paar muss über einen eindeutigen Schlüssel verfügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-106">Each pair must have a unique key.</span></span> <span data-ttu-id="775c0-107">Implementierungen können unterschiedlich sein, unabhängig davon, ob `key` `null`werden können.</span><span class="sxs-lookup"><span data-stu-id="775c0-107">Implementations can vary in whether they allow `key` to be `null`.</span></span> <span data-ttu-id="775c0-108">Der Wert kann `null` und muss nicht eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="775c0-108">The value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="775c0-109">Die <xref:System.Collections.Generic.IDictionary%602>-Schnittstelle ermöglicht das Auflisten der enthaltenen Schlüssel und Werte, aber Sie impliziert keine bestimmte Sortierreihenfolge.</span><span class="sxs-lookup"><span data-stu-id="775c0-109">The <xref:System.Collections.Generic.IDictionary%602> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="775c0-110">Die `foreach`-Anweisung der C# Sprache (`For Each` in Visual Basic, `for each` in C++) gibt ein Objekt des Typs der Elemente in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="775c0-110">The `foreach` statement of the C# language (`For Each` in Visual Basic, `for each` in C++) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="775c0-111">Da jedes Element des <xref:System.Collections.Generic.IDictionary%602> ein Schlüssel-Wert-Paar ist, ist der Elementtyp nicht der Typ des Schlüssels oder der Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="775c0-111">Since each element of the <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="775c0-112">Stattdessen wird der Elementtyp <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="775c0-112">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="775c0-113">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="775c0-113">For example:</span></span>  
  
 [!code-cpp[Generic.IDictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.IDictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source2.cs#11)]
 [!code-vb[Generic.IDictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="775c0-114">Bei der `foreach`-Anweisung handelt es sich um einen Wrapper um den Enumerator, der nur das Lesen von, das Schreiben in die Auflistung ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="775c0-114">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="775c0-115">Da Schlüssel geerbt werden können und ihr Verhalten geändert wird, kann die absolute Eindeutigkeit nicht durch Vergleiche mithilfe der <xref:System.Type.Equals%2A>-Methode garantiert werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-115">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-116">Im folgenden Codebeispiel wird eine leere <xref:System.Collections.Generic.Dictionary%602> von Zeichen folgen mit Zeichen folgen Schlüsseln erstellt und über die <xref:System.Collections.Generic.IDictionary%602>-Schnittstelle darauf zugegriffen.</span><span class="sxs-lookup"><span data-stu-id="775c0-116">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings, with string keys, and accesses it through the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="775c0-117">Das Codebeispiel verwendet die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-117">The code example uses the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="775c0-118">Das Beispiel zeigt, dass die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode <xref:System.ArgumentException> auslöst, wenn versucht wird, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-118">The example demonstrates that the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method throws <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="775c0-119">Im Beispiel wird die <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft (der Indexer C#in) verwendet, um Werte abzurufen. Dies zeigt, dass eine <xref:System.Collections.Generic.KeyNotFoundException> ausgelöst wird, wenn ein angeforderter Schlüssel nicht vorhanden ist, und dass der Wert, der einem Schlüssel zugeordnet ist, ersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-119">The example uses the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="775c0-120">Das Beispiel zeigt, wie die <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A>-Methode als effizientere Methode zum Abrufen von Werten verwendet wird, wenn ein Programm häufig Schlüsselwerte, die nicht im Wörterbuch enthalten sind, testen muss und die <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A>-Methode verwenden, um zu testen, ob ein Schlüssel vorhanden ist, bevor die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-120">The example shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and how to use the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="775c0-121">Schließlich wird im Beispiel gezeigt, wie die Schlüssel und Werte im Wörterbuch aufgelistet werden und wie die Werte allein mithilfe der <xref:System.Collections.Generic.IDictionary%602.Values%2A>-Eigenschaft aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-121">Finally, the example shows how to enumerate the keys and values in the dictionary, and how to enumerate the values alone using the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
 [!code-cpp[Generic.IDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#1)]
 [!code-csharp[Generic.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="775c0-122">Die implementierende Klasse muss über eine Mittel zum Vergleichen von Schlüsseln verfügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-122">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit" Usage="iDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="775c0-123">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-123">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="775c0-124">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-124">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="775c0-125">Fügt der <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="775c0-125">Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-126">Sie können auch die <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft verwenden, um neue Elemente hinzuzufügen, indem Sie den Wert eines Schlüssels festlegen, der nicht im Wörterbuch vorhanden ist. beispielsweise `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="775c0-126">You can also use the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span></span> <span data-ttu-id="775c0-127">Wenn der angegebene Schlüssel jedoch bereits im Wörterbuch vorhanden ist, überschreibt das Festlegen der <xref:System.Collections.Generic.IDictionary%602.Item%2A> Eigenschaft den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="775c0-127">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="775c0-128">Im Gegensatz dazu werden durch die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="775c0-128">In contrast, the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="775c0-129">Implementierungen können variieren, wie Sie die Gleichheit von Objekten bestimmen. beispielsweise verwendet die <xref:System.Collections.Generic.List%601>-Klasse <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, während die <xref:System.Collections.Generic.Dictionary%602>-Klasse es dem Benutzer ermöglicht, die <xref:System.Collections.Generic.IComparer%601> Implementierung anzugeben, die zum Vergleichen von Schlüsseln verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-129">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="775c0-130">Implementierungen können unterschiedlich sein, unabhängig davon, ob `key` `null`werden können.</span><span class="sxs-lookup"><span data-stu-id="775c0-130">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-131">Im folgenden Codebeispiel wird eine leere <xref:System.Collections.Generic.Dictionary%602> von Zeichen folgen mit ganzzahligen Schlüsseln erstellt und über die <xref:System.Collections.Generic.IDictionary%602>-Schnittstelle darauf zugegriffen.</span><span class="sxs-lookup"><span data-stu-id="775c0-131">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings, with integer keys, and accesses it through the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="775c0-132">Das Codebeispiel verwendet die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode, um einige Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-132">The code example uses the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="775c0-133">Das Beispiel zeigt, dass die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode eine <xref:System.ArgumentException> auslöst, wenn versucht wird, einen doppelten Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="775c0-133">The example demonstrates that the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="775c0-134">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-134">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-135">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-135">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#2)]
 [!code-csharp[Generic.IDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#2)]
 [!code-vb[Generic.IDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775c0-136"><paramref name="key" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="775c0-136"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="775c0-137">In <see cref="T:System.Collections.Generic.IDictionary`2" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span><span class="sxs-lookup"><span data-stu-id="775c0-137">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="775c0-138"><see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="775c0-138">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool" Usage="iDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="775c0-139">Der Schlüssel, der in der <see cref="T:System.Collections.Generic.IDictionary`2" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-139">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="775c0-140">Ermittelt, ob das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="775c0-140">Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="775c0-141"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="775c0-141"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-142">Implementierungen können variieren, wie Sie die Gleichheit von Objekten bestimmen. beispielsweise verwendet die <xref:System.Collections.Generic.List%601>-Klasse <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, während die <xref:System.Collections.Generic.Dictionary%602>-Klasse es dem Benutzer ermöglicht, die <xref:System.Collections.Generic.IComparer%601> Implementierung anzugeben, die zum Vergleichen von Schlüsseln verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-142">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="775c0-143">Implementierungen können unterschiedlich sein, unabhängig davon, ob `key` `null`werden können.</span><span class="sxs-lookup"><span data-stu-id="775c0-143">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-144">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A>-Methode verwendet wird, um zu testen, ob ein Schlüssel vorhanden ist, bevor die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-144">The following code example shows how to use the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="775c0-145">Außerdem wird gezeigt, wie die <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A>-Methode verwendet wird, die eine effizientere Methode zum Abrufen von Werten sein kann, wenn ein Programm häufig Schlüsselwerte verwendet, die nicht im Wörterbuch vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="775c0-145">It also shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method, which can be a more efficient way to retrieve values if a program frequently tries key values that are not in the dictionary.</span></span> <span data-ttu-id="775c0-146">Schließlich wird gezeigt, wie Elemente mithilfe <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft (Indexer in C#) eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-146">Finally, it shows how to insert items using <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="775c0-147">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-147">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-148">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-148">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#6)]
 [!code-csharp[Generic.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#6)]
 [!code-vb[Generic.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#6)]  
[!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
[!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775c0-149"><paramref name="key" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="775c0-149"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="775c0-150">Der Schlüssel des abzurufenden oder festzulegenden Elements.</span><span class="sxs-lookup"><span data-stu-id="775c0-150">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="775c0-151">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="775c0-151">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="775c0-152">Das Element mit dem angegebenen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="775c0-152">The element with the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-153">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe der folgenden Syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="775c0-153">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="775c0-154">Sie können auch die <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft verwenden, um neue Elemente hinzuzufügen, indem Sie den Wert eines Schlüssels festlegen, der nicht im Wörterbuch vorhanden ist. beispielsweise `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="775c0-154">You can also use the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue` in C# (`myCollection("myNonexistentKey") = myValue` in Visual Basic).</span></span> <span data-ttu-id="775c0-155">Wenn der angegebene Schlüssel jedoch bereits im Wörterbuch vorhanden ist, überschreibt das Festlegen der <xref:System.Collections.Generic.IDictionary%602.Item%2A> Eigenschaft den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="775c0-155">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="775c0-156">Im Gegensatz dazu werden durch die <xref:System.Collections.Generic.IDictionary%602.Add%2A>-Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="775c0-156">In contrast, the <xref:System.Collections.Generic.IDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="775c0-157">Implementierungen können variieren, wie Sie die Gleichheit von Objekten bestimmen. beispielsweise verwendet die <xref:System.Collections.Generic.List%601>-Klasse <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, während die <xref:System.Collections.Generic.Dictionary%602>-Klasse es dem Benutzer ermöglicht, die <xref:System.Collections.Generic.IComparer%601> Implementierung anzugeben, die zum Vergleichen von Schlüsseln verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-157">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="775c0-158">Die C# Sprache verwendet das [this](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer, anstatt die <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="775c0-158">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="775c0-159">Visual Basic implementiert <xref:System.Collections.Generic.IDictionary%602.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="775c0-159">Visual Basic implements <xref:System.Collections.Generic.IDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="775c0-160">Implementierungen können unterschiedlich sein, unabhängig davon, ob `key` `null`werden können.</span><span class="sxs-lookup"><span data-stu-id="775c0-160">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-161">Im folgenden Codebeispiel wird die <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft (der Indexer C#in) verwendet, um Werte abzurufen. Dies zeigt, dass eine <xref:System.Collections.Generic.KeyNotFoundException> ausgelöst wird, wenn ein angeforderter Schlüssel nicht vorhanden ist, und dass der Wert, der einem Schlüssel zugeordnet ist, ersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-161">The following code example uses the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="775c0-162">Das Beispiel zeigt auch, wie die <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A>-Methode als effizientere Methode zum Abrufen von Werten verwendet wird, wenn ein Programm häufig Schlüsselwerte ausprobieren muss, die nicht im Wörterbuch vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="775c0-162">The example also shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="775c0-163">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-163">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-164">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-164">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#3)]
 [!code-csharp[Generic.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#3)]
 [!code-vb[Generic.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#3)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
[!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
[!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775c0-165"><paramref name="key" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="775c0-165"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="775c0-166">Die Eigenschaft wird abgerufen, und <paramref name="key" /> wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="775c0-166">The property is retrieved and <paramref name="key" /> is not found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="775c0-167">Die Eigenschaft wird festgelegt, und <see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="775c0-167">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="775c0-168">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="775c0-168">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="775c0-169">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Schlüssel des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</span><span class="sxs-lookup"><span data-stu-id="775c0-169">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-170">Die Reihenfolge der Schlüssel in der zurückgegebenen <xref:System.Collections.Generic.ICollection%601> ist nicht angegeben, es ist jedoch garantiert, dass Sie die gleiche Reihenfolge wie die entsprechenden Werte in der <xref:System.Collections.Generic.ICollection%601> haben, die von der <xref:System.Collections.Generic.IDictionary%602.Values%2A>-Eigenschaft zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-170">The order of the keys in the returned <xref:System.Collections.Generic.ICollection%601> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.Generic.ICollection%601> returned by the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-171">Im folgenden Codebeispiel wird gezeigt, wie Schlüssel allein mit der <xref:System.Collections.Generic.IDictionary%602.Keys%2A>-Eigenschaft aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-171">The following code example shows how to enumerate keys alone using the <xref:System.Collections.Generic.IDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="775c0-172">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-172">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-173">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-173">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#9)]
 [!code-csharp[Generic.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#9)]
 [!code-vb[Generic.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool" Usage="iDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="775c0-174">Der Schlüssel des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="775c0-174">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="775c0-175">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="775c0-175">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="775c0-176"><see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="775c0-176"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="775c0-177">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="key" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.IDictionary`2" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="775c0-177">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-178">Implementierungen können variieren, wie Sie die Gleichheit von Objekten bestimmen. beispielsweise verwendet die <xref:System.Collections.Generic.List%601>-Klasse <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, während die <xref:System.Collections.Generic.Dictionary%602>-Klasse es dem Benutzer ermöglicht, die <xref:System.Collections.Generic.IComparer%601> Implementierung anzugeben, die zum Vergleichen von Schlüsseln verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-178">Implementations can vary in how they determine equality of objects; for example, the <xref:System.Collections.Generic.List%601> class uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas the <xref:System.Collections.Generic.Dictionary%602> class allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-179">Im folgenden Codebeispiel wird gezeigt, wie ein Schlüssel-Wert-Paar mithilfe der <xref:System.Collections.Generic.IDictionary%602.Remove%2A>-Methode aus einem Wörterbuch entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-179">The following code example shows how to remove a key/value pair from a dictionary using the <xref:System.Collections.Generic.IDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="775c0-180">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-180">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-181">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-181">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#10)]
 [!code-csharp[Generic.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#10)]
 [!code-vb[Generic.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775c0-182"><paramref name="key" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="775c0-182"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="775c0-183"><see cref="T:System.Collections.Generic.IDictionary`2" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="775c0-183">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key * 'Value -&gt; bool" Usage="iDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="775c0-184">Der Schlüssel, dessen Wert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="775c0-184">The key whose value to get.</span></span></param>
        <param name="value"><span data-ttu-id="775c0-185">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="775c0-185">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span></span> <span data-ttu-id="775c0-186">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="775c0-186">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="775c0-187">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="775c0-187">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="775c0-188"><see langword="true" />, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="775c0-188"><see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-189">Diese Methode kombiniert die Funktionalität der <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A>-Methode und der <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="775c0-189">This method combines the functionality of the <xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="775c0-190">Wenn der Schlüssel nicht gefunden wird, ruft der `value`-Parameter den entsprechenden Standardwert für den Typ `TValue`ab. beispielsweise NULL (0) für ganzzahlige Typen, `false` für boolesche Typen und `null` für Verweis Typen.</span><span class="sxs-lookup"><span data-stu-id="775c0-190">If the key is not found, then the `value` parameter gets the appropriate default value for the type `TValue`; for example, zero (0) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-191">Im Beispiel wird gezeigt, wie die <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A>-Methode zum Abrufen von Werten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-191">The example shows how to use the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method to retrieve values.</span></span> <span data-ttu-id="775c0-192">Wenn ein Programm häufig Schlüsselwerte ausprobiert, die sich nicht in einem Wörterbuch befinden, kann die <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> Methode effizienter sein als die Verwendung der <xref:System.Collections.Generic.IDictionary%602.Item%2A>-Eigenschaft ( C#Indexer in), die beim Versuch, nicht vorhandene Schlüssel abzurufen, Ausnahmen auslöst.</span><span class="sxs-lookup"><span data-stu-id="775c0-192">If a program frequently tries key values that are not in a dictionary, the <xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A> method can be more efficient than using the <xref:System.Collections.Generic.IDictionary%602.Item%2A> property (the indexer in C#), which throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="775c0-193">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-193">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-194">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-194">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#5)]
 [!code-csharp[Generic.IDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#5)]
 [!code-vb[Generic.IDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#5)]  
[!code-cpp[Generic.IDictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775c0-195"><paramref name="key" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="775c0-195"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="775c0-196">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Werte im <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="775c0-196">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="775c0-197">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Werte des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</span><span class="sxs-lookup"><span data-stu-id="775c0-197">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775c0-198">Die Reihenfolge der Werte in der zurückgegebenen <xref:System.Collections.Generic.ICollection%601> ist nicht angegeben, es ist jedoch garantiert, dass Sie die gleiche Reihenfolge wie die entsprechenden Schlüssel in der <xref:System.Collections.Generic.ICollection%601> haben, die von der <xref:System.Collections.Generic.IDictionary%602.Keys%2A>-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="775c0-198">The order of the values in the returned <xref:System.Collections.Generic.ICollection%601> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.Generic.ICollection%601> returned by the <xref:System.Collections.Generic.IDictionary%602.Keys%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775c0-199">Im folgenden Codebeispiel wird gezeigt, wie Werte allein mithilfe der <xref:System.Collections.Generic.IDictionary%602.Values%2A>-Eigenschaft aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="775c0-199">The following code example shows how to enumerate values alone using the <xref:System.Collections.Generic.IDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="775c0-200">Dieser Code ist Teil eines größeren Beispiels, der kompiliert und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="775c0-200">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="775c0-201">Siehe <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="775c0-201">See <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Generic.IDictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source.cpp#8)]
 [!code-csharp[Generic.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source.cs#8)]
 [!code-vb[Generic.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
      </Docs>
    </Member>
  </Members>
</Type>
