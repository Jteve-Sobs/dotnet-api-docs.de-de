<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionary`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d63ca205014079b51a43184fd4357d42421abe16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d63ca205014079b51a43184fd4357d42421abe16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The type of keys in the dictionary.</source>
          <target state="translated">Der Typ der Schlüssel im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The type of values in the dictionary.</source>
          <target state="translated">Der Typ der Werte im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Represents a generic collection of key/value pairs.</source>
          <target state="translated">Stellt eine generische Auflistung von Schlüssel-Wert-Paaren dar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface is the base interface for generic collections of key/value pairs.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle ist die Basisschnittstelle für generische Auflistungen von Schlüssel/Wert-Paaren.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">Jedes Element ist ein Schlüssel/Wert-Paar in gespeicherten ein <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Each pair must have a unique key.</source>
          <target state="translated">Jedes Paar muss einen eindeutigen Schlüssel aufweisen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie ermöglichen <ph id="ph1">`key`</ph> werden <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The value can be <ph id="ph1">`null`</ph> and does not have to be unique.</source>
          <target state="translated">Der Wert kann <ph id="ph1">`null`</ph> und muss nicht eindeutig sein.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle ermöglicht es, die Schlüssel und Werte aufgelistet werden sollen, aber es keine bestimmte Sortierreihenfolge nicht impliziert.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++) ein Objekt des Typs der Elemente in der Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Da jedes Element von der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> ist ein Schlüssel/Wert-Paar der Elementtyp ist nicht der Typ des Schlüssels oder den Typ des Werts.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</source>
          <target state="translated">Stattdessen der Elementtyp ist <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>For example:</source>
          <target state="translated">Zum Beispiel:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> Anweisung ist ein Wrapper um den Enumerator, der nur das Lesen aus nicht das Schreiben auf die Auflistung zulässt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Da Schlüssel geerbt werden können, und ihr Verhalten geändert, deren absolute Eindeutigkeit vom nicht sichergestellt werden Vergleiche mit der <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings, with string keys, and accesses it through the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">Das folgende Codebeispiel erstellt ein leeres <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Zeichenfolgen mit string Schlüssel und greift auf diese über die <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">Das Codebeispiel verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> Methode, um einige Elemente hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method throws <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Das Beispiel zeigt, dass die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> -Methode löst <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> beim Versuch, einen doppelten Schlüssel hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#) zum Abrufen von Werten, die veranschaulichen, dass eine <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> wird ausgelöst, wenn ein angeforderte Schlüssel nicht vorhanden ist und zeigt, dass der Wert mit einem Schlüssel zugeordneten ersetzt werden kann.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">Im Beispiel wird gezeigt, wie mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> Methode als eine effizientere Methode zum Abrufen der Werte, wenn eine Anwendung häufig Schlüsselwerte, die nicht im Wörterbuch sowie zum Verwenden der <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> Methode zu testen, ob ein Schlüssel vorhanden ist, vor dem Aufruf der <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>Methode.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Finally, the example shows how to enumerate the keys and values in the dictionary, and how to enumerate the values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">Schließlich im Beispiel wird gezeigt, wie die Schlüssel und Werte im Wörterbuch aufgelistet werden und wie Sie die Werte, die allein mit Auflisten der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">Die implementierende Klasse benötigen eine Möglichkeit zum Vergleichen von Schlüsseln.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Fügt der <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in C# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in c# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Wenn der angegebene Schlüssel bereits im Wörterbuch vorhanden ist, jedoch durch Festlegen der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">Implementierungen können variieren, bestimmen die Gleichheit von Objekten. z. B. die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse verwendet <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, während die <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Klasse ermöglicht die Angabe der <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Implementierung zum Vergleichen von Schlüsseln verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie ermöglichen <ph id="ph1">`key`</ph> werden <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings, with integer keys, and accesses it through the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">Das folgende Codebeispiel erstellt ein leeres <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> von Zeichenfolgen mit ganzzahligen Schlüssel, und greift auf diese über die <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">Das Codebeispiel verwendet die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> Methode, um einige Elemente hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Das Beispiel zeigt, dass die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> -Methode löst eine <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> beim Versuch, einen doppelten Schlüssel hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">In <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ist bereits ein Element mit demselben Schlüssel enthalten.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Ermittelt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ein Element mit dem angegebenen Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ein Element mit dem Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">Implementierungen können variieren, bestimmen die Gleichheit von Objekten. z. B. die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse verwendet <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, während die <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Klasse ermöglicht die Angabe der <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Implementierung zum Vergleichen von Schlüsseln verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie ermöglichen <ph id="ph1">`key`</ph> werden <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> Methode zu testen, ob ein Schlüssel vorhanden, vor dem Aufruf ist der <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method, which can be a more efficient way to retrieve values if a program frequently tries key values that are not in the dictionary.</source>
          <target state="translated">Außerdem wird gezeigt, wie die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> -Methode, die eine effizientere Methode zum Abrufen der Werte, wenn eine Anwendung häufig Schlüsselwerte versucht, die nicht im Wörterbuch sind möglich.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Finally, it shows how to insert items using <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Schließlich es zeigt, wie zum Einfügen von Elementen mit <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The key of the element to get or set.</source>
          <target state="translated">Der Schlüssel des abzurufenden oder zu festzulegenden Elements.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The element with the specified key.</source>
          <target state="translated">Das Element mit dem angegebenen Schlüssel.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgenden Syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in C# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen der Wert eines Schlüssels, der nicht vorhanden ist, im Wörterbuch enthalten z. B. <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in c# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Wenn der angegebene Schlüssel bereits im Wörterbuch vorhanden ist, jedoch durch Festlegen der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">Implementierungen können variieren, bestimmen die Gleichheit von Objekten. z. B. die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse verwendet <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, während die <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Klasse ermöglicht die Angabe der <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Implementierung zum Vergleichen von Schlüsseln verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie ermöglichen <ph id="ph1">`key`</ph> werden <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#) zum Abrufen von Werten, die veranschaulichen, dass eine <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> wird ausgelöst, wenn ein angeforderte Schlüssel nicht vorhanden ist und zeigt, dass der Wert mit einem Schlüssel zugeordneten ersetzt werden kann.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">Außerdem wird gezeigt, wie Sie die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> Methode als eine effizientere Methode zum Abrufen der Werte, wenn eine Anwendung häufig Schlüsselwerte, die nicht im Wörterbuch vorhanden sind.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found.</source>
          <target state="translated">Die Eigenschaft wird abgerufen, und <ph id="ph1">&lt;paramref name="key" /&gt;</ph> wird nicht gefunden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, und <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> ab, die die Schlüssel des <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>, die die Schlüssel des Objekts enthält, das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> implementiert.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">Die Reihenfolge der Schlüssel in der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> ist nicht vorgegeben, aber es wird sichergestellt, dass der gleichen Reihenfolge als die entsprechenden Werte in der <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> zurückgegebenes der <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>The following code example shows how to enumerate keys alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie beim Auflisten der Schlüssel allein mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Der Schlüssel des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Element mit dem angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element erfolgreich entfernt wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt auch dann <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> nicht im ursprünglichen <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> gefunden wurde.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">Implementierungen können variieren, bestimmen die Gleichheit von Objekten. z. B. die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> -Klasse verwendet <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, während die <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Klasse ermöglicht die Angabe der <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> -Implementierung zum Vergleichen von Schlüsseln verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from a dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie aus einem Wörterbuch mit Schlüssel/Wert-Paar entfernt die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>The key whose value to get.</source>
          <target state="translated">Der Schlüssel, dessen Wert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird; andernfalls enthält sie den Standardwert für den Typ des <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>-Parameters.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Dieser Parameter wird nicht initialisiert übergeben.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Objekt, das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Diese Methode kombiniert die Funktionalität der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> Methode und die <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>; for example, zero (0) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Wenn der Schlüssel nicht gefunden wird, und klicken Sie dann die <ph id="ph1">`value`</ph> Parameter Ruft den entsprechenden Standardwert für den Typ <ph id="ph2">`TValue`</ph>; z. B. 0 (null) für ganzzahlige Typen, <ph id="ph3">`false`</ph> für boolesche Typen und <ph id="ph4">`null`</ph> für Verweistypen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values.</source>
          <target state="translated">Im Beispiel wird gezeigt, wie mithilfe der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> Methode, um Werte abzurufen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>If a program frequently tries key values that are not in a dictionary, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method can be more efficient than using the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#), which throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">Wenn ein Programm häufig Schlüsselwerte versucht, die nicht in einem Wörterbuch vorhanden ist, sind die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> Methode kann effizienter als die Verwendung der <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#), die Ausnahmen, beim Versuch auslöst, nicht vorhandene Schlüssel abzurufen.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> ab, die die Werte im <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>, die die Werte des Objekts enthält, das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> implementiert.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Die Reihenfolge der Werte in der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> ist nicht vorgegeben, jedoch notwendigerweise der Reihenfolge der entsprechenden Schlüssel in der <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> zurückgegebenes der <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>The following code example shows how to enumerate values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufzählen von allein mithilfe von Werten der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Dieser Code ist Teil eines größeren Beispiels, das kompiliert und ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>