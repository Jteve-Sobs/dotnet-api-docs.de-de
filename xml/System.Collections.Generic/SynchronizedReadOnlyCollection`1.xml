<Type Name="SynchronizedReadOnlyCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cb942cdb55c02b3a2bc27f873b26898d31ada76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizedReadOnlyCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedReadOnlyCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedReadOnlyCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedReadOnlyCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="deb20-101">Der Objekttyp der Elemente in der threadsicheren, schreibgeschützten Auflistung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="deb20-101">The type of object contained as items in the thread-safe, read-only collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="deb20-102">Stellt eine threadsichere, schreibgeschützte Auflistung bereit, die Objekte enthält, die vom generischen Parameter als Elemente angegeben werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="deb20-102">Provides a thread-safe, read-only collection that contains objects of a type specified by the generic parameter as elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-103">Die <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> speichert Daten in einem <xref:System.Collections.Generic.IList%601>-Container und stellt ein Objekt zur Verfügung, das dafür eingerichtet und verwendet werden kann, den Zugriff auf die Auflistung zu synchronisieren, sodass sie threadsicher ist.</span><span class="sxs-lookup"><span data-stu-id="deb20-103">The <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> stores data in an <xref:System.Collections.Generic.IList%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread safe.</span></span> <span data-ttu-id="deb20-104">Der <xref:System.Collections.Generic.IList%601>-Container kann über die <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A>-Eigenschaft wiederhergestellt werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A> property.</span></span> <span data-ttu-id="deb20-105">Das synchronisierte Objekt kann über die <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A>-Eigenschaft wiederhergestellt werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A> property.</span></span> <span data-ttu-id="deb20-106">Es kann nur mit den Konstruktoren festgelegt werden, die den `syncRoot`-Parameter zulassen.</span><span class="sxs-lookup"><span data-stu-id="deb20-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-107">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb20-108">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="sync_root">To be added.</param>
        <summary>
          <span data-ttu-id="deb20-109">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse mit dem Objekt, das verwendet wird, um den Zugriff auf die threadsichere, schreibgeschützte Auflistung zu synchronisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-109">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-110">Wenn mehrere Instanzen von <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> unter Verwendung desselben `syncRoot` erstellt werden, ist der Zugriff für alle Instanzen geschützt.</span><span class="sxs-lookup"><span data-stu-id="deb20-110">If multiple instances of the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="deb20-111">
            <paramref name="sync_root" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-111">
              <paramref name="sync_root" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.List&lt;T&gt; list, bool make_copy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.List`1&lt;!T&gt; list, bool make_copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As List(Of T), make_copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::List&lt;T&gt; ^ list, bool make_copy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sync_root" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="make_copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sync_root">To be added.</param>
        <param name="list">To be added.</param>
        <param name="make_copy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As IEnumerable(Of T))" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="sync_root">To be added.</param>
        <param name="list">
          <span data-ttu-id="deb20-112">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung von Elementen, die verwendet wird, um die threadsichere, schreibgeschützte Auflistung zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-112">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe, read-only collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-113">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse von einer angegebenen, zählbaren Liste mit Elementen und mit dem Objekt, das verwendet wird, um den Zugriff auf die threadsichere, schreibgeschützte Auflistung zu synchronisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-113">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="deb20-114">
            <paramref name="syncRoot" /> oder <paramref name="list" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-114">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, params T[] list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, params T[] list);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, !T[] list) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, ParamArray list As T())" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
        <Parameter Name="list" Type="T[]" Index="1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="sync_root">To be added.</param>
        <param name="list">
          <span data-ttu-id="deb20-115">Das <see cref="T:System.Array" /> des Elements des Typs <c>T</c>, das verwendet wird, um die threadsichere, schreibgeschützte Auflistung zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-115">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe, read-only collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-116">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse von einem angegebenen Array mit Elementen und mit dem Objekt, das verwendet wird, um den Zugriff auf die threadsichere, schreibgeschützte Auflistung zu synchronisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-116">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="deb20-117">
            <paramref name="syncRoot" /> oder <paramref name="list" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-117">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-118">Das Objekt, das in der Auflistung gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-118">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-119">Ermittelt, ob die Auflistung ein Element mit einem bestimmten Wert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-119">Determines whether the collection contains an element with a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-120">
            <see langword="true" />, wenn das Element <paramref name="value" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-120">
              <see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="deb20-121">
            <paramref name="value" /> ist kein Objekt vom Typ der in der Auflistung enthaltenen Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-121">
              <paramref name="value" /> is not an object of the type contained in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="deb20-122">Das <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-122">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="deb20-123">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-123">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-124">Kopiert die Elemente der Auflistung in das angegebene Array, wobei an einem bestimmten Index begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-124">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-125">Ruft die Anzahl der Elemente in der threadsicheren, schreibgeschützten Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-125">Gets the number of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-126">Die Anzahl der Elemente in der threadsicheren, schreibgeschützten Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-126">The number of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb20-127">Gibt einen Enumerator zurück, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-127">Returns an enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-128">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für Objekte des in der Auflistung gespeicherten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-128">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-129">Das Element, dessen Index abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-129">The element whose index is being retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-130">Gibt den Index des ersten Vorkommens eines Werts in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-130">Returns the index of the first occurrence of a value in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-131">Der nullbasierte Index des ersten Vorkommens des <paramref name="value" /> in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-131">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-132">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-132">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-133">Ruft ein Element aus der threadsicheren, schreibgeschützten Auflistung mit einem angegebenen Index ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-133">Gets an element from the thread-safe, read-only collection with a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-134">Das Objekt in der Auflistung mit dem angegebenen <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-134">The object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-135">Ruft die Liste der Elemente in der threadsicheren, schreibgeschützten Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-135">Gets the list of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-136">Die <see cref="T:System.Collections.Generic.IList`1" /> der Elemente in der threadsicheren, schreibgeschützten Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-136">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-137">Das Element, das der Auflistung hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-137">The element to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-138">Löst bei Abruf eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-138">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-139">Einer schreibgeschützten Auflistung können keine Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-139">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-140">Elemente können nicht in einer schreibgeschützten Auflistung festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-140">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb20-141">Löst bei Abruf eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-141">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-142">Elemente können nicht aus einer schreibgeschützten Auflistung gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-142">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-143">Elemente können nicht aus einer schreibgeschützten Auflistung gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-143">Items cannot be cleared from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-144">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-144">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-145">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-145">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-146">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-146">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-147">Der Wert, der aus der Auflistung entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-147">The value to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-148">Gibt <see langword="false" /> zurück und löst bei Abruf eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-148">Returns <see langword="false" /> and throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-149">
            <see langword="False" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-149">
              <see langword="False" />.</span>
          </span>
          <span data-ttu-id="deb20-150">Die Methode gibt <see langword="false" /> zurück, um anzugeben, dass das Element nicht aus der schreibgeschützten Auflistung entfernt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-150">The method returns <see langword="false" /> to indicate that the item was not removed from the read-only collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-151">Elemente können nicht aus einer schreibgeschützten Auflistung entfernt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-151">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T value) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-152">Der nullbasierte Index, an dem <c>value</c> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-152">The zero-based index at which <c>value</c> is to be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="deb20-153">Das Objekt, das in die Auflistung eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-153">The object to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-154">Löst bei Abruf eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-154">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-155">Elemente können nicht in eine schreibgeschützte Auflistung eingefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-155">Items cannot be inserted into a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IList&lt;T&gt;.Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-156">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-156">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-157">Gibt das Objekt in der Auflistung zurück, das den angegebenen <paramref name="index" /> aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-157">Returns the object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-158">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-158">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-159">Gibt das Objekt in der Auflistung zurück, das den angegebenen <paramref name="index" /> aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-159">Returns the object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-160">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-160">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-161">Löst bei Abruf eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-161">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-162">Elemente können nicht aus einer schreibgeschützten Auflistung entfernt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-162">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="deb20-163">Das <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-163">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="deb20-164">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-164">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-165">Kopiert die Elemente der Auflistung in das angegebene Array, wobei an einem bestimmten Index begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-165">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-166">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung threadsicher ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-166">This property always returns <see langword="true" /> because the collection is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-167">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-167">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-168">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung threadsicher ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-168">This property always returns <see langword="true" /> because the collection is thread safe.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-169">Ruft das Objekt ab, mit dem der Zugriff auf die threadsichere, schreibgeschützte Auflistung synchronisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-169">Gets the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-170">Gibt <see cref="T:System.Object" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-170">Returns <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="deb20-171">Das Objekt, mit dem der Zugriff auf die threadsichere, schreibgeschützte Auflistung synchronisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-171">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-172">Der Wert dieses `syncRoot`-Objekts kann festgelegt werden, wenn die threadsichere Auflistung mithilfe des <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29>-Konstruktors erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="deb20-172">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb20-173">Gibt einen Enumerator zurück, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-173">Returns an enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-174">Gibt <see cref="T:System.Collections.IEnumerator" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-174">Returns <see cref="T:System.Collections.IEnumerator" />.</span>
          </span>
          <span data-ttu-id="deb20-175">Ein Enumerator, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-175">An enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-176">Das Element, das der Auflistung hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-176">The element to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-177">Fügt der Auflistung ein Element hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-177">Adds an element to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-178">Gibt <see cref="T:System.Int32" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-178">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="deb20-179">Die Position, an der das neue Element eingefügt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-179">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-180">Einer schreibgeschützten Auflistung können keine Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-180">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-181">Elemente können nicht in einer schreibgeschützten Auflistung festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-181">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb20-182">Elemente können nicht aus einer schreibgeschützten Auflistung gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-182">Items cannot be cleared from a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-183">Elemente können nicht aus einer schreibgeschützten Auflistung gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="deb20-183">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-184">Elemente können nicht aus einer schreibgeschützten Auflistung gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-184">Items cannot be cleared from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-185">Das Objekt, das in der Auflistung gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-185">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-186">Überprüft, ob das angegebene Objekt in der Auflistung enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-186">Checks whether the specified object exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-187">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-187">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-188">True, wenn sich das Objekt in der Auflistung befindet, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-188">True if the object is located in the collection; otherwise false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-189">Gibt `true` zurück, wenn sich das Element `value` in der Auflistung befindet, andernfalls `false`.</span><span class="sxs-lookup"><span data-stu-id="deb20-189">Returns `true` if the element `value` is found in the collection; otherwise `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="deb20-190">
            <paramref name="value" /> ist kein Objekt vom Typ der in der Auflistung enthaltenen Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-190">
              <paramref name="value" /> is not an object of the type contained in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-191">Das Element, dessen Index abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-191">The element whose index is being retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-192">Ruft den Index des angegebenen Elements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-192">Gets the index of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb20-193">Gibt <see cref="T:System.Int32" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-193">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="deb20-194">Der nullbasierte Index des ersten Vorkommens des <paramref name="value" /> in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-194">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-195">Der nullbasierte Index, an dem <c>value</c> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-195">The zero-based index at which <c>value</c> is to be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="deb20-196">Das Objekt, das in die Auflistung eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-196">The object to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-197">Elemente können nicht in eine schreibgeschützte Auflistung eingefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-197">Items cannot be inserted into a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-198">Löst bei Abruf eine <xref:System.NotSupportedException> aus.</span><span class="sxs-lookup"><span data-stu-id="deb20-198">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-199">Elemente können nicht in eine schreibgeschützte Auflistung eingefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-199">Items cannot be inserted into a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-200">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die schreibgeschützte Auflistung stets eine feste Größe aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-200">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-201">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-201">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-202">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die schreibgeschützte Auflistung stets eine feste Größe aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-202">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb20-203">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-203">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-204">Gibt <see cref="T:System.Boolean" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-204">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="deb20-205">Diese Eigenschaft gibt immer <see langword="true" /> zurück, da die Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-205">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-206">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-206">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-207">Ruft das Element am angegebenen nullbasierten Index ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-207">Gets the item at a specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb20-208">Gibt <see cref="T:System.Object" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-208">Returns <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="deb20-209">Ruft das Element am angegebenen nullbasierten Index ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-209">Gets the item at a specified zero-based index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-210">Elemente können nicht in einer schreibgeschützten Auflistung festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-210">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="deb20-211">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-211">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-212">Ruft das angegebene Element aus der Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-212">Retrieves the specified element from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-213">Löst bei Abruf eine <xref:System.NotSupportedException> aus.</span><span class="sxs-lookup"><span data-stu-id="deb20-213">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-214">Elemente können nicht aus einer schreibgeschützten Auflistung entfernt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-214">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="deb20-215">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-215">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb20-216">Elemente können nicht aus einer schreibgeschützten Auflistung entfernt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-216">Items cannot be removed from a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb20-217">Löst bei Abruf eine <xref:System.NotSupportedException> aus.</span><span class="sxs-lookup"><span data-stu-id="deb20-217">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="deb20-218">Elemente können nicht aus einer schreibgeschützten Auflistung entfernt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb20-218">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>