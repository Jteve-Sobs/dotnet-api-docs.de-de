<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d522b255e0ba46c227efbe49197a344b6dad594" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30340524" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften zum Abrufen von Informationen über die Anwendung bereit, z. B. die Versionsnummer, Beschreibung, geladene Assemblys usw.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige der Eigenschaften verfügbar gemacht werden, indem die `My.Application.Info` Objekt zurückgeben Assemblyinformationen der Anwendung. Um die Informationen in der Anwendung Assembly festzulegen, verwenden Sie die **Assemblyinformationen** (Dialogfeld), über die **Anwendung** Bereich des der **Projekt-Designer**.  
  
 Die `My.Application.Info` Objekt bietet ähnliche Funktionen der <xref:System.Diagnostics.FileVersionInfo> -Klasse jedoch ausgelegt ist, erhalten schnellen Zugriff auf die am häufigsten verwendeten Eigenschaften.  
  
 Andere Eigenschaften, z. B. `LoadedAssemblies`, ermöglichen den Zugriff auf den aktuellen Zustand der Anwendung.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Version` Eigenschaft, um die Version der Anwendung anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInfo(System::Reflection::Assembly ^ currentAssembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly">
          <see cref="T:System.Reflection.Assembly" /> Die Assembly, für die Informationen abgerufen werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />-Klasse mit den angegebenen Assemblyinformationen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Assemblydatei für die Anwendung ohne Erweiterung ab.</summary>
        <value>Ein <see langword="String" />, der den Dateinamen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.AssemblyName` Eigenschaft ruft den Namen der Datei, die das Manifest enthält.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.AssemblyName` Eigenschaft, um den Namen der Anwendung anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Anwendung zugeordneten Firmennamen ab.</summary>
        <value>Ein <see langword="String" />, der den der Anwendung zugeordneten Firmennamen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.CompanyName` -Eigenschaft ruft die der Anwendung zugeordneten Firmennamen ab.  
  
 Sie können den Firmennamen ändern, durch Ändern des Werts für **Unternehmen** in der **Assemblyinformationen** (Dialogfeld), über die **Anwendung** im Bereich der **Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.CompanyName` Eigenschaft, um die der Anwendung zugeordneten Firmennamen anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyCompanyAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Copyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Copyright { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Anwendung zugeordneten Copyrightvermerk ab.</summary>
        <value>Ein <see langword="String" />, der den der Anwendung zugeordneten Copyrightvermerk enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.Copyright` -Eigenschaft ruft die der Anwendung zugeordneten Urheberrechtshinweis ab.  
  
 Sie können den Urheberrechtshinweis ändern, indem Sie die Änderung des Werts für **Copyright** in der **Assemblyinformationen** (Dialogfeld), über die **Anwendung** im Bereich der ** Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Copyright` Eigenschaft, um die der Anwendung zugeordneten Firmennamen anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die der Anwendung zugeordnete Beschreibung ab.</summary>
        <value>Ein <see langword="String" />, der die der Anwendung zugeordnete Beschreibung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.Description` -Eigenschaft ruft die der Anwendung zugeordnete Beschreibung ab.  
  
 Ändern Sie die Beschreibung durch Ändern des Werts für **Beschreibung** in der **Assemblyinformationen** (Dialogfeld), über die **Anwendung** im Bereich der ** Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Description` Eigenschaft zum Anzeigen der Beschreibung der Anwendung zugeordnet.  
  
 [!code-vb[VbVbalrMyApplication#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verzeichnis ab, in dem die Anwendung gespeichert ist.</summary>
        <value>Ein <see langword="String" />, der das Verzeichnis enthält, in dem die Anwendung gespeichert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.DirectoryPath` Eigenschaft ruft das Verzeichnis, in dem die Anwendung gespeichert ist.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.DirectoryPath` Eigenschaft, um den Pfad des Verzeichnisses anzuzeigen, in dem die Anwendung gespeichert ist.  
  
 [!code-vb[VbVbalrMyApplication#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedAssemblies As ReadOnlyCollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ LoadedAssemblies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung aller von der Anwendung geladenen Assemblys ab.</summary>
        <value>Eine <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vom Typ <see cref="T:System.Reflection.Assembly" />, die alle von der Anwendung geladenen Assemblys enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.LoadedAssemblies` Eigenschaft ähnelt der <xref:System.AppDomain.GetAssemblies%2A> Methode.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.LoadedAssemblies` Eigenschaft, um die Assemblys angezeigt, die von der Anwendung geladen.  
  
 [!code-vb[VbVbalrMyApplication#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 Dieses Beispiel benötigen Sie, dass Ihre Windows Forms-Anwendung verfügt eine <xref:System.Windows.Forms.ListBox> Steuerelement namens `ListBox1`.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <exception cref="T:System.AppDomainUnloadedException">Die Anwendungsdomäne ist nicht geladen.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Anwendung zugeordneten Produktnamen ab.</summary>
        <value>Ein <see langword="String" />, der den der Anwendung zugeordneten Produktnamen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.ProductName` -Eigenschaft ruft den der Anwendung zugeordneten Produktnamen ab.  
  
 Sie können den Produktnamen ändern, indem Sie die Änderung des Werts für **Produkt** in der **Assemblyinformationen** (Dialogfeld), aus zugegriffen werden kann die **Anwendung** im Bereich der **Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.ProductName` Eigenschaft, um den der Anwendung zugeordneten Produktnamen anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyProductAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aktuellen Stapelüberwachungsinformationen ab.</summary>
        <value>Ein <see langword="String" />, der die aktuellen Stapelüberwachungsinformationen enthält. Der Rückgabewert kann <see cref="F:System.String.Empty" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.StackTrace` Eigenschaftslisten Methodenaufrufe in umgekehrter chronologischer Reihenfolge – also beschrieben werden die letzten Aufruf der Methode zuerst sowie die jedem Methodenaufruf auf dem Stapel in einer eigenen Zeile aufgeführt. Allerdings die `My.Application.Info.StackTrace` Eigenschaft möglicherweise nicht so viele Methodenaufrufe erwartungsgemäß, da der Code, die auftreten, während der Optimierung gemeldet.  
  
 In der Regel wird die Stapelüberwachungsinformationen für das Debuggen von Anwendungen verwendet.  
  
 Die Stapelüberwachungsinformationen für jeden Methodenaufruf ist wie folgt formatiert:  
  
 "am *FullClassName*.* Methodenname*(*MethodParams*) in *FileName*: Linie *LineNumber* "  
  
 Das Literal "at" vorangestellt drei Leerzeichen und die Literale "in" und ": Line" werden ausgelassen, wenn keine Debugsymbole verfügbar sind. Die Platzhalter `FullClassName`, `MethodName`, `MethodParams`, `FileName`, und `LineNumber` ersetzt durch tatsächliche Werte, die wie folgt definiert:  
  
|Segment|Beschreibung |  
|----------|-----------------|  
|*FullClassName*|Der vollständige Name der Klasse, einschließlich des Namespaces.|  
|*Methodenname*|Der Name der Methode.|  
|*MethodParams*|Die Liste der Typnamen/Parameterpaaren. Jedes Paar ist durch ein Komma (,) getrennt. Diese Informationen werden ausgelassen, wenn *MethodName* nimmt keine Parameter.|  
|*FileName*|Der Name der Quelle-Datei, in der *MethodName* -Methode deklariert ist. Diese Informationen werden ausgelassen, wenn keine Debugsymbole verfügbar sind.|  
|*LineNumber*|Die Nummer der Zeile im *FileName* , enthält den Quellcode aus *MethodName* für die Anweisung, die in der Aufrufliste ist. Diese Informationen werden ausgelassen, wenn keine Debugsymbole verfügbar sind.|  
  
 Die `My.Applicaiton.Info.StackTrace` Eigenschaft bietet ähnliche Funktionen der <xref:System.Environment.StackTrace%2A> Eigenschaft.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.StackTrace` Eigenschaft, um die stapelüberwachung der Anwendung an der Stelle angezeigt, an dem der Code ausgeführt wird.  
  
 [!code-vb[VbVbalrMyApplication#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angeforderten Stapelüberwachungsinformationen liegen außerhalb des zulässigen Bereichs.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert den Zugriff auf Informationen in den Dateipfaden an. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Anwendung zugeordneten Titel ab.</summary>
        <value>Ein <see langword="String" />, der das der Anwendung zugeordnete <see cref="T:System.Reflection.AssemblyTitleAttribute" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.Title` Eigenschaft ruft den Titel der Anwendung zugeordnet.  
  
 Ändern Sie den Titel durch Ändern des Werts für **Titel** in der **Assemblyinformationen** (Dialogfeld), über die **Anwendung** Bereich des der ** Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Title` Eigenschaft, um den Titel der Anwendung zugeordneten anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyTitleAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trademark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Trademark { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Anwendung zugeordneten Markenvermerk ab.</summary>
        <value>Ein <see langword="String" />, der den der Anwendung zugeordneten Markenvermerk enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.Trademark` Eigenschaft ruft die Marke Beachten Sie, dass der Anwendung zugeordnet.  
  
 Sie können die Marke Beachten Sie, dass durch Ändern des Werts für ändern **Marke** in der **Assemblyinformationen** (Dialogfeld), über die **Anwendung** im Bereich der ** Projekt-Designer**.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Trademark` Eigenschaft, um die der Anwendung zugeordneten Markeninformationen anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />-Attribut auf.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Versionsnummer der Anwendung ab.</summary>
        <value>Ein <see cref="T:System.Version" />-Objekt, das die Versionsnummer der Anwendung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.Version` Eigenschaft ruft eine <xref:System.Version> Objekt, das die Versionsnummer der Anwendung enthält. Können Sie die <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, und <xref:System.Version.Revision%2A> Eigenschaften der <xref:System.Version> Objekt, das Zugriff auf bestimmte Versionsinformationen zur Anwendung.  
  
 ClickOnce-Bereitstellung von Anwendungen die zu verwendende der <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> Eigenschaft von der <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> Eigenschaft.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.Version` Eigenschaft, um die Version der Anwendung anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Die Anwendung verfügt nicht über ausreichende Berechtigungen für den Zugriff auf die Assemblyversion.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des physischen Speichers ab, der dem Prozesskontext zugeordnet ist.</summary>
        <value>Ein <see langword="Long" />, der die Anzahl von Bytes im physikalischen Speicher enthält, der dem Prozesskontext zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Info.WorkingSet` Eigenschaft hat das gleiche Verhalten wie die <xref:System.Environment.WorkingSet%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Eigenschaft gibt immer 0 (null) für Windows 98 und Windows Millennium Edition.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Application.Info.WorkingSet` Eigenschaft, um die Anzahl der Bytes, die von der Anwendung zugeordneten physischen Speichers anzuzeigen.  
  
 [!code-vb[VbVbalrMyApplication#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Ein teilweise vertrauenswürdiger Kontext, in dem der Benutzer nicht über erforderliche Berechtigungen verfügt.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Steuert die Fähigkeit, den Zugriff auf alle Umgebungsvariablen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
      </Docs>
    </Member>
  </Members>
</Type>