<Type Name="BuiltInRoleConverter" FullName="Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter">
  <TypeSignature Language="C#" Value="public class BuiltInRoleConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi BuiltInRoleConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BuiltInRoleConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuiltInRoleConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49223-101">Stellt einen Typkonverter bereit, um <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />-Enumerationswerte in <see cref="T:System.Security.Principal.WindowsBuiltInRole" />-Enumerationswerte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="49223-101">Provides a type converter to convert <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" /> enumeration values to <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> enumeration values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49223-102">Dieser Typkonverter unterstützt das Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-102">This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.</span></span>  
  
 <span data-ttu-id="49223-103">Weitere Informationen zu den Einsatz von Typkonvertern, finden Sie unter der <xref:System.ComponentModel.TypeConverter> Basisklasse und [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="49223-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="49223-104">Erstellen Sie nie eine Instanz von einem <xref:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="49223-104">You should never create an instance of a <xref:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter> class.</span></span> <span data-ttu-id="49223-105">Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>-Methode der <xref:System.ComponentModel.TypeDescriptor>-Klasse auf.</span><span class="sxs-lookup"><span data-stu-id="49223-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="49223-106">Weitere Informationen finden Sie in den Beispielen in der <xref:System.ComponentModel.TypeConverter> Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="49223-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.User" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
    <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuiltInRoleConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuiltInRoleConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49223-107">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="49223-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49223-108">Dieser Typkonverter unterstützt das Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-108">This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.User" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49223-109">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="49223-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="49223-110">Ein <see cref="T:System.Type" />-Objekt, das den Zieltyp der Konvertierung darstellt.</span><span class="sxs-lookup"><span data-stu-id="49223-110">A <see cref="T:System.Type" /> object that represents the type you wish to convert to.</span></span></param>
        <summary><span data-ttu-id="49223-111">Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="49223-111">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="49223-112">Ein <see cref="T:System.Boolean" />-Objekt, das angibt, ob dieser Konverter die Konvertierung durchführen kann.</span><span class="sxs-lookup"><span data-stu-id="49223-112">A <see cref="T:System.Boolean" /> object that indicates whether this converter can perform the conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49223-113">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="49223-113">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="49223-114">Dieser Parameter kann `Nothing` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="49223-114">This can be `Nothing`, so always check.</span></span> <span data-ttu-id="49223-115">Außerdem können die Eigenschaften des Kontextobjekts `Nothing` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="49223-115">Also, properties on the context object can return `Nothing`.</span></span>  
  
 <span data-ttu-id="49223-116">Dieser Typkonverter unterstützt das Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-116">This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.User" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49223-117">Ein Formatierungskontext.</span><span class="sxs-lookup"><span data-stu-id="49223-117">A formatter context.</span></span></param>
        <param name="culture"><span data-ttu-id="49223-118">Die Kultur, in die <c>value</c> konvertiert wird</span><span class="sxs-lookup"><span data-stu-id="49223-118">The culture into which <c>value</c> will be converted.</span></span></param>
        <param name="value"><span data-ttu-id="49223-119">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-119">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="49223-120">Der Typ, in den das Objekt konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="49223-120">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="49223-121">Konvertiert das angegebene Objekt in einen anderen Typ.</span><span class="sxs-lookup"><span data-stu-id="49223-121">Converts the given object to another type.</span></span></summary>
        <returns><span data-ttu-id="49223-122">Das konvertierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-122">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49223-123">Die geläufigsten Typen zu konvertieren, und Konvertieren von sind Zeichenfolgenobjekten.</span><span class="sxs-lookup"><span data-stu-id="49223-123">The most common types to convert to and convert from are string objects.</span></span> <span data-ttu-id="49223-124">Die Standardimplementierung ruft <xref:System.Object.ToString%2A> für das Objekt, wenn das Objekt gültig ist und der Zieltyp ist <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="49223-124">The default implementation makes a call to <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is <xref:System.String>.</span></span>  
  
 <span data-ttu-id="49223-125">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="49223-125">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="49223-126">Dieser Parameter kann `Nothing` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="49223-126">This can be `Nothing`, so always check.</span></span> <span data-ttu-id="49223-127">Außerdem können die Eigenschaften des Kontextobjekts `Nothing` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="49223-127">Also, properties on the context object can return `Nothing`.</span></span>  
  
 <span data-ttu-id="49223-128">Dieser Typkonverter unterstützt das Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49223-128">This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49223-129"><paramref name="destinationType" /> ist <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="49223-129"><paramref name="destinationType" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49223-130">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="49223-130">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.User" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
  </Members>
</Type>