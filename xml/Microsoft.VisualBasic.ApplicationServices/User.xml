<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05eb4eea9b9a14869b1495c8390a9a1651557114" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69304161" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den Zugriff auf die Informationen über den aktuellen Benutzer bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften und Methoden des `My.User` -Objekts ermöglichen den Zugriff auf die Informationen zum aktuellen Benutzer. Die Bedeutung von "Aktueller Benutzer" unterscheidet sich geringfügig zwischen Windows und Webanwendungen. In einer Windows-Anwendung ist der aktuelle Benutzer der Benutzer, der die Anwendung ausführt. In einer Webanwendung ist der aktuelle Benutzer der Benutzer, der auf die Anwendung zugreift.  
  
 Die `My.User`-Eigenschaft bietet auch Zugriff auf die <xref:System.Security.Principal.IPrincipal> für den aktuellen Benutzer. Ein Prinzipalobjekt stellt den Sicherheitskontext des Benutzers dar, einschließlich der Identität des Benutzers und aller Rollen, denen der Benutzer angehört.  
  
 Für Windows-Anwendungen bietet diese Eigenschaft die gleiche Funktionalität wie die Eigenschaft <xref:System.Threading.Thread.CurrentPrincipal%2A>. Für Webanwendungen bietet diese Eigenschaft die gleiche Funktionalität wie die Eigenschaft <xref:System.Web.HttpContext.User%2A> des von der <xref:System.Web.HttpContext.Current%2A> zurückgegebenen Objekts.  
  
> [!NOTE]
>  Bei **Windows-Anwendungen** wird das `My.User` -Objekt standardmäßig nur von Projekten initialisiert, die auf der Windows-Anwendungsvorlage basieren. In allen anderen Windows-Projekttypen müssen Sie das `My.User` -Objekt initialisieren, indem Sie die Methode <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> explizit aufrufen oder <xref:System.Threading.Thread.CurrentPrincipal%2A> einen Wert zuweisen.  
  
> [!NOTE]
>  Das `My.User` Objekt kann keine Informationen über den aktuellen Windows-Benutzer melden, wenn es unter Windows 95 und Windows 98 ausgeführt wird, da diese Betriebssysteme das Konzept eines angemeldeten Benutzers nicht unterstützen. Sie müssen die benutzerdefinierte Authentifizierung implementieren, `My.User` damit das-Objekt unter diesen Betriebssystemen verwendet werden können.  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob die Anwendung die Windows-Authentifizierung oder eine benutzerdefinierte Authentifizierung verwendet, und anhand dieser Information wird die Eigenschaft `My.User.Name` analysiert.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften und Methoden, die vom `My.User` -Objekt verfügbar gemacht werden, ermöglichen den Zugriff auf Informationen über den aktuellen Benutzer.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">Zugreifen auf Benutzerdaten (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Prinzipal (für rollenbasierte Sicherheit) ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Security.Principal.IPrincipal" />-Wert, der den Sicherheitskontext darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die `My.User.CurrentPrincipal` -Eigenschaft auf ein Objekt festlegen, das <xref:System.Security.Principal.IPrincipal> die-Schnittstelle implementiert, um benutzerdefinierte Authentifizierung zu aktivieren.  
  
 In den meisten Projekttypen ruft diese Eigenschaft den aktuellen Prinzipal des Threads ab und legt diesen fest. In einer ASP.NET-Anwendung ruft diese Eigenschaft die Sicherheitsinformationen für die Benutzeridentität der aktuellen HTTP-Anforderung ab und legt Sie fest.  
  
 Dabei handelt es sich um einen erweiterten Member. Es wird nicht in IntelliSense angezeigt, es sei denn, Sie klicken auf die Registerkarte **alle** .  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob die Anwendung Windows oder eine benutzerdefinierte Authentifizierung verwendet, und diese Informationen `My.User.Name` werden verwendet, um die Eigenschaft zu analysieren.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung zum Festlegen des Prinzipals.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen auf Code angewendeten Satz von Sicherheitsberechtigungen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt den aktuellen Prinzipal des Threads auf den Windows-Benutzer fest, der die Anwendung gestartet hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die `My.User.InitializeWithWindowsUser` -Methode verwenden, um den aktuellen Prinzipal des Threads für den Windows-Benutzer festzulegen, der die Anwendung gestartet hat. Das Visual Basic-Anwendungsmodell in einer Windows-Anwendung ruft diese Methode standardmäßig beim Start auf. In anderen Projekttypen müssen Sie den aktuellen Prinzipal des Threads festlegen, indem Sie diese Methode explizit aufrufen oder indem Sie einen <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>Wert zuweisen.  
  
 In Windows-Projekten basiert `My.User` das-Objekt auf dem aktuellen Prinzipal des Threads. Daher kann diese Methode die Rückgabe Informationen `My.User` ändern. In einer ASP.NET-Anwendung basiert `My.User` das-Objekt auf der Benutzeridentität der aktuellen HTTP-Anforderung und ist von dieser Methode nicht betroffen.  
  
> [!NOTE]
>  Das genaue Verhalten des `My.User` Objekts hängt von der Art der Anwendung und von dem Betriebssystem ab, auf dem die Anwendung ausgeführt wird. Weitere Informationen finden Sie in der <xref:Microsoft.VisualBasic.ApplicationServices.User> Übersicht über die-Klasse.  
  
 Dabei handelt es sich um einen erweiterten Member. Es wird nicht in IntelliSense angezeigt, es sei denn, Sie klicken auf die Registerkarte **alle** .  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen Satz von Sicherheitsberechtigungen, die auf Code angewendet werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Prinzipalobjekt ab, das den aktuellen Benutzer darstellt, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Security.Principal.IPrincipal" />-Objekt, das den aktuellen Benutzer darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im- <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> Objekt dient diese Eigenschaft als Wrapper für die-Eigenschaft. <xref:Microsoft.VisualBasic.ApplicationServices.User> Überschreiben Sie diese Methode in einer abgeleiteten Klasse, um ein anderes Verhalten bereitzustellen. Beispielsweise überschreibt <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> die-Eigenschaft diese Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzer authentifiziert wurde.</summary>
        <value><see langword="True" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit `My.User.IsAuthenticated` der-Eigenschaft kann der Code bestimmen, ob der aktuelle Benutzer authentifiziert wurde.  
  
> [!NOTE]
>  Das genaue Verhalten des `My.User` Objekts hängt vom Typ der Anwendung und von dem Betriebssystem ab, auf dem die Anwendung ausgeführt wird. Weitere Informationen finden Sie in der <xref:Microsoft.VisualBasic.ApplicationServices.User> Übersicht über die-Klasse.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob der Benutzer vor dem Zugriff auf eine Ressource authentifiziert wurde.  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen auf Code angewendeten Satz von Sicherheitsberechtigungen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob der aktuelle Benutzer zur angegebenen Rolle gehört.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="role">Die integrierte Windows-Rolle, für die die Mitgliedschaft überprüft werden soll.</param>
        <summary>Bestimmt, ob der aktuelle Benutzer zur angegebenen Rolle gehört.</summary>
        <returns><see langword="True" />, wenn der aktuelle Benutzer ein Mitglied der angegebenen Rolle ist, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit `My.User.IsInRole` der-Methode kann Ihr Code bestimmen, ob der aktuelle Benutzer ein Mitglied der angegebenen Rolle ist.  
  
 Die-über `My.User.IsInRole` Ladung der-Methode, die eine Zeichenfolge annimmt, <xref:System.Security.Principal.IPrincipal.IsInRole%2A> bietet einfachen Zugriff auf die-Methode des aktuellen Prinzipals.  
  
 Die-Überladung der- `BuiltInRole` Methode,dieeine-Enumerationannimmt,verhältsichabhängigvomaktuellenPrinzipalanders.`My.User.IsInRole` Wenn es sich um einen Windows-Benutzer<xref:System.Security.Principal.WindowsPrincipal>Prinzipal () handelt `role` , konvertiert diese <xref:System.Security.Principal.WindowsBuiltInRole> Funktion in die entsprechende-Enumeration und <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>gibt das Ergebnis des Aufrufs von zurück. Wenn der aktuelle Prinzipal ein beliebiger anderer Prinzipal ist, übergibt diese Funktion den Namen des Enumerationswerts `role` in <xref:System.Security.Principal.IPrincipal.IsInRole%2A> an die-Methode des Prinzipals.  
  
> [!NOTE]
>  Das genaue Verhalten des `My.User` Objekts hängt vom Typ der Anwendung und von dem Betriebssystem ab, auf dem die Anwendung ausgeführt wird. Weitere Informationen finden Sie in der <xref:Microsoft.VisualBasic.ApplicationServices.User> Übersicht über die-Klasse.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob der Benutzer ein Administrator ist, bevor auf eine Ressource zugegriffen wird.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen auf Code angewendeten Satz von Sicherheitsberechtigungen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Der Name der Rolle, für die die Mitgliedschaft überprüft werden soll.</param>
        <summary>Bestimmt, ob der aktuelle Benutzer zur angegebenen Rolle gehört.</summary>
        <returns><see langword="True" />, wenn der aktuelle Benutzer ein Mitglied der angegebenen Rolle ist, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit `My.User.IsInRole` der-Methode kann Ihr Code bestimmen, ob der aktuelle Benutzer ein Mitglied der angegebenen Rolle ist.  
  
 Die-über `My.User.IsInRole` Ladung der-Methode, die eine Zeichenfolge annimmt, <xref:System.Security.Principal.IPrincipal.IsInRole%2A> bietet einfachen Zugriff auf die-Methode des aktuellen Prinzipals.  
  
 Die-Überladung der- `BuiltInRole` Methode,dieeine-Enumerationannimmt,verhältsichabhängigvomaktuellenPrinzipalanders.`My.User.IsInRole` Wenn es sich um einen Windows-Benutzer<xref:System.Security.Principal.WindowsPrincipal>Prinzipal () handelt `role` , konvertiert diese <xref:System.Security.Principal.WindowsBuiltInRole> Funktion in die entsprechende-Enumeration und <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>gibt das Ergebnis des Aufrufs von zurück. Wenn der aktuelle Prinzipal ein beliebiger anderer Prinzipal ist, übergibt diese Funktion den Namen des Enumerationswerts `role` in <xref:System.Security.Principal.IPrincipal.IsInRole%2A> an die-Methode des Prinzipals.  
  
> [!NOTE]
>  Das genaue Verhalten des `My.User` Objekts hängt vom Typ der Anwendung und von dem Betriebssystem ab, auf dem die Anwendung ausgeführt wird. Weitere Informationen finden Sie in der <xref:Microsoft.VisualBasic.ApplicationServices.User> Übersicht über die-Klasse.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob der Benutzer ein Administrator ist, bevor auf eine Ressource zugegriffen wird.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen auf Code angewendeten Satz von Sicherheitsberechtigungen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des aktuellen Benutzers ab.</summary>
        <value><see langword="String" />. Der Name des aktuellen Benutzers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das `My.User` -Objekt verwenden, um Informationen zum aktuellen Benutzer zu erhalten.  
  
 Der Prinzipal, der den Benutzer authentifiziert, steuert auch das Format des Benutzernamens. Standardmäßig verwendet eine Anwendung die Windows-Authentifizierung, und der Benutzername hat das Format DOMAIN\Benutzername. Eine benutzerdefinierte Implementierung des Prinzipals verwendet nicht notwendigerweise dasselbe Format.  
  
> [!NOTE]
>  Die `My.User.Name` -Eigenschaft gibt eine leere Zeichenfolge zurück, wenn Sie unter Windows 95 und Windows 98 ausgeführt wird, da diese Betriebssysteme keine Benutzernamen erkennen.  
  
> [!NOTE]
>  Das genaue Verhalten des `My.User` Objekts hängt vom Typ der Anwendung und von dem Betriebssystem ab, auf dem die Anwendung ausgeführt wird. Weitere Informationen finden Sie in der <xref:Microsoft.VisualBasic.ApplicationServices.User> Übersicht über die-Klasse.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelement Bibliothek|**Ja**|  
|Websteuer Element Bibliothek|**Ja**|  
|Windows-Dienst|**Ja**|  
|Website|**Ja**|  
  
   
  
## Examples  
 In diesem Beispiel wird überprüft, ob die Anwendung die Windows-Authentifizierung oder eine benutzerdefinierte Authentifizierung verwendet, und anhand dieser Information wird die Eigenschaft `My.User.Name` analysiert.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen auf Code angewendeten Satz von Sicherheitsberechtigungen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">Zugreifen auf Benutzerdaten (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
